---
:records:
  record/976e708d-1794-47fb-9a41-73c02edc2051:
    :name: Haggis
    :description: Haggis is a high-level reference programming language used primarily
      to examine computing science for Scottish pupils taking SQA courses on the subject.
      Haggis is used as a tool to bridge the gap between pseudocode and typical computer
      programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Haggis_(programming_language)
  record/fea4fee1-ed96-418b-af67-f151c684d273:
    :name: LISA
    :description: LISA is a language to describe the instruction set architecture
      of a processor. LISA captures the information required to generate software
      tools and implementation hardware of a given processor.
    :wikipedia_url: https://en.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)
  record/d5911283-4ba5-48d8-a519-a5cd367ad5ca:
    :name: Mouse
    :description: The Mouse programming language is a small computer programming language
      developed by Dr. Peter Grogono in the late 1970s and early 1980s. It was developed
      as an extension of an earlier language called MUSYS, which was used to control
      digital and analog devices in an electronic music studio.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mouse_(programming_language)
  record/83885cb3-01f2-452f-b41b-9632572eb1d9:
    :name: QtScript
    :description: QtScript is a scripting engine that has been part of the Qt cross-platform
      application framework since version 4.3.0.
    :wikipedia_url: https://en.wikipedia.org/wiki/QtScript
  record/05af0e1c-9d48-4a01-8019-64fcc6a45873:
    :name: Cilk
    :description: Cilk, Cilk++ and Cilk Plus are general-purpose programming languages
      designed for multithreaded parallel computing. They are based on the C and C++
      programming languages, which they extend with constructs to express parallel
      loops and the fork–join idiom.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cilk
  record/43edb4c2-a49b-4b3b-bc23-472200b50a5a:
    :name: Visual J++
    :description: Visual J++ (pronounced "Jay Plus Plus") is Microsoft's discontinued
      implementation of Java. Syntax, keywords, and grammatical conventions were the
      same as Java's. It was introduced in 1996 and discontinued in January 2004,
      replacing it to a certain extent with J# and C#.
    :wikipedia_url: https://en.wikipedia.org/wiki/Visual_J%2B%2B
  record/c541b877-2fb1-4d15-966d-4822ff1b730b:
    :name: Oz
    :description: 'Oz is a multiparadigm programming language, developed in the Programming
      Systems Lab at Université catholique de Louvain, for programming language education.
      It has a canonical textbook: Concepts, Techniques, and Models of Computer Programming.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Oz_(programming_language)
  record/b733a033-06a1-4d43-85cc-7e540ad94ae7:
    :name: S3
    :description: S3 is a structured, imperative high-level computer programming language.
      It was developed by the UK company International Computers Limited (ICL) for
      its 2900 Series mainframes. It is a system programming language with syntax
      influenced by ALGOL 68 but with data types and operators aligned to those offered
      by the 2900 Series. It was the implementation language of the operating system
      VME.
    :wikipedia_url: https://en.wikipedia.org/wiki/S3_(programming_language)
  record/872b12ac-143d-444b-8538-912f1cbf175a:
    :name: Whiley
    :description: Whiley is an experimental programming language that combines features
      from the functional and imperative paradigms, and supports formal specification
      through function preconditions, postconditions and loop invariants. The language
      uses flow-sensitive typing also known as "flow typing."
    :wikipedia_url: https://en.wikipedia.org/wiki/Whiley_(programming_language)
  record/816a592c-81ce-46d2-9d62-e41ffdc8e519:
    :name: LiveCode
    :description: LiveCode is a cross-platform rapid application development runtime
      system inspired by HyperCard. It features the LiveCode Script programming language
      which belongs to the family of xTalk scripting languages like HyperCard's HyperTalk.
    :wikipedia_url: https://en.wikipedia.org/wiki/LiveCode
  record/ab784f53-46b3-4996-82dc-031e7d135d50:
    :name: Q
    :description: Q is a programming language for array processing, developed by Arthur
      Whitney. It is proprietary software, commercialized by Kx Systems. Q serves
      as the query language for kdb+, a disk based and in-memory, column-based database.
      Kdb+ is based on the language k, a terse variant of the language APL. Q is a
      thin wrapper around k, providing a more readable, English-like interface.
    :wikipedia_url: https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)
  record/0d142215-b28f-4565-8d77-cb0ed3088c3e:
    :name: Modula-3
    :description: Modula-3 is a programming language conceived as a successor to an
      upgraded version of Modula-2 known as Modula-2+. While it has been influential
      in research circles it has not been adopted widely in industry. It was designed
      by Luca Cardelli, James Donahue, Lucille Glassman, Mick Jordan, Bill Kalsow
      and Greg Nelson at the Digital Equipment Corporation (DEC) Systems Research
      Center (SRC) and the Olivetti Research Center (ORC) in the late 1980s.
    :wikipedia_url: https://en.wikipedia.org/wiki/Modula-3
  record/b304ddee-9738-4568-ac51-fc58201775b4:
    :name: FAUST
    :description: 'FAUST is a domain-specific purely functional programming language
      for implementing signal processing algorithms in the form of libraries, audio
      plug-ins, or standalone applications. A FAUST program denotes a signal processor:
      a mathematical function that is applied to some input signal and then fed out.'
    :wikipedia_url: https://en.wikipedia.org/wiki/FAUST_(programming_language)
  record/15cab549-28d6-457b-bf9a-ff3528c1d1ea:
    :name: OptimJ
    :description: |-
      OptimJ is an extension for Java with language support for writing optimization models and abstractions for bulk data processing. The extensions and the proprietary product implementing the extensions were developed by Ateji which went out of business in September 2011.
      OptimJ aims at providing a clear and concise algebraic notation for optimization modeling, removing compatibility barriers between optimization modeling and application programming tools, and bringing software engineering techniques such as object-orientation and modern IDE support to optimization experts.
    :wikipedia_url: https://en.wikipedia.org/wiki/OptimJ
  record/032291c3-fa96-4a26-9d38-2ae6243b8014:
    :name: WebAssembly
    :description: WebAssembly is an open standard that defines a portable binary-code
      format for executable programs, and a corresponding textual assembly language,
      as well as interfaces for facilitating interactions between such programs and
      their host environment. The main goal of WebAssembly is to enable high-performance
      applications on web pages, but the format is designed to be executed and integrated
      in other environments as well, including standalone ones.
    :wikipedia_url: https://en.wikipedia.org/wiki/WebAssembly
  record/4b0654f7-1737-4735-a8e3-4409cbcd297c:
    :name: IBM Basic Assembly Language and successors
    :description: Basic Assembly Language (BAL) is the commonly used term for a low-level
      programming language used on IBM System/360 and successor mainframes. Originally,
      "Basic Assembly Language" applied only to an extremely restricted dialect designed
      to run under control of IBM Basic Programming Support (BPS/360) on systems with
      only 8 KB of main memory, and only a card reader, a card punch, and a printer
      for input/output — thus the word "Basic". However, the full name and the initialism
      "BAL" almost immediately attached themselves in popular use to all assembly-language
      dialects on the System/360 and its descendants. BAL for BPS/360 was introduced
      with the System/360 in 1964.
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors
  record/4a7910c5-5279-439f-9626-de6be7442483:
    :name: Text Executive Programming Language
    :description: In 1979, Honeywell Information Systems announced a new programming
      language for their time-sharing service named TEX, an acronym for the Text Executive
      text processing system. TEX was a first generation scripting language, developed
      around the time of AWK and used by Honeywell initially as an in-house system
      test automation tool.
    :wikipedia_url: https://en.wikipedia.org/wiki/Text_Executive_Programming_Language
  record/261ae1e9-0964-4e1e-b253-9c354ff1dbe5:
    :name: Céu
    :description: "Céu is \"Structured Synchronous Reactive Programming\" \nAccording
      to its web page, Céu supports synchronous concurrency with shared memory and
      deterministic execution and has a small memory footprint."
    :wikipedia_url: https://en.wikipedia.org/wiki/C%C3%A9u_(programming_language)
  record/07d93d22-4268-43dd-8561-83fc1e1151ce:
    :name: JOSS
    :description: JOSS, an acronym for JOHNNIAC Open Shop System, was one of the first
      interactive, time-sharing programming languages. It pioneered a number of features
      that would become common in languages from the 1960s into the 1980s, including
      line numbers as both editing instructions and targets for branches, statements
      predicated by boolean decisions, and a built-in editor that can perform instructions
      in "direct" or "immediate" mode, a conversational user interface.
    :wikipedia_url: https://en.wikipedia.org/wiki/JOSS
  record/fd2d49aa-0f55-4b92-8029-e7eebb75e955:
    :name: Unreal Engine
    :description: The Unreal Engine is a game engine developed by Epic Games, first
      showcased in the 1998 first-person shooter game Unreal. Although initially developed
      for first-person shooters, it has been used in a variety of other genres, including
      platformers, fighting games, and MMORPGs, and has seen adoption by many non-gaming
      projects. Written in C++, the Unreal Engine features a high degree of portability,
      supporting a wide range of platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/Unreal_Engine
  record/969fad63-3392-4f62-bee3-ca856d286a5c:
    :name: Common Intermediate Language
    :description: Common Intermediate Language (CIL), formerly called Microsoft Intermediate
      Language (MSIL) or Intermediate Language (IL), is the intermediate language
      binary instruction set defined within the Common Language Infrastructure (CLI)
      specification. CIL instructions are executed by a CLI-compatible runtime environment
      such as the Common Language Runtime. Languages which target the CLI compile
      to CIL. CIL is object-oriented, stack-based bytecode. Runtimes typically just-in-time
      compile CIL instructions into native code.
    :wikipedia_url: https://en.wikipedia.org/wiki/Common_Intermediate_Language
  record/d8cb50f4-1122-4b41-988b-04b4447c8d6c:
    :name: Keysight VEE
    :description: Keysight VEE is a graphical dataflow programming software development
      environment from Keysight Technologies for automated test, measurement, data
      analysis and reporting. VEE originally stood for Visual Engineering Environment
      and developed by HP designated as HP VEE; it has since been officially renamed
      to Keysight VEE. Keysight VEE has been widely used in various industries, serving
      the entire stage of a product lifecycle, from design, validation to manufacturing.
      It is optimized in instrument control and automation with test and measurement
      devices such as data acquisition instruments like digital voltmeters and oscilloscopes,
      and source devices like signal generators and programmable power supplies.
    :wikipedia_url: https://en.wikipedia.org/wiki/Keysight_VEE
  record/fd1a9c38-42ac-4ace-bbad-d39de86ca106:
    :name: ActionScript
    :description: ActionScript is an object-oriented programming language originally
      developed by Macromedia Inc.. It is influenced by HyperTalk, the scripting language
      for HyperCard. It is now an implementation of ECMAScript, though it originally
      arose as a sibling, both being influenced by HyperTalk.
    :wikipedia_url: https://en.wikipedia.org/wiki/ActionScript
  record/cefe1020-5033-4610-acd8-0ece4fdff0d4:
    :name: Yahoo! Query Language
    :description: Yahoo! Query Language (YQL) is an SQL-like query language created
      by Yahoo! as part of their Developer Network. YQL is designed to retrieve and
      manipulate data from APIs through a single Web interface, thus allowing mashups
      that enable developers to create their own applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Yahoo!_Query_Language
  record/a0b51ea8-5760-41e6-a849-f2b362822ea8:
    :name: DIGITAL Command Language
    :description: |-
      DIGITAL Command Language (DCL) is the standard command language

      adopted by most of the operating systems (OSs) that were sold by the former Digital Equipment Corporation. DCL had its roots in the IAS, TOPS-20, and RT-11 OSs and was implemented as a standard across most of Digital's OSs, notably RSX-11, but took its most powerful form in the OpenVMS OS.
    :wikipedia_url: https://en.wikipedia.org/wiki/DIGITAL_Command_Language
  record/25e3527a-b686-4033-b4cd-b5e9e8e6a8b0:
    :name: chomski
    :description: pattern parsing virtual machine and pep refer to both a command
      line computer language and utility which can be used to parse and transform
      text patterns and languages. The utility reads input files character by character
      (sequentially), applying the operation which has been specified via the command
      line or a pep script, and then outputs the line. It was developed from 2006
      in the C language. Pep has derived a number of ideas and syntax elements from
      Sed, a command line text stream editor.
    :wikipedia_url: https://en.wikipedia.org/wiki/Chomski
  record/404f27e5-6d6e-4c80-8435-cea562d56b1a:
    :name: Perl
    :description: Perl is a family of two high-level, general-purpose, interpreted,
      dynamic programming languages. "Perl" refers to Perl 5, but from 2000 to 2019
      it also referred to its redesigned "sister language", Perl 6, before the latter's
      name was officially changed to Raku in October 2019.
    :wikipedia_url: https://en.wikipedia.org/wiki/Perl
  record/d1391de7-c120-4ac2-9f1b-e6324959646b:
    :name: Knowledge Interchange Format
    :description: Knowledge Interchange Format (KIF) is a computer language designed
      to enable systems to share and re-use information from knowledge-based systems.
      KIF is similar to frame languages such as KL-One and LOOM but unlike such language
      its primary role is not intended as a framework for the expression or use of
      knowledge but rather for the interchange of knowledge between systems. The designers
      of KIF likened it to PostScript. PostScript was not designed primarily as a
      language to store and manipulate documents but rather as an interchange format
      for systems and devices to share documents. In the same way KIF is meant to
      facilitate sharing of knowledge across different systems that use different
      languages, formalisms, platforms, etc.
    :wikipedia_url: https://en.wikipedia.org/wiki/Knowledge_Interchange_Format
  record/876361cc-3b36-4e2f-9e29-d15a35a5348e:
    :name: Wyvern
    :description: Wyvern is a computer programming language created by Jonathan Aldrich
      and Alex Potanin for the development of web and mobile applications with security
      and assurance being number one priority. Wyvern supports object capabilities,
      it is structurally typed, and aims to make secure way of programming easier
      than insecure - as described in the Wyvern Manifesto. One of the early available
      features that make Wyvern special is a way to safely use multiple programming
      languages within the same program so programmers can use the language most appropriate
      for each function while at the same time increasing the program's security.
    :wikipedia_url: https://en.wikipedia.org/wiki/Wyvern_(programming_language)
  record/3bb29ebc-d963-43ff-afab-51509d61560c:
    :name: Prolog
    :description: Prolog is a logic programming language associated with artificial
      intelligence and computational linguistics.
    :wikipedia_url: https://en.wikipedia.org/wiki/Prolog
  record/c138e9f5-ef09-48d1-89f1-02000ebdcb43:
    :name: DIBOL
    :description: DIBOL or Digital's Business Oriented Language is a general-purpose,
      procedural, imperative programming language, designed for use in Management
      Information Systems (MIS) software development.
    :wikipedia_url: https://en.wikipedia.org/wiki/DIBOL
  record/0bd54dc5-00be-41aa-bfc6-7d1655b034ad:
    :name: Squirrel
    :description: Squirrel is a high level imperative, object-oriented programming
      language, designed to be a lightweight scripting language that fits in the size,
      memory bandwidth, and real-time requirements of applications like video games
      and embedded systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Squirrel_(programming_language)
  record/83082af3-244c-4f3b-b8e6-f8107c008b33:
    :name: Tom
    :description: Tom is a programming language particularly well-suited for programming
      various transformations on tree structures and XML based documents. Tom is a
      language extension which adds new matching primitives to C and Java as well
      as support for rewrite rules systems. The rules can be controlled using a strategy
      language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Tom_(pattern_matching_language)
  record/428b64c2-caed-48aa-89c2-6c849145ca70:
    :name: LilyPond
    :description: LilyPond is a computer program and file format for music engraving.
      One of LilyPond's major goals is to produce scores that are engraved with traditional
      layout rules, reflecting the era when scores were engraved by hand.
    :wikipedia_url: https://en.wikipedia.org/wiki/LilyPond
  record/8ec04bfe-bb8f-4c9c-a25c-7ce750a426bb:
    :name: App Inventor for Android
    :description: 'MIT App Inventor is a web application integrated development environment
      originally provided by Google, and now maintained by the Massachusetts Institute
      of Technology (MIT). It allows newcomers to computer programming to create application
      software(apps) for two operating systems (OS): Android, and iOS, which, as of
      8 July 2019, is in final beta testing. It is free and open-source software released
      under dual licensing: a Creative Commons Attribution ShareAlike 3.0 Unported
      license, and an Apache License 2.0 for the source code.'
    :wikipedia_url: https://en.wikipedia.org/wiki/App_Inventor_for_Android
  record/78819cd2-dc01-4b7b-8774-ca9edf1163a1:
    :name: FL
    :description: FL is a programming language created at the IBM Almaden Research
      Center by John Backus, John Williams, and Edward Wimmers in the 1980s and documented
      in a report from 1989. FL was designed as a successor of Backus' earlier FP
      language, providing specific support for what Backus termed function-level programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/FL_(programming_language)
  record/d2833fe4-d536-4fc7-9274-3150da872e63:
    :name: Scheme
    :description: Scheme is a minimalist dialect of the Lisp family of programming
      languages. Scheme consists of a small standard core with several tools for language
      extension.
    :wikipedia_url: https://en.wikipedia.org/wiki/Scheme_(programming_language)
  record/41c2da42-e73e-4e40-bb36-18e5b2d50144:
    :name: Rebol
    :description: 'Rebol is a cross-platform data exchange language and a multi-paradigm
      dynamic programming language designed by Carl Sassenrath for network communications
      and distributed computing. It introduces the concept of dialecting: small, optimized,
      domain-specific languages for code and data, which is also the most notable
      property of the language according to its designer Carl Sassenrath:Although
      it can be used for programming, writing functions, and performing processes,
      its greatest strength is the ability to easily create domain-specific languages
      or dialects'
    :wikipedia_url: https://en.wikipedia.org/wiki/Rebol
  record/5ca1c914-2325-4278-8634-1b5e82d70d92:
    :name: PureScript
    :description: PureScript is a strongly-typed, purely-functional programming language
      that compiles to JavaScript. It can be used to develop web applications, server
      side apps, and also desktop applications with use of Electron. Its syntax is
      mostly comparable to that of Haskell. In addition, it introduces row polymorphism
      and extensible records. Also, contrary to Haskell, PureScript adheres to a strict
      evaluation strategy.
    :wikipedia_url: https://en.wikipedia.org/wiki/PureScript
  record/9272108c-119e-4585-80dc-38e686442b74:
    :name: CoffeeScript
    :description: CoffeeScript is a programming language that compiles to JavaScript.
      It adds syntactic sugar inspired by Ruby, Python and Haskell in an effort to
      enhance JavaScript's brevity and readability. Specific additional features include
      list comprehension and destructuring assignment.
    :wikipedia_url: https://en.wikipedia.org/wiki/CoffeeScript
  record/e4ecd708-4b03-4428-8577-57634995776c:
    :name: CLU
    :description: CLU is a programming language created at the Massachusetts Institute
      of Technology (MIT) by Barbara Liskov and her students between 1974 and 1975.
      While it did not find extensive use, it introduced many features that are used
      widely now, and is seen as a step in the development of object-oriented programming
      (OOP).
    :wikipedia_url: https://en.wikipedia.org/wiki/CLU_(programming_language)
  record/93e3e564-1a0b-4c07-9b2b-5e4a272a8f45:
    :name: Eiffel
    :description: Eiffel is an object-oriented programming language designed by Bertrand
      Meyer and Eiffel Software. Meyer conceived the language in 1985 with the goal
      of increasing the reliability of commercial software development; the first
      version becoming available in 1986. In 2005, Eiffel became an ISO-standardized
      language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Eiffel_(programming_language)
  record/943eb517-ff04-410e-bee0-01a8f154b228:
    :name: Simula
    :description: Simula is the name of two simulation programming languages, Simula
      I and Simula 67, developed in the 1960s at the Norwegian Computing Center in
      Oslo, by Ole-Johan Dahl and Kristen Nygaard. Syntactically, it is a fairly faithful
      superset of ALGOL 60, also influenced by the design of Simscript.
    :wikipedia_url: https://en.wikipedia.org/wiki/Simula
  record/9050dd23-8b91-4eef-a092-130f09d23dd8:
    :name: Hamilton C shell
    :description: Hamilton C shell is a clone of the Unix C shell and utilities for
      Microsoft Windows created by Nicole Hamilton at Hamilton Laboratories as a completely
      original work, not based on any prior code. It was first released on OS/2 on
      December 12, 1988 and on Windows NT in July 1992. The OS/2 version was discontinued
      in 2003 but the Windows version continues to be actively supported.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hamilton_C_shell
  record/35eada58-8d56-42fc-a4b4-89971752450c:
    :name: Euclid
    :description: Euclid is an imperative programming language for writing verifiable
      programs. It was designed by Butler Lampson and associates at the Xerox PARC
      lab in the mid-1970s. The implementation was led by Ric Holt at the University
      of Toronto and James Cordy was the principal programmer for the first implementation
      of the compiler. It was originally designed for the Motorola 6809 microprocessor.
      It was considered innovative for the time; the compiler development team had
      a $2 million budget over 2 years and was commissioned by the Defense Advanced
      Research Projects Agency of the U.S. Department of Defense and the Canadian
      Department of National Defence. It was used for a few years at I. P. Sharp Associates,
      MITRE Corporation, SRI International and various other international institutes
      for research in systems programming and secure software systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Euclid_(programming_language)
  record/dd4829de-bd7d-4a01-b77d-6ffa3389a2f7:
    :name: Rexx
    :description: Rexx is an interpreted programming language developed at IBM by
      Mike Cowlishaw. It is a structured, high-level programming language designed
      for ease of learning and reading. Proprietary and open source Rexx interpreters
      exist for a wide range of computing platforms; compilers exist for IBM mainframe
      computers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rexx
  record/40597afe-61c6-40c2-ba91-1445aff001f3:
    :name: MIIS
    :description: 'MIIS is a MUMPS-like programming language that was created by A.Neil
      Pappalardo and Curt W. Marble, on a DEC PDP at Mass General Hospital from 1964
      to 1968. MUMPS evolution took two major directions: MUMPS proper and MIIS. MUMPS
      became an ANSI and ISO-standard language. When many MUMPS implementations standardized
      to be compatible, MIIS did not standardize, but became a proprietary system
      instead.'
    :wikipedia_url: https://en.wikipedia.org/wiki/MIIS_(programming_language)
  record/78b5d51f-443b-4e3f-9b7f-291d7fbd5e56:
    :name: Caché ObjectScript
    :description: Caché ObjectScript is a part of the Caché database system sold by
      InterSystems. The language is a functional superset of the ANSI-standard MUMPS
      programming language. Since Caché is at its core a MUMPS implementation, it
      can run ANSI MUMPS routines with no change. To appeal as a commercial product,
      Caché implements support for object-oriented programming, a macro preprocessing
      language, embedded SQL for ANSI-standard SQL access to M's built-in database,
      procedure and control blocks using C-like brace syntax, procedure-scoped variables,
      and relaxed whitespace syntax limitations.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cach%C3%A9_ObjectScript
  record/6d18b661-b373-4f6a-aadd-51397679f4de:
    :name: Clipper
    :description: "Clipper is an xBase compiler that implements a variant of the xBase
      computer programming language. It is used to create \nor extend software programs
      that originally operated primarily under MS-DOS. Although it is a powerful general-purpose
      programming\nlanguage, it was primarily used to create database/business programs."
    :wikipedia_url: https://en.wikipedia.org/wiki/Clipper_(programming_language)
  record/1826057e-a633-46f9-88f0-c041c9eb5de8:
    :name: FORMAC
    :description: FORMAC, the FORmula MAnipulation Compiler, was the first computer
      algebra system to have significant use. It was developed by Jean E. Sammet and
      her team, as an extension of FORTRAN IV. The compiler was implemented as a preprocessor
      taking the FORMAC program and converting it to a FORTRAN IV program which was
      in turn compiled without further user intervention.
    :wikipedia_url: https://en.wikipedia.org/wiki/FORMAC
  record/be39c8c3-c2e2-415d-ac5f-3577bad02250:
    :name: GameMonkey Script
    :description: GameMonkey Script is a small, cross-platform scripting language
      designed for embedding into games. GameMonkey bears many similarities to Lua,
      except the syntax is more similar to that of C.
    :wikipedia_url: https://en.wikipedia.org/wiki/GameMonkey_Script
  record/1b17e3c3-26df-468d-978e-3b19605f58f2:
    :name: Reason
    :description: Reason, also known as ReasonML, is a syntax extension and toolchain
      for OCaml created by Jordan Walke at Facebook. Reason offers a syntax familiar
      to JavaScript programmers, and transpiles to OCaml. Statically typed Reason
      code may be compiled to dynamically typed JavaScript using the ReScript compiler.
    :wikipedia_url: https://en.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)
  record/bb293391-34c8-4a9a-8182-5d19f479e43a:
    :name: CA Technologies
    :description: CA Technologies, formerly known as CA, Inc. and Computer Associates
      International, Inc., is an American multinational corporation headquartered
      in New York City. Since November 5, 2018, the company has been a subsidiary
      of Broadcom Inc.
    :wikipedia_url: https://en.wikipedia.org/wiki/CA_Technologies
  record/4921d9f2-1ada-4645-b316-2e5883f99b33:
    :name: Action!
    :description: Action! is a procedural programming language similar to ALGOL that
      is intended to produce high-performance programs for the Atari 8-bit family.
      The language was written by Clinton Parker and distributed on ROM cartridge
      by Optimized Systems Software (OSS) starting in 1983. It was one of the first
      of OSS's bank switching "Super Cartridges", with a total of 16 kB of code.
    :wikipedia_url: https://en.wikipedia.org/wiki/Action!_(programming_language)
  record/ccdb5e72-cb19-4fd6-a3be-336604b2a8dd:
    :name: Z++
    :description: Z++ is an object-oriented extension to the Z specification language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Z%2B%2B
  record/9ca7cc35-68a8-4c76-9624-7105c5a320db:
    :name: Emacs Lisp
    :description: Emacs Lisp is a dialect of the Lisp programming language used as
      a scripting language by Emacs. It is used for implementing most of the editing
      functionality built into Emacs, the remainder being written in C, as is the
      Lisp interpreter. Emacs Lisp is also termed Elisp, although there is also an
      older, unrelated Lisp dialect with that name.
    :wikipedia_url: https://en.wikipedia.org/wiki/Emacs_Lisp
  record/27cd87ba-0d8c-430e-bf3a-9cd3526dc54b:
    :name: Red
    :description: Red is a programming language designed to overcome the limitations
      of the programming language Rebol. Red was introduced in 2011 by Nenad Rakočević,
      and is both an imperative and functional programming language. Its syntax and
      general usage overlaps that of the interpreted Rebol language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Red_(programming_language)
  record/41c0cc7e-4c94-41b4-a455-94fa61f41db6:
    :name: DRAKON
    :description: DRAKON is an algorithmic visual programming and modeling language
      developed within the Buran space project following ergonomic design principles.
      The language provides a uniform way to represent flowcharts of any complexity
      that are easy to read and understand.
    :wikipedia_url: https://en.wikipedia.org/wiki/DRAKON
  record/53c6b1ea-72ac-4565-945d-6c193620d1e3:
    :name: Maya Embedded Language
    :description: The Maya Embedded Language (MEL) is a scripting language used to
      simplify tasks in Autodesk's 3D Graphics Software Maya. Most tasks that can
      be achieved through Maya's GUI can be achieved with MEL, as well as certain
      tasks that are not available from the GUI. MEL offers a method of speeding up
      complicated or repetitive tasks, as well as allowing users to redistribute a
      specific set of commands to others that may find it useful.
    :wikipedia_url: https://en.wikipedia.org/wiki/Maya_Embedded_Language
  record/cdd22513-30f6-4e64-baac-fc6dc339f0a8:
    :name: OmniMark
    :description: OmniMark is a fourth-generation programming language used mostly
      in the publishing industry. It is currently a proprietary software product of
      Stilo International. As of September 2018 the most recent release of OmniMark
      was 10.1.2, dated April 2016.
    :wikipedia_url: https://en.wikipedia.org/wiki/OmniMark
  record/40573452-4cc5-4f74-a617-3d781fcd58a5:
    :name: PowerHouse
    :description: "PowerHouse is a trademarked name for a byte-compiled fourth-generation
      programming language originally produced by Quasar Corporation for the Hewlett-Packard
      HP3000 mini-computer, as well as Data General and DEC VAX VMS computing products.
      It was initially composed of five components:QDD, or Quasar Data Dictionary:
      for building a central data dictionary used by all other components\nQDesign:
      a character-based screen generator\nQuick: an interactive, character-based screen
      processor \nQuiz: a report writer\nQTP: a batch transaction processor."
    :wikipedia_url: https://en.wikipedia.org/wiki/PowerHouse_(programming_language)
  record/1fcf1f23-249a-4d2e-9998-95cd4dc15f0e:
    :name: JADE
    :description: JADE is a proprietary object-oriented software development and deployment
      platform product from the New Zealand-based Jade Software Corporation, first
      released in 1996. It consists of the JADE programming language, Integrated development
      environment and debugger, integrated application server and object database
      management system.
    :wikipedia_url: https://en.wikipedia.org/wiki/JADE_(programming_language)
  record/fbbe855b-2372-4f7d-930a-ce7ec81580da:
    :name: EGL
    :description: EGL, originally developed by IBM and now available as the EDT open
      source project under the Eclipse Public License (EPL), is a programming technology
      designed to meet the challenges of modern, multi-platform application development
      by providing a common language and programming model across languages, frameworks,
      and runtime platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/EGL_(programming_language)
  record/2d337d6f-23b0-40d0-9b98-fc359bcebc8b:
    :name: P4
    :description: P4 is a programming language for controlling packet forwarding planes
      in networking devices, such as routers and switches. In contrast to a general
      purpose language such as C or Python, P4 is a domain-specific language with
      a number of constructs optimized for network data forwarding. P4 is distributed
      as open-source, permissively licensed code, and is maintained by the P4 Language
      Consortium, a not-for-profit organization.
    :wikipedia_url: https://en.wikipedia.org/wiki/P4_(programming_language)
  record/f6a1e05d-3591-4df3-9a17-c81b854efa30:
    :name: WATFIV
    :description: WATFIV, or WATerloo FORTRAN IV, developed at the University of Waterloo,
      Canada is an implementation of the Fortran computer programming language. It
      is the successor of WATFOR.
    :wikipedia_url: https://en.wikipedia.org/wiki/WATFIV
  record/87acd45a-067e-44a8-bfe9-eedc6f2f51fd:
    :name: SIMSCRIPT
    :description: SIMSCRIPT is a free-form, English-like general-purpose simulation
      language conceived by Harry Markowitz and Bernard Hausner at the RAND Corporation
      in 1962. It was implemented as a Fortran preprocessor on the IBM 7090 and was
      designed for large discrete event simulations. It influenced Simula.
    :wikipedia_url: https://en.wikipedia.org/wiki/SIMSCRIPT
  record/45001f5f-deb7-46ba-8157-bfaa107ea8ea:
    :name: Object Lisp
    :description: Object Lisp was a computer programming language, a dialect of the
      Lisp language. It was an object-oriented extension for the Lisp dialect Lisp
      Machine Lisp, designed by Lisp Machines, Inc. Object Lisp was also an early
      example of prototype-based programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Object_Lisp
  record/397bcc83-7d10-4543-a806-397df81860ba:
    :name: Cayenne
    :description: Cayenne is a dependently typed functional programming language created
      by Lennart Augustsson in 1998, making it one of the earliest dependently typed
      programming languages. A notable design decision is that the language allows
      unbounded recursive functions to be used on the type level, making type checking
      undecidable. Most dependently typed proof assistants and later dependently typed
      languages such as Agda included a termination checker to prevent the type checker
      from looping, while the contemporary Dependent ML restricted the expressivity
      of the type-level language to maintain decidability.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cayenne_(programming_language)
  record/6f5f4c6e-82e8-4eac-8d2c-df016a007d39:
    :name: ".QL"
    :description: ".QL is an object-oriented query language used to retrieve data
      from relational database management systems. It is reminiscent of the standard
      query language SQL and the object-oriented programming language Java. .QL is
      an object-oriented variant of a logical query language called Datalog. Hierarchical
      data can therefore be naturally queried in .QL in a recursive manner."
    :wikipedia_url: https://en.wikipedia.org/wiki/.QL
  record/72c4df36-0fa0-49e9-82a5-90c7c5488abb:
    :name: Go
    :description: Go is a statically typed, compiled programming language designed
      at Google by Robert Griesemer, Rob Pike, and Ken Thompson. Go is syntactically
      similar to C, but with memory safety, garbage collection, structural typing,
      and CSP-style concurrency. The language is often referred to as Golang because
      of its domain name, golang.org, but the proper name is Go.
    :wikipedia_url: https://en.wikipedia.org/wiki/Go_(programming_language)
  record/e49db818-938f-406c-b9b6-d7f159b0d997:
    :name: AMPL
    :description: |-
      AMPL is an algebraic modeling language to describe and solve high-complexity problems for large-scale mathematical computing .
      It was developed by Robert Fourer, David Gay, and Brian Kernighan at Bell Laboratories.
      AMPL supports dozens of solvers, both open source and commercial software, including CBC, CPLEX, FortMP, Gurobi, MINOS, IPOPT, SNOPT, KNITRO, and LGO. Problems are passed to solvers as nl files.
      AMPL is used by more than 100 corporate clients, and by government agencies and academic institutions.
    :wikipedia_url: https://en.wikipedia.org/wiki/AMPL
  record/757600ed-6a87-49de-8c5d-7b52c0e1088c:
    :name: Kivy
    :description: Kivy is a free and open source Python framework for developing mobile
      apps and other multitouch application software with a natural user interface
      (NUI). It is distributed under the terms of the MIT License, and can run on
      Android, iOS, GNU/Linux, macOS, and Windows.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kivy_(framework)
  record/e248317e-318d-49fc-a310-af20f5b14f37:
    :name: Nickle
    :description: Nickle is a numeric oriented programming language by Keith Packard
      and Bart Massey. Originally used for desktop calculation, it has since expanded
      for prototyping of complicated algorithms.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nickle_(programming_language)
  record/b49f229d-1c11-40cd-8c2c-6e5c24b34d6e:
    :name: occam-π
    :description: |-
      In computer science, occam-π is the name of a variant of the programming language occam developed by the Kent Retargetable occam Compiler (KRoC) team at the University of Kent. The name reflects the introduction of elements of π-calculus (pi-calculus) into occam, especially concepts involving mobile agents (processes) and data. The language contains several extensions to occam 2.1, including:Nested protocols
      Run-time process creation
      Mobile channels, data, and processes
      Recursion
      Protocol inheritance
      Array constructors
      Extended rendezvous
    :wikipedia_url: https://en.wikipedia.org/wiki/Occam-%CF%80
  record/25ae1b6d-2334-44b3-8d39-78746d59b332:
    :name: SYMPL
    :description: SYMPL is an obsolete programming language developed by the Control
      Data Corporation (CDC) for use on the CDC 6000 series computer systems in the
      1970s and 1980s. It was based on a subset of CDCs version of JOVIAL, as an alternative
      to assembly language. A number of important CDC software products were implemented
      in SYMPL, including compilers, libraries, a full-screen editor, and major subsystems.
    :wikipedia_url: https://en.wikipedia.org/wiki/SYMPL
  record/7e706ee8-006b-4598-8854-048bce2e8bae:
    :name: Prograph
    :description: Prograph is a visual, object-oriented, dataflow, multiparadigm programming
      language that uses iconic symbols to represent actions to be taken on data.
      Commercial Prograph software development environments such as Prograph Classic
      and Prograph CPX were available for the Apple Macintosh and Windows platforms
      for many years but were eventually withdrawn from the market in the late 1990s.
      Support for the Prograph language on macOS has recently reappeared with the
      release of the Marten software development environment.
    :wikipedia_url: https://en.wikipedia.org/wiki/Prograph
  record/49587879-cb49-48ee-a780-205785982689:
    :name: JScript .NET
    :description: JScript .NET is a .NET programming language developed by Microsoft.
    :wikipedia_url: https://en.wikipedia.org/wiki/JScript_.NET
  record/5c41c4b0-9769-4b50-b0a3-f307bbbc125e:
    :name: Pure
    :description: Pure, successor to the equational language Q, is a dynamically typed,
      functional programming language based on term rewriting. It has facilities for
      user-defined operator syntax, macros, arbitrary-precision arithmetic, and compiling
      to native code through the LLVM. Pure is free and open-source software distributed
      (mostly) under the GNU Lesser General Public License version 3 or later.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pure_(programming_language)
  record/2f306c31-730f-4125-b38e-e4cd99ecad0d:
    :name: MAPPER
    :description: |-
      MAPPER, now known as BIS, is a fourth-generation programming language from
      Sperry Univac. Mapper originated in the 1970s based on some work in the 1960s, but has been kept current. It was renamed and also given an extension named ICE - Internet Commerce Enabler.
    :wikipedia_url: https://en.wikipedia.org/wiki/MAPPER
  record/1838d41e-1e14-472a-a383-37c97f089850:
    :name: Pico
    :description: Pico is a programming language developed at the Software Languages
      Lab at Vrije Universiteit Brussel. The language was created to introduce the
      essentials of programming to non-computer science students.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pico_(programming_language)
  record/6730d453-563e-495f-9110-4f28f7ee7c09:
    :name: S2
    :description: S2  is an object-oriented programming language developed in the
      late 1990s by Brad Fitzpatrick, Martin "Mart" Atkins, and others for the online
      journaling service LiveJournal in order to allow users full control over the
      appearance of their pages. S2 source code is compiled into Perl, which the webserver
      can then execute directly for individual web page requests.
    :wikipedia_url: https://en.wikipedia.org/wiki/S2_(programming_language)
  record/e89825be-7ad9-48f6-8b40-918d8c2e1532:
    :name: A-0 System
    :description: The A-0 system, written by Grace Murray Hopper in 1951 and 1952
      for the UNIVAC I, was an early compiler related tool developed for electronic
      computers. The A-0 functioned more as a loader or linker than the modern notion
      of a compiler. A program was specified as a sequence of subroutines and arguments.
      The subroutines were identified by a numeric code and the arguments to the subroutines
      were written directly after each subroutine code. The A-0 system converted the
      specification into machine code that could be fed into the computer a second
      time to execute the said program.
    :wikipedia_url: https://en.wikipedia.org/wiki/A-0_System
  record/8b091987-b278-47d4-ade3-99af86c8075d:
    :name: FOCAL
    :description: FOCAL is an interactive interpreted programming language based on
      JOSS and primarily used on Digital Equipment Corporation (DEC) PDP-series machines.
      The name is an acronym, alternately for Formulating On-Line Calculations in
      Algebraic Language, or FOrmula CALculator.
    :wikipedia_url: https://en.wikipedia.org/wiki/FOCAL_(programming_language)
  record/b767a194-f43d-4fc6-98f3-69566ff2a36f:
    :name: Axum
    :description: Axum is a domain-specific concurrent programming language, based
      on the Actor model, that was under active development by Microsoft between 2009
      and 2011. It is an object-oriented language based on the .NET Common Language
      Runtime using a C-like syntax which, being a domain-specific language, is intended
      for development of portions of a software application that is well-suited to
      concurrency. But it contains enough general-purpose constructs that one need
      not switch to a general-purpose programming language for the sequential parts
      of the concurrent components.
    :wikipedia_url: https://en.wikipedia.org/wiki/Axum_(programming_language)
  record/12bd652b-37c4-4545-bef5-5912c384dea9:
    :name: IBM Informix-4GL
    :description: Informix-4GL is a 4GL programming language developed by Informix
      during the mid-1980s.
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_Informix-4GL
  record/8a9bbd0f-c30c-4aeb-bd83-20121ba85b76:
    :name: SASL
    :description: SASL is a purely functional programming language developed by David
      Turner at the University of St Andrews in 1972, based on the applicative subset
      of ISWIM. In 1976 Turner redesigned and reimplemented it as a non-strict (lazy)
      language. In this form it was the foundation of Turner's later languages KRC
      and Miranda, but SASL appears to be untyped whereas Miranda has polymorphic
      types.
    :wikipedia_url: https://en.wikipedia.org/wiki/SASL_(programming_language)
  record/b4e6aeec-3aea-4b55-9d85-decd09f70605:
    :name: NESL
    :description: NESL is a parallel programming language developed at Carnegie Mellon
      by the SCandAL project and released in 1993. It integrates various ideas from
      parallel algorithms, and functional programming and array programming languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/NESL
  record/b9546f73-64f0-44ae-b853-d3d1a843bba3:
    :name: Objective-J
    :description: 'Objective-J is a programming language developed as part of the
      Cappuccino web development framework. Its syntax is nearly identical to the
      Objective-C syntax and it shares with JavaScript the same relationship that
      Objective-C has with the C programming language: that of being a strict, but
      small, superset; adding traditional inheritance and Smalltalk/Objective-C style
      dynamic dispatch. Pure JavaScript, being a prototype-based language, already
      has a notion of object orientation and inheritance, but Objective-J adds the
      use of class-based programming to JavaScript.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Objective-J
  record/2c06fe82-ca1e-4a27-b044-6fe5c5f2f9de:
    :name: eC
    :description: eC is an object-oriented programming language, defined as a super-set
      of the C language.
    :wikipedia_url: https://en.wikipedia.org/wiki/EC_(programming_language)
  record/b173d1a8-1461-4f04-8c21-22244041272b:
    :name: RPL
    :description: RPL is a handheld calculator operating system and application programming
      language used on Hewlett-Packard's scientific graphing RPN calculators of the
      HP 28, 48, 49 and 50 series, but it is also usable on non-RPN calculators, such
      as the 38, 39 and 40 series.
    :wikipedia_url: https://en.wikipedia.org/wiki/RPL_(programming_language)
  record/0cf3822e-ba26-4ad0-ad2b-006eaf908975:
    :name: MATH-MATIC
    :description: MATH-MATIC is the marketing name for the AT-3 compiler, an early
      programming language for the UNIVAC I and UNIVAC II.
    :wikipedia_url: https://en.wikipedia.org/wiki/MATH-MATIC
  record/a6216ae1-1739-4470-a38f-417135ef8bab:
    :name: HyperTalk
    :description: HyperTalk was a high-level, procedural programming language created
      in 1987 by Dan Winkler and used in conjunction with Apple Computer's HyperCard
      hypermedia program by Bill Atkinson. Because the main target audience of HyperTalk
      was beginning programmers, HyperTalk programmers were usually called "authors"
      and the process of writing programs was known as "scripting". HyperTalk scripts
      resembled written English and used a logical structure similar to that of the
      Pascal programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/HyperTalk
  record/be779529-6b56-417c-b574-aa97619274fc:
    :name: AMOS
    :description: AMOS BASIC is a dialect of the BASIC programming language implemented
      on the Amiga computer. AMOS BASIC was published by Europress Software and originally
      written by François Lionet with Constantin Sotiropoulos.
    :wikipedia_url: https://en.wikipedia.org/wiki/AMOS_(programming_language)
  record/93fe1d6f-3e9e-42be-a2de-f565d9f6f0b4:
    :name: XOTcl
    :description: XOTcl is an object-oriented extension for the Tool Command Language
      created by Gustaf Neumann and Uwe Zdun. It is a derivative of MIT OTcl. XOTcl
      is based on a dynamic object system with metaclasses which as influenced by
      CLOS. Class and method definitions are completely dynamic. XOTcl provides language
      support for design patterns via filters and decorator mixins.
    :wikipedia_url: https://en.wikipedia.org/wiki/XOTcl
  record/bbf753ab-5ec9-4e32-85d7-3888df40b458:
    :name: LYaPAS
    :description: Logical Language for the Representation of Synthesis Algorithms
      is a programming language created by Arkady Zakrevsky in the Soviet Union.
    :wikipedia_url: https://en.wikipedia.org/wiki/LYaPAS
  record/4bde0f38-3163-48d8-83af-5eb0bf204dcb:
    :name: Inform
    :description: |-
      Inform is a programming language and design system for interactive fiction originally created in 1993 by Graham Nelson. Inform can generate programs designed for the Z-code or Glulx virtual machines. Versions 1 through 5 were released between 1993 and 1996. Around 1996, Nelson rewrote Inform from first principles to create version 6 .
      Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction. In 2006, Nelson released Inform 7, a completely new language based on principles of natural language and a new set of tools based around a book-publishing metaphor.
    :wikipedia_url: https://en.wikipedia.org/wiki/Inform
  record/e959cf39-0403-4551-b643-4f50f1c95ea4:
    :name: Refal
    :description: Refal "is a functional programming language oriented toward symbolic
      computations", including "string processing, language translation, [and] artificial
      intelligence". It is one of the oldest members of this family, first conceived
      of in 1966 as a theoretical tool, with the first implementation appearing in
      1968. Refal was intended to combine mathematical simplicity with practicality
      for writing large and sophisticated programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Refal
  record/9e1fc000-7678-44db-8109-46df99a7b2a5:
    :name: XBL
    :description: XBL is an XML-based markup language for altering the behavior of
      XUL widgets. It was devised at Netscape in the late 1990s as an extension of
      XUL and existed in Firefox web browser codebase. Firefox deprecated XBL in 2017
      and completed the process of removing it in 2019. However, the UXP fork of the
      codebase intends to continue supporting XBL indefinitely.
    :wikipedia_url: https://en.wikipedia.org/wiki/XBL
  record/9fb3cb0e-ee43-4d13-9c78-020f6f0085ca:
    :name: G-code
    :description: G-code, which has many variants, is the common name for the most
      widely used computer numerical control (CNC) programming language. It is used
      mainly in computer-aided manufacturing to control automated machine tools.
    :wikipedia_url: https://en.wikipedia.org/wiki/G-code
  record/3d1ee6e9-4c69-487b-ae65-7d938b063b0c:
    :name: Hermes
    :description: |-
      Hermes

      is a language for distributed programming
      that was developed at IBM's Thomas J. Watson Research Center from 1986 through 1992,
      with an open-source compiler and run-time system.
      Hermes' primary features included:Language support of processes and interprocess communication.
      Compile-time verification that operations use initialized data.
      Representation-independent data aggregates called tables.
      Lack of pointers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hermes_(programming_language)
  record/f34b42ef-65a2-4c64-a5d3-b064fe48b0ef:
    :name: Genie
    :description: Genie is a modern, general-purpose high-level programming language
      in development since 2008. It was designed as an alternative, simpler and cleaner
      dialect for the Vala compiler, while preserving the same functionality of the
      Vala language. Genie uses the same compiler and libraries as Vala; the two can
      indeed be used alongside each other. The differences are only syntactic.
    :wikipedia_url: https://en.wikipedia.org/wiki/Genie_(programming_language)
  record/8afae5d2-441b-4a70-b6f5-e16458e1e4ee:
    :name: PROIV
    :description: PROIV (/proʊ,fʊər/) is a low code development platform, developed
      and sold by NorthgateArinso, part of the Northgate Information Solutions Group.
      It has an active community of around 2500 developers and end-users worldwide,
      ranging from consultants to large multinationals, finance institutions, tax
      authorities, retailers, engineering companies, media operators and software
      houses.
    :wikipedia_url: https://en.wikipedia.org/wiki/PROIV
  record/b3fcd785-675e-4f90-925c-931cb894e212:
    :name: DYNAMO
    :description: |-
      DYNAMO is a historically important simulation language and accompanying graphical notation developed within the system dynamics analytical framework. It was originally for industrial dynamics but was soon extended to other applications, including population and resource studies
      and urban planning.
    :wikipedia_url: https://en.wikipedia.org/wiki/DYNAMO_(programming_language)
  record/dae58063-fff1-457a-93f8-a5ab06ec49b4:
    :name: AmbientTalk
    :description: AmbientTalk is an experimental object-oriented distributed programming
      language developed at the Programming Technology Laboratory at the Vrije Universiteit
      Brussel, Belgium. The language is primarily targeted at writing programs deployed
      in mobile ad hoc networks.
    :wikipedia_url: https://en.wikipedia.org/wiki/AmbientTalk
  record/ea30a464-7fc0-43e9-83c7-0a6468f25bcb:
    :name: Adobe ColdFusion
    :description: Adobe ColdFusion is a commercial rapid web-application development
      computing platform created by J. J. Allaire in 1995. ColdFusion was originally
      designed to make it easier to connect simple HTML pages to a database. By version
      2 (1996), it became a full platform that included an IDE in addition to a full
      scripting language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Adobe_ColdFusion
  record/2220d115-b6ba-4092-8ace-08c290ff46d3:
    :name: Max
    :description: Max, also known as Max/MSP/Jitter, is a visual programming language
      for music and multimedia developed and maintained by San Francisco-based software
      company Cycling '74. Over its more than thirty-year history, it has been used
      by composers, performers, software designers, researchers, and artists to create
      recordings, performances, and installations.
    :wikipedia_url: https://en.wikipedia.org/wiki/Max_(software)
  record/332c7457-f8be-4528-8489-8610cf4e0dee:
    :name: Oak
    :description: |2-

      Oak is a discontinued programming language created by James Gosling in 1991, initially for Sun Microsystems' set-top box project. The language later evolved to become Java.
    :wikipedia_url: https://en.wikipedia.org/wiki/Oak_(programming_language)
  record/f141ceee-036e-44f3-8381-66d0914c2b6b:
    :name: Nullsoft Scriptable Install System
    :description: Nullsoft Scriptable Install System (NSIS) is a script-driven installer
      authoring tool for Microsoft Windows backed by Nullsoft, the creators of Winamp.
      NSIS is released under a combination of free software licenses, primarily the
      zlib license. It has become a widely used alternative to commercial proprietary
      products like InstallShield, with users including Amazon.com, Dropbox, Google,
      Ubisoft, FL Studio, BitTorrent, and McAfee.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System
  record/4be3f4bd-e5da-4e66-b46d-aaab54400aab:
    :name: TACL
    :description: TACL is the scripting programming language used in Tandem Computers.
      TACL is the shell.
    :wikipedia_url: https://en.wikipedia.org/wiki/TACL
  record/908ef832-7e47-4336-bbd6-0fe9fe4603c5:
    :name: Limnor
    :description: Limnor is a generic-purpose codeless and visual programming system.
      The aim is to enable users to create computer software without directly coding
      in a texture programming language. It can be extended by software developers.
      The general idea of Limnor codeless programming is to add "Actions" to classes.
    :wikipedia_url: https://en.wikipedia.org/wiki/Limnor
  record/a49c57a5-b819-4ce9-a416-30065b9cee46:
    :name: TTM
    :description: TTM is a string oriented, general purpose macro processing programming
      language developed in 1968 by Steven Caine and E. Kent Gordon at the California
      Institute of Technology.
    :wikipedia_url: https://en.wikipedia.org/wiki/TTM_(programming_language)
  record/de7dc801-c1f9-4154-a35d-15b361ed1160:
    :name: C++
    :description: C++ is a general-purpose programming language created by Bjarne
      Stroustrup as an extension of the C programming language, or "C with Classes".
      The language has expanded significantly over time, and modern C++ now has object-oriented,
      generic, and functional features in addition to facilities for low-level memory
      manipulation. It is almost always implemented as a compiled language, and many
      vendors provide C++ compilers, including the Free Software Foundation, LLVM,
      Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/C%2B%2B
  record/7b5373ae-f2f9-4913-bd8b-9fe10e283cf3:
    :name: bc
    :description: bc, for basic calculator, is "an arbitrary-precision calculator
      language" with syntax similar to the C programming language. bc is typically
      used as either a mathematical scripting language or as an interactive mathematical
      shell.
    :wikipedia_url: https://en.wikipedia.org/wiki/Bc_(programming_language)
  record/4aefe204-9ded-49e7-8e6c-1fb22241f7a0:
    :name: Agora
    :description: Agora is a reflective, prototype-based, object-oriented programming
      language that is based exclusively on message passing and not delegation. Agora
      was intended to show that even subject to that limit, it is possible to build
      a full object-oriented language that features inheritance, cloning and reflective
      operators.
    :wikipedia_url: https://en.wikipedia.org/wiki/Agora_(programming_language)
  record/956d12ba-9528-4c4f-96f2-d59c9c682370:
    :name: XMOS
    :description: XMOS is a fabless semiconductor company that develops audio products
      and multicore microcontrollers.
    :wikipedia_url: https://en.wikipedia.org/wiki/XMOS
  record/54f85689-3b0a-4e28-bacd-d3d3bea1e006:
    :name: PILOT
    :description: |-
      Programmed Inquiry, Learning, or Teaching (PILOT) is a simple high-level programming language developed in the 1960s.
      Like its younger sibling LOGO, it was an early foray into the technology of computer-assisted instruction.
    :wikipedia_url: https://en.wikipedia.org/wiki/PILOT
  record/ec28c510-26f2-4889-b941-dfb9536a8149:
    :name: Algebraic Logic Functional programming language
    :description: Algebraic Logic Functional programming language, also known as ALF,
      is a programming language which combines functional and logic programming techniques.
      Its foundation is Horn clause logic with equality which consists of predicates
      and Horn clauses for logic programming, and functions and equations for functional
      programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language
  record/3b41c3ff-14e6-41df-b7c6-c545c75f0fe9:
    :name: MIMIC
    :description: MIMIC, known in capitalized form only, is a former simulation computer
      language developed 1964 by H. E. Petersen, F. J. Sansom and L. M. Warshawsky
      of Systems Engineering Group within the Air Force Materiel Command at the Wright-Patterson
      AFB in Dayton, Ohio, United States. It is an expression-oriented continuous
      block simulation language, but capable of incorporating blocks of FORTRAN-like
      algebra.
    :wikipedia_url: https://en.wikipedia.org/wiki/MIMIC
  record/1fc4e3a5-917c-42b7-bf7f-c340d9fc305b:
    :name: Plankalkül
    :description: Plankalkül is a programming language designed for engineering purposes
      by Konrad Zuse between 1942 and 1945. It was the first high-level programming
      language to be designed for a computer.
    :wikipedia_url: https://en.wikipedia.org/wiki/Plankalk%C3%BCl
  record/142f67b0-e3ed-4f75-b31d-f34e24a5a380:
    :name: Emerald
    :description: Emerald is a distributed, object-oriented programming language developed
      in the 1980s by Andrew P. Black, Norman C. Hutchinson, Eric B. Jul, and Henry
      M. Levy, in the Department of Computer Science at the University of Washington.
    :wikipedia_url: https://en.wikipedia.org/wiki/Emerald_(programming_language)
  record/d8e405a5-8396-4fe3-bd0c-82b7a883948d:
    :name: Executable UML
    :description: 'Executable UML is both a software development method and a highly
      abstract software language. It was described for the first time in 2002 in the
      book "Executable UML: A Foundation for Model-Driven Architecture". The language
      "combines a subset of the UML graphical notation with executable semantics and
      timing rules." The Executable UML method is the successor to the Shlaer–Mellor
      method.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Executable_UML
  record/5e58364d-b43c-4c6b-ad7c-596e8f5c0b69:
    :name: UCSD Pascal
    :description: UCSD Pascal is a Pascal programming language system that runs on
      the UCSD p-System, a portable, highly machine-independent operating system.
      UCSD Pascal was first released in 1977. It was developed at the University of
      California, San Diego (UCSD).
    :wikipedia_url: https://en.wikipedia.org/wiki/UCSD_Pascal
  record/8127b7dd-ffa2-431f-a3ac-727779988b47:
    :name: KiXtart
    :description: KiXtart is a closed source free-format scripting language for Windows.
      It is described as a logon script processor and enhanced batch scripting language
      by the official website. Its name is a portmanteau of "kick start".
    :wikipedia_url: https://en.wikipedia.org/wiki/KiXtart
  record/f793be72-bea4-4938-b433-c5b419fa2816:
    :name: Parallax Propeller
    :description: The Parallax P8X32A Propeller is a multi-core processor parallel
      computer architecture microcontroller chip with eight 32-bit reduced instruction
      set computer (RISC) central processing unit (CPU) cores. Introduced in 2006,
      it is designed and sold by Parallax, Inc.
    :wikipedia_url: https://en.wikipedia.org/wiki/Parallax_Propeller
  record/4f93c513-ae87-4c58-b932-582492414650:
    :name: Model 204
    :description: Model 204 (M204) is a database management system for IBM and compatible
      mainframe computers developed and commercialized by Computer Corporation of
      America. It was announced in 1965, and first deployed in 1972. It incorporates
      a programming language and an environment for application development. Implemented
      in assembly language for IBM System/360 and its successors, M204 can deal with
      very large databases and transaction loads of 1000 TPS.
    :wikipedia_url: https://en.wikipedia.org/wiki/Model_204
  record/4ec6a5a5-cc13-4bf5-83eb-55eab3cc8f71:
    :name: NekoVM
    :description: 'NekoVM is a virtual machine developed by Nicolas Cannasse as part
      of research and development (R&D) efforts at two indie video game firms in Bordeaux,
      France: first at Motion Twin and then at Shiro Games. NekoVM''s native language
      is the bytecode for a high-level dynamically typed programming language called
      Neko. This pairing allows Neko to be used directly as an embedded scripting
      language or to target NekoVM by compiling some other language to NekoVM bytecode.'
    :wikipedia_url: https://en.wikipedia.org/wiki/NekoVM
  record/5985fae3-2b30-443b-b85e-711226ba55cc:
    :name: Singularity
    :description: Singularity is an experimental operating system (OS) which was built
      by Microsoft Research between 2003 and 2010. It was designed as a high dependability
      OS in which the kernel, device drivers, and application software were all written
      in managed code. Internal security uses type safety instead of hardware memory
      protection.
    :wikipedia_url: https://en.wikipedia.org/wiki/Singularity_(operating_system)
  record/dcdc5b3f-a580-4817-be66-d4ccbccf7b69:
    :name: Actor
    :description: The Actor programming language was invented by Charles Duff of The
      Whitewater Group in 1988. It was an offshoot of some object-oriented extensions
      to the Forth language he had been working on.
    :wikipedia_url: https://en.wikipedia.org/wiki/Actor_(programming_language)
  record/b67a232a-cbf0-455c-9d9f-de315c9860e2:
    :name: SabreTalk
    :description: SabreTalk is a discontinued dialect of PL/I for the S/360 IBM mainframes
      running the TPF platform. SabreTalk was developed jointly by American Airlines,
      Eastern Air Lines and IBM. SabreTalk is known as PL/TPF.
    :wikipedia_url: https://en.wikipedia.org/wiki/SabreTalk
  record/95cab7c9-8c2a-483a-bb3d-917e96443d50:
    :name: SOPHAEROS
    :description: SOPHAEROS is a computer code, used by the AECL and French Nuclear
      program to simulate the transfer of fission products in the reactor chamber.
      It models fission product behaviour using a set of aerosol dynamic rules, and
      is used by AECL in fuel channel safety analyses.
    :wikipedia_url: https://en.wikipedia.org/wiki/SOPHAEROS
  record/2f22d738-805a-4131-81b6-670bc2de2888:
    :name: CLIPS
    :description: CLIPS is a public domain software tool for building expert systems.
      The name is an acronym for "C Language Integrated Production System." The syntax
      and name was inspired by Charles Forgy's OPS5. The first versions of CLIPS were
      developed starting in 1985 at NASA-Johnson Space Center until the mid-1990s
      when the development group's responsibilities ceased to focus on expert system
      technology. The original name of the project was NASA's AI Language (NAIL).
    :wikipedia_url: https://en.wikipedia.org/wiki/CLIPS
  record/833c5e0d-869e-4be2-be52-418bed338ad1:
    :name: Sawzall
    :description: Sawzall is a procedural domain-specific programming language, used
      by Google to process large numbers of individual log records. Sawzall was first
      described in 2003, and the szl runtime was open-sourced in August 2010. However,
      since the MapReduce table aggregators have not been released, the open-sourced
      runtime is not useful for large-scale data analysis of multiple log files off
      the shelf. Sawzall has been replaced by Lingo for most purposes within Google.
    :wikipedia_url: https://en.wikipedia.org/wiki/Sawzall_(programming_language)
  record/10d8745f-c825-40a7-8d6f-141914a867a9:
    :name: Groovy
    :description: ''
    :wikipedia_url: https://en.wikipedia.org/wiki/Groovy_(programming_language)
  record/303191a1-6b6a-4ef7-86b6-7645f864a552:
    :name: Dart
    :description: Dart is a client-optimized programming language for apps on multiple
      platforms. It is developed by Google and is used to build mobile, desktop, server,
      and web applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Dart_(programming_language)
  record/da36eeae-aebd-4634-b7e9-52142b4ad7a3:
    :name: MOO
    :description: The MOO programming language is a relatively simple programming
      language used to support the MOO Server. It is dynamically typed and uses a
      prototype-based object-oriented system, with syntax roughly derived from the
      Ada school of programming languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/MOO_(programming_language)
  record/85d38cae-09e2-478c-9d17-78778a499858:
    :name: Bertrand
    :description: Bertrand is a computer programming language for creating constraint
      programming systems. The language was created by Wm Leler in the mid-1980s as
      part of his doctoral research. Bertrand has a declarative programming syntax
      and differentiates itself from other programming languages by use of a technique
      called augmented term rewriting.
    :wikipedia_url: https://en.wikipedia.org/wiki/Bertrand_(programming_language)
  record/1e506784-8d4d-46a8-8a27-775d297239b8:
    :name: Pizza
    :description: Pizza is an open-source superset of Java 1.4, prior to the introduction
      of generics for the Java programming language. In addition to its own solution
      for adding generics to the language, Pizza also added function pointers and
      algebraic types with case classes and pattern matching.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pizza_(programming_language)
  record/6985727e-d087-4bb9-8a20-30b4cdc847c4:
    :name: SiMPLE
    :description: SiMPLE is a programming development system that was created to provide
      easy programming capabilities for everybody, especially non-professionals.
    :wikipedia_url: https://en.wikipedia.org/wiki/SiMPLE
  record/296aa0e8-9e85-4409-b0fe-62e77140f840:
    :name: TUTOR
    :description: TUTOR, also known as PLATO Author Language, is a programming language
      developed for use on the PLATO system at the University of Illinois at Urbana-Champaign
      beginning in roughly 1965. TUTOR was initially designed by Paul Tenczar for
      use in computer assisted instruction (CAI) and computer managed instruction
      (CMI) and has many features for that purpose. For example, TUTOR has powerful
      answer-parsing and answer-judging commands, graphics, and features to simplify
      handling student records and statistics by instructors. TUTOR's flexibility,
      in combination with PLATO's computational power, also made it suitable for the
      creation of games — including flight simulators, war games, dungeon style multiplayer
      role-playing games, card games, word games, and medical lesson games such as
      Bugs and Drugs (BND). TUTOR lives on today as the programming language for the
      Cyber1 PLATO System, which runs most of the source code from 1980s PLATO and
      has roughly 5000 users as of June 2020.
    :wikipedia_url: https://en.wikipedia.org/wiki/TUTOR
  record/2c447744-a163-4ee3-a110-8d55953db40a:
    :name: Salesforce
    :description: Salesforce.com, Inc. is an American cloud-based software company
      headquartered in San Francisco, California. It provides customer relationship
      management (CRM) service and also sells a complementary suite of enterprise
      applications focused on customer service, marketing automation, analytics, and
      application development.
    :wikipedia_url: https://en.wikipedia.org/wiki/Salesforce
  record/4208b38b-66e6-4229-90c5-b6e7d81b7a1b:
    :name: Raku
    :description: Raku is a member of the Perl family of programming languages. Formerly
      known as Perl 6, it was renamed in October 2019. Raku introduces elements of
      many modern and historical languages. Compatibility with Perl was not a goal,
      though a compatibility mode is part of the specification. The design process
      for Raku began in 2000.
    :wikipedia_url: https://en.wikipedia.org/wiki/Raku_(programming_language)
  record/401076f9-ec9c-4970-847f-cfac79420865:
    :name: FreeBASIC
    :description: FreeBASIC is a multiplatform, free/open source (GPL) BASIC programming
      language and compiler for Microsoft Windows, protected-mode MS-DOS, Linux, FreeBSD
      and Xbox. The Xbox version is no longer maintained.
    :wikipedia_url: https://en.wikipedia.org/wiki/FreeBASIC
  record/9d639639-facf-4d32-8d82-dbb573d80fb9:
    :name: Halide
    :description: Halide is a computer programming language designed for writing digital
      image processing code that takes advantage of memory locality, vectorized computation
      and multi-core CPUs and GPUs. Halide is implemented as an internal domain-specific
      language (DSL) in C++.
    :wikipedia_url: https://en.wikipedia.org/wiki/Halide_(programming_language)
  record/57554465-e57c-4540-8c97-79f9d12609b3:
    :name: XQuery
    :description: XQuery is a query and functional programming language that queries
      and transforms collections of structured and unstructured data, usually in the
      form of XML, text and with vendor-specific extensions for other data formats.
      The language is developed by the XML Query working group of the W3C. The work
      is closely coordinated with the development of XSLT by the XSL Working Group;
      the two groups share responsibility for XPath, which is a subset of XQuery.
    :wikipedia_url: https://en.wikipedia.org/wiki/XQuery
  record/c5fe3e83-fa96-4f3d-a2c6-0ce6a1521422:
    :name: PROMAL
    :description: PROMAL is a structured programming language from Systems Management
      Associates for MS-DOS, Commodore 64, and Apple II. PROMAL features simple syntax,
      no line numbers, long variable names, functions and procedures with argument
      passing, real number type, arrays, strings, pointer, and a built-in I/O library.
      Like ABC and Python, indentation is part of the language syntax.
    :wikipedia_url: https://en.wikipedia.org/wiki/PROMAL
  record/d3963ed0-4173-4498-a5b2-c4900eeb3401:
    :name: A Sharp
    :description: A# is a port of the Ada programming language to the Microsoft .NET
      platform. A# is freely distributed by the Department of Computer Science at
      the United States Air Force Academy as a service to the Ada community under
      the terms of the GNU General Public License.
    :wikipedia_url: https://en.wikipedia.org/wiki/A_Sharp_(.NET)
  record/27be90ce-228e-4688-953e-4fef3d6d6a58:
    :name: AdvPL
    :description: "AdvPL is a proprietary programming language based on xBase. It
      was released in 1999 and is used for development of applications in the \nERP
      Protheus made by TOTVS."
    :wikipedia_url: https://en.wikipedia.org/wiki/AdvPL
  record/8415c4c7-0cae-43f6-b9a9-b3fa3693ad4f:
    :name: Self
    :description: 'Self is an object-oriented programming language based on the concept
      of prototypes. Self began as a dialect of Smalltalk, being dynamically typed
      and using just-in-time compilation (JIT) as well as the prototype-based approach
      to objects: it was first used as an experimental test system for language design
      in the 1980s and 1990s. In 2006, Self was still being developed as part of the
      Klein project, which was a Self virtual machine written fully in Self. The latest
      version is 2017.1 released in May 2017.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Self_(programming_language)
  record/7c64130a-2928-4b43-910b-7fcc6f5e42c3:
    :name: ABAP
    :description: ABAP is a high-level programming language created by the German
      software company SAP SE. It is extracted from the base computing languages Java,
      C, C++ and Python. It is currently positioned, alongside Java, as the language
      for programming the SAP NetWeaver Application Server, which is part of the SAP
      NetWeaver platform for building business applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/ABAP
  record/327b51d2-9cc0-4fa4-8f03-a2177b770d7d:
    :name: Smalltalk
    :description: Smalltalk is an object-oriented, dynamically typed reflective programming
      language. Smalltalk was created as the language underpinning the "new world"
      of computing exemplified by "human–computer symbiosis". It was designed and
      created in part for educational use, specifically for constructionist learning,
      at the Learning Research Group (LRG) of Xerox PARC by Alan Kay, Dan Ingalls,
      Adele Goldberg, Ted Kaehler, Diana Merry, Scott Wallace, and others during the
      1970s.
    :wikipedia_url: https://en.wikipedia.org/wiki/Smalltalk
  record/1248a916-132e-431e-a282-ced6cf02a492:
    :name: Machine code
    :description: In computer programming, machine code, consisting of machine language
      instructions, is a low-level programming language used to directly control a
      computer's central processing unit (CPU). Each instruction causes the CPU to
      perform a very specific task, such as a load, a store, a jump, or an arithmetic
      logic unit (ALU) operation on one or more units of data in the CPU's registers
      or memory.
    :wikipedia_url: https://en.wikipedia.org/wiki/Machine_code
  record/d78897a9-c48e-43eb-9d1d-11552b062f16:
    :name: UNITY
    :description: 'UNITY is a programming language constructed by K. Mani Chandy and
      Jayadev Misra for their book Parallel Program Design: A Foundation. It is a
      theoretical language which focuses on what, instead of where, when or how. The
      language contains no method of flow control, and program statements run in a
      nondeterministic way until statements cease to cause changes during execution.
      This allows for programs to run indefinitely, such as auto-pilot or power plant
      safety systems, as well as programs that would normally terminate.'
    :wikipedia_url: https://en.wikipedia.org/wiki/UNITY_(programming_language)
  record/987657d3-3c96-444a-9dfa-af49908bd7a6:
    :name: Microsoft Macro Assembler
    :description: 'The Microsoft Macro Assembler (MASM) is an x86 assembler that uses
      the Intel syntax for MS-DOS and Microsoft Windows. Beginning with MASM 8.0,
      there are two versions of the assembler: One for 16-bit & 32-bit assembly sources,
      and another (ML64) for 64-bit sources only.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler
  record/baf320f6-2967-4169-9b90-7bd06f67bf25:
    :name: C
    :description: C is a general-purpose, procedural computer programming language
      supporting structured programming, lexical variable scope, and recursion, with
      a static type system. By design, C provides constructs that map efficiently
      to typical machine instructions. It has found lasting use in applications previously
      coded in assembly language. Such applications include operating systems and
      various application software for computer architectures that range from supercomputers
      to PLCs and embedded systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/C_(programming_language)
  record/688ef8ef-9d00-4165-b7a0-df6ba26e7c38:
    :name: M2001
    :description: M2001 is a modular educational mathematical programming language
      for developing and presenting mathematical algorithms, from the modern discrete
      to the classical continuous mathematics. M2001 is built on a semantic framework
      that is based in category theory and has a syntax similar to that of Pascal
      or Modula-2.
    :wikipedia_url: https://en.wikipedia.org/wiki/M2001
  record/599ab5d4-7e5c-409d-aebc-a952ffd58bb1:
    :name: SETL
    :description: SETL is a very high-level programming language based on the mathematical
      theory of sets. It was originally developed by (Jack) Jacob T. Schwartz at the
      New York University (NYU) Courant Institute of Mathematical Sciences in the
      late 1960s.
    :wikipedia_url: https://en.wikipedia.org/wiki/SETL
  record/b2376765-e516-4dbe-8ad9-ca3239f1eb55:
    :name: Grasshopper 3D
    :description: Grasshopper is a visual programming language and environment that
      runs within the Rhinoceros 3D computer-aided design (CAD) application. The program
      was created by David Rutten at Robert McNeel & Associates. Programs are created
      by dragging components onto a canvas. The outputs to these components are then
      connected to the inputs of subsequent components.
    :wikipedia_url: https://en.wikipedia.org/wiki/Grasshopper_3D
  record/20940712-e18e-4438-a741-a310dca1fdfe:
    :name: Golo
    :description: Golo is computer software, a programming language for the Java virtual
      machine (JVM). It is simple, with dynamic, weak typing. It was created in 2012
      as part of the research activities of the DynaMid group of the Centre of Innovation
      in Telecommunications and Integration of service (CITI) Laboratory at Institut
      national des sciences appliquées de Lyon (INSA). It is distributed as free and
      open-source software under the Eclipse Public License 2.0.
    :wikipedia_url: https://en.wikipedia.org/wiki/Golo_(programming_language)
  record/eb7fe74d-e69a-487b-a046-fa8e5dca71e6:
    :name: KRL
    :description: "KRL is a knowledge representation language, developed by Daniel
      G. Bobrow and Terry Winograd while at Xerox PARC and Stanford University, respectively.
      It is a frame-based language.\nKRL was an attempt to produce a language which
      was nice to read and write for the engineers who had to write programs in it,
      processed like human memory, so you could have realistic AI programs, had an
      underlying semantics which was firmly grounded like logic languages, all in
      one, all in one language. And I think it - again, in hindsight - it just bogged
      down under the weight of trying to satisfy all those things at once. \n\n"
    :wikipedia_url: https://en.wikipedia.org/wiki/KRL_(programming_language)
  record/b48efcdc-ac83-42bc-890a-a71a30a55752:
    :name: Google Apps Script
    :description: Apps Script is a scripting platform developed by Google for light-weight
      application development in the Google Workspace platform. Google Apps Script
      was initially developed by Mike Harm as a side project whilst working as a developer
      on Google Sheets. Google Apps Script was first publicly announced in May 2009
      when a beta testing program was announced by Jonathan Rochelle, then Product
      Manager, Google Docs. In August 2009 Google Apps Script was subsequently made
      available to all Google Apps Premier and Education Edition customers. It is
      based on JavaScript 1.6, but also includes some portions of 1.7 and 1.8 and
      a subset of the ECMAScript 5 API. Apps Script projects run server-side on Google's
      infrastructure. According to Google, Apps Script "provides easy ways to automate
      tasks across Google products and third party services." Apps Script is also
      the tool that powers the add-ons for Google Docs, Sheets and Slides.
    :wikipedia_url: https://en.wikipedia.org/wiki/Google_Apps_Script
  record/467f74b4-07f5-48ce-a39b-fe378496bda9:
    :name: Constraint Handling Rules
    :description: Constraint Handling Rules (CHR) is a declarative, rule-based language,
      introduced in 1991 by Thom Frühwirth at the time with ECRC in Munich, Germany.
      Originally intended for constraint programming, CHR finds applications in grammar
      induction, abductive reasoning, multi-agent systems, natural language processing,
      compilation, scheduling, spatial-temporal reasoning, testing and verification,
      and type systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Constraint_Handling_Rules
  record/333a08b4-3c23-49ce-b1b6-35e75a292bde:
    :name: rc
    :description: rc is the command line interpreter for Version 10 Unix and Plan
      9 from Bell Labs operating systems. It resembles the Bourne shell, but its syntax
      is somewhat simpler. It was created by Tom Duff, who is better known for an
      unusual C programming language construct.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rc
  record/c80f4d2d-9ef4-40ce-9bec-427b2199cde3:
    :name: xBase
    :description: xBase is the generic term for all programming languages that derive
      from the original dBASE (Ashton-Tate) programming language and database formats.
      These are sometimes informally known as dBASE "clones". While there was a non-commercial
      predecessor to the Ashton-Tate product, most clones are based on Ashton-Tate's
      1986 dBASE III+ release — scripts written in the dBASE III+ dialect are most
      likely to run on all the clones.
    :wikipedia_url: https://en.wikipedia.org/wiki/XBase
  record/eb821885-28cb-4e1c-b64e-1c85ad75d3ba:
    :name: CESIL
    :description: |-
      Cesil, or Computer Education in Schools Instruction Language, was a programming language designed to introduce pupils in British schools to Assembly language. It is a low level language containing a total of fourteen instructions:Load value - place the immediate value or the contents of the variable named in the accumulator.
      Store variable - place the contents of the accumulator in the variable.
      Jump label - transfer control to location labelled.
      Jineg label - transfer control to location labelled if the accumulator contains a negative value.
      Jizero label - transfer control to location labelled if the accumulator contains zero.
      Print literal - output the following string, delimited by single quotes.
      Line - output a carriage return
      In - allow user to input a numerical value from the console.
      Out - Output the contents of the accumulator as a decimal integer, signed if negative.
      Add value - add the variable or immediate integer value to the accumulator.
      Subtract value - subtract the variable or immediate integer from the accumulator.
      Multiply value - place the product of the accumulator and the variable or immediate integer in the accumulator.
      Divide value - place the contents of the accumulator divided by the value in the accumulator.
      Halt - return control to console.
    :wikipedia_url: https://en.wikipedia.org/wiki/CESIL
  record/4368aba2-4a8d-4a0a-9eb8-8e66a8183269:
    :name: MPD
    :description: Multithreaded, Parallel, and Distributed Programming (MPD) is a
      concurrent programming language whose syntax is derived from the one used in
      the book Foundations of Multithreaded, Parallel, and Distributed Programming.
      The name lists the distinguishing features of the language, namely that it supports
      all three of these concurrent programming techniques.
    :wikipedia_url: https://en.wikipedia.org/wiki/MPD_(programming_language)
  record/f4ddaca0-8c6c-4420-8e3e-e05acdd81a21:
    :name: MHEG-5
    :description: MHEG-5, or ISO/IEC 13522-5, is part of a set of international standards
      relating to the presentation of multimedia information, standardised by the
      Multimedia and Hypermedia Experts Group (MHEG). It is most commonly used as
      a language to describe interactive television services.
    :wikipedia_url: https://en.wikipedia.org/wiki/MHEG-5
  record/3a5cc0c7-3528-46d1-8c65-1cf64eea5bd8:
    :name: SNOBOL
    :description: SNOBOL is a series of programming languages developed between 1962
      and 1967 at AT&T Bell Laboratories by David J. Farber, Ralph E. Griswold and
      Ivan P. Polonsky, culminating in SNOBOL4. It was one of a number of text-string-oriented
      languages developed during the 1950s and 1960s; others included COMIT and TRAC.
    :wikipedia_url: https://en.wikipedia.org/wiki/SNOBOL
  record/88ecbf32-7cb2-4291-988a-1543cfe55f08:
    :name: Transact-SQL
    :description: Transact-SQL (T-SQL) is Microsoft's and Sybase's proprietary extension
      to the SQL used to interact with relational databases. T-SQL expands on the
      SQL standard to include procedural programming, local variables, various support
      functions for string processing, date processing, mathematics, etc. and changes
      to the DELETE and UPDATE statements.
    :wikipedia_url: https://en.wikipedia.org/wiki/Transact-SQL
  record/07caef75-3a7b-4148-b4df-752cbb833682:
    :name: Boo
    :description: Boo is an object-oriented, statically typed, general-purpose programming
      language that seeks to make use of the Common Language Infrastructure's support
      for Unicode, internationalization, and web applications, while using a Python-inspired
      syntax and a special focus on language and compiler extensibility. Some features
      of note include type inference, generators, multimethods, optional duck typing,
      macros, true closures, currying, and first-class functions.
    :wikipedia_url: https://en.wikipedia.org/wiki/Boo_(programming_language)
  record/807cd6ab-f994-47d0-b98d-54bc510cbcef:
    :name: CMS-2
    :description: CMS-2 is an embedded systems programming language used by the United
      States Navy. It was an early attempt to develop a standardized high-level computer
      programming language intended to improve code portability and reusability. CMS-2
      was developed primarily for the US Navy’s tactical data systems (NTDS).
    :wikipedia_url: https://en.wikipedia.org/wiki/CMS-2
  record/a0e8ef8a-77c2-4bfb-be10-82359194402f:
    :name: Kaleidoscope
    :description: The Kaleidoscope programming language is a constraint programming
      language embedding constraints into an imperative object-oriented language.
      It adds keywords always, once, and assert..during to make statements about relational
      invariants. Objects have constraint constructors, which are not methods, to
      enforce the meanings of user-defined datatypes.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)
  record/8cbe8b9d-5f65-4595-9496-a56338f5a2e7:
    :name: POV-Ray
    :description: The Persistence of Vision Ray Tracer, most commonly acronymed as
      POV-Ray, is a cross-platform ray-tracing program that generates images from
      a text-based scene description. It was originally based on DKBTrace, written
      by David Kirk Buck and Aaron A. Collins for Amiga computers. There are also
      influences from the earlier Polyray raytracer because of contributions from
      its author, Alexander Enzmann. POV-Ray is free and open-source software, with
      the source code available under the AGPLv3.
    :wikipedia_url: https://en.wikipedia.org/wiki/POV-Ray
  record/107bf086-3ec3-4301-b508-526d14103a39:
    :name: Snowball
    :description: Snowball is a small string processing programming language designed
      for creating stemming algorithms for use in information retrieval.
    :wikipedia_url: https://en.wikipedia.org/wiki/Snowball_(programming_language)
  record/edc426be-4c4e-49ea-8202-0cb2d18a1d91:
    :name: EusLisp Robot Programming Language
    :description: EusLisp is a Lisp-based programming system. Built on the basis of
      object orientation, it is designed specifically for developing robotics software.
      The first version of it ran in 1986 on Unix-System5/Ustation-E20.
    :wikipedia_url: https://en.wikipedia.org/wiki/EusLisp_Robot_Programming_Language
  record/63e26835-1611-4db0-8e9a-024ff7024e75:
    :name: Pascal
    :description: Pascal is an imperative and procedural programming language, designed
      by Niklaus Wirth as a small, efficient language intended to encourage good programming
      practices using structured programming and data structuring. It is named in
      honour of the French mathematician, philosopher and physicist Blaise Pascal.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pascal_(programming_language)
  record/2bc7cc8c-3a1e-46f4-98f9-60958cf28cf6:
    :name: Godot
    :description: Godot is a 2D and 3D, cross-platform, free and open-source game
      engine released under the MIT license. It was initially developed by Juan Linietsky
      and Ariel Manzur for several companies in Latin America prior to its public
      release. The development environment runs on multiple operating systems including
      Linux, macOS, and Microsoft Windows. Godot can create games targeting PC, mobile,
      and web platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/Godot_(game_engine)
  record/263d4078-d92a-4c0b-8d49-713d425932b8:
    :name: Oxygene
    :description: Oxygene is a programming language developed by RemObjects Software
      for Microsoft's Common Language Infrastructure, the Java Platform and Cocoa.
      Oxygene based on Delphi's Object Pascal, but also has influences from C#, Eiffel,
      Java, F# and other languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/Oxygene_(programming_language)
  record/130fb96e-fe5b-409b-944a-ab751599d18d:
    :name: Lustre
    :description: Lustre is a formally defined, declarative, and synchronous dataflow
      programming language for programming reactive systems. It began as a research
      project in the early 1980s. A formal presentation of the language can be found
      in the 1991 Proceedings of the IEEE. In 1993 it progressed to practical, industrial
      use in a commercial product as the core language of the industrial environment
      SCADE, developed by Esterel Technologies. It is now used for critical control
      software in aircraft, helicopters, and nuclear power plants.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lustre_(programming_language)
  record/7a5f5120-0def-4d91-9753-60d6716ed65c:
    :name: SQR
    :description: SQR is a programming language designed for generating reports from
      database management system management systems. The name is an abbreviation of
      Structured Query Reporter, which suggests its relationship to SQL. Any SQL statement
      can be embedded in an SQR program.
    :wikipedia_url: https://en.wikipedia.org/wiki/SQR
  record/55e23a5b-734b-4d54-92b8-d6740c08ae77:
    :name: ALGOL 68
    :description: ALGOL 68 is an imperative programming language that was conceived
      as a successor to the ALGOL 60 programming language, designed with the goal
      of a much wider scope of application and more rigorously defined syntax and
      semantics.
    :wikipedia_url: https://en.wikipedia.org/wiki/ALGOL_68
  record/755222af-a132-44d2-b41b-dabd37625493:
    :name: P
    :description: P is a programming language for asynchronous event-driven programming
      and the IoT that was developed by Microsoft and University of California, Berkeley.
    :wikipedia_url: https://en.wikipedia.org/wiki/P_(programming_language)
  record/d12132b2-8111-44c9-bc9e-382ec201bbfb:
    :name: BLISS
    :description: BLISS is a system programming language developed at Carnegie Mellon
      University by W. A. Wulf, D. B. Russell, and A. N. Habermann around 1970. It
      was perhaps the best known systems programming language right up until C made
      its debut a few years later. Since then, C took off and BLISS faded into obscurity.
      When C was in its infancy, a few projects within Bell Labs were debating the
      merits of BLISS vs. C.
    :wikipedia_url: https://en.wikipedia.org/wiki/BLISS
  record/3b4b9d9c-d2f1-49ec-a407-f12918e40c09:
    :name: newLISP
    :description: newLISP is a scripting language which is a dialect of the Lisp family
      of programming languages. It was designed and developed by Lutz Mueller. newLISP
      is free and open-source software released under the GNU General Public License,
      version 3 or later.
    :wikipedia_url: https://en.wikipedia.org/wiki/NewLISP
  record/ae8f71bb-32ae-419d-b8a0-ffcb4eb7838a:
    :name: Programming Computable Functions
    :description: In computer science, Programming Computable Functions' (PCF) is
      a typed functional language introduced by Gordon Plotkin in 1977, based on previous
      unpublished material by Dana Scott. It can be considered to be an extended version
      of the typed lambda calculus or a simplified version of modern typed functional
      languages such as ML or Haskell.
    :wikipedia_url: https://en.wikipedia.org/wiki/Programming_Computable_Functions
  record/ce4f2d57-92ef-4b25-b822-2d4ee87e837b:
    :name: Ada
    :description: Ada is a structured, statically typed, imperative, and object-oriented
      high-level programming language, extended from Pascal and other languages. It
      has built-in language support for design by contract (DbC), extremely strong
      typing, explicit concurrency, tasks, synchronous message passing, protected
      objects, and non-determinism. Ada improves code safety and maintainability by
      using the compiler to find errors in favor of runtime errors. Ada is an international
      technical standard, jointly defined by the International Organization for Standardization
      (ISO), and the International Electrotechnical Commission (IEC). As of 2020,
      the standard, called Ada 2012 informally, is ISO/IEC 8652:2012.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ada_(programming_language)
  record/8e9b1367-048f-4b3a-81bb-cfa31a0dcb22:
    :name: Oriel
    :description: Oriel is a scripting language released with the Power Tools series
      of instructional books written by the LeBlond Group. Described in its documentation
      as a "graphics-based batch language", it was originally designed for Microsoft
      Windows 3.0 and released with the book Windows 3 Power Tools in 1991. However,
      versions of the language were also bundled with Windows 3.1 Power Tools in 1992
      and Windows NT Power Tools in 1994.
    :wikipedia_url: https://en.wikipedia.org/wiki/Oriel_(scripting_language)
  record/5bbb5863-f8ca-4968-a8e4-d3a3852911f1:
    :name: Source
    :description: Source is a family of sublanguages of JavaScript, developed for
      the textbook Structure and Interpretation of Computer Programs, JavaScript Adaptation.
      The JavaScript sublanguages Source §1, Source §2, Source §3 and Source §4 are
      designed to be just powerful enough to support all examples of the respective
      chapter of the textbook.
    :wikipedia_url: https://en.wikipedia.org/wiki/Source_(programming_language)
  record/1a873083-6806-4955-9ea0-ee559a28207b:
    :name: Little Implementation Language
    :description: LIL, the Little Implementation Language, was a system programming
      language during the early days of Unix history on PDP-11 machines. It was written
      by P. J. Plauger of Bell Labs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Little_Implementation_Language
  record/a57fd870-f3cf-4b47-8b59-47b4c9203d5d:
    :name: SR
    :description: SR is a programming language designed for concurrent programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/SR_(programming_language)
  record/2f8147a9-5541-4047-9319-eccb93cb6972:
    :name: Obliq
    :description: |-
      Obliq is an interpreted, object-oriented programming language designed to make distributed, and locally multithreaded, computing simpler and easier to program, while providing program safety and an implicit type system. The interpreter is written in Modula-3, and provides Obliq with full access to Modula-3's network objects abilities. A type inference algorithm for record concatenation, subtyping, and recursive types has been developed for Obliq. Further, it has been proved to be NP-complete
      and its lowest complexity to be Ο(n3) or if under other modeling up to certain conditions down to Ο(n2) and its best known implementation runs in Ο(n5).
      Obliq's syntax is very similar to Modula-3, the biggest difference being that Obliq has no need of explicit typed variables although explicit type declarations are allowed and ignored by the interpreter. The basic data types in the language include booleans, integers, reals, characters, strings, and arrays. Obliq supports the usual set of sequential control structures, and special control forms for concurrency. Further, Obliq's objects can be cloned and safely copied remotely by any machine in a distributed network object and it can be done safely and transparently.
    :wikipedia_url: https://en.wikipedia.org/wiki/Obliq
  record/fd47740c-7b63-4468-8789-33dc6680bf8d:
    :name: Rational Synergy
    :description: Rational Synergy is a software tool that provides software configuration
      management (SCM) capabilities for all artifacts related to software development
      including source code, documents and images as well as the final built software
      executable and libraries. Rational Synergy also provides the repository for
      the change management tool known as Rational Change. Together these two tools
      form an integrated configuration management and change management environment
      that is used in software development organizations that need controlled SCM
      processes and an understanding of what is in a build of their software.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rational_Synergy
  record/29e0c999-de70-4a1c-b28f-a581ab43329c:
    :name: Visual Objects
    :description: Visual Objects is an object-oriented computer programming language
      that is used to create computer programs that operate primarily under Windows.
      Although it can be used as a general-purpose programming tool, it is almost
      exclusively used to create database programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Visual_Objects
  record/10327fe3-1f07-4712-8efb-93b721e61fdf:
    :name: Uniface
    :description: Uniface is a low-code development and deployment platform for enterprise
      applications that can run in a large range of runtime environments, including
      mobile, mainframe, web, Service-oriented architecture (SOA), Windows, Java EE
      and .NET. Uniface is a model-driven, Rapid Application Development (RAD) environment
      used to create mission-critical applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Uniface_(programming_language)
  record/30dcf59b-b112-4410-be8e-0231838d2de1:
    :name: ChucK
    :description: |-
      ChucK is a concurrent, strongly timed audio programming language for real-time synthesis, composition, and performance,
      which runs on Linux, Mac OS X, Microsoft Windows, and iOS. It is designed to favor readability and flexibility for the programmer over other considerations such as raw performance. It natively supports deterministic concurrency and multiple, simultaneous, dynamic control rates. Another key feature is the ability to live code; adding, removing, and modifying code on the fly, while the program is running, without stopping or restarting. It has a highly precise timing/concurrency model, allowing for arbitrarily fine granularity. It offers composers and researchers a powerful and flexible programming tool for building and experimenting with complex audio synthesis programs, and real-time interactive control.
    :wikipedia_url: https://en.wikipedia.org/wiki/ChucK
  record/257b6546-a988-4022-bc57-0c9fc37d38a4:
    :name: TTCN
    :description: |-
      TTCN is a programming language used for testing of communication protocols and web services. A TTCN test suite consists of many test cases written in the TTCN programming language.
      Until version 2 the language was written in tables and called Tree and Tabular Combined Notation. Reading and editing this language required special TTCN editors. Beginning with version 3 TTCN was renamed to Testing and Test Control Notation. It is now closer to current programming languages and can be edited with traditional editors. TTCN-3 is more flexible than TTCN-2 in that it can be used for protocol testing as well as testing traditional software.
    :wikipedia_url: https://en.wikipedia.org/wiki/TTCN
  record/7f172c4d-8c96-4d2c-9cb9-0445a58bdb20:
    :name: Z notation
    :description: The Z notation is a formal specification language used for describing
      and modelling computing systems. It is targeted at the clear specification of
      computer programs and computer-based systems in general.
    :wikipedia_url: https://en.wikipedia.org/wiki/Z_notation
  record/9e39a1ec-fa57-4f81-b719-65742f928c1d:
    :name: Argus
    :description: Argus is a programming language created at MIT by Barbara Liskov
      between 1982 and 1988, in collaboration with Maurice Herlihy, Paul Johnson,
      Robert Scheifler, and William Weihl. It is an extension of the CLU language,
      and utilizes most of the same syntax and semantics. Argus was designed to support
      the creation of distributed programs, by encapsulating related procedures within
      objects called guardians, and by supporting atomic operations called actions.
    :wikipedia_url: https://en.wikipedia.org/wiki/Argus_(programming_language)
  record/48d4f10b-b46b-4b25-9bec-9cce7da066d7:
    :name: occam
    :description: occam is a programming language which is concurrent and builds on
      the communicating sequential processes (CSP) process algebra, and shares many
      of its features. It is named after philosopher William of Ockham after whom
      Occam's razor is named.
    :wikipedia_url: https://en.wikipedia.org/wiki/Occam_(programming_language)
  record/aab58a7e-07a1-4a06-b523-26f273906ac9:
    :name: Secure Operations Language
    :description: "The Secure Operations Language (SOL) was developed jointly by the
      United States Naval Research Laboratory and Utah State University in the United
      States. SOL is a domain-specific synchronous programming language for developing
      distributed applications and is based on software engineering principles developed
      in the Software Cost Reduction project at the Naval Research Laboratory in the
      late 1970s and early 1980s. SOL is intended to be a domain-specific language
      for developing service-based systems. Concurrently, a domain-specific extension
      of Java (SOLj) is being developed \nApplication domains include sensor networks,
      defense and space systems, healthcare delivery, power control, etc."
    :wikipedia_url: https://en.wikipedia.org/wiki/Secure_Operations_Language
  record/b172285b-fb4c-4d3d-a085-6b50dada96d2:
    :name: Ladder logic
    :description: Ladder logic was originally a written method to document the design
      and construction of relay racks as used in manufacturing and process control.
      Each device in the relay rack would be represented by a symbol on the ladder
      diagram with connections between those devices shown. In addition, other items
      external to the relay rack such as pumps, heaters, and so forth would also be
      shown on the ladder diagram.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ladder_logic
  record/b24680b9-9bd2-45da-b982-8facb960d277:
    :name: Rlab
    :description: Rlab is an interactive, interpreted numerical computation program
      and its core programming language, written by Ian Searle. Rlab is very high
      level and is intended to provide fast prototyping and program development, as
      well as easy data-visualization, and processing.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rlab
  record/6a0e499c-4c98-43ff-9545-749704f6c8cd:
    :name: dBase
    :description: dBase was one of the first database management systems for microcomputers,
      and the most successful in its day. The dBase system includes the core database
      engine, a query system, a forms engine, and a programming language that ties
      all of these components together. dBase's underlying file format, the .dbf file,
      is widely used in applications needing a simple format to store structured data.
    :wikipedia_url: https://en.wikipedia.org/wiki/DBase
  record/fb6fbbaa-71c6-44bc-9a4b-cb8adfa2b0c0:
    :name: Fantom
    :description: Fantom is a general purpose object-oriented programming language
      created by Brian and Andy Frank that runs on the Java Runtime Environment (JRE),
      JavaScript, and the .NET Common Language Runtime (CLR). Its primary design goal
      is to provide a standard library API that abstracts away the question of whether
      the code will ultimately run on the JRE or CLR. Like C# and Java, Fantom uses
      a curly brace syntax. The language supports functional programming through closures
      and concurrency through the Actor model. Fantom takes a "middle of the road"
      approach to its type system, blending together aspects of both static and dynamic
      typing.
    :wikipedia_url: https://en.wikipedia.org/wiki/Fantom_(programming_language)
  record/a6b729cd-4d0d-47c8-9576-ac199b979717:
    :name: Forth
    :description: Forth is an imperative stack-based computer programming language
      and environment originally designed by Chuck Moore. Language features include
      structured programming, reflection, concatenative programming and extensibility.
      Although not an acronym, the language's name is sometimes spelled with all capital
      letters as FORTH, following the customary usage during its earlier years.
    :wikipedia_url: https://en.wikipedia.org/wiki/Forth_(programming_language)
  record/d05ab598-a9c8-43ac-b458-3a2a8a6b6755:
    :name: Zig
    :description: |-
      Zig is an imperative, general-purpose, statically typed, compiled system programming language designed by Andrew Kelley. The language is designed for "robustness, optimality and maintainability"

      , supporting compile-time generics and reflection, cross-compilation and manual memory management. A major goal of the language is to compete with C, while also taking inspiration from Rust, among others.
    :wikipedia_url: https://en.wikipedia.org/wiki/Zig_(programming_language)
  record/9dc37007-9cb9-424b-9dd2-779c92d12672:
    :name: Orc
    :description: Orc is a concurrent, nondeterministic computer programming language
      created by Jayadev Misra at the University of Texas at Austin.
    :wikipedia_url: https://en.wikipedia.org/wiki/Orc_(programming_language)
  record/7b47d2aa-534d-43c1-b6f6-368b506d51e0:
    :name: Cecil
    :description: Cecil is a pure object-oriented programming language that was developed
      by Craig Chambers at the University of Washington in 1992 to be part of the
      Vortex project there. Cecil has many similarities to other object-oriented languages,
      most notably Objective-C, Modula-3, and Self. The main goals of the project
      were extensibility, orthogonality, efficiency, and ease-of-use.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cecil_(programming_language)
  record/029e1fc0-fc89-4acd-ae54-ca22202bbdf7:
    :name: JavaScript
    :description: JavaScript, often abbreviated as JS, is a programming language that
      conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time
      compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based
      object-orientation, and first-class functions.
    :wikipedia_url: https://en.wikipedia.org/wiki/JavaScript
  record/f522c2dc-d106-4f15-96b6-256490411821:
    :name: SAS
    :description: SAS is a statistical software suite developed by SAS Institute for
      data management, advanced analytics, multivariate analysis, business intelligence,
      criminal investigation, and predictive analytics.
    :wikipedia_url: https://en.wikipedia.org/wiki/SAS_(software)
  record/1e04f38f-a82c-442a-b010-b3a7d4439c8b:
    :name: Clarion
    :description: Clarion is a commercial, proprietary, fourth-generation programming
      language (4GL), multi-paradigm, programming language and integrated development
      environment (IDE) from SoftVelocity used to program database applications. It
      is compatible with indexed sequential access method (ISAM), Structured Query
      Language (SQL), and ActiveX Data Objects (ADO) data access methods, reads and
      writes several flat file desktop database formats including ASCII, comma-separated
      values (CSV), DOS (binary), FoxPro, Clipper, dBase, and some relational databases
      via ODBC, Microsoft SQL Server, Sybase SQL Anywhere, and Oracle Database through
      the use of accelerated native database drivers, and XML, Clarion can be used
      to output to HTML, XML, plain text, and Portable Document Format (PDF), among
      others.
    :wikipedia_url: https://en.wikipedia.org/wiki/Clarion_(programming_language)
  record/c7c2ce02-82d9-4179-862a-8b1ab4637243:
    :name: Hopscotch
    :description: Hopscotch is a visual programming language developed by Hopscotch
      Technologies, designed to allow young or beginner programmers to develop simple
      projects. Its simple UI allows its users to drag and drop blocks to create scripts
      that can be played when activated. Although the language is easy to use for
      simple programming, it lacks the power to be used for more complex programs.
      The use of the language is through an iPad or iPhone supporting Hopscotch.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hopscotch_(programming_language)
  record/8fa9c2e1-d40b-4e6f-b2e9-911b6f1e4186:
    :name: JEAN
    :description: JEAN was a dialect of the JOSS programming language developed for
      and used on ICT 1900 series computers in the late 1960s and early 1970s; it
      was implemented under the MINIMOP operating system. It was used at the University
      of Southampton.
    :wikipedia_url: https://en.wikipedia.org/wiki/JEAN
  record/f5b81e2e-37b7-4f28-89e0-0604ff8792c7:
    :name: LSE
    :description: LSE is a programming language developed at Supélec and Télémécanique
      from the late 1960s to the mid 1970s.It is similar to BASIC, except with French-language
      instead of English-language keywords. It was derived from an earlier language
      called LSD, also developed at Supélec. It is most commonly said to be an acronym
      for Langage Symbolique d'Enseignement, but other expansions are also known.
    :wikipedia_url: https://en.wikipedia.org/wiki/LSE_(programming_language)
  record/c56c7171-0675-49fb-8b6d-0d22fabefcc2:
    :name: Transaction Application Language
    :description: Transaction Application Language or TAL is a block-structured, procedural
      language optimized for use on Tandem hardware. TAL resembles a cross between
      C and Pascal. It was the original system programming language for the Tandem
      CISC machines, which had no assembler.
    :wikipedia_url: https://en.wikipedia.org/wiki/Transaction_Application_Language
  record/167eba0a-e1b0-4faf-956c-7fd3be8bc0fb:
    :name: Blockly
    :description: Blockly is a client-side library for the programming language JavaScript
      for creating block-based visual programming languages (VPLs) and editors. It
      is a project of Google and is free and open-source software released under the
      Apache License 2.0. It typically runs in a web browser, and visually resembles
      the language Scratch. Blockly is also being implemented for the mobile operating
      systems Android and iOS, though not all web browser based features are available
      for these.
    :wikipedia_url: https://en.wikipedia.org/wiki/Blockly
  record/b35025bc-4db1-40cc-acbb-e3979093f392:
    :name: SA-C
    :description: Single Assignment C (SA-C) is a member of the C programming language
      family designed to be directly and intuitively translatable into circuits, including
      FPGAs. To ease translation, SA-C does not include pointers and arithmetics thereon.
      To retain most of the expressiveness of C, SA-C instead features true n-dimensional
      arrays as first-class objects of the language.
    :wikipedia_url: https://en.wikipedia.org/wiki/SA-C_(programming_language)
  record/22ac94c0-7a5f-4ead-ad07-25010a4dc6c7:
    :name: Pict
    :description: Pict is a statically typed programming language, one of the very
      few based on the π-calculus. Work on the language began at the University of
      Edinburgh in 1992, and development has been more or less dormant since 1998.
      The language is still at an experimental stage.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pict_(programming_language)
  record/b5a297d8-1c82-439c-9f09-b865a4bd0d9d:
    :name: Modelica
    :description: |-
      Modelica is an object-oriented, declarative, multi-domain modeling language for component-oriented modeling of complex systems, e.g., systems containing mechanical, electrical, electronic, hydraulic, thermal, control, electric power or process-oriented subcomponents.
      The free Modelica language
      is developed by the non-profit Modelica Association. The Modelica Association also develops the free Modelica Standard Library that contains about 1400 generic model components and 1200 functions in various domains, as of version 4.0.0.
    :wikipedia_url: https://en.wikipedia.org/wiki/Modelica
  record/ecb7fe9c-89d3-4f34-9260-061685b3a158:
    :name: Component Pascal
    :description: Component Pascal is a programming language in the tradition of Niklaus
      Wirth's Pascal, Modula-2, Oberon and Oberon-2. It bears the name of the Pascal
      programming language and it preserves its heritage, but it is not compatible
      with Pascal. Instead, it is a minor variant and refinement of Oberon-2 with
      a more expressive type system and built-in string support. Component Pascal
      was originally designed and supported by a small ETH Zürich spin-off company
      called Oberon microsystems under the name Oberon/L. They developed an IDE called
      BlackBox Component Builder. Since 2014 development and support has been taken
      over by a small group of volunteers. At the time the first version of the IDE
      was released it presented a novel approach to graphical user interface (GUI)
      construction based on editable forms, where fields and command buttons are linked
      to exported variables and executable procedures. This approach bears some similarity
      to the code-behind way used in Microsoft's .NET 3.0 to access code in XAML,
      which was released in 2008.
    :wikipedia_url: https://en.wikipedia.org/wiki/Component_Pascal
  record/2160643a-70a3-4645-9535-4e8d0c361558:
    :name: Ballerina
    :description: Ballerina is an open source general-purpose programming language
      and platform designed by WSO2 for cloud-era application programmers. It is easy
      to write and modify and is suitable for application programmers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ballerina_(programming_language)
  record/315e3d3c-2e96-4007-9403-1c5d319a2d59:
    :name: Dylan
    :description: Dylan is a multi-paradigm programming language that includes support
      for functional and object-oriented programming (OOP), and is dynamic and reflective
      while providing a programming model designed to support generating efficient
      machine code, including fine-grained control over dynamic and static behaviors.
      It was created in the early 1990s by a group led by Apple Computer.
    :wikipedia_url: https://en.wikipedia.org/wiki/Dylan_(programming_language)
  record/6877c425-df97-4fc0-bd5b-3bf71b6eae88:
    :name: Alice
    :description: Alice ML is a programming language designed by the Programming Systems
      Laboratory at Saarland University, Saarbrücken, Germany. It is a dialect of
      Standard ML, augmented with support for lazy evaluation, concurrency and constraint
      programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Alice_(programming_language)
  record/8fd3b6ac-6754-4a71-b463-aa611248684a:
    :name: Pure Data
    :description: Pure Data (Pd) is a visual programming language developed by Miller
      Puckette in the 1990s for creating interactive computer music and multimedia
      works. While Puckette is the main author of the program, Pd is an open-source
      project with a large developer base working on new extensions. It is released
      under a license similar to the BSD license. It runs on GNU/Linux, Mac OS X,
      iOS, Android and Windows. Ports exist for FreeBSD and IRIX.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pure_Data
  record/293f07b0-45e9-44ff-8b96-9306e350fc7f:
    :name: Euler
    :description: |-
      Euler is a programming language created by Niklaus Wirth and Helmut Weber, conceived as an extension and generalization of ALGOL 60. The designers' goal was to create a language:which was simpler, and yet more flexible, than ALGOL 60
      that was a useful programming language processed with reasonable efficiency
      that can be defined with rigorous formality
    :wikipedia_url: https://en.wikipedia.org/wiki/Euler_(programming_language)
  record/72f884b8-f404-47f9-8674-8feb5036e31c:
    :name: PostScript
    :description: PostScript (PS) is a page description language in the electronic
      publishing and desktop publishing business. It is a dynamically typed, concatenative
      programming language. It was created at Adobe Systems by John Warnock, Charles
      Geschke, Doug Brotz, Ed Taft and Bill Paxton from 1982 to 1984.
    :wikipedia_url: https://en.wikipedia.org/wiki/PostScript
  record/3138bca6-f336-410b-82bb-2816c24e0593:
    :name: TXL
    :description: TXL is a special-purpose programming language originally designed
      by Charles Halpern-Hamu and James Cordy at the University of Toronto in 1985.
      The acronym "TXL" originally stood for "Turing eXtender Language" after the
      language's original purpose, the specification and rapid prototyping of variants
      and extensions of the Turing programming language, but no longer has any meaningful
      interpretation.
    :wikipedia_url: https://en.wikipedia.org/wiki/TXL_(programming_language)
  record/2b98fd55-0b11-45da-bc00-b201533470fc:
    :name: Datalog
    :description: Datalog is a declarative logic programming language that syntactically
      is a subset of Prolog. It is often used as a query language for deductive databases.
      In recent years, Datalog has found new application in data integration, information
      extraction, networking, program analysis, security, cloud computing and machine
      learning.
    :wikipedia_url: https://en.wikipedia.org/wiki/Datalog
  record/b9f1e381-244e-486f-bba0-6820212e2245:
    :name: T
    :description: The programming language T is a dialect of the language Scheme developed
      in the early 1980s by Jonathan A. Rees, Kent M. Pitman, and Norman I. Adams
      of Yale University as an experiment in language design and implementation.
    :wikipedia_url: https://en.wikipedia.org/wiki/T_(programming_language)
  record/587251c7-1937-42ff-b7e8-5a5487adab95:
    :name: Umple
    :description: |-
      Umple is a language for both object-oriented programming and modelling with class diagrams and state diagrams.
      The name Umple is a portmanteau of "UML", "ample" and "Simple", indicating that it is designed to provide ample features to extend programming languages with UML capabilities.
    :wikipedia_url: https://en.wikipedia.org/wiki/Umple
  record/0a930b94-ad61-4184-9932-52268d08daf3:
    :name: ALGOL W
    :description: ALGOL W is a programming language. It is based on a proposal for
      ALGOL X by Niklaus Wirth and Tony Hoare as a successor to ALGOL 60 in International
      Federation for Information Processing (IFIP) IFIP Working Group 2.1 on Algorithmic
      Languages and Calculi, which specified, maintains, and supports the languages
      ALGOL 60 and ALGOL 68. When the committee decided that the proposal was an insufficient
      advance over ALGOL 60, the proposal was published as A contribution to the development
      of ALGOL. After making small modifications to the language Wirth supervised
      a high quality implementation for the IBM System/360 at Stanford University
      that was widely distributed.
    :wikipedia_url: https://en.wikipedia.org/wiki/ALGOL_W
  record/94b35d0d-f02c-45fb-b871-500a5650f038:
    :name: PeopleCode
    :description: PeopleCode is a proprietary object-oriented programming language
      used to express business logic for PeopleSoft applications. Syntactically, PeopleCode
      is similar to other programming languages, and can be found in both loosely-typed
      and strongly-typed forms. PeopleCode and its run-time environment is part of
      the larger PeopleTools framework. PeopleCode has evolved over time and its implementation
      through the PeopleSoft applications lack consistency. PeopleCode offers some
      interoperability with the Java programming language. Definition name references,
      for example, enable you to refer to PeopleTools definitions, such as record
      definitions or pages, without using hard-coded string literals. Other language
      features, such as PeopleCode data types and metastrings, reflect the close interaction
      of PeopleTools and Structured Query Language (SQL). Dot notation, classes and
      methods in PeopleCode are similar to other object oriented languages, like Java.
      Object syntax was an important feature of PeopleTools 8.
    :wikipedia_url: https://en.wikipedia.org/wiki/PeopleCode
  record/6142ab98-a892-473a-9c91-67e39041a3e1:
    :name: CLIST
    :description: CLIST  is a procedural programming language for TSO in MVS systems.
      It originated in OS/360 Release 20 and has assumed a secondary role since the
      availability of Rexx in TSO/E Version 2. The term CLIST is also used for command
      lists written by users of NetView.
    :wikipedia_url: https://en.wikipedia.org/wiki/CLIST
  record/5ec9233f-2495-40f2-a5c1-0ea1ce0b2c04:
    :name: Agda
    :description: Agda is a dependently typed functional programming language originally
      developed by Ulf Norell at Chalmers University of Technology with implementation
      described in his PhD thesis. The original Agda system was developed at Chalmers
      by Catarina Coquand in 1999. The current version, originally known as Agda 2,
      is a full rewrite, which should be considered a new language that shares a name
      and tradition.
    :wikipedia_url: https://en.wikipedia.org/wiki/Agda_(programming_language)
  record/08343501-dfb0-4243-9b52-19d3aa50b61d:
    :name: VHDL
    :description: VHDL is a hardware description language used in electronic design
      automation to describe digital and mixed-signal systems such as field-programmable
      gate arrays and integrated circuits. VHDL can also be used as a general-purpose
      parallel programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/VHDL
  record/b9dad4fa-36d8-4267-a550-2aec97e1af5a:
    :name: Tensilica Instruction Extension
    :description: Tensilica Instruction Extension refers to the proprietary language
      that is used to customize Tensilica's Xtensa processor core architecture.
    :wikipedia_url: https://en.wikipedia.org/wiki/Tensilica_Instruction_Extension
  record/0f9c0f5a-c648-4a6e-95d1-5818be18a55d:
    :name: PowerShell
    :description: PowerShell is a task automation and configuration management framework
      from Microsoft, consisting of a command-line shell and the associated scripting
      language. Initially a Windows component only, known as Windows PowerShell, it
      was made open-source and cross-platform on 18 August 2016 with the introduction
      of PowerShell Core. The former is built on the .NET Framework, the latter on
      .NET Core.
    :wikipedia_url: https://en.wikipedia.org/wiki/PowerShell
  record/3d5060ed-73d8-43b6-b1c8-159456c3598b:
    :name: Wolfram Language
    :description: The Wolfram Language is a general multi-paradigm computational language
      developed by Wolfram Research. It emphasizes symbolic computation, functional
      programming, and rule-based programming and can employ arbitrary structures
      and data. It is the programming language of the mathematical symbolic computation
      program Mathematica.
    :wikipedia_url: https://en.wikipedia.org/wiki/Wolfram_Language
  record/f2e4c97c-50b1-4b9b-92d9-f698939f4094:
    :name: Kotlin
    :description: Kotlin is a cross-platform, statically typed, general-purpose programming
      language with type inference. Kotlin is designed to interoperate fully with
      Java, and the JVM version of Kotlin's standard library depends on the Java Class
      Library, but type inference allows its syntax to be more concise. Kotlin mainly
      targets the JVM, but also compiles to JavaScript or native code, e.g. for native
      iOS apps sharing business logic with Android apps. Language development costs
      are borne by JetBrains, while the Kotlin Foundation protects the Kotlin trademark.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kotlin_(programming_language)
  record/fc2e9040-993e-4a0f-bf23-25dbbf6a069d:
    :name: Turing
    :description: Turing is a Pascal-like programming language developed in 1982 by
      Ric Holt and James Cordy, then of University of Toronto, in Toronto, Ontario,
      Canada. Turing is a descendant of Euclid, Pascal and SP/k that features a clean
      syntax and precise machine-independent semantics.
    :wikipedia_url: https://en.wikipedia.org/wiki/Turing_(programming_language)
  record/5f195442-9d40-4dd8-9bac-069cdfdbc7db:
    :name: Speedcoding
    :description: Speedcoding or Speedcode was the first high-level programming language
      created for an IBM computer. The language was developed by John Backus in 1953
      for the IBM 701 to support computation with floating point numbers. Here high
      level means symbolic and aiming for natural language expressivity as a goal
      as opposed to machine or hardware instruction oriented coding.
    :wikipedia_url: https://en.wikipedia.org/wiki/Speedcoding
  record/e290f11c-d96a-422c-8bac-5b1a6cd030e4:
    :name: Scratch
    :description: Scratch is a block-based visual programming language and website
      targeted primarily at children 8-16 to help learn code. Users of the site can
      create projects on the web using a block-like interface. The service is developed
      by the MIT Media Lab, has been translated into 70+ languages, and is used in
      most parts of the world. Scratch is taught and used in after-school centers,
      schools, and colleges, as well as other public knowledge institutions. As of
      September 2020, community statistics on the language's official website show
      more than 59 million projects shared by over 58 million users, and almost 36
      million monthly website visits.
    :wikipedia_url: https://en.wikipedia.org/wiki/Scratch_(programming_language)
  record/27bb0698-98db-4fc4-89a8-2ee2e72df7c4:
    :name: COMPASS
    :description: COMPASS, COMPrehensive ASSembler, is any of a family of macro assembly
      languages on Control Data Corporation's 3000 series, and on the 60-bit CDC 6000
      series, 7600 and Cyber 70 and 170 series mainframe computers. While the architectures
      are very different, the macro and conditional assembly facilities are similar.
    :wikipedia_url: https://en.wikipedia.org/wiki/COMPASS
  record/f1f2683d-a264-4eac-ae1d-cf3066a3f3e9:
    :name: Ratfor
    :description: Ratfor is a programming language implemented as a preprocessor for
      Fortran 66. It provides modern control structures, unavailable in Fortran 66,
      to replace GOTOs and statement numbers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ratfor
  record/3574220c-e39a-46ac-a076-2809acfff2d9:
    :name: JavaFX Script
    :description: JavaFX Script was a scripting language designed by Sun Microsystems,
      forming part of the JavaFX family of technologies on the Java Platform.
    :wikipedia_url: https://en.wikipedia.org/wiki/JavaFX_Script
  record/b6984a74-d2d8-4e86-9a94-31639fa32d0a:
    :name: Programming Language for Business
    :description: Programming Language for Business or PL/B is a business-oriented
      programming language originally called DATABUS and designed by Datapoint in
      1972 as an alternative to COBOL because Datapoint's 8-bit computers could not
      fit COBOL into their limited memory, and because COBOL did not at the time have
      facilities to deal with Datapoint's built-in keyboard and screen.
    :wikipedia_url: https://en.wikipedia.org/wiki/Programming_Language_for_Business
  record/19e4726f-ac28-4150-b7ba-266f09811fc9:
    :name: Ease
    :description: Ease is a general purpose parallel programming language. It is designed
      by Steven Ericsson-Zenith, a researcher at Yale University, the Institute for
      Advanced Science & Engineering in Silicon Valley, California, the Ecole Nationale
      Supérieure des Mines de Paris, and the Pierre and Marie Curie University, the
      science department of the Sorbonne.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ease_(programming_language)
  record/f58ca805-ed75-46a5-b73e-8b2363241277:
    :name: LINC 4GL
    :description: |2-

      LINC is a fourth-generation programming language, used mostly on Unisys computer systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/LINC_4GL
  record/f9d4dd07-1ee7-49f8-948b-2cce2e5abc7d:
    :name: ML
    :description: ML is a general-purpose functional programming language. ML is statically-scoped.
      It is known for its use of the polymorphic Hindley–Milner type system, which
      automatically assigns the types of most expressions without requiring explicit
      type annotations, and ensures type safety – there is a formal proof that a well-typed
      ML program does not cause runtime type errors. ML provides pattern matching
      for function arguments, garbage collection, imperative programming, call-by-value
      and currying. It is used heavily in programming language research and is one
      of the few languages to be completely specified and verified using formal semantics.
      Its types and pattern matching make it well-suited and commonly used to operate
      on other formal languages, such as in compiler writing, automated theorem proving,
      and formal verification.
    :wikipedia_url: https://en.wikipedia.org/wiki/ML_(programming_language)
  record/c0bab294-ea09-4afb-8fc7-15145664f59c:
    :name: "<i>Warcraft III World Editor</i>"
    :description: |-
      The Warcraft III World Editor is the built-in level editor for the real-time strategy game Warcraft III: Reign of Chaos and its expansion set Warcraft III: The Frozen Throne. Incorporating the core mechanics of the level editor of Blizzard Entertainment's previous strategy game StarCraft, it allows users to create and customize their own maps with a high level of detail and flexibility. The editor has been used in creating several popular custom maps, including Defense of the Ancients. The level editor was substantially improved for The Frozen Throne and allowed users to create cut scenes supporting voice-overs.
      Advanced features of the editor allow for custom models, tilesets and icons. The editor also supports Blizzard's JASS scripting language for programming complex actions otherwise not supported by the graphical interface.
    :wikipedia_url: https://en.wikipedia.org/wiki/Warcraft_III_World_Editor
  record/bc24fb9f-6c07-4ae7-95cd-a701eb71540e:
    :name: PL/M
    :description: "The PL/M programming language \n(an acronym of Programming Language
      for Microcomputers)\nis a high-level language conceived and developed by \nGary
      Kildall in 1973 for Hank Smith at Intel for its microprocessors."
    :wikipedia_url: https://en.wikipedia.org/wiki/PL%2FM
  record/b470e81a-3518-43b1-841b-2d99032d5cd3:
    :name: Crystal
    :description: "Crystal is a general-purpose, object-oriented programming language,
      designed and developed by Ary Borenszweig, Juan Wajnerman, Brian Cardiff and
      more than 300 contributors. With syntax inspired by the language Ruby, it is
      a compiled language with static type-checking, but specifying the types of variables
      or method arguments is generally unneeded. Types are resolved by an advanced
      global type inference algorithm. Crystal \nis currently in active development.
      It is released as free and open-source software under the Apache License version
      2.0."
    :wikipedia_url: https://en.wikipedia.org/wiki/Crystal_(programming_language)
  record/d0530096-3cb4-439a-9efa-da294816b77c:
    :name: CFEngine
    :description: CFEngine is an open-source configuration management system, written
      by Mark Burgess. Its primary function is to provide automated configuration
      and maintenance of large-scale computer systems, including the unified management
      of servers, desktops, consumer and industrial devices, embedded networked devices,
      mobile smartphones, and tablet computers.
    :wikipedia_url: https://en.wikipedia.org/wiki/CFEngine
  record/a853a8e5-9d92-4918-b069-6e5bac392674:
    :name: Draco
    :description: Draco was a shareware programming language created by Chris Gray.
      First developed for CP/M systems, Amiga version followed in 1987.
    :wikipedia_url: https://en.wikipedia.org/wiki/Draco_(programming_language)
  record/3290cb2d-7d9d-4b88-986d-6d0b117f7bb5:
    :name: DataFlex
    :description: DataFlex is an object-oriented high-level programming language and
      a fourth generation visual tool 4GL for developing Windows, web and mobile software
      applications on one framework-based platform. It was introduced and developed
      by Data Access Corporation beginning in 1982.
    :wikipedia_url: https://en.wikipedia.org/wiki/DataFlex
  record/9dc29eea-e335-441c-83ac-2525736fbe2d:
    :name: F Sharp
    :description: F# is a functional-first, general purpose, strongly typed, multi-paradigm
      programming language that encompasses functional, imperative, and object-oriented
      programming methods. F# is most often used as a cross-platform Common Language
      Infrastructure (CLI) language on .NET Core, but it can also generate JavaScript
      and graphics processing unit (GPU) code.
    :wikipedia_url: https://en.wikipedia.org/wiki/F_Sharp_(programming_language)
  record/b13730a0-4fba-4961-9f56-48d05666f09d:
    :name: Zeno
    :description: Zeno is an imperative procedural programming language designed to
      be easy to learn and user friendly. Zeno is generic in the sense that it contains
      most of the essential elements used in other languages to develop real applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Zeno_(programming_language)
  record/cf26a583-24a5-4701-a128-d7ed26a98d4b:
    :name: Sather
    :description: For people with the surname, see Sather (surname).
    :wikipedia_url: https://en.wikipedia.org/wiki/Sather
  record/dbdb7e82-2510-489c-ae8f-ced2a56f8bb3:
    :name: Fortress
    :description: Fortress is a discontinued experimental programming language for
      high-performance computing, created by Sun Microsystems with funding from DARPA's
      High Productivity Computing Systems project. One of the language designers was
      Guy L. Steele Jr., whose previous work includes Scheme, Common Lisp, and Java.
    :wikipedia_url: https://en.wikipedia.org/wiki/Fortress_(programming_language)
  record/e960c0ef-c018-490d-b70b-29f75ca36825:
    :name: "<i>Core War</i>"
    :description: Core War is a 1984 programming game created by D. G. Jones and A.
      K. Dewdney in which two or more battle programs compete for control of a virtual
      computer. These battle programs are written in an abstract assembly language
      called Redcode.
    :wikipedia_url: https://en.wikipedia.org/wiki/Core_War
  record/06517edf-b01d-421f-a2f5-23d9036dfa3a:
    :name: Alef
    :description: Alef is a discontinued concurrent programming language, designed
      as part of the Plan 9 operating system by Phil Winterbottom of Bell Labs. It
      implemented the channel-based concurrency model of Newsqueak in a compiled,
      C-like language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Alef_(programming_language)
  record/9029e5b8-8c59-4bb1-a1ca-af8d72428519:
    :name: Jess
    :description: Jess is a rule engine for the Java platform that was developed by
      Ernest Friedman-Hill of Sandia National Labs. It is a superset of the CLIPS
      programming language. It was first written in late 1995. The language provides
      rule-based programming for the automation of an expert system, and is frequently
      termed as an expert system shell. In recent years, intelligent agent systems
      have also developed, which depend on a similar capability.
    :wikipedia_url: https://en.wikipedia.org/wiki/Jess_(programming_language)
  record/c874ff80-ba2f-4bf2-aeb7-31a35024688e:
    :name: Xtend
    :description: Xtend is a general-purpose high-level programming language for the
      Java Virtual Machine. Syntactically and semantically Xtend has its roots in
      the Java programming language but focuses on a more concise syntax and some
      additional functionality such as type inference, extension methods, and operator
      overloading. Being primarily an object-oriented language, it also integrates
      features known from functional programming, e.g. lambda expressions. Xtend is
      statically typed and uses Java's type system without modifications. It is compiled
      to Java code and thereby seamlessly integrates with all existing Java libraries.
    :wikipedia_url: https://en.wikipedia.org/wiki/Xtend
  record/8b92bf7e-c288-40b1-bbb3-812c412da634:
    :name: Ratfiv
    :description: Ratfiv is an enhanced version of the Ratfor programming language,
      a preprocessor for Fortran designed to give it C-like capabilities. Fortran
      was widely used for scientific programming but had very basic control-flow primitives
      and no "macro" facility which limited its expressiveness.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ratfiv
  record/720ef5f3-eb92-45c1-8b16-a6fefb1d89e6:
    :name: Swift
    :description: Swift is an implicitly parallel programming language that allows
      writing scripts that distribute program execution across distributed computing
      resources, including clusters, clouds, grids, and supercomputers. Swift implementations
      are open-source software under the Apache License, version 2.0.
    :wikipedia_url: https://en.wikipedia.org/wiki/Swift_(parallel_scripting_language)
  record/ee831f80-317c-411f-b6fe-96964474bb2e:
    :name: JScript
    :description: JScript is Microsoft's dialect of the ECMAScript standard that is
      used in Microsoft's Internet Explorer.
    :wikipedia_url: https://en.wikipedia.org/wiki/JScript
  record/d4b306ea-ab28-4446-9636-229615d6b6e6:
    :name: MuPAD
    :description: MuPAD is a computer algebra system (CAS). Originally developed by
      the MuPAD research group at the University of Paderborn, Germany, development
      was taken over by the company SciFace Software GmbH & Co. KG in cooperation
      with the MuPAD research group and partners from some other universities starting
      in 1997. MuPAD's graphics package was particularly successful, especially considering
      the era when it was developed.
    :wikipedia_url: https://en.wikipedia.org/wiki/MuPAD
  record/b7dda9e1-9096-46c7-8f57-62e6b2f1e638:
    :name: ProvideX
    :description: ProvideX is a computer language and development environment derived
      from Business Basic in the mid-1980s.
    :wikipedia_url: https://en.wikipedia.org/wiki/ProvideX
  record/29b8a5ac-5bed-4e04-8a64-74bfcebf443e:
    :name: BeanShell
    :description: BeanShell is a Java-like scripting language, invented by Patrick
      Niemeyer. It runs in the Java Runtime Environment (JRE) and uses a variation
      of the Java syntax, in addition to scripting commands and syntax.
    :wikipedia_url: https://en.wikipedia.org/wiki/BeanShell
  record/daf1025b-39e9-4ab5-809b-2e03a06be863:
    :name: Idris
    :description: Idris is a purely-functional programming language with dependent
      types, optional lazy evaluation, and features such as a totality checker. Idris
      may be used as a proof assistant, but it is designed to be a general-purpose
      programming language similar to Haskell.
    :wikipedia_url: https://en.wikipedia.org/wiki/Idris_(programming_language)
  record/55e8a7db-5daf-4fca-bc67-2c7bcca999a0:
    :name: C shell
    :description: The C shell is a Unix shell created by Bill Joy while he was a graduate
      student at University of California, Berkeley in the late 1970s. It has been
      widely distributed, beginning with the 2BSD release of the Berkeley Software
      Distribution (BSD) which Joy first distributed in 1978. Other early contributors
      to the ideas or the code were Michael Ubell, Eric Allman, Mike O'Brien and Jim
      Kulp.
    :wikipedia_url: https://en.wikipedia.org/wiki/C_shell
  record/06f42801-6ec4-44be-b2d6-14cdac5f642b:
    :name: GNU Guile
    :description: GNU Ubiquitous Intelligent Language for Extensions is the preferred
      extension language system for the GNU Project and features an implementation
      of the programming language Scheme. Its first version was released in 1993.
      In addition to large parts of Scheme standards, Guile Scheme includes modularized
      extensions for many different programming tasks.
    :wikipedia_url: https://en.wikipedia.org/wiki/GNU_Guile
  record/acd3f54c-fd87-4fbd-b902-678d4ea264b9:
    :name: Miranda
    :description: Miranda is a lazy, purely functional programming language designed
      by David Turner as a successor to his earlier programming languages SASL and
      KRC, using some concepts from ML and Hope. It was produced by Research Software
      Ltd. of England and was the first purely functional language to be commercially
      supported.
    :wikipedia_url: https://en.wikipedia.org/wiki/Miranda_(programming_language)
  record/80c5c994-ed19-4b09-9260-b20135a8bf28:
    :name: Krypton
    :description: Krypton is a frame-based computer programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Krypton_(programming_language)
  record/58855bc9-ec77-4301-a716-4ca8892702c8:
    :name: OpenEdge Advanced Business Language
    :description: OpenEdge Advanced Business Language, or OpenEdge ABL for short,
      is a business application development language created and maintained by Progress
      Software Corporation (PSC). The language, typically classified as a fourth-generation
      programming language, uses an English-like syntax to simplify software development.
      The language was called PROGRESS or Progress 4GL up until version 9, but in
      2006 PSC changed the name to OpenEdge Advanced Business Language in order to
      overcome a presumed industry perception that 4GLs were less capable than other
      languages. A subset of the language, called SpeedScript, is used in the development
      of web applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language
  record/a41a7f72-779d-4911-837f-b9e511f8e484:
    :name: Computer Sciences Corporation
    :description: Computer Sciences Corporation (CSC) was an American multinational
      corporation that provided information technology (IT) services and professional
      services. On April 3, 2017, it merged with the Enterprise Services line of business
      of HP Enterprise to create DXC Technology.
    :wikipedia_url: https://en.wikipedia.org/wiki/Computer_Sciences_Corporation
  record/2a0f8bdb-6a6e-46d5-944f-7419979c237d:
    :name: Verilog
    :description: Verilog, standardized as IEEE 1364, is a hardware description language
      (HDL) used to model electronic systems. It is most commonly used in the design
      and verification of digital circuits at the register-transfer level of abstraction.
      It is also used in the verification of analog circuits and mixed-signal circuits,
      as well as in the design of genetic circuits. In 2009, the Verilog standard
      was merged into the SystemVerilog standard, creating IEEE Standard 1800-2009.
      Since then, Verilog is officially part of the SystemVerilog language. The current
      version is IEEE standard 1800-2017.
    :wikipedia_url: https://en.wikipedia.org/wiki/Verilog
  record/5a623018-f853-4765-a4d4-acd6ae6d59f9:
    :name: Csound
    :description: Csound is a Domain-specific computer programming language for audio
      programming. It is called Csound because it is written in C, as opposed to some
      of its predecessors.
    :wikipedia_url: https://en.wikipedia.org/wiki/Csound
  record/54d5fa50-a62d-480a-9636-14b6b46730f1:
    :name: Coq
    :description: Coq is an interactive theorem prover first released in 1989. It
      allows for the expression of mathematical assertions, mechanically checks proofs
      of these assertions, helps to find formal proofs, and extracts a certified program
      from the constructive proof of its formal specification. Coq works within the
      theory of the calculus of inductive constructions, a derivative of the calculus
      of constructions. Coq is not an automated theorem prover but includes automatic
      theorem proving tactics (procedures) and various decision procedures.
    :wikipedia_url: https://en.wikipedia.org/wiki/Coq
  record/baed40b8-5c99-417c-86f1-5973e098745e:
    :name: Cypher
    :description: Cypher is a declarative graph query language that allows for expressive
      and efficient data querying in a property graph.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cypher_(query_language)
  record/5d0a2c42-009e-45cc-b71a-2a22157bc360:
    :name: Objective-C
    :description: Objective-C is a general-purpose, object-oriented programming language
      that adds Smalltalk-style messaging to the C programming language. It was the
      main programming language supported by Apple for macOS, iOS, and their respective
      application programming interfaces (APIs), Cocoa and Cocoa Touch, until the
      introduction of Swift in 2014.
    :wikipedia_url: https://en.wikipedia.org/wiki/Objective-C
  record/7a425201-b2ec-4d18-9f45-5f9f0edf53d0:
    :name: YAML
    :description: YAML is a human-readable data-serialization language. It is commonly
      used for configuration files and in applications where data is being stored
      or transmitted. YAML targets many of the same communications applications as
      Extensible Markup Language (XML) but has a minimal syntax which intentionally
      differs from SGML. It uses both Python-style indentation to indicate nesting,
      and a more compact format that uses [...] for lists and {...} for maps making
      YAML 1.2 a superset of JSON.
    :wikipedia_url: https://en.wikipedia.org/wiki/YAML
  record/c42f7735-53dd-4648-b451-544d51a17781:
    :name: Lua
    :description: Lua is a lightweight, high-level, multi-paradigm programming language
      designed primarily for embedded use in applications. Lua is cross-platform,
      since the interpreter of compiled bytecode is written in ANSI C, and Lua has
      a relatively simple C API to embed it into applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lua_(programming_language)
  record/2e331bb5-4b80-4645-b8b3-70aa582a2cf8:
    :name: Project Verona
    :description: Project Verona is an experimental research programming language
      developed by Microsoft and aimed at dealing with memory situations to make other
      programming languages safer.
    :wikipedia_url: https://en.wikipedia.org/wiki/Project_Verona
  record/3434e05e-0db3-4ae2-bc61-e2d0a4255f20:
    :name: System programming language
    :description: A system programming language is a programming language used for
      system programming; such languages are designed for writing system software,
      which usually requires different development approaches when compared with application
      software. Edsger Dijkstra refers to these language as Machine Oriented High
      Order Languages, or mohol.
    :wikipedia_url: https://en.wikipedia.org/wiki/System_programming_language
  record/5e25697f-d760-4d29-a8cc-776b22a9e2d2:
    :name: Magik
    :description: Magik is an object-oriented programming language that supports multiple
      inheritance and polymorphism, and it is dynamically typed. It was designed and
      implemented in 1989 by Arthur Chance of Smallworld Systems Ltd. as part of Smallworld
      Geographical Information System (GIS). Following Smallworld's acquisition in
      2000, Magik is now provided by GE Energy, still as part of its Smallworld technology
      platform.
    :wikipedia_url: https://en.wikipedia.org/wiki/Magik_(programming_language)
  record/321a7009-f5dd-4be0-b72c-33df88a4767e:
    :name: PL360
    :description: PL360 is a system programming language designed by Niklaus Wirth
      and written by Niklaus Wirth, Joseph W. Wells, Jr., and Edwin Satterthwaite,
      Jr. for the IBM System/360 computer at Stanford University. A description of
      PL360 was published in early 1968, although the implementation was probably
      completed before Wirth left Stanford in 1967.
    :wikipedia_url: https://en.wikipedia.org/wiki/PL360
  record/3cf19821-212a-4df0-8cc3-7de84090d64d:
    :name: PHP
    :description: 'PHP is a general-purpose scripting language especially suited to
      web development. It was originally created by Danish-Canadian programmer Rasmus
      Lerdorf in 1994. The PHP reference implementation is now produced by The PHP
      Group. PHP originally stood for Personal Home Page, but it now stands for the
      recursive initialism PHP: Hypertext Preprocessor.'
    :wikipedia_url: https://en.wikipedia.org/wiki/PHP
  record/42ec3aac-30fa-43ad-a6e9-c827dd0bbc1c:
    :name: C*
    :description: C* is an object-oriented, data-parallel superset of ANSI C with
      synchronous semantics.
    :wikipedia_url: https://en.wikipedia.org/wiki/C*
  record/76c33ef9-439a-470b-a79c-3575eeec67e6:
    :name: Nix package manager
    :description: Nix is a cross-platform package manager that utilizes a purely functional
      deployment model where software is installed into unique directories generated
      through cryptographic hashes, it is also the name of the programming language.
      A package's hash takes into account the dependencies, which is claimed to eliminate
      dependency hell. This package management model advertises more reliable, reproducible,
      and portable packages.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nix_package_manager
  record/deb7b40d-8fff-4efb-b4bb-c8315ccb0f78:
    :name: Formula language
    :description: |
      The Formula language is a scripting language used by Lotus Notes.
      It is often referred to as @Formula language because many language elements start with the @-character. Here is an example of a selection formula:SELECT @NoteId = "NT0050D26"
    :wikipedia_url: https://en.wikipedia.org/wiki/Formula_language
  record/45100b38-6be7-4ad7-badb-94d0c4c1af37:
    :name: Language Integrated Query
    :description: Language Integrated Query is a Microsoft .NET Framework component
      that adds native data querying capabilities to .NET languages, originally released
      as a major part of .NET Framework 3.5 in 2007.
    :wikipedia_url: https://en.wikipedia.org/wiki/Language_Integrated_Query
  record/be01bcc8-a0d0-4a8d-ba37-bd4daf198201:
    :name: Lingo
    :description: Lingo is a verbose object-oriented (OO) scripting language developed
      by John H. Thompson for use in Adobe Director. Lingo is used to develop desktop
      application software, interactive kiosks, CD-ROMs and Adobe Shockwave content.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lingo_(programming_language)
  record/cd2d5c1c-32df-4a46-bace-b32cf95d979c:
    :name: R++
    :description: R++ is a rule-based programming language based on C++. The United
      States patent describes R++ as follows:The R++ extension permits rules to be
      defined as members of C++ classes. The programming system of the invention takes
      the classes with rules defined using R++ and generates C++ code from them in
      which the machinery required for the rules is implemented completely as C++
      data members and functions of the classes involved in the rules.
    :wikipedia_url: https://en.wikipedia.org/wiki/R%2B%2B
  record/fefd86ed-1ed7-46d2-b6c5-be99142cb7d8:
    :name: PEARL
    :description: PEARL, or Process and experiment automation realtime language, is
      a computer programming language designed for multitasking and real-time programming.
      Being a high-level language, it is fairly cross-platform. Since 1977, the language
      has been going under several standardization steps by the Deutsches Institut
      für Normung. The current version is PEARL-90, which was standardized in 1998
      as DIN 66253-2.
    :wikipedia_url: https://en.wikipedia.org/wiki/PEARL_(programming_language)
  record/edc8f9cd-c9fe-457d-91b2-9d04b47e1c9b:
    :name: Babbage
    :description: Babbage is the high level assembly language for the GEC 4000 series
      minicomputers. It was named after Charles Babbage, an English computing pioneer.
    :wikipedia_url: https://en.wikipedia.org/wiki/Babbage_(programming_language)
  record/442d4dc7-f7c3-4ec6-baa4-b6accf0c9831:
    :name: Ch
    :description: Ch is a proprietary cross-platform C and C++ interpreter and scripting
      language environment, originally designed by Harry H. Cheng as a scripting language
      for beginners to learn mathematics, computing, numerical analysis, and programming
      in C/C++. Ch is now developed and marketed by SoftIntegration, Inc. A student
      edition is freely available. Ch Professional Edition for Raspberry Pi is free
      for non-commercial use.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ch_(computer_programming)
  record/f453e2d3-8048-4ca5-a31f-f4a692c5b97d:
    :name: Klerer–May System
    :description: The Klerer–May System is a programming language developed in the
      mid-1960s, oriented to numerical scientific programming, whose most notable
      feature is its two-dimensional syntax based on traditional mathematical notation.
    :wikipedia_url: https://en.wikipedia.org/wiki/Klerer%E2%80%93May_System
  record/c0714dca-d7c9-4cbb-bfc5-d2fff3c56dca:
    :name: CobolScript
    :description: 'CobolScript is a programming language created by Matthew Dean and
      Charles Schereda of Deskware in 1999. The language was intended to provide web-enabled
      COBOL, and was targeted at businesses using legacy software written in that
      language.

      '
    :wikipedia_url: https://en.wikipedia.org/wiki/CobolScript
  record/5815117d-cb4a-471a-9561-7883bbe3526b:
    :name: M Sharp
    :description: M# is a code generation tool and a domain-specific language that
      can be used to create websites and web applications. It can translate entities
      and page definitions to ASP.NET Web Forms and MVC and C# code which in turn
      form the user interface and business logic layer of the application. Its main
      goals are to reduce time of development, increase code quality, and reduce human
      errors.
    :wikipedia_url: https://en.wikipedia.org/wiki/M_Sharp
  record/1cb499c3-848a-4524-aaab-386ff52e1b33:
    :name: ZOPL
    :description: ZOPL is a programming language created by Geac Computer Corporation
      in the early 1970s for use on their mainframe computer systems used in libraries
      and banking institutions. It had similarities to C and Pascal.
    :wikipedia_url: https://en.wikipedia.org/wiki/ZOPL
  record/94a57430-4172-4acf-b3b4-7834aee01133:
    :name: Data analysis expressions
    :description: Data Analysis Expressions (DAX) is the native formula and query
      language for Microsoft PowerPivot, Power BI Desktop and SQL Server Analysis
      Services (SSAS) Tabular models. DAX includes some of the functions that are
      used in Excel formulas with additional functions that are designed to work with
      relational data and perform dynamic aggregation. It is, in part, an evolution
      of the Multidimensional Expression (MDX) language developed by Microsoft for
      Analysis Services multidimensional models combined with Excel formula functions.
      It is designed to be simple and easy to learn, while exposing the power and
      flexibility of PowerPivot and SSAS tabular models.
    :wikipedia_url: https://en.wikipedia.org/wiki/Data_analysis_expressions
  record/c7c08ad0-5854-4fea-a3fc-6a9eb8f232d0:
    :name: XSB
    :description: XSB is the name of a dialect of the Prolog programming language
      and its implementation developed at Stony Brook University in collaboration
      with the Katholieke Universiteit Leuven, the New University of Lisbon, Uppsala
      University and software vendor XSB, Inc.
    :wikipedia_url: https://en.wikipedia.org/wiki/XSB
  record/ac2109d3-a73d-4f09-bd07-55e4f248a598:
    :name: Icon
    :description: Icon is a very high-level programming language featuring goal-directed
      execution and many facilities for managing strings and textual patterns. It
      is related to SNOBOL and SL5, string processing languages. Icon is not object-oriented,
      but an object-oriented extension called Idol was developed in 1996 which eventually
      became Unicon.
    :wikipedia_url: https://en.wikipedia.org/wiki/Icon_(programming_language)
  record/5959bed1-4a0f-4e47-b3e2-ae7690d0e722:
    :name: POP-2
    :description: 'POP-2 is a programming language developed around 1970 from the
      earlier language POP-1 by Robin Popplestone and Rod Burstall at the University
      of Edinburgh. It drew roots from many sources: the languages LISP and ALGOL
      60, and theoretical ideas from Peter J. Landin. It used an incremental compiler,
      which gave it some of the flexibility of an interpreted language, including
      allowing new function definitions at run time and modification of function definitions
      while a program was running, without the overhead of an interpreted language.'
    :wikipedia_url: https://en.wikipedia.org/wiki/POP-2
  record/1e985087-971e-4217-8e50-dba69c46b6a6:
    :name: xHarbour
    :description: xHarbour is a free multi-platform extended Clipper compiler, offering
      multiple graphic terminals (GTs), including console drivers, GUIs, and hybrid
      console/GUIs. xHarbour is backward-compatible with Clipper and supports many
      language syntax extensions, greatly extended run-time libraries, and extensive
      third party support.
    :wikipedia_url: https://en.wikipedia.org/wiki/XHarbour
  record/fcc7a687-b3a0-4de6-83c2-a68ad9de5fb7:
    :name: Maude system
    :description: The Maude system is an implementation of rewriting logic developed
      at SRI International. It is similar in its general approach to Joseph Goguen's
      OBJ3 implementation of equational logic, but based on rewriting logic rather
      than order-sorted equational logic, and with a heavy emphasis on powerful metaprogramming
      based on reflection.
    :wikipedia_url: https://en.wikipedia.org/wiki/Maude_system
  record/f7db9dcb-7897-4c0e-8411-a72995718c5b:
    :name: IntelliCorp
    :description: IntelliCorp (IC) sold its assets including LiveCompare, LiveModel
      and LiveInterface to Tricentis in May 2019.
    :wikipedia_url: https://en.wikipedia.org/wiki/IntelliCorp_(software)
  record/46fe8ea6-9064-40ce-bd7e-0038078de4c0:
    :name: Qalb
    :description: 'قلب, transliterated Qalb, Qlb and Alb, is a functional programming
      language allowing a programmer to write programs completely in Arabic. Its name
      means heart and is a recursive acronym in Arabic meaning Qlb: a programming
      language. It was developed in 2012 by Ramsey Nasser, a computer scientist at
      the Eyebeam Art + Technology Center in New York City, as both an artistic endeavor
      and as a response to the Anglophone bias in the vast majority of programming
      languages, which express their fundamental concepts using English words.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Qalb_(programming_language)
  record/068289f8-e9de-4fde-b7c4-b7c0b2f1502d:
    :name: Mercury
    :description: Mercury is a functional logic programming language made for real-world
      uses. The first version was developed at the University of Melbourne, Computer
      Science department, by Fergus Henderson, Thomas Conway, and Zoltan Somogyi,
      under Somogyi's supervision, and released on April 8, 1995.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mercury_(programming_language)
  record/f8dd5d1e-a35a-4b9d-b6c4-45abd65160c2:
    :name: ALGOL 60
    :description: ALGOL 60 is a member of the ALGOL family of computer programming
      languages. It followed on from ALGOL 58 which had introduced code blocks and
      the begin and end pairs for delimiting them, representing a key advance in the
      rise of structured programming. ALGOL 60 was the first language implementing
      nested function definitions with lexical scope. It gave rise to many other programming
      languages, including CPL, Simula, BCPL, B, Pascal, and C. Practically every
      computer of the era had a systems programming language based on ALGOL 60 concepts.
    :wikipedia_url: https://en.wikipedia.org/wiki/ALGOL_60
  record/40550229-05ff-43d5-90d3-ef1924646909:
    :name: Cryptol
    :description: |-
      Cryptol is a domain specific programming language for cryptography developed by the Portland, Oregon based software development firm, Galois, Inc..
      The language was originally developed for use by the United States National Security Agency. The language is also used by private firms that provide information technology systems, such as the American company Rockwell Collins provides to aerospace and defense contractors in the United States.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cryptol
  record/7362dc2f-645a-4fc2-82a0-6b2d90f91076:
    :name: Lynx
    :description: Lynx is a programming language for large distributed networks, using
      remote procedure calls. It was developed by the University of Wisconsin–Madison
      in 1984 for the Charlotte multicomputer operating system.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lynx_(programming_language)
  record/976226af-4814-42d1-a3b9-b1753cf6b10b:
    :name: Game Oriented Assembly Lisp
    :description: Game Oriented Assembly Lisp (GOAL) is a programming language, a
      dialect of the language Lisp, made for video games developed by Andy Gavin and
      the Jak and Daxter team at the company Naughty Dog.
    :wikipedia_url: https://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp
  record/94971c84-6453-412d-9b5c-cc6e00b476da:
    :name: Haystack
    :description: Haystack was a project at the Massachusetts Institute of Technology
      to research and develop several applications around personal information management
      and the Semantic Web. The most notable of those applications is the Haystack
      client, a research personal information manager (PIM) and one of the first to
      be based on semantic desktop technologies. The Haystack client is published
      as open source software under the BSD license.
    :wikipedia_url: https://en.wikipedia.org/wiki/Haystack_(MIT_project)
  record/b1b7f63d-5bb9-4af1-94aa-7eb673c7eda9:
    :name: Darwin
    :description: Darwin is a closed source programming language developed by Gaston
      Gonnet and colleagues at ETH Zurich. It is used to develop the OMA orthology
      inference software, which was also initially developed by Gonnet. The language
      backend consists of the kernel, responsible for performing simple mathematical
      calculations, for transporting and storing data and for interpreting the user's
      commands, and the library, a set of programs which can perform more complicated
      calculations. The target audience for the language is the biosciences, so the
      library consisted of routines such as those to compute pairwise alignments,
      phylogenetic trees, multiple sequence alignments, and to make secondary structure
      predictions.
    :wikipedia_url: https://en.wikipedia.org/wiki/Darwin_(programming_language)
  record/2d20069d-f39e-4485-a0bc-9deb737538f7:
    :name: Clean
    :description: Clean is a general-purpose purely functional computer programming
      language. For much of the language's active development history it was called
      Concurrent Clean, but this was dropped at some point. Clean is being developed
      by a group of researchers from the Radboud University in Nijmegen since 1987.
    :wikipedia_url: https://en.wikipedia.org/wiki/Clean_(programming_language)
  record/95ac3ed0-5006-4e23-ada3-0ffcc640bf4a:
    :name: XPL0
    :description: |-
      XPL0 is a computer programming language that is essentially a cross
      between Pascal and C. It was created in 1976 by Peter J. R. Boyle who wanted a high-level language for his microcomputer and wanted something more sophisticated than BASIC, which was the dominant language for personal computers at the time.
    :wikipedia_url: https://en.wikipedia.org/wiki/XPL0
  record/001b8527-3052-40f9-b380-2daadb380dd1:
    :name: Python
    :description: Python is an interpreted, high-level and general-purpose programming
      language. Python's design philosophy emphasizes code readability with its notable
      use of significant whitespace. Its language constructs and object-oriented approach
      aim to help programmers write clear, logical code for small and large-scale
      projects.
    :wikipedia_url: https://en.wikipedia.org/wiki/Python_(programming_language)
  record/44b6265f-834d-4a21-b9ac-933be96a0ecd:
    :name: Curl
    :description: Curl is a reflective object-oriented programming language for interactive
      web applications whose goal is to provide a smoother transition between formatting
      and programming. It makes it possible to embed complex objects in simple documents
      without needing to switch between programming languages or development platforms.
      The Curl implementation initially consisted of just an interpreter, but a compiler
      was added later.
    :wikipedia_url: https://en.wikipedia.org/wiki/Curl_(programming_language)
  record/b1e01047-7662-4142-b00e-5a441c6996e2:
    :name: Assembly language
    :description: In computer programming, assembly language, often abbreviated asm,
      is any low-level programming language in which there is a very strong correspondence
      between the instructions in the language and the architecture's machine code
      instructions. Because assembly depends on the machine code instructions, every
      assembly language is designed for exactly one specific computer architecture.
      Assembly language may also be called symbolic machine code.
    :wikipedia_url: https://en.wikipedia.org/wiki/Assembly_language
  record/93a648e4-7607-4f91-b21b-cf3af8e22997:
    :name: Chapel
    :description: Chapel, the Cascade High Productivity Language, is a parallel programming
      language developed by Cray. It is being developed as part of the Cray Cascade
      project, a participant in DARPA's High Productivity Computing Systems (HPCS)
      program, which had the goal of increasing supercomputer productivity by the
      year 2010. It is being developed as an open source project, under version 2
      of the Apache license.
    :wikipedia_url: https://en.wikipedia.org/wiki/Chapel_(programming_language)
  record/0f28b178-d40e-439f-bee1-ce497982b6e5:
    :name: Lean
    :description: Lean is a theorem prover and programming language. It is based on
      the Calculus of Constructions with inductive types.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lean_(proof_assistant)
  record/45336330-5ccb-494b-a81d-1c8480270266:
    :name: Subtext
    :description: Subtext is a moderately visual programming language and environment,
      for writing application software. It is an experimental, research attempt to
      develop a new programming model, called Example Centric Programming, by treating
      copied blocks as first class prototypes, for program structure. It uses live
      text, similar to what occurs in spreadsheets as users update cells, for frequent
      feedback. It is intended to eventually be developed enough to become a practical
      language for daily use. It is planned to be open software; the license is not
      yet determined.
    :wikipedia_url: https://en.wikipedia.org/wiki/Subtext_(programming_language)
  record/5cb0082e-69fa-4725-a297-ee3689dd4efe:
    :name: Napier88
    :description: Napier88 is an orthogonally persistent programming language that
      was designed and implemented at the University of St Andrews, Scotland. The
      primary designer was Ron Morrison, whose initial designs were extended and implemented
      by Fred Brown, Richard Connor, and Al Dearle. Napier88 was ahead of its time
      in many ways, and was the first robustly implemented language to combine a polymorphic
      type system with orthogonal persistence. The language was robustly implemented
      and released to users from both industry and academia; up to 1,000 registered
      users were recorded in due course. The language, however, was only intended
      to provide a proof of concept for an experiment in persistent programming; some
      time after 1989 the group's interests moved on and the language was no longer
      maintained.
    :wikipedia_url: https://en.wikipedia.org/wiki/Napier88
  record/0a29ab4b-300c-4da1-8d25-b2d8e4fbb793:
    :name: LIS
    :description: LIS was a system implementation programming language designed by
      Jean Ichbiah, who later designed Ada.
    :wikipedia_url: https://en.wikipedia.org/wiki/LIS_(programming_language)
  record/e6fa04ce-7624-40d8-a069-870bf00ba866:
    :name: Toi
    :description: Toi is an imperative, type-sensitive language that provides the
      basic functionality of a programming language. The language was designed and
      developed from the ground-up by Paul Longtine. Written in C, Toi was created
      with the intent to be an educational experience and serves as a learning tool
      for those looking to familiarize themselves with the inner-workings of a programming
      language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Toi_(programming_language)
  record/b286e20e-79af-41d0-9db8-d03094c716d3:
    :name: Snap<i>!</i>
    :description: Snap! is a free, block-based educational graphical programming language
      and online community aimed at students to explore, create and re-mix interactive
      animations, games, stories, and more, while learning about mathematical and
      computational ideas. While inspired by Scratch, Snap! has many advanced features.
      The Snap! editor, and programs created in it, are web applications that run
      in the browser without requiring installation.
    :wikipedia_url: https://en.wikipedia.org/wiki/Snap!_(programming_language)
  record/6367280f-5356-4ad7-bce1-d2c6b3578ea1:
    :name: sed
    :description: |-
      sed is a Unix utility that parses and transforms text, using a simple, compact programming language. sed was developed from 1973 to 1974 by Lee E. McMahon of Bell Labs,
      and is available today for most operating systems. sed was based on the scripting features of the interactive editor ed and the earlier qed. sed was one of the earliest tools to support regular expressions, and remains in use for text processing, most notably with the substitution command. Popular alternative tools for plaintext string manipulation and "stream editing" include AWK and Perl.
    :wikipedia_url: https://en.wikipedia.org/wiki/Sed
  record/ea7e0a5d-354a-479e-8465-3e7713f87f3d:
    :name: Amiga E
    :description: Amiga E, or very often simply E, is a programming language created
      by Wouter van Oortmerssen on the Amiga. He has since moved on to develop the
      SHEEP programming language for the new AmigaDE platform and the CryScript language
      used during the development of the video game Far Cry.
    :wikipedia_url: https://en.wikipedia.org/wiki/Amiga_E
  record/5614e3b1-db77-491d-b4e8-c9e08f9620a3:
    :name: LabVIEW
    :description: Laboratory Virtual Instrument Engineering Workbench (LabVIEW) is
      a system-design platform and development environment for a visual programming
      language from National Instruments.
    :wikipedia_url: https://en.wikipedia.org/wiki/LabVIEW
  record/fd52fb10-cb59-4a6a-ba57-acbd09d6deba:
    :name: CDuce
    :description: |-
      CDuce is an XML-oriented functional language, which extends XDuce in a few directions.
      It features XML regular expression types, XML regular expression patterns,
      XML iterators. CDuce is not strictly speaking an XML transformation language since
      it can be used for general-purpose programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/CDuce
  record/b7dc788a-2381-4ead-a4ac-4180226e12ad:
    :name: SequenceL
    :description: SequenceL is a general purpose functional programming language and
      auto-parallelizing compiler and tool set, whose primary design objectives are
      performance on multi-core processor hardware, ease of programming, platform
      portability/optimization, and code clarity and readability. Its main advantage
      is that it can be used to write straightforward code that automatically takes
      full advantage of all the processing power available, without programmers needing
      to be concerned with identifying parallelisms, specifying vectorization, avoiding
      race conditions, and other challenges of manual directive-based programming
      approaches such as OpenMP.
    :wikipedia_url: https://en.wikipedia.org/wiki/SequenceL
  record/3d7b46f4-7b02-4dc8-a749-c53314cf8907:
    :name: JOVIAL
    :description: JOVIAL is a high-level programming language similar to ALGOL, specialized
      for developing embedded systems. It was a major system programming language
      through the 1960s and 70s.
    :wikipedia_url: https://en.wikipedia.org/wiki/JOVIAL
  record/632b9a5b-4840-418a-a3d7-563f5261a1e3:
    :name: High Level Assembly
    :description: High Level Assembly (HLA) is a high-level assembly language developed
      by Randall Hyde. It allows the use of higher-level language constructs to aid
      both beginners and advanced assembly developers. It fully supports advanced
      data types and object-oriented programming. It uses a syntax loosely based on
      several high-level programming languages (HLLs), such as Pascal, Ada, Modula-2,
      and C++, to allow creating readable assembly language programs, and to allow
      HLL programmers to learn HLA as fast as possible.
    :wikipedia_url: https://en.wikipedia.org/wiki/High_Level_Assembly
  record/98f0e5ca-7507-4cfb-b44b-f350de262939:
    :name: Microsoft Dynamics AX
    :description: Microsoft Dynamics AX was one of Microsoft's enterprise resource
      planning software products. It is part of the Microsoft Dynamics family. In
      2018, its thick-client interface was removed and the web product was rebranded
      as Microsoft Dynamics 365 for Finance and Operations as a part of Microsoft's
      Dynamics 365 suite.
    :wikipedia_url: https://en.wikipedia.org/wiki/Microsoft_Dynamics_AX
  record/e7539e98-d835-46aa-8e5d-9d6cc0da60a7:
    :name: SystemVerilog
    :description: SystemVerilog, standardized as IEEE 1800, is a hardware description
      and hardware verification language used to model, design, simulate, test and
      implement electronic systems. SystemVerilog is based on Verilog and some extensions,
      and since 2008 Verilog is now part of the same IEEE standard. It is commonly
      used in the semiconductor and electronic design industry as an evolution of
      Verilog.
    :wikipedia_url: https://en.wikipedia.org/wiki/SystemVerilog
  record/77ec9319-7b65-4526-8a3e-d2925d654b38:
    :name: Stateflow
    :description: Stateflow is a control logic tool used to model reactive systems
      via state machines and flow charts within a Simulink model. Stateflow uses a
      variant of the finite-state machine notation established by David Harel, enabling
      the representation of hierarchy, parallelism and history within a state chart.
      Stateflow also provides state transition tables and truth tables.
    :wikipedia_url: https://en.wikipedia.org/wiki/Stateflow
  record/2fee84f4-45b8-4d09-9dc3-9bd7f2348d63:
    :name: Hope
    :description: |-
      Hope is a small functional programming language developed in the 1970s at the University of Edinburgh.
      It predates Miranda and Haskell and is contemporaneous with ML, also developed at the University. Hope was derived from NPL, a simple functional language developed by Rod Burstall and John Darlington in their work on program transformation. NPL and Hope are notable for being the first languages with call-by-pattern evaluation and algebraic data types.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hope_(programming_language)
  record/5140b402-14e2-4ff4-b388-455dbcb7d3e8:
    :name: CHIP-8
    :description: CHIP-8 is an interpreted programming language, developed by Joseph
      Weisbecker. It was initially used on the COSMAC VIP and Telmac 1800 8-bit microcomputers
      in the mid-1970s. CHIP-8 programs are run on a CHIP-8 virtual machine. It was
      made to allow video games to be more easily programmed for these computers.
    :wikipedia_url: https://en.wikipedia.org/wiki/CHIP-8
  record/3cf35fce-ef4d-44b2-bcf8-9d0347ccf3e6:
    :name: ABC ALGOL
    :description: ABC ALGOL is an extension of the programming language ALGOL 60 with
      arbitrary data structures and user-defined operators, intended for computer
      algebra. Despite its advances, it was never used as widely as Algol proper.
    :wikipedia_url: https://en.wikipedia.org/wiki/ABC_ALGOL
  record/0b2cfae1-403b-487b-987e-6ab1eb653dcf:
    :name: Promela
    :description: PROMELA is a verification modeling language introduced by Gerard
      J. Holzmann. The language allows for the dynamic creation of concurrent processes
      to model, for example, distributed systems. In PROMELA models, communication
      via message channels can be defined to be synchronous, or asynchronous. PROMELA
      models can be analyzed with the SPIN model checker, to verify that the modeled
      system produces the desired behavior. An implementation verified with Isabelle/HOL
      is also available, as part of the Computer Aided Verification of Automata project.
      Files written in Promela traditionally have a .pml file extension.
    :wikipedia_url: https://en.wikipedia.org/wiki/Promela
  record/2f30426b-4682-47f4-9c22-b18c4a53f93f:
    :name: Netwide Assembler
    :description: The Netwide Assembler (NASM) is an assembler and disassembler for
      the Intel x86 architecture. It can be used to write 16-bit, 32-bit (IA-32) and
      64-bit (x86-64) programs. NASM is considered to be one of the most popular assemblers
      for Linux.
    :wikipedia_url: https://en.wikipedia.org/wiki/Netwide_Assembler
  record/c2e48d7b-3c35-4f09-907e-51da57254923:
    :name: ZPL
    :description: ZPL is an array programming language designed to replace C and C++
      programming languages in engineering and scientific applications. Because its
      design goal was to obtain cross-platform high performance, ZPL programs run
      fast on both sequential and parallel computers. Highly-parallel ZPL programs
      are simple and easy to write because it exclusively uses implicit parallelism.
    :wikipedia_url: https://en.wikipedia.org/wiki/ZPL_(programming_language)
  record/f266b1f6-df8f-49b5-8d1c-b5ad4099643e:
    :name: Eltron Programming Language
    :description: Eltron Programming Language (EPL) is a printer control language
      used to produce printed labels for various Eltron model printers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Eltron_Programming_Language
  record/63c40124-330b-45b6-abda-7f4edc8d36a9:
    :name: BASIC
    :description: BASIC is a family of general-purpose, high-level programming languages
      whose design philosophy emphasizes ease of use. The original version was designed
      by John G. Kemeny and Thomas E. Kurtz and released at Dartmouth College in 1964.
      They wanted to enable students in fields other than science and mathematics
      to use computers. At the time, nearly all use of computers required writing
      custom software, which was something only scientists and mathematicians tended
      to learn.
    :wikipedia_url: https://en.wikipedia.org/wiki/BASIC
  record/88c932ba-9eb4-4459-b2b4-f44788562bd3:
    :name: Object REXX
    :description: The Object REXX programming language is an object-oriented scripting
      language initially produced by IBM for the operating system OS/2 and later for
      Microsoft Windows. It is a follow-on to and a significant extension of the "Classic
      Rexx" language originally created for the Conversational Monitor System (CMS)
      component of the operating system VM/SP and later ported to Multiple Virtual
      Storage (MVS), OS/2 and PC DOS.
    :wikipedia_url: https://en.wikipedia.org/wiki/Object_REXX
  record/09c15ca5-8db6-4435-8235-84e5688f3476:
    :name: Batch file
    :description: A batch file is a script file in DOS, OS/2 and Microsoft Windows.
      It consists of a series of commands to be executed by the command-line interpreter,
      stored in a plain text file. A batch file may contain any command the interpreter
      accepts interactively and use constructs that enable conditional branching and
      looping within the batch file, such as IF, FOR, and GOTO labels. The term "batch"
      is from batch processing, meaning "non-interactive execution", though a batch
      file may not process a batch of multiple data.
    :wikipedia_url: https://en.wikipedia.org/wiki/Batch_file
  record/a2f64c25-421f-4031-b237-f9e21d530f23:
    :name: Orwell
    :description: Orwell is a small, lazy-evaluation functional programming language
      implemented principally by Martin Raskovsky and first released in 1984 by Philip
      Wadler during his time as a Research Fellow in the Programming Research Group,
      part of the Oxford University Computing Laboratory. Developed as a free alternative
      to Miranda, it was a forerunner of Haskell and was one of the first programming
      languages to support list comprehensions and pattern matching.
    :wikipedia_url: https://en.wikipedia.org/wiki/Orwell_(programming_language)
  record/9cb99d44-905b-4d0c-978a-aee1ef18d5f0:
    :name: TypeScript
    :description: TypeScript is a programming language developed and maintained by
      Microsoft. It is a strict syntactical superset of JavaScript and adds optional
      static typing to the language. TypeScript is designed for development of large
      applications and transcompiles to JavaScript. As TypeScript is a superset of
      JavaScript, existing JavaScript programs are also valid TypeScript programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/TypeScript
  record/bf66ed9e-7de8-4b12-9e11-b340c9d2fdd3:
    :name: Mortran
    :description: Mortran is an extension of the Fortran programming language used
      for scientific computation. It introduces syntax changes, including the use
      of semicolons to end statements, in order to improve readability and flexibility.
      Mortran code is macro-processed into Fortran code for compilation.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mortran
  record/a5e32445-6e36-4968-b4b7-f753651323c3:
    :name: Processing.js
    :description: Processing.js is a JavaScript port of Processing, a programming
      language designed to write visualisations, images, and interactive content.
      It allows web browsers to display animations, visual applications, games and
      other graphical rich content without the need for a Java applet or Flash plugin.
    :wikipedia_url: https://en.wikipedia.org/wiki/Processing.js
  record/29a7767a-e521-4b42-a777-8757130349ca:
    :name: Jython
    :description: Jython is an implementation of the Python programming language designed
      to run on the Java platform. The implementation was formerly known as JPython
      until 1999.
    :wikipedia_url: https://en.wikipedia.org/wiki/Jython
  record/14027542-7da0-491f-b0b8-f04753221fb4:
    :name: Go!
    :description: Go! is an agent-based programming language in the tradition of logic-based
      programming languages like Prolog. It was introduced in a 2003 paper by Francis
      McCabe and Keith Clark.
    :wikipedia_url: https://en.wikipedia.org/wiki/Go!_(programming_language)
  record/24bed1dc-9cd4-4cbe-8022-f44fc27cc8a6:
    :name: AutoLISP
    :description: AutoLISP is a dialect of the programming language Lisp built specifically
      for use with the full version of AutoCAD and its derivatives, which include
      AutoCAD Map 3D, AutoCAD Architecture and AutoCAD Mechanical. Neither the application
      programming interface (API) nor the interpreter to execute AutoLISP code are
      included in the AutoCAD LT product line.
    :wikipedia_url: https://en.wikipedia.org/wiki/AutoLISP
  record/2f8a1dc0-dff1-4385-a9a9-32fa17606e07:
    :name: Unicon
    :description: 'Unicon is a programming language designed by American computer
      scientist Clint Jeffery with collaborators including Shamim Mohamed, Jafar Al
      Gharaibeh, Robert Parlett and others. Unicon descended from Icon and a preprocessor
      for Icon called IDOL. Compared with Icon, Unicon offers better access to the
      operating system as well as support for object-oriented programming. Unicon
      began life as a merger of three popular Icon extensions: an OO preprocessor
      named Idol, a POSIX filesystem and networking interface, and an ODBC facility.
      The name is shorthand for "Unified Extended Dialect of Icon."'
    :wikipedia_url: https://en.wikipedia.org/wiki/Unicon_(programming_language)
  record/56d63698-479a-4ce0-bc5a-d812e42d15b8:
    :name: Simulink
    :description: Simulink is a MATLAB-based graphical programming environment for
      modeling, simulating and analyzing multidomain dynamical systems. Its primary
      interface is a graphical block diagramming tool and a customizable set of block
      libraries. It offers tight integration with the rest of the MATLAB environment
      and can either drive MATLAB or be scripted from it. Simulink is widely used
      in automatic control and digital signal processing for multidomain simulation
      and model-based design.
    :wikipedia_url: https://en.wikipedia.org/wiki/Simulink
  record/624fc5c7-6e93-43b5-b4ce-f2b6af5cb5d8:
    :name: o:XML
    :description: o:XML is an open source, dynamically typed, general-purpose object-oriented
      programming language based on XML-syntax. It has threads, exception handling,
      regular expressions and namespaces. Additionally o:XML has an expression language
      very similar to XPath that allows functions to be invoked on nodes and node
      sets.
    :wikipedia_url: https://en.wikipedia.org/wiki/O%3AXML
  record/8cdbc9fc-8e1a-4118-987e-96b09568f5c1:
    :name: Gödel
    :description: Gödel is a declarative, general-purpose programming language that
      adheres to the logic programming paradigm. It is a strongly typed language,
      the type system being based on many-sorted logic with parametric polymorphism.
      It is named after logician Kurt Gödel.
    :wikipedia_url: https://en.wikipedia.org/wiki/G%C3%B6del_(programming_language)
  record/f3e675c4-1b52-4804-a755-864c246205ad:
    :name: Quantum Computation Language
    :description: Quantum Computation Language (QCL) is one of the first implemented
      quantum programming languages. The most important feature of QCL is the support
      for user-defined operators and functions. Its syntax resembles the syntax of
      the C programming language and its classical data types are similar to primitive
      data types in C. One can combine classical code and quantum code in the same
      program.
    :wikipedia_url: https://en.wikipedia.org/wiki/Quantum_Computation_Language
  record/98a8d2ce-762f-44d4-8dbc-67a14a505ef3:
    :name: Superbase
    :description: Superbase is an end-user desktop database program that started on
      the Commodore 64 and was ported from that to various operating systems over
      the course of more than 20 years. It also has generally included a programming
      language to automate database-oriented tasks, and with later versions included
      WYSIWYG form and report designers as well as more sophisticated programming
      capabilities.
    :wikipedia_url: https://en.wikipedia.org/wiki/Superbase_(database)
  record/cabbb382-de57-43d6-9291-f4f8ed431b77:
    :name: Q Sharp
    :description: Q# is a domain-specific programming language used for expressing
      quantum algorithms. It was initially released to the public by Microsoft as
      part of the Quantum Development Kit.
    :wikipedia_url: https://en.wikipedia.org/wiki/Q_Sharp
  record/457d120a-b895-4ab7-ac71-247dfdc34c03:
    :name: PLEXIL
    :description: PLEXIL is an open source technology for automation, created and
      currently in development by NASA.
    :wikipedia_url: https://en.wikipedia.org/wiki/PLEXIL
  record/72226dc0-88a5-4b10-8fa6-c7180a0b0d49:
    :name: dc
    :description: |-
      dc is a cross-platform reverse-polish calculator which supports arbitrary-precision arithmetic. Written by Robert Morris while at Bell Labs, it is one of the oldest Unix utilities, preceding even the invention of the C programming language. Like other utilities of that vintage, it has a powerful set of features but terse syntax.
      Traditionally, the bc calculator program was implemented on top of dc.
    :wikipedia_url: https://en.wikipedia.org/wiki/Dc_(computer_program)
  record/f7ba538d-952d-478b-8aed-099a80459c64:
    :name: Java
    :description: Java is a class-based, object-oriented programming language that
      is designed to have as few implementation dependencies as possible. It is a
      general-purpose programming language intended to let application developers
      write once, run anywhere (WORA), meaning that compiled Java code can run on
      all platforms that support Java without the need for recompilation. Java applications
      are typically compiled to bytecode that can run on any Java virtual machine
      (JVM) regardless of the underlying computer architecture. The syntax of Java
      is similar to C and C++, but has fewer low-level facilities than either of them.
      The Java runtime provides dynamic capabilities that are typically not available
      in traditional compiled languages. As of 2019, Java was one of the most popular
      programming languages in use according to GitHub, particularly for client-server
      web applications, with a reported 9 million developers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Java_(programming_language)
  record/8a5ffc12-974b-4566-913f-6ba6f7fd3e5e:
    :name: Macsyma
    :description: Macsyma is one of the oldest general-purpose computer algebra systems
      still in wide use. It was originally developed from 1968 to 1982 at MIT's Project
      MAC.
    :wikipedia_url: https://en.wikipedia.org/wiki/Macsyma
  record/d2ac58a5-838c-42cb-91e4-6cbd26b2c3f5:
    :name: P′′
    :description: P′′ is a primitive computer programming language created by Corrado
      Böhm in 1964 to describe a family of Turing machines.
    :wikipedia_url: https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2
  record/22a88f1c-f551-4635-8bba-fd26f4c66b25:
    :name: Winbatch
    :description: Winbatch is a Microsoft Windows scripting language originally developed
      by Wilson WindowWare and currently supported, maintained and enhanced by Island
      Lake Consulting LLC. Its environment includes an interpreter and a code editor
      along with a dialog designer and optional compiler to create self-contained
      executables.
    :wikipedia_url: https://en.wikipedia.org/wiki/Winbatch
  record/fe2be7d7-780e-4cde-9ce0-b9b6442007a2:
    :name: APT
    :description: 'APT is a high-level computer programming language most commonly
      used to generate instructions for numerically controlled machine (CNC) tools.
      Douglas T. Ross is considered by many to be the father of APT: as head of the
      newly created Computer Applications Group of the Servomechanisms Laboratory
      at MIT in 1956, he led its technical effort. APT is a language and system that
      makes numerically controlled manufacturing possible. This early language was
      used widely through the 1970s and is still a standard internationally. Derivatives
      of APT were later developed.'
    :wikipedia_url: https://en.wikipedia.org/wiki/APT_(programming_language)
  record/bfa113d5-6a72-4f6a-b8a5-75f3bec61968:
    :name: XL
    :description: XL is the first and so far the only computer programming language
      designed to support concept programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/XL_(programming_language)
  record/0b86a71c-188d-431a-a81f-87f763feb70d:
    :name: "<i>Second Life</i>"
    :description: 'Second Life is an online virtual world, developed and owned by
      the San Francisco-based firm Linden Lab and launched on June 23, 2003. It saw
      rapid growth for some years and in 2013 it had approximately one million regular
      users; growth stabilized and by the end of 2017 active user count had declined
      to "between 800,000 and 900,000". In many ways, Second Life is similar to massively
      multiplayer online role-playing games; nevertheless, Linden Lab is emphatic
      that their creation is not a game: "There is no manufactured conflict, no set
      objective".'
    :wikipedia_url: https://en.wikipedia.org/wiki/Second_Life
  record/72f5ef28-ab3e-4965-a2fc-515cf548f758:
    :name: Futhark
    :description: Futhark is a functional data parallel array programming language
      originally developed at DIKU as part of the HIPERFIT project. It focuses on
      enabling data parallel programs written in a functional style to be executed
      with high performance on massively parallel hardware, in particular on GPUs.
      Futhark is strongly inspired by NESL, but imposes constraints on how parallelism
      can be expressed in order to enable more aggressive compiler optimisations.
      In particular, irregular nested data parallelism is not supported.
    :wikipedia_url: https://en.wikipedia.org/wiki/Futhark_(programming_language)
  record/412859e7-ab9b-4c31-aea7-a2d467d4865d:
    :name: Erlang
    :description: Erlang is a general-purpose, concurrent, functional programming
      language, and a garbage-collected runtime system. The term Erlang is used interchangeably
      with Erlang/OTP, or Open Telecom Platform (OTP), which consists of the Erlang
      runtime system, several ready-to-use components (OTP) mainly written in Erlang,
      and a set of design principles for Erlang programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Erlang_(programming_language)
  record/a2b406a8-9736-48af-be60-177458699114:
    :name: OBJ2
    :description: OBJ2 is a programming language with Clear-like parametrised modules
      and a functional system based on equations. It is a member of the OBJ family
      of languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/OBJ2
  record/7034b903-27b0-4661-befc-690f6d5c325b:
    :name: NetRexx
    :description: NetRexx is an open source, originally IBM's, variant of the REXX
      programming language to run on the Java virtual machine. It supports a classic
      REXX syntax, with no reserved keywords, along with considerable additions to
      support object-oriented programming in a manner compatible with Java's object
      model, yet can be used as both a compiled and an interpreted language, with
      an option of using only data types native to the JVM or the NetRexx runtime
      package. The latter offers the standard Rexx data type that combines string
      processing with unlimited precision decimal arithmetic.
    :wikipedia_url: https://en.wikipedia.org/wiki/NetRexx
  record/196b5cc7-17b7-4789-908b-f360dbaf58db:
    :name: ELAN
    :description: ELAN is an educational programming language for learning and teaching
      systematic programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/ELAN_(programming_language)
  record/a2ece87d-d2b9-44d0-a5e6-d80fa3a76d1f:
    :name: NEWP
    :description: NEWP, short for New Executive Programming Language, is a high-level
      programming language used on the Unisys MCP systems. The language is used to
      write the operating system and other system utilities, although it can also
      be used to write user software as well. Several constructs separate it from
      extended ALGOL on which it is based. Language operators such as MEMORY which
      allows direct memory access are strictly used by programs running as the MCP.
    :wikipedia_url: https://en.wikipedia.org/wiki/NEWP
  record/ece86c25-2adf-4e6a-9e88-f1c5451d7116:
    :name: Lego Mindstorms NXT
    :description: |-
      LEGO Mindstorms NXT is a programmable robotics kit released by Lego in late July 2006.
      It replaced the first-generation Lego Mindstorms kit, which was called the Robotics Invention System. The base kit ships in two versions: the Retail Version and the Education Base Set. It comes with the NXT-G programming software, or optionally LabVIEW for Lego Mindstorms. A variety of unofficial languages exist, such as NXC, NBC, leJOS NXJ, and RobotC. The second generation of the set, the Lego Mindstorms NXT 2.0, was released on August 1, 2009, featuring a color sensor and other upgraded capabilities. The third generation, the EV3, was released in September 2013.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lego_Mindstorms_NXT
  record/5d6c537f-4ccd-42a1-b6a5-6b32091f04d0:
    :name: CMS EXEC
    :description: CMS EXEC, or EXEC, is an interpreted, command procedure control,
      computer scripting language used by the CMS EXEC Processor supplied with the
      IBM Virtual Machine/Conversational Monitor System (VM/CMS) operating system.
    :wikipedia_url: https://en.wikipedia.org/wiki/CMS_EXEC
  record/ea6ec782-81e6-4eab-b8a4-daef296c516f:
    :name: SMALL
    :description: Small Machine Algol Like Language (SMALL), is a computer programming
      language developed by Dr. Nevil Brownlee of the University of Auckland.
    :wikipedia_url: https://en.wikipedia.org/wiki/SMALL
  record/67b411ea-3f25-40ff-b8f8-cc00a03432d5:
    :name: Lego Mindstorms
    :description: Lego Mindstorms is a hardware and software structure which is produced
      by Lego for the development of programmable robots based on Lego building blocks.
      Each version of the system includes a computer Lego brick that controls the
      system, a set of modular sensors and motors, and Lego parts from the Technic
      line to create the mechanical systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lego_Mindstorms
  record/0b886e3f-eb94-40b5-8730-df84b1fd860d:
    :name: COMIT
    :description: COMIT was the first string processing language, developed on the
      IBM 700/7000 series computers by Dr. Victor Yngve and collaborators at MIT from
      1957 to 1965. Yngve created the language for supporting computerized research
      in the field of linguistics, and more specifically, the area of machine translation
      for natural language processing. The creation of COMIT led to the creation of
      SNOBOL.
    :wikipedia_url: https://en.wikipedia.org/wiki/COMIT
  record/afdb586b-936b-49cb-9fb6-66b2c67b2110:
    :name: Bosque
    :description: Bosque is a free and open-source programming language developed
      by Microsoft that was inspired by the syntax and types of TypeScript and the
      semantics of ML and Node/JavaScript. Design goals for the language include better
      software quality and improved developer productivity.
    :wikipedia_url: https://en.wikipedia.org/wiki/Bosque_(programming_language)
  record/86c084bc-a5df-4b77-a852-5af887833629:
    :name: Tcl
    :description: Tcl is a high-level, general-purpose, interpreted, dynamic programming
      language. It was designed with the goal of being very simple but powerful. Tcl
      casts everything into the mold of a command, even programming constructs like
      variable assignment and procedure definition. Tcl supports multiple programming
      paradigms, including object-oriented, imperative and functional programming
      or procedural styles.
    :wikipedia_url: https://en.wikipedia.org/wiki/Tcl
  record/e1734d42-cfcf-4608-be27-9b1b1700c65e:
    :name: J
    :description: The J programming language, developed in the early 1990s by Kenneth
      E. Iverson and Roger Hui, is an array programming language based primarily on
      APL.
    :wikipedia_url: https://en.wikipedia.org/wiki/J_(programming_language)
  record/dd67292e-a37c-417a-afd6-0fc53b3ab75d:
    :name: C Sharp
    :description: C# is a general-purpose, multi-paradigm programming language encompassing
      static typing, strong typing, lexically scoped, imperative, declarative, functional,
      generic, object-oriented (class-based), and component-oriented programming disciplines.
    :wikipedia_url: https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
  record/b5c87bce-f6ca-4999-8586-70ef81b709ce:
    :name: AppleScript
    :description: AppleScript is a scripting language created by Apple Inc. that facilitates
      automated control over scriptable Mac applications. First introduced in System
      7, it is currently included in all versions of macOS as part of a package of
      system automation tools. The term "AppleScript" may refer to the language itself,
      to an individual script written in the language, or, informally, to the macOS
      Open Scripting Architecture that underlies the language.
    :wikipedia_url: https://en.wikipedia.org/wiki/AppleScript
  record/0464b79c-2777-4457-bfdb-b1aeae580c05:
    :name: Epigram
    :description: Epigram is a functional programming language with dependent types,
      and the integrated development environment (IDE) usually packaged with the language.
      Epigram's type system is strong enough to express program specifications. The
      goal is to support a smooth transition from ordinary programming to integrated
      programs and proofs which correctness can be checked and certified by the compiler.
      Epigram exploits the Curry–Howard correspondence, also termed the propositions
      as types principle, and is based on intuitionistic type theory.
    :wikipedia_url: https://en.wikipedia.org/wiki/Epigram_(programming_language)
  record/4fdda6a6-10b7-458b-a8be-2c82826bf8f7:
    :name: SISAL
    :description: "SISAL is a general-purpose single assignment functional programming
      language with strict semantics, implicit parallelism, and efficient array handling.
      \nSISAL outputs a dataflow graph in Intermediary Form 1 (IF1). It was derived
      from VAL, and adds recursion and finite streams. It has a Pascal-like syntax
      and was designed to be a common high-level language for numerical programs on
      a variety of multiprocessors."
    :wikipedia_url: https://en.wikipedia.org/wiki/SISAL
  record/5a4723f5-4bbd-4a27-98f8-c8d06e86964a:
    :name: GEORGE
    :description: |2-

      GEORGE is a programming language invented by Charles Leonard Hamblin in 1957.
    :wikipedia_url: https://en.wikipedia.org/wiki/GEORGE_(programming_language)
  record/907a9705-de0e-44c7-b48e-f71c8d343a4c:
    :name: Interactive fiction
    :description: |2-

      Interactive fiction, often abbreviated IF, is software simulating environments in which players use text commands to control characters and influence the environment. Works in this form can be understood as literary narratives, either in the form of interactive narratives or interactive narrations. These works can also be understood as a form of video game, either in the form of an adventure game or role-playing game. In common usage, the term refers to text adventures, a type of adventure game where the entire interface can be "text-only", however, graphical text adventures still fall under the text adventure category if the main way to interact with the game is by typing text. Some users of the term distinguish between interactive fiction, known as "Puzzle-free", that focuses on narrative, and "text adventures" that focus on puzzles.
    :wikipedia_url: https://en.wikipedia.org/wiki/Interactive_fiction
  record/30de4864-a6af-4113-9aee-2d3ba91c26d4:
    :name: SPARK
    :description: SPARK is a formally defined computer programming language based
      on the Ada programming language, intended for the development of high integrity
      software used in systems where predictable and highly reliable operation is
      essential. It facilitates the development of applications that demand safety,
      security, or business integrity.
    :wikipedia_url: https://en.wikipedia.org/wiki/SPARK_(programming_language)
  record/da611a2f-f323-4a18-a040-e54e631409ec:
    :name: Strongtalk
    :description: Strongtalk is a Smalltalk environment with optional static typing
      support. Strongtalk can make some compile time checks, and offer stronger type
      safety guarantees; this is the source of its name. It is non-commercial, though
      it was originally a commercial project developed by a small startup company
      named LongView Technologies.
    :wikipedia_url: https://en.wikipedia.org/wiki/Strongtalk
  record/9f7d9a22-f92b-44bf-abae-f40730c9e3a1:
    :name: LANSA
    :description: LANSA is an integrated development environment (IDE) for building
      desktop, web and mobile software applications that can be deployed to Cloud,
      Windows, Linux and IBM i server platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/LANSA_(development_environment)
  record/60b307b0-e6da-4da8-aa27-f4658bab0451:
    :name: Curry
    :description: Curry is an experimental functional logic programming language,
      based on the Haskell language. It merges elements of functional and logic programming,
      including constraint programming integration.
    :wikipedia_url: https://en.wikipedia.org/wiki/Curry_(programming_language)
  record/1f3b24ea-b2fd-4687-ad25-ba4f79b47236:
    :name: Sepandar Kamvar
    :description: Sepandar David Kamvar, also known as Sep Kamvar, is a computer scientist,
      artist, and entrepreneur. He is currently the LG Career Development Professor
      of Media Arts and Sciences at MIT, and he was director of the Social Computing
      group at the MIT Media Lab.
    :wikipedia_url: https://en.wikipedia.org/wiki/Sepandar_Kamvar
  record/f5da9643-4d7e-4537-ad8e-56c2b458e294:
    :name: Rapira
    :description: Rapira is an educational procedural programming language developed
      in the Soviet Union and implemented on Agat computer, PDP-11 clones and Intel-8080/Z80
      clones (Korvet). It was an interpreted language with dynamic type system and
      high level constructions. The language originally had a Russian-based set of
      keywords, but English and Moldovan were added later. Also, it was more elegant
      and easier to use than existing Pascal implementations of the time.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rapira
  record/bd3dc0cc-3982-4085-b2d4-c9ee4f50441a:
    :name: Karel
    :description: 'Karel is an educational programming language for beginners, created
      by Richard E. Pattis in his book Karel The Robot: A Gentle Introduction to the
      Art of Programming. Pattis used the language in his courses at Stanford University,
      California. The language is named after Karel Čapek, a Czech writer who introduced
      the word robot in his play R.U.R.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Karel_(programming_language)
  record/fba44cac-95d6-488a-a539-659307d7d97a:
    :name: ABC
    :description: ABC is an imperative general-purpose programming language and integrated
      development environment (IDE) developed at Centrum Wiskunde & Informatica (CWI),
      Netherlands by Leo Geurts, Lambert Meertens, and Steven Pemberton. It is interactive,
      structured, high-level, and intended to be used instead of BASIC, Pascal, or
      AWK. It is intended for teaching or prototyping, but not as a systems-programming
      language.
    :wikipedia_url: https://en.wikipedia.org/wiki/ABC_(programming_language)
  record/e1560e63-40a8-4eb8-bd69-365fcaab8ba0:
    :name: SIGNAL
    :description: 'SIGNAL is a programming language based on synchronized data-flow
      : a process is a set of equations on elementary flows describing both data and
      control.'
    :wikipedia_url: https://en.wikipedia.org/wiki/SIGNAL_(programming_language)
  record/cd6c9b60-2e35-40af-9719-1f192a9a8664:
    :name: Cool
    :description: Cool, an acronym for Classroom Object Oriented Language, is a computer
      programming language designed by Alexander Aiken for use in an undergraduate
      compiler course project. While small enough for a one term project, Cool still
      has many of the features of modern programming languages, including objects,
      automatic memory management, strong static typing and simple reflection.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cool_(programming_language)
  record/c22b48d8-62cf-4381-ac22-2a26fe6becdb:
    :name: K
    :description: K is a proprietary array processing programming language developed
      by Arthur Whitney and commercialized by Kx Systems. The language serves as the
      foundation for kdb+, an in-memory, column-based database, and other related
      financial products. The language, originally developed in 1993, is a variant
      of APL and contains elements of Scheme. Advocates of the language emphasize
      its speed, facility in handling arrays, and expressive syntax.
    :wikipedia_url: https://en.wikipedia.org/wiki/K_(programming_language)
  record/19d3e82e-5c6e-4671-ad37-5c9e2fde805b:
    :name: Job Control Language
    :description: Job Control Language (JCL) is a name for scripting languages used
      on IBM mainframe operating systems to instruct the system on how to run a batch
      job or start a subsystem.
    :wikipedia_url: https://en.wikipedia.org/wiki/Job_Control_Language
  record/26d37dac-5b90-403f-a3f2-d1c2686efafb:
    :name: Oberon
    :description: 'Oberon is a general-purpose programming language first published
      in 1987 by Niklaus Wirth and the latest member of the Wirthian family of ALGOL-like
      languages. Oberon was the result of a concentrated effort to increase the power
      of Modula-2, the direct successor of Pascal, and simultaneously to reduce its
      complexity. Its principal new feature is the concept of type extension of record
      types: It permits the construction of new data types on the basis of existing
      ones and to relate them, deviating from the dogma of strictly static data typing.
      Type extension is Wirth''s way of inheritance reflecting the viewpoint of the
      parent site. Oberon was developed as part of the implementation of the Oberon
      operating system at ETH Zurich in Switzerland. The name is from the moon of
      Uranus, Oberon.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Oberon_(programming_language)
  record/88be03e5-f347-4249-b817-0d736e8fc7fa:
    :name: Executive Systems Problem Oriented Language
    :description: The Executive Systems Problem Oriented Language (ESPOL) is a programming
      language, a superset of ALGOL 60, that provides abilities of what would later
      be termed a system programming language or machine oriented high order language
      (mohol), such as interrupting a processor on a multiprocessing system. ESPOL
      was used to write the Master Control Program (MCP) on Burroughs computer systems
      from the B5000 to the B6700. The single-pass compiler for ESPOL could compile
      over 250 lines per second.
    :wikipedia_url: https://en.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language
  record/9cac370f-a515-47a5-9bfe-614d3f849bd0:
    :name: Strand
    :description: Strand is a high-level symbolic language for parallel computing,
      similar in syntax to Prolog.
    :wikipedia_url: https://en.wikipedia.org/wiki/Strand_(programming_language)
  record/db3e2b3d-64ad-4dfc-be85-672e6896fe42:
    :name: Ezhil
    :description: Ezhil, in Tamil language script, is a compact, open source, interpreted,
      programming language, originally designed to enable native-Tamil speaking students,
      K-12 age-group to learn computer programming, and enable learning numeracy and
      computing, outside of linguistic expertise in predominately English language-based
      computer systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ezhil_(programming_language)
  record/07a66fa5-5a39-4962-9c9d-c8e759a1e6ef:
    :name: Hollywood
    :description: Hollywood is a commercially distributed programming language developed
      by Andreas Falkenhahn which mainly focuses on the creation of multimedia-oriented
      applications. Hollywood is available for AmigaOS, MorphOS, WarpOS, AROS, Windows,
      macOS, Linux, Android, and iOS. Hollywood has an inbuilt cross compiler that
      can automatically save executables for all platforms supported by the software.
      The generated executables are completely stand-alone and do not have any external
      dependencies, so they can also be started from a USB flash drive. An optional
      add-on also allows users to compile projects into APK files.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hollywood_(programming_language)
  record/e8cc521f-7bd2-44b3-89aa-65b72f9281fc:
    :name: Vala
    :description: Vala is an object-oriented programming language with a self-hosting
      compiler that generates C code and uses the GObject system.
    :wikipedia_url: https://en.wikipedia.org/wiki/Vala_(programming_language)
  record/c8532cba-3f66-474a-81b6-adec8991f354:
    :name: Tynker
    :description: Tynker is an educational programming platform aimed at teaching
      children how to make games and programs. Instead of typing the source code,
      you visually drag blocks of code and snap them together. The visual design and
      principles are based on the free Scratch, just like Hopscotch and Snap!. Tynker
      is based on HTML5 and JavaScript, and can be used in the browser without plugins,
      as well as on tablets and smartphones. Another difference is that Scratch is
      a free open source project, while Tynker is a commercial product, aimed at selling
      courses. Tynker offers self-paced online courses for children to learn coding
      at home, as well as an engaging programming curriculum for schools and camps.
      It makes it easier for kids to learn coding as it teaches kids coding through
      creating games like Minecraft, Hour of Code etc.
    :wikipedia_url: https://en.wikipedia.org/wiki/Tynker
  record/52cd9ae3-b0f3-4d09-901e-be360598842f:
    :name: TMG
    :description: TMG (TransMoGrifier) is a recursive descent compiler-compiler created
      by Robert M. McClure and presented in 1965. TMG ran on systems like OS/360 and
      early Unix. It was used to build EPL, an early version of PL/I.
    :wikipedia_url: https://en.wikipedia.org/wiki/TMG_(language)
  record/7a677e16-eaee-4372-9ea3-d712c7197a10:
    :name: Etoys
    :description: Etoys is a child-friendly computer environment and object-oriented
      prototype-based programming language for use in education.
    :wikipedia_url: https://en.wikipedia.org/wiki/Etoys_(programming_language)
  record/7d963253-9b04-4a07-bf5a-cd7c0ba62bf9:
    :name: D
    :description: D, also known as Dlang, is a multi-paradigm system programming language
      created by Walter Bright at Digital Mars and released in 2001. Andrei Alexandrescu
      joined the design and development effort in 2007. Though it originated as a
      re-engineering of C++, D is a distinct language. It has redesigned some core
      C++ features, while also sharing characteristics of other languages, notably
      Java, Python, Ruby, C#, and Eiffel.
    :wikipedia_url: https://en.wikipedia.org/wiki/D_(programming_language)
  record/fe5d60bd-bc21-4ecf-9521-88ee8a3e0122:
    :name: MATLAB
    :description: MATLAB is a proprietary multi-paradigm programming language and
      numerical computing environment developed by MathWorks. MATLAB allows matrix
      manipulations, plotting of functions and data, implementation of algorithms,
      creation of user interfaces, and interfacing with programs written in other
      languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/MATLAB
  record/775b4a91-4454-4df3-a36f-a978ac6a9d82:
    :name: ROOP
    :description: ROOP is a multiparadigm programming language targeted at AI applications
      created at the Chengdu University of China. It combines rule-based, procedural,
      logical and object-oriented programming techniques.
    :wikipedia_url: https://en.wikipedia.org/wiki/ROOP_(programming_language)
  record/2f3fb8ff-fa5f-4e14-b757-bd9a69478072:
    :name: PL-11
    :description: PL-11 is a high-level machine-oriented programming language for
      the PDP-11, developed by R.D. Russell of CERN in 1971. Written in Fortran IV,
      it is similar to PL360 and is cross-compiled on other machines.
    :wikipedia_url: https://en.wikipedia.org/wiki/PL-11
  record/5371505e-82cd-4a98-91cf-2a4e870e7de8:
    :name: Vim
    :description: Vim is a clone, with additions, of Bill Joy's vi text editor program
      for Unix. Vim's author, Bram Moolenaar, based it on the source code for a port
      of the Stevie editor to the Amiga and released a version to the public in 1991.
      Vim is designed for use both from a command-line interface and as a standalone
      application in a graphical user interface. Vim is free and open-source software
      and is released under a license that includes some charityware clauses, encouraging
      users who enjoy the software to consider donating to children in Uganda. The
      license is compatible with the GNU General Public License through a special
      clause allowing distribution of modified copies "under the GNU GPL version 2
      or any later version".
    :wikipedia_url: https://en.wikipedia.org/wiki/Vim_(text_editor)
  record/aa67e7d5-864f-4ca1-8089-8595e6486153:
    :name: "<i>Dink Smallwood</i>"
    :description: Dink Smallwood is an action role-playing video game, developed by
      Robinson Technologies, at the time consisting of Seth Robinson, Justin Martin,
      and Greg Smith. It was first released in 1998 before being released as freeware
      on October 17, 1999. Mitch Brink composed several of the game's music tracks,
      while others are MIDI forms of classical music, such as Debussy's "Reverie".
      The game has a small but constant fan following that continues to develop add-ons
      for the game more than a decade after its release. The game is also notable
      for its humorous dialogue and surrealistic themes in various scenes between
      the gameplay.
    :wikipedia_url: https://en.wikipedia.org/wiki/Dink_Smallwood
  record/51c277af-9e2e-4d59-aaf1-fbb2e0296c4b:
    :name: MDL
    :description: MDL is a programming language, a descendant of the language Lisp.
      Its initial purpose was to provide high level language support for the Dynamic
      Modeling Group at Massachusetts Institute of Technology's (MIT) Project MAC.
      It was initially developed in 1971 on a PDP-10 computer on a time-sharing operating
      system named Incompatible Timesharing System (ITS). It later ran on TENEX, TOPS-20,
      BSD, and AEGIS.
    :wikipedia_url: https://en.wikipedia.org/wiki/MDL_(programming_language)
  record/4479b476-e04a-4a9c-9ada-d17b5160baaf:
    :name: Ubercode
    :description: |-
      Ubercode is a high level programming language designed by Ubercode Software and released in 2005 for Microsoft Windows. Ubercode is influenced by Eiffel and BASIC. It is proprietary software and can be tried out for free for 30 days. Ubercode has the following design goals:Compilable language—compiled into Windows EXE files.
      Automatic memory management—memory is allocated / freed automatically, and the language has no memory management primitives.
      Pre and post conditions—these are run-time assertions which are attached to function declarations, as in Eiffel.
      High-level data types—resizable arrays, lists and tables may contain arbitrary components.
      Integrated file handling—primitives for transparent handling of text, binary, CSV, XML and dBase files.
      Ease of use—language structure is relatively simple, making the language accessible to beginners.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ubercode
  record/d7879e59-d85a-4170-8e3c-68cc75cc94cc:
    :name: BlooP and FlooP
    :description: BlooP and FlooP are simple programming languages designed by Douglas
      Hofstadter to illustrate a point in his book Gödel, Escher, Bach. BlooP is a
      non-Turing-complete programming language whose main control flow structure is
      a bounded loop. All programs in the language must terminate, and this language
      can only express primitive recursive functions.
    :wikipedia_url: https://en.wikipedia.org/wiki/BlooP_and_FlooP
  record/676576a8-ca5f-4f14-9b77-c423f2a48015:
    :name: GameMaker
    :description: GameMaker is a series of cross-platform game engines created by
      Mark Overmars in 1999 and developed by YoYo Games since 2007. The latest iteration
      is GameMaker Studio 2, first released in 2017.
    :wikipedia_url: https://en.wikipedia.org/wiki/GameMaker
  record/e2e9f8dc-7954-427a-92df-784803cdb42c:
    :name: m4
    :description: m4 is a general-purpose macro processor included in most Unix-like
      operating systems, and is a component of the POSIX standard.
    :wikipedia_url: https://en.wikipedia.org/wiki/M4_(computer_language)
  record/ef26cd5b-22a5-490b-af3d-c9b9e23b6526:
    :name: Janus
    :description: Janus is a time-reversible programming language written at Caltech
      in 1982. The operational semantics of the language were formally specified,
      together with a program inverter and an invertible self-interpreter, in 2007
      by Tetsuo Yokoyama and Robert Glück. A Janus inverter and interpreter is made
      freely available by the TOPPS research group at DIKU. Another Janus interpreter
      was implemented in Prolog in 2009. The below summarises the language presented
      in the 2007 paper.
    :wikipedia_url: https://en.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)
  record/5b6bc38e-da00-4c7c-bc21-7552f3d30138:
    :name: Yorick
    :description: Yorick is an interpreted programming language designed for numerics,
      graph plotting, and steering large scientific simulation codes. It is quite
      fast due to array syntax, and extensible via C or Fortran routines. It was created
      in 1996 by David H. Munro of Lawrence Livermore National Laboratory.
    :wikipedia_url: https://en.wikipedia.org/wiki/Yorick_(programming_language)
  record/a6fc05f7-0a65-48bd-b084-333a050b03b9:
    :name: MARK IV
    :description: MARK IV is a fourth-generation programming language that was created
      by Informatics, Inc. in the 1960s. Informatics took advantage of IBM's decision
      to unbundle their software; MARK IV was the first "software product to have
      cumulative sales of $10 million".
    :wikipedia_url: https://en.wikipedia.org/wiki/MARK_IV_(software)
  record/773b5aee-99f0-4bb0-adaa-69b15bba848c:
    :name: Open Programming Language
    :description: Open Programming Language (OPL) is an embedded programming language
      for portable devices that run the Symbian Operating System.
    :wikipedia_url: https://en.wikipedia.org/wiki/Open_Programming_Language
  record/4de70e6e-5118-428d-88c7-ce030e741bca:
    :name: Cython
    :description: Cython is a programming language that aims to be a superset of the
      Python programming language, designed to give C-like performance with code that
      is written mostly in Python with optional additional C-inspired syntax.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cython
  record/d8324c1c-6e54-4996-bbdf-f3af261a8005:
    :name: Escher
    :description: Escher is a declarative programming language that supports both
      functional programming and logic programming models, developed by J.W. Lloyd
      in the mid-1990s. It was designed mostly as a research and teaching vehicle.
      The basic view of programming exhibited by Escher and related languages is that
      a program is a representation of a theory in some logic framework, and the program's
      execution (computation) is a deduction from the theory. The logic framework
      for Escher is Alonzo Church's simple theory of types.
    :wikipedia_url: https://en.wikipedia.org/wiki/Escher_(programming_language)
  record/638373ce-a364-4cef-ae00-981d73ed2abd:
    :name: X10
    :description: X10 is a programming language being developed by IBM at the Thomas
      J. Watson Research Center as part of the Productive, Easy-to-use, Reliable Computing
      System (PERCS) project funded by DARPA's High Productivity Computing Systems
      (HPCS) program. Its primary authors are Saravanan Arumugam (Aswath), Kemal Ebcioğlu,
      Vijay Saraswat, and Vivek Sarkar.
    :wikipedia_url: https://en.wikipedia.org/wiki/X10_(programming_language)
  record/9d175e93-a490-46a0-b4a3-cad894c5d81a:
    :name: TRON project
    :description: TRON is an open architecture real-time operating system kernel design.
      The project was started by Prof. Dr. Ken Sakamura of the University of Tokyo
      in 1984. The project's goal is to create an ideal computer architecture and
      network, to provide for all of society's needs.
    :wikipedia_url: https://en.wikipedia.org/wiki/TRON_project
  record/aa7ceb43-e2b5-4b15-94fe-8f9cb1e7f76e:
    :name: Fjölnir
    :description: Fjölnir is a programming language developed by professor Snorri
      Agnarsson of computer science at Háskóli Íslands that was mostly used in the
      1980s. The source files usually have the extension fjo or sma.
    :wikipedia_url: https://en.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)
  record/6cd14c7c-421c-463f-95b1-fb74f31a32f3:
    :name: Autodesk 3ds Max
    :description: Autodesk 3ds Max, formerly 3D Studio and 3D Studio Max, is a professional
      3D computer graphics program for making 3D animations, models, games and images.
      It is developed and produced by Autodesk Media and Entertainment. It has modeling
      capabilities and a flexible plugin architecture and must be used on the Microsoft
      Windows platform. It is frequently used by video game developers, many TV commercial
      studios, and architectural visualization studios. It is also used for movie
      effects and movie pre-visualization. For its modeling and animation tools, the
      latest version of 3ds Max also features shaders, dynamic simulation, particle
      systems, radiosity, normal map creation and rendering, global illumination,
      a customizable user interface, new icons, and its own scripting language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Autodesk_3ds_Max
  record/2a42c089-2e6f-43f3-aab8-c1ffa0ce11b8:
    :name: Little Computer 3
    :description: Little Computer 3, or LC-3, is a type of computer educational programming
      language, an assembly language, which is a type of low-level programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Little_Computer_3
  record/8f78e95c-e32d-42e9-8cf1-b19f66dd5e12:
    :name: Processing
    :description: Processing is an open-source graphical library and integrated development
      environment (IDE) built for the electronic arts, new media art, and visual design
      communities with the purpose of teaching non-programmers the fundamentals of
      computer programming in a visual context.
    :wikipedia_url: https://en.wikipedia.org/wiki/Processing_(programming_language)
  record/17f48160-5a74-48dc-aef0-f86541a97d0f:
    :name: S
    :description: S is a statistical programming language developed primarily by John
      Chambers and Rick Becker and Allan Wilks of Bell Laboratories. The aim of the
      language, as expressed by John Chambers, is "to turn ideas into software, quickly
      and faithfully".
    :wikipedia_url: https://en.wikipedia.org/wiki/S_(programming_language)
  record/85069789-9db6-41e2-a7f3-43cbaa2f7d27:
    :name: Gosu
    :description: Gosu is a statically-typed general-purpose programming language
      that runs on the Java Virtual Machine. Its influences include Java, C#, and
      ECMAScript. Development of Gosu began in 2002 internally for Guidewire Software,
      and the language saw its first community release in 2010 under the Apache 2
      license.
    :wikipedia_url: https://en.wikipedia.org/wiki/Gosu_(programming_language)
  record/b15ddb52-ffb3-47c0-b82a-6316faf6172c:
    :name: AutoHotkey
    :description: AutoHotkey is a free, open-source custom scripting language for
      Microsoft Windows, initially aimed at providing easy keyboard shortcuts or hotkeys,
      fast macro-creation and software automation that allows users of most levels
      of computer skill to automate repetitive tasks in any Windows application. User
      interfaces can easily be extended or modified by AutoHotkey. The AutoHotkey
      installation includes its own extensive help file, and web-based documentation
      is also available.
    :wikipedia_url: https://en.wikipedia.org/wiki/AutoHotkey
  record/e44be7f7-e789-44ed-8672-8e991fc2f3d6:
    :name: AngelScript
    :description: AngelScript is a game-oriented compiled scripting language.
    :wikipedia_url: https://en.wikipedia.org/wiki/AngelScript
  record/3786a77f-e72b-4fb1-9f38-35772e386ad0:
    :name: Pro*C
    :description: Pro*C is an embedded SQL programming language used by Oracle Database
      DBMSes. Pro*C uses either C or C++ as its host language. During compilation,
      the embedded SQL statements are interpreted by a precompiler and replaced by
      C or C++ function calls to their respective SQL library. The output from the
      Pro*C precompiler is standard C or C++ code that is then compiled by any one
      of several C or C++ compilers into an executable.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pro*C
  record/d19b7b67-b9d0-46ee-89e6-405c0055deda:
    :name: Magma
    :description: Magma is a computer algebra system designed to solve problems in
      algebra, number theory, geometry and combinatorics. It is named after the algebraic
      structure magma. It runs on Unix-like operating systems, as well as Windows.
    :wikipedia_url: https://en.wikipedia.org/wiki/Magma_(computer_algebra_system)
  record/9399a22b-bc54-4658-951e-e6adf1a0f1b9:
    :name: EXEC 2
    :description: EXEC 2 is an interpreted, command procedure control, computer scripting
      language used by the EXEC 2 Processor supplied with the IBM Virtual Machine/System
      Product (VM/SP) operating system.
    :wikipedia_url: https://en.wikipedia.org/wiki/EXEC_2
  record/a63de8c3-8a0e-40a4-9aa8-4d904c8225be:
    :name: Euphoria
    :description: Euphoria is a programming language created by Robert Craig of Rapid
      Deployment Software in Toronto, Ontario, Canada. Initially developed on the
      Atari ST, the first commercial release was for the 16-bit DOS platform and was
      proprietary. In 2006, with the release of version 3, Euphoria became open-source
      software. The openEuphoria Group continues to administer and develop the project.
      In December 2010, the openEuphoria Group released version 4 of openEuphoria
      along with a new identity and mascot for the project. OpenEuphoria is currently
      available for Windows, Linux, macOS and three flavors of *BSD.
    :wikipedia_url: https://en.wikipedia.org/wiki/Euphoria_(programming_language)
  record/b227c31a-4e49-4c75-ad7a-bf8d35e5be68:
    :name: Pascal Script
    :description: Pascal Script is a scripting language based on the programming language
      Pascal that facilitates automated runtime control over scriptable applications
      and server software. It is implemented by a free scripting engine that includes
      a compiler and an interpreter for byte code.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pascal_Script
  record/84d6d2a7-87ee-4524-84de-18bed9b1ce91:
    :name: R
    :description: R is a programming language and free software environment for statistical
      computing and graphics supported by the R Foundation for Statistical Computing.
      The R language is widely used among statisticians and data miners for developing
      statistical software and data analysis. Polls, data mining surveys, and studies
      of scholarly literature databases show substantial increases in popularity;
      as of September 2020, R ranks 9th in the TIOBE index, a measure of popularity
      of programming languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/R_(programming_language)
  record/05d18adb-e422-48d6-a6e9-17b24121c047:
    :name: ALGOL 58
    :description: |
      ALGOL 58, originally named IAL, is one of the family of ALGOL computer programming languages. It was an early compromise design soon superseded by ALGOL 60. According to John Backus
      "The Zurich ACM-GAMM Conference had two principal motives in proposing the IAL: (a) To provide a means of communicating numerical methods and other procedures between people, and (b) To provide a means of realizing a stated process on a variety of machines..."
    :wikipedia_url: https://en.wikipedia.org/wiki/ALGOL_58
  record/0ad5fbab-47b0-406e-8814-5394d64401fe:
    :name: GAP
    :description: GAP is a computer algebra system for computational discrete algebra
      with particular emphasis on computational group theory.
    :wikipedia_url: https://en.wikipedia.org/wiki/GAP_(computer_algebra_system)
  record/8367b64c-40e0-4b0b-8781-700316a9c12e:
    :name: Janus
    :description: Janus is a computer programming language partially described by
      K. Kahn and Vijay A. Saraswat in the paper "Actors as a special case of concurrent
      constraint (logic) programming" in 1990. It is a concurrent constraint language
      without backtracking.
    :wikipedia_url: https://en.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)
  record/2f810f4b-a4cd-4da8-8221-b805f566e1bb:
    :name: Not Quite C
    :description: Not Quite C (NQC) is a programming language, application programming
      interface (API), and native bytecode compiler toolkit for the Lego Mindstorms,
      Cybermaster and LEGO Spybotics systems. It is based primarily on the C language
      but has specific limitations, such as the maximum number of subroutines and
      variables allowed, which differ depending on the version of firmware the RCX
      has. The language was invented by David Baum. He has released two books on the
      subject.
    :wikipedia_url: https://en.wikipedia.org/wiki/Not_Quite_C
  record/405f7deb-515e-45e3-a2e8-fa1e0708bcf0:
    :name: TECO
    :description: TECO, Text Editor & Corrector is both a character-oriented text
      editor and a programming language, that was developed in 1962 for use on Digital
      Equipment Corporation computers, and has since become available on PCs and Unix.
      Dan Murphy developed TECO while a student at the Massachusetts Institute of
      Technology (MIT).
    :wikipedia_url: https://en.wikipedia.org/wiki/TECO_(text_editor)
  record/bb936787-5e2a-43de-b811-018c5342ca2c:
    :name: Delphi
    :description: Delphi is a software product that uses the Delphi dialect of the
      Object Pascal programming language and provides an integrated development environment
      (IDE) for rapid application development of desktop, mobile, web, and console
      software, currently developed and maintained by Embarcadero Technologies.
    :wikipedia_url: https://en.wikipedia.org/wiki/Delphi_(software)
  record/512f86dd-42f3-4dbb-80a5-1f7939cf7151:
    :name: Common Lisp
    :description: Common Lisp (CL) is a dialect of the Lisp programming language,
      published in ANSI standard document ANSI INCITS 226-1994 [S2008]. The Common
      Lisp HyperSpec, a hyperlinked HTML version, has been derived from the ANSI Common
      Lisp standard.
    :wikipedia_url: https://en.wikipedia.org/wiki/Common_Lisp
  record/0e9987bf-acd6-4b1c-85b5-9e41684d74e8:
    :name: LotusScript
    :description: LotusScript is an object oriented programming language used by Lotus
      Notes and other IBM Lotus Software products.
    :wikipedia_url: https://en.wikipedia.org/wiki/LotusScript
  record/0b91d5ad-c8f2-4d67-bbe8-66f543350115:
    :name: Opa
    :description: Opa is an open-source programming language for developing scalable
      web applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Opa_(programming_language)
  record/ef8b068d-e1f4-4ab8-8ec6-67cf8838e6b5:
    :name: Maple
    :description: Maple is a symbolic and numeric computing environment as well as
      a multi-paradigm programming language. It covers several areas of technical
      computing, such as symbolic mathematics, numerical analysis, data processing,
      visualization, and others. A toolbox, MapleSim, adds functionality for multidomain
      physical modeling and code generation.
    :wikipedia_url: https://en.wikipedia.org/wiki/Maple_(software)
  record/73c90252-7c3f-4544-85ba-5a87a7d63ae0:
    :name: Hop
    :description: Hop is a Lisp-like programming language by Manuel Serrano for web
      2.0 and also the name of the web broker that implements this language. It is
      written in Bigloo Scheme. It is a project funded by INRIA.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hop_(software)
  record/e03c8b03-4939-453a-b564-6dbe527ce97e:
    :name: Modula-2
    :description: Modula-2 is a structured, procedural programming language developed
      between 1977 and 1985 by Niklaus Wirth at ETH Zurich. It was created as the
      language for the operating system (OS) and application software of the Lilith
      personal workstation. It was later used for programming outside the context
      of the Lilith.
    :wikipedia_url: https://en.wikipedia.org/wiki/Modula-2
  record/d60bf7b1-a83a-4781-bcfd-3c05f461330b:
    :name: Yoix
    :description: In computer programming, Yoix is a high-level, general-purpose,
      interpreted, dynamic programming language. The Yoix interpreter is implemented
      using standard Java technology without any add-on packages and requires only
      a Sun-compliant JVM to operate. Initially developed by AT&T Labs researchers
      for internal use, it has been available as free and open source software since
      late 2000.
    :wikipedia_url: https://en.wikipedia.org/wiki/Yoix
  record/37b8161e-744f-4d01-b8ba-1b03218bea1e:
    :name: Solidity
    :description: Solidity is an object-oriented programming language for writing
      smart contracts. It is used for implementing smart contracts on various blockchain
      platforms, most notably, Ethereum. It was developed by Christian Reitwiessner,
      Alex Beregszaszi, and several former Ethereum core contributors to enable writing
      smart contracts on blockchain platforms such as Ethereum.
    :wikipedia_url: https://en.wikipedia.org/wiki/Solidity
  record/0dc290eb-dae4-49fb-bcae-3c941c52f0cc:
    :name: F*
    :description: |-
      F* is a functional programming language inspired by ML and aimed at program verification. Its type system includes dependent types, monadic effects, and refinement types. This allows expressing precise specifications for programs, including functional correctness and security properties. The F* type-checker aims to prove that programs meet their specifications using a combination of SMT solving and manual proofs.
      Programs written in F* can be translated to OCaml, F#, and C for execution. Previous versions of F* could also be translated to JavaScript.
    :wikipedia_url: https://en.wikipedia.org/wiki/F*_(programming_language)
  record/402e8012-b2c7-41a3-b095-54a641e529ba:
    :name: COMTRAN
    :description: COMTRAN is an early programming language developed at IBM. It was
      intended as the business programming equivalent of the scientific programming
      language FORTRAN. It served as one of the forerunners to the COBOL language.
      Developed by Bob Bemer, in 1957, the language was the first to feature the programming
      language element known as a picture clause.
    :wikipedia_url: https://en.wikipedia.org/wiki/COMTRAN
  record/f1174cb3-d02c-453a-9c59-d87fa358fcf6:
    :name: CMS Pipelines
    :description: CMS Pipelines implements the pipeline concept under the VM/CMS operating
      system. The programs in a pipeline operate on a sequential stream of records.
      A program writes records that are read by the next program in the pipeline.
      Any program can be combined with any other because reading and writing is done
      through a device independent interface.
    :wikipedia_url: https://en.wikipedia.org/wiki/CMS_Pipelines
  record/7fa9267e-2d22-43ee-96bb-9fe4f9fa6a32:
    :name: COWSEL
    :description: COWSEL is a programming language designed between 1964 and 1966
      by Robin Popplestone. It was based on an RPN form of Lisp combined with some
      ideas from CPL.
    :wikipedia_url: https://en.wikipedia.org/wiki/COWSEL
  record/8175790a-1148-4136-8ce8-f441a8a43126:
    :name: APL
    :description: APL is a programming language developed in the 1960s by Kenneth
      E. Iverson. Its central datatype is the multidimensional array. It uses a large
      range of special graphic symbols to represent most functions and operators,
      leading to very concise code. It has been an important influence on the development
      of concept modeling, spreadsheets, functional programming, and computer math
      packages. It has also inspired several other programming languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/APL_(programming_language)
  record/94847f21-1bcf-4138-98a9-31de48c6ec14:
    :name: WebDNA
    :description: WebDNA is a server-side scripting, interpreted language with an
      embedded database system, specifically designed for the World Wide Web. Its
      primary use is in creating database-driven dynamic web page applications. Released
      in 1995, the name was registered as a trademark in 1998. WebDNA is currently
      maintained by WebDNA Software Corporation.
    :wikipedia_url: https://en.wikipedia.org/wiki/WebDNA
  record/92a69f71-ba83-4fef-b55e-19e49798e7d4:
    :name: OCaml
    :description: OCaml is a general-purpose, multi-paradigm programming language
      which extends the Caml dialect of ML with object-oriented features. OCaml was
      created in 1996 by Xavier Leroy, Jérôme Vouillon, Damien Doligez, Didier Rémy,
      Ascánder Suárez, and others.
    :wikipedia_url: https://en.wikipedia.org/wiki/OCaml
  record/1d491893-0943-467f-8190-83cd135c16c1:
    :name: AutoIt
    :description: AutoIt is a freeware programming language for Microsoft Windows.
      In its earliest release, it was primarily intended to create automation scripts
      for Microsoft Windows programs but has since grown to include enhancements in
      both programming language design and overall functionality.
    :wikipedia_url: https://en.wikipedia.org/wiki/AutoIt
  record/2d9856e4-2b44-4f1d-822a-86418cea34c0:
    :name: Logo
    :description: 'Logo is an educational programming language, designed in 1967 by
      Wally Feurzeig, Seymour Papert, and Cynthia Solomon. Logo is not an acronym:
      the name was coined by Feurzeig while he was at Bolt, Beranek and Newman, and
      derives from the Greek logos, meaning word or thought.'
    :wikipedia_url: https://en.wikipedia.org/wiki/Logo_(programming_language)
  record/632ebc5d-3e47-4e14-b977-e61aff862a8d:
    :name: Lisp Machine Lisp
    :description: Lisp Machine Lisp is a programming language, a dialect of the language
      Lisp. A direct descendant of Maclisp, it was initially developed in the mid
      to late 1970s as the system programming language for the Massachusetts Institute
      of Technology (MIT) Lisp machines. Lisp Machine Lisp was also the Lisp dialect
      with the most influence on the design of Common Lisp.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lisp_Machine_Lisp
  record/2d9be55d-12c2-4e3b-a860-08d78d0320d5:
    :name: Nim
    :description: Nim is an imperative, general-purpose, multi-paradigm, statically
      typed, systems, compiled programming language designed and developed by Andreas
      Rumpf. It is designed to be "efficient, expressive, and elegant", supporting
      metaprogramming, functional, message passing, procedural, and object-oriented
      programming styles by providing several features such as compile time code generation,
      algebraic data types, a foreign function interface (FFI) with C, C++, Objective-C,
      and JavaScript, as well as supporting compiling to C, C++, Objective-C, and
      JavaScript.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nim_(programming_language)
  record/7983937b-e63c-4309-bf67-49a0eb40fcdb:
    :name: TACPOL
    :description: TACPOL is a block structured programming language developed by the
      United States Army for the TACFIRE Tactical Fire Direction command and control
      application. TACPOL is similar to PL/I.
    :wikipedia_url: https://en.wikipedia.org/wiki/TACPOL_(programming_language)
  record/9a428285-063a-4fd5-b796-55c47f240cc4:
    :name: Esterel
    :description: Esterel is a synchronous programming language for the development
      of complex reactive systems. The imperative programming style of Esterel allows
      the simple expression of parallelism and preemption. As a consequence, it is
      well suited for control-dominated model designs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Esterel
  record/3a98f539-e528-4113-b217-c0c473b3825d:
    :name: Scripting language
    :description: A scripting or script language is a programming language for a special
      run-time environment that automates the execution of tasks; the tasks could
      alternatively be executed one-by-one by a human operator. Scripting languages
      are often interpreted, rather than compiled.
    :wikipedia_url: https://en.wikipedia.org/wiki/Scripting_language
  record/a163ea27-decb-45a9-ac2e-060e90b9a1c0:
    :name: XSharp
    :description: X#, pronounced X sharp and often written XSharp, is an xBase-compatible
      programming language for the Microsoft .NET platform. X# has been built on top
      of Roslyn, the open source architecture behind the current Microsoft C# and
      Visual Basic .NET compilers.
    :wikipedia_url: https://en.wikipedia.org/wiki/XSharp
  record/349e1b1e-58d6-4417-aea4-f12afaa1c6e1:
    :name: Io
    :description: Io is a pure object-oriented programming language inspired by Smalltalk,
      Self, Lua, Lisp, Act1, and NewtonScript. Io has a prototype-based object model
      similar to the ones in Self and NewtonScript, eliminating the distinction between
      instance and class. Like Smalltalk, everything is an object and it uses dynamic
      typing. Like Lisp, programs are just data trees. Io uses actors for concurrency.
    :wikipedia_url: https://en.wikipedia.org/wiki/Io_(programming_language)
  record/861fc28f-a116-40a3-95ce-241ed0c1ab81:
    :name: Modula
    :description: The Modula programming language is a descendant of the Pascal language.
      It was developed in Switzerland, at ETH Zurich, in the mid-1970s by Niklaus
      Wirth, the same person who designed Pascal. The main innovation of Modula over
      Pascal is a module system, used for grouping sets of related declarations into
      program units; hence the name Modula. The language is defined in a report by
      Wirth called Modula. A language for modular multiprogramming published 1976.
    :wikipedia_url: https://en.wikipedia.org/wiki/Modula
  record/16badfd4-42fc-423c-8baf-55cd0e593d68:
    :name: Edinburgh IMP
    :description: Edinburgh IMP is a development of Atlas Autocode, initially developed
      around 1966-1969 at the University of Edinburgh, Scotland. It is a general-purpose
      programming language which was used heavily for systems programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Edinburgh_IMP
  record/b5658b97-acc0-498a-8bc8-638c57d84b7c:
    :name: PLANC
    :description: PLANC is a high level computer programming language. The acronym
      stands for Programming LAnguage for Nd Computers.
    :wikipedia_url: https://en.wikipedia.org/wiki/PLANC
  record/e31169f5-d587-4b78-9633-e61b4002f345:
    :name: Swift
    :description: Swift is a general-purpose, multi-paradigm, compiled programming
      language developed by Apple Inc. and the open-source community, first released
      in 2014. Swift was developed as a replacement for Apple's earlier programming
      language Objective-C, as Objective-C had been largely unchanged since the early
      1980s and lacked modern language features. Swift works with Apple's Cocoa and
      Cocoa Touch frameworks, and a key aspect of Swift's design was the ability to
      interoperate with the huge body of existing Objective-C code developed for Apple
      products over the previous decades. It is built with the open source LLVM compiler
      framework and has been included in Xcode since version 6, released in 2014.
      On Apple platforms, it uses the Objective-C runtime library which allows C,
      Objective-C, C++ and Swift code to run within one program.
    :wikipedia_url: https://en.wikipedia.org/wiki/Swift_(programming_language)
  record/b2187969-0553-43c4-85e4-26f8b095ada1:
    :name: Opal
    :description: OPAL is a functional programming language first developed at the
      Technical University of Berlin.
    :wikipedia_url: https://en.wikipedia.org/wiki/Opal_(programming_language)
  record/17683c82-bf66-49db-8c04-95add6be95a2:
    :name: Limbo
    :description: Limbo is a programming language for writing distributed systems
      and is the language used to write applications for the Inferno operating system.
      It was designed at Bell Labs by Sean Dorward, Phil Winterbottom, and Rob Pike.
    :wikipedia_url: https://en.wikipedia.org/wiki/Limbo_(programming_language)
  record/b3a9203f-d464-4b08-b48b-50c431cc0719:
    :name: Stata
    :description: Stata is a general-purpose statistical software package created
      in 1985 by StataCorp. Most of its users work in research, especially in the
      fields of economics, sociology, political science, biomedicine, and epidemiology.
    :wikipedia_url: https://en.wikipedia.org/wiki/Stata
  record/da69424f-5a6a-4307-bbc9-629a89ecf2fd:
    :name: Averest
    :description: Averest is a synchronous programming language and set of tools to
      specify, verify, and implement reactive systems. It includes a compiler for
      synchronous programs, a symbolic model checker, and a tool for hardware/software
      synthesis.
    :wikipedia_url: https://en.wikipedia.org/wiki/Averest
  record/0441a5ea-ccc6-49ea-ab8d-8246043d8fd4:
    :name: Julia
    :description: Julia is a high-level, high-performance, dynamic programming language.
      While it is a general-purpose language and can be used to write any application,
      many of its features are well suited for numerical analysis and computational
      science.
    :wikipedia_url: https://en.wikipedia.org/wiki/Julia_(programming_language)
  record/184ee3bf-659d-40da-9999-0fa7535879a0:
    :name: COMAL
    :description: COMAL is a computer programming language developed in Denmark by
      Børge R. Christensen and Benedict Løfstedt and originally released in 1975.
      COMAL was one of the few structured programming languages that was available
      for and comfortably usable on 8-bit home computers. It was based on the seminal
      BASIC programming language, adding multi-line statements and well-defined subroutines
      among other additions.
    :wikipedia_url: https://en.wikipedia.org/wiki/COMAL
  record/64d09a0f-5593-41ec-bf28-6d557618f6cb:
    :name: Flex
    :description: In computing, the FLEX language was developed by Alan Kay in the
      late 1960s while exploring ideas that would later evolve into the Smalltalk
      programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Flex_(programming_language)
  record/4e85c3e0-e016-481a-aa8a-ebca5202f254:
    :name: GNU Octave
    :description: |-
      GNU Octave is software featuring a high-level programming language, primarily intended for numerical computations. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. It may also be used as a batch-oriented language.
      Since it is part of the GNU Project, it is free software under the terms of the GNU General Public License.
    :wikipedia_url: https://en.wikipedia.org/wiki/GNU_Octave
  record/0b402c04-a088-4dc5-b20e-dd8fab3877c1:
    :name: SuperCollider
    :description: SuperCollider is an environment and programming language originally
      released in 1996 by James McCartney for real-time audio synthesis and algorithmic
      composition.
    :wikipedia_url: https://en.wikipedia.org/wiki/SuperCollider
  record/1b06e503-bce5-4f37-a494-28a28fc3999a:
    :name: C--
    :description: C-- is a C-like programming language. Its creators, functional programming
      researchers Simon Peyton Jones and Norman Ramsey, designed it to be generated
      mainly by compilers for very high-level languages rather than written by human
      programmers. Unlike many other intermediate languages, its representation is
      plain ASCII text, not bytecode or another binary format.
    :wikipedia_url: https://en.wikipedia.org/wiki/C--
  record/667c470c-04e8-45b3-a7c3-4f602f8f8c4a:
    :name: TempleOS
    :description: TempleOS is a biblical-themed lightweight operating system designed
      to be the Third Temple prophesied in the Bible. It was created by the late American
      programmer Terry A. Davis, who developed it alone over the course of a decade
      after a series of prophetic episodes that he later described as a revelation
      from God.
    :wikipedia_url: https://en.wikipedia.org/wiki/TempleOS
  record/f62eea3a-dd42-429d-8faf-3e4ebea91259:
    :name: FLOW-MATIC
    :description: FLOW-MATIC, originally known as B-0, was the first English-like
      data processing language. It was developed for the UNIVAC I at Remington Rand
      under Grace Hopper from 1955 to 1959, and helped shape the development of COBOL.
    :wikipedia_url: https://en.wikipedia.org/wiki/FLOW-MATIC
  record/625c13d4-0b09-44c3-969b-1402b34b98ed:
    :name: AIMMS
    :description: AIMMS is a prescriptive analytics software company with offices
      in the Netherlands, United States, China and Singapore.
    :wikipedia_url: https://en.wikipedia.org/wiki/AIMMS
  record/841ceff2-0373-4a35-9685-c4a9d9a60af1:
    :name: OpenGL Shading Language
    :description: OpenGL Shading Language (GLSL) is a high-level shading language
      with a syntax based on the C programming language. It was created by the OpenGL
      ARB to give developers more direct control of the graphics pipeline without
      having to use ARB assembly language or hardware-specific languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/OpenGL_Shading_Language
  record/beff5517-fa05-404a-907f-531044408e7a:
    :name: XSLT
    :description: XSLT is a language for transforming XML documents into other XML
      documents, or other formats such as HTML for web pages, plain text or XSL Formatting
      Objects, which may subsequently be converted to other formats, such as PDF,
      PostScript and PNG. XSLT 1.0 is widely supported in modern web browsers.
    :wikipedia_url: https://en.wikipedia.org/wiki/XSLT
  record/41df8dc0-b0a9-45e4-875b-78b11d0e9ba3:
    :name: Speakeasy
    :description: Speakeasy is a numerical computing interactive environment also
      featuring an interpreted programming language. It was initially developed for
      internal use at the Physics Division of Argonne National Laboratory by the theoretical
      physicist Stanley Cohen. He eventually founded Speakeasy Computing Corporation
      to make the program available commercially.
    :wikipedia_url: https://en.wikipedia.org/wiki/Speakeasy_(computational_environment)
  record/c6912644-753e-411c-842d-2e72c1afcc28:
    :name: Protel
    :description: Protel stands for "Procedure Oriented Type Enforcing Language".
      It is a programming language created by Nortel Networks and used on telecommunications
      switching systems such as the DMS-100. Protel-2 is the object-oriented version
      of Protel.
    :wikipedia_url: https://en.wikipedia.org/wiki/Protel
  record/af1ace9a-ec98-46fb-832b-b105f88fb81d:
    :name: F-Script
    :description: F-Script is an object-oriented scripting programming language for
      Apple's macOS operating system developed by Philippe Mougin. F-Script is an
      interactive language based on Smalltalk, using macOS's native Cocoa API.
    :wikipedia_url: https://en.wikipedia.org/wiki/F-Script_(programming_language)
  record/aa1607c3-08f5-45f0-88d2-eba45967b0c8:
    :name: Mary
    :description: Mary is a programming language designed and implemented by RUNIT
      at Trondheim, Norway in the 1970s. It borrowed many features from ALGOL 68 but
      was designed for systems programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mary_(programming_language)
  record/cc9e92e5-aa90-4851-bd02-912967dd60d3:
    :name: Ethereum
    :description: Ethereum is a decentralized open source blockchain featuring smart
      contract functionality. Ether (ETH) is the native cryptocurrency token of the
      Ethereum platform. It is the second-largest cryptocurrency by market capitalization,
      behind Bitcoin. Ethereum is the most actively used blockchain in the world.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ethereum
  record/912c396f-41b4-4a06-8fb8-aefe56bb99a3:
    :name: JAL
    :description: JAL  is a Pascal-like programming language and compiler that generates
      executable code for PIC microcontrollers. It is a free-format language with
      a compiler that runs on Linux, MS-Windows and MS-DOS. It is configurable and
      extendable through the use of libraries and can even be combined with PIC assembly
      language.
    :wikipedia_url: https://en.wikipedia.org/wiki/JAL_(compiler)
  record/593b9e64-ea16-402e-9d8f-bf5f25e4fd3c:
    :name: Hack
    :description: Hack is a programming language for the HipHop Virtual Machine (HHVM),
      created by Facebook as a dialect of PHP. The language implementation is open-source,
      licensed under the MIT License.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hack_(programming_language)
  record/8ae7129a-a34c-4897-b839-e561231d4edc:
    :name: LPMud
    :description: LPMud, abbreviated LP, is a family of MUD server software. Its first
      instance, the original LPMud game driver, was developed in 1989 by Lars Pensjö.
      LPMud was innovative in its separation of the MUD infrastructure into a virtual
      machine and a development framework written in the LPC programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/LPMud
  record/dbd96a59-ceec-4f87-a9ee-bdebcd3f86d2:
    :name: General Algebraic Modeling System
    :description: The General Algebraic Modeling System (GAMS) is a high-level modeling
      system for mathematical optimization. GAMS is designed for modeling and solving
      linear, nonlinear, and mixed-integer optimization problems. The system is tailored
      for complex, large-scale modeling applications and allows the user to build
      large maintainable models that can be adapted to new situations. The system
      is available for use on various computer platforms. Models are portable from
      one platform to another.
    :wikipedia_url: https://en.wikipedia.org/wiki/General_Algebraic_Modeling_System
  record/7939f5cc-105b-4c3d-b6a1-27b409fb575f:
    :name: B
    :description: B is a programming language developed at Bell Labs circa 1969. It
      is the work of Ken Thompson with Dennis Ritchie.
    :wikipedia_url: https://en.wikipedia.org/wiki/B_(programming_language)
  record/36ef5074-50fd-4afe-9770-4a30b3b11bb9:
    :name: OpenCL
    :description: OpenCL is a framework for writing programs that execute across heterogeneous
      platforms consisting of central processing units (CPUs), graphics processing
      units (GPUs), digital signal processors (DSPs), field-programmable gate arrays
      (FPGAs) and other processors or hardware accelerators. OpenCL specifies programming
      languages for programming these devices and application programming interfaces
      (APIs) to control the platform and execute programs on the compute devices.
      OpenCL provides a standard interface for parallel computing using task- and
      data-based parallelism.
    :wikipedia_url: https://en.wikipedia.org/wiki/OpenCL
  record/2837c934-0c1c-4a35-85ff-9a505cab1b7b:
    :name: ParaSail
    :description: Parallel Specification and Implementation Language (ParaSail) is
      an object-oriented parallel programming language. Its design and ongoing implementation
      is described in a blog and on its official website.
    :wikipedia_url: https://en.wikipedia.org/wiki/ParaSail_(programming_language)
  record/40714073-17a9-4f8a-9146-d7bb2d5cfce8:
    :name: Ruby
    :description: Ruby is an interpreted, high-level, general-purpose programming
      language. It was designed and developed in the mid-1990s by Yukihiro "Matz"
      Matsumoto in Japan.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ruby_(programming_language)
  record/a8f71bc7-ee0f-4e9f-92a5-ebdef973c224:
    :name: Lisp
    :description: |-
      Lisp is a family of programming languages with a long history and a distinctive, fully parenthesized prefix notation.
      Originally specified in 1958, Lisp is the second-oldest high-level programming language in widespread use today. Only Fortran is older, by one year. Lisp has changed since its early days, and many dialects have existed over its history. Today, the best-known general-purpose Lisp dialects are Racket, Common Lisp, Scheme and Clojure.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lisp_(programming_language)
  record/966abc9c-38e0-46a2-8667-e2d86eccea75:
    :name: IBM HAScript
    :description: HAScript, or Host Access Script, is an IBM-developed macro language
      with an XML syntax designed for programmatic interaction with terminal-based
      applications. HAScript is based on a state machine principle. The first commercial
      implementation appeared in IBM's Host On-Demand in the late 1990s.
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_HAScript
  record/0f384a7c-0b7b-443c-a94c-fcbd5969b216:
    :name: Cg
    :description: Cg and High-Level Shading Language (HLSL) are two names given to
      a high-level shading language developed by Nvidia and Microsoft for programming
      shaders. Cg/HLSL is based on the C programming language and although they share
      the same core syntax, some features of C were modified and new data types were
      added to make Cg/HLSL more suitable for programming graphics processing units.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cg_(programming_language)
  record/ec7760bb-325b-485c-9a2b-9cf3c241929c:
    :name: Apache Pig
    :description: |-
      Apache Pig
      is a high-level platform for creating programs that run on Apache Hadoop. The language for this platform is called Pig Latin. Pig can execute its Hadoop jobs in MapReduce, Apache Tez, or Apache Spark. Pig Latin abstracts the programming from the Java MapReduce idiom into a notation which makes MapReduce programming high level, similar to that of SQL for relational database management systems. Pig Latin can be extended using user-defined functions (UDFs) which the user can write in Java, Python, JavaScript, Ruby or Groovy and then call directly from the language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Apache_Pig
  record/e13f6622-0455-4984-b2eb-809463b978a9:
    :name: ECMAScript
    :description: "ECMAScript \nis a general-purpose programming language, standardized
      by Ecma International according to the document ECMA-262. It is a JavaScript
      standard meant to ensure the interoperability of Web pages across different
      Web browsers. ECMAScript is commonly used for client-side scripting on the World
      Wide Web, and it is increasingly being used for writing server applications
      and services using Node.js."
    :wikipedia_url: https://en.wikipedia.org/wiki/ECMAScript
  record/8b3e117d-2fea-4219-89a7-8fb0878558c4:
    :name: Logtalk
    :description: Logtalk is an object-oriented logic programming language that extends
      and leverages the Prolog language with a feature set suitable for programming
      in the large. It provides support for encapsulation and data hiding, separation
      of concerns and enhanced code reuse. Logtalk uses standard Prolog syntax with
      the addition of a few operators and directives.
    :wikipedia_url: https://en.wikipedia.org/wiki/Logtalk
  record/2f5e8216-4d64-4fb0-9545-bb191383f4ac:
    :name: Script.NET
    :description: Script.NET or S# is a metaprogramming language that provides scripting
      functionality in Microsoft .NET applications, allowing runtime execution of
      custom functionality, similar to VBA in Microsoft Office applications. The syntax
      of Script.NET is similar to JavaScript. It is designed to be simple and efficient
      scripting language allowing to customize .NET applications. The language has
      a true runtime interpreter, and it is executed without generating additional
      in-memory assemblies.
    :wikipedia_url: https://en.wikipedia.org/wiki/Script.NET
  record/141be03b-1bf5-4b11-8b45-40ad0d275d74:
    :name: Newspeak
    :description: Newspeak is a programming language and platform in the tradition
      of Smalltalk and Self being developed by a team led by Gilad Bracha. The platform
      includes an IDE, a GUI library, and standard libraries. Starting in 2006, Cadence
      Design Systems funded its development and employed the main contributors, but
      ceased funding in January 2009.
    :wikipedia_url: https://en.wikipedia.org/wiki/Newspeak_(programming_language)
  record/173d51fa-dc06-4d5a-b92f-43cf9ead52ea:
    :name: ARexx
    :description: ARexx is an implementation of the Rexx language for the Amiga, written
      in 1987 by William S. Hawes, with a number of Amiga-specific features beyond
      standard REXX facilities. Like most REXX implementations, ARexx is an interpreted
      language. Programs written for ARexx are called "scripts", or "macros"; several
      programs offer the ability to run ARexx scripts in their main interface as macros.
    :wikipedia_url: https://en.wikipedia.org/wiki/ARexx
  record/10734ac2-6682-492d-aeb4-27c722b092d6:
    :name: DATATRIEVE
    :description: DATATRIEVE is a database query and report writer tool from Hewlett-Packard.
      It runs on the OpenVMS operating system, as well as several PDP-11 operating
      systems. DATATRIEVE's command structure is nearly plain English, and it is an
      early example of a Fourth Generation Language (4GL).
    :wikipedia_url: https://en.wikipedia.org/wiki/DATATRIEVE
  record/bc1cd813-4321-4c32-a6f9-cdd65d74916e:
    :name: SLIP
    :description: SLIP is a list processing computer programming language, invented
      by Joseph Weizenbaum in the 1960s. The name SLIP stands for Symmetric LIst Processor.
      It was first implemented as an extension to the Fortran programming language,
      and later embedded into MAD and ALGOL. The best known program written in the
      language is ELIZA, an early natural language processing computer program created
      by Weizenbaum at the MIT Artificial Intelligence Laboratory.
    :wikipedia_url: https://en.wikipedia.org/wiki/SLIP_(programming_language)
  record/f33eac11-39cf-4b0f-b301-76ab357521f5:
    :name: Not eXactly C
    :description: Not eXactly C, or NXC, is a high-level programming language for
      the Lego Mindstorms NXT designed by John Hansen in 2006. NXC, which is short
      for Not eXactly C, is based on Next Byte Codes, an assembly language. NXC has
      a syntax like C. The IDE for NXC is the Bricx Command Center.
    :wikipedia_url: https://en.wikipedia.org/wiki/Not_eXactly_C
  record/884f1a0b-1f54-4aed-b388-eb8d859473fb:
    :name: PowerBuilder
    :description: PowerBuilder is an integrated development environment owned by SAP
      since the acquisition of Sybase in 2010. On July 5, 2016, SAP and Appeon entered
      into an agreement whereby Appeon would be responsible for developing, selling,
      and supporting PowerBuilder.
    :wikipedia_url: https://en.wikipedia.org/wiki/PowerBuilder
  record/e5353458-e55c-4e90-8079-3df955fceb02:
    :name: Planner
    :description: Planner is a programming language designed by Carl Hewitt at MIT,
      and first published in 1969. First, subsets such as Micro-Planner and Pico-Planner
      were implemented, and then essentially the whole language was implemented as
      Popler by Julian Davies at the University of Edinburgh in the POP-2 programming
      language. Derivations such as QA4, Conniver, QLISP and Ether were important
      tools in artificial intelligence research in the 1970s, which influenced commercial
      developments such as Knowledge Engineering Environment (KEE) and Automated Reasoning
      Tool (ART).
    :wikipedia_url: https://en.wikipedia.org/wiki/Planner_(programming_language)
  record/b35f5fa8-f17e-4438-970d-00333e51ac9b:
    :name: Ceylon
    :description: |-
      Ceylon was an object-oriented, strongly statically typed programming language with an emphasis on immutability, created by Red Hat. Ceylon programs run on the Java virtual machine (JVM), and could be compiled to JavaScript.
      The language design focuses on source code readability, predictability, toolability, modularity, and metaprogrammability.
    :wikipedia_url: https://en.wikipedia.org/wiki/Ceylon_(programming_language)
  record/652da2c1-bee5-421c-ad51-588f25337596:
    :name: PicoLisp
    :description: 'PicoLisp is a programming language, a dialect of the language Lisp.
      It runs on operating systems including Linux and others that are Portable Operating
      System Interface (POSIX) compliant. Its most prominent features are simplicity
      and minimalism. It is built on one internal data type: a cell. On the language
      level, a programmer can use three different data types being represented by
      cells and differentiated by bits at the end of the cell. It is free and open-source
      software released under an MIT License (X11).'
    :wikipedia_url: https://en.wikipedia.org/wiki/PicoLisp
  record/7b245ba4-9c82-4563-8497-0782c04df90b:
    :name: Visual DialogScript
    :description: Visual DialogScript (VDS) is an interpreted programming language
      for Microsoft Windows. It can be used to create small, fast programs. VDS has
      a large number of dialog and graphical elements available to create professional
      looking programs. VDS programs have access to the Windows API; therefore, it
      is possible to write applications that can perform the same advanced tasks as
      other programming languages such as Visual Basic, C++, or Delphi.
    :wikipedia_url: https://en.wikipedia.org/wiki/Visual_DialogScript
  record/a7831309-50f4-49ad-b3c5-177ae6ec8c0b:
    :name: OpenVera
    :description: OpenVera was a hardware verification language developed by System
      Science and acquired by Synopsys. OpenVera was an interoperable, open hardware
      verification language for testbench creation. The OpenVera language was used
      as the basis for the advanced verification features in the IEEE Std. 1800 SystemVerilog
      standard, for the benefit of the entire verification community including companies
      in the semiconductor, systems, IP and EDA industries along with verification
      services.
    :wikipedia_url: https://en.wikipedia.org/wiki/OpenVera
  record/c4f9f1fe-ca9b-4e8c-a431-2a0516fc3a6c:
    :name: SPITBOL
    :description: SPITBOL is a compiled implementation of the SNOBOL4 programming
      language. Originally targeted for the IBM System/360 and System/370 family of
      computers, it has now been ported to most major microprocessors including the
      SPARC. It was created by Robert Dewar and Ken Belcher, who were then at the
      Illinois Institute of Technology.
    :wikipedia_url: https://en.wikipedia.org/wiki/SPITBOL
  record/9c025f69-f159-4df0-8b13-c7e18530ec61:
    :name: E
    :description: E is an object-oriented programming language for secure distributed
      computing, created by Mark S. Miller, Dan Bornstein, and others at Electric
      Communities in 1997. E is mainly descended from the concurrent language Joule
      and from Original-E, a set of extensions to Java for secure distributed programming.
      E combines message-based computation with Java-like syntax. A concurrency model
      based on event loops and promises ensures that deadlock can never occur.
    :wikipedia_url: https://en.wikipedia.org/wiki/E_(programming_language)
  record/96275f00-0cdb-4c3c-9759-37ba4b81b4c3:
    :name: Seed7
    :description: Seed7 is an extensible general-purpose programming language designed
      by Thomas Mertes. It is syntactically similar to Pascal and Ada. Along with
      many other features, it provides an extension mechanism. Seed7 supports introducing
      new syntax elements and their semantics into the language, and allows new language
      constructs to be defined and written in Seed7. For example, programmers can
      introduce syntax and semantics of new statements and user defined operator symbols.
      The implementation of Seed7 differs significantly from that of languages with
      hard-coded syntax and semantics.
    :wikipedia_url: https://en.wikipedia.org/wiki/Seed7
  record/84428cee-bf1f-43d6-8b2f-a298e1582adf:
    :name: GNU E
    :description: |-
      GNU E is an extension of C++ designed for writing software systems to
      support persistent applications. It was designed as part of the
      Exodus project.
    :wikipedia_url: https://en.wikipedia.org/wiki/GNU_E
  record/dad89af2-ebb0-447b-a78b-a536e42d8966:
    :name: Standard ML
    :description: Standard ML (SML) is a general-purpose, modular, functional programming
      language with compile-time type checking and type inference. It is popular among
      compiler writers and programming language researchers, as well as in the development
      of theorem provers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Standard_ML
  record/3193f98d-3b94-449a-ade8-4d8cc23538db:
    :name: "<i>Robot Battle</i>"
    :description: Robot Battle is a programming game for Microsoft Windows where players
      design and code adaptable battling robots. Robot Battle takes strategy rather
      than reflexes, accuracy, or timing to succeed. What differentiates one robot
      from the next is its programming, for which the player is responsible. The game
      is inspired by the similar game RobotWar.
    :wikipedia_url: https://en.wikipedia.org/wiki/Robot_Battle
  record/e9ecd59a-5c2d-4f73-8c3e-857d8e5d6e09:
    :name: IBM RPG
    :description: RPG is a modern proprietary high-level programming language (HLL)
      for business applications, popular on the IBM i operating system on IBM Power
      Systems hardware. The current version, RPG IV, a.k.a. ILE RPG, provides a modern
      programming environment. IBM has evolved the language, providing new capabilities,
      to take advantage of technologies that have grown up in the marketplace.
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_RPG
  record/49cb8b25-2954-4d7c-aeec-17ad832cfb83:
    :name: TELCOMP
    :description: TELCOMP was a programming language developed at Bolt, Beranek and
      Newman (BBN) in about 1964 and in use until at least 1974. BBN offered TELCOMP
      as a paid service, with first revenue in October 1965. The service was sold
      to a company called On-Line Systems in 1972. In the United Kingdom, TELCOMP
      was offered by Time Sharing, Ltd, a partnership between BBN and an entrepreneur
      named Richard Evans.
    :wikipedia_url: https://en.wikipedia.org/wiki/TELCOMP
  record/557ccb01-b875-4e22-b42b-51724794d8ee:
    :name: LiveScript
    :description: LiveScript is a functional programming language that compiles to
      JavaScript. It was created by Jeremy Ashkenas—the creator of CoffeeScript—along
      with Satoshi Muramaki, George Zahariev, and many others. Not to be confused
      with JavaScript.
    :wikipedia_url: https://en.wikipedia.org/wiki/LiveScript
  record/79a4f2dc-f630-4820-9d20-a46288e7e794:
    :name: Kent Recursive Calculator
    :description: |-
      KRC is a lazy functional language developed by David Turner from November 1979 to October 1981 based on SASL, with pattern matching, guards and ZF expressions .
      Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon J. Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kent_Recursive_Calculator
  record/110df1be-90c7-4ef1-8f6f-400fe22a0389:
    :name: PCASTL
    :description: The PCASTL is an interpreted high-level programming language. It
      was created in 2008 by Philippe Choquette. The PCASTL is designed to ease the
      writing of self-modifying code. The language has reserved words parent and childset
      to access the nodes of the syntax tree of the currently written code.
    :wikipedia_url: https://en.wikipedia.org/wiki/PCASTL
  record/6ab63190-6f14-4ade-a779-02942669a43c:
    :name: Lite-C
    :description: Lite-C is a programming language for multimedia applications and
      personal computer games, using a syntax subset of the C language with some elements
      of the C++ language. Its main difference to C is the native implementation of
      multimedia and computer game related objects like sounds, images, movies, GUI
      elements, 2D and 3D models, collision detection and rigid body physics. Lite-C
      executables are compiled instead of interpreted. Lite-C runs on 32-bit and 64-bit
      Windows XP or Vista operating systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lite-C
  record/e71900af-f60b-4b36-a668-31593f471795:
    :name: BETA
    :description: BETA is a pure object-oriented language originating within the "Scandinavian
      School" in object-orientation where the first object-oriented language Simula
      was developed. Among its notable features, it introduced nested classes, and
      unified classes with procedures into so called patterns.
    :wikipedia_url: https://en.wikipedia.org/wiki/BETA_(programming_language)
  record/a6f851ad-00ce-442e-8153-92ee531c466c:
    :name: Joy
    :description: The Joy programming language in computer science is a purely functional
      programming language that was produced by Manfred von Thun of La Trobe University
      in Melbourne, Australia. Joy is based on composition of functions rather than
      lambda calculus. It has turned out to have many similarities to Forth, due not
      to design but to a sort of parallel evolution and convergence. It was also inspired
      by the function-level programming style of John Backus's FP.
    :wikipedia_url: https://en.wikipedia.org/wiki/Joy_(programming_language)
  record/4cdacfb6-a2ff-4a8c-afa3-48a6ed6fc4de:
    :name: PLEX
    :description: PLEX is a special-purpose, concurrent, real-time programming language.
      The proprietary PLEX language is closely tied to the architecture of Ericsson's
      AXE telephone exchanges which it was designed to control. PLEX was developed
      by Göran Hemdahl at Ericsson in the 1970s, and it has been continuously evolving
      since then. PLEX was described in 2008 as "a cross between Fortran and a macro
      assembler."
    :wikipedia_url: https://en.wikipedia.org/wiki/PLEX_(programming_language)
  record/d2da7e1f-05f1-42f2-aba5-8c2f9156c2b8:
    :name: Arc
    :description: Arc is a programming language, a dialect of the language Lisp, developed
      by Paul Graham and Robert Morris. It is free and open-source software released
      under the Artistic License 2.0.
    :wikipedia_url: https://en.wikipedia.org/wiki/Arc_(programming_language)
  record/e3c701c1-6bd0-4fc8-8b42-d1d0f630632a:
    :name: Claire
    :description: Claire is a high-level functional and object-oriented programming
      language with rule processing abilities. It was designed by Yves Caseau at Bouygues'
      e-Lab research laboratory, and received its final definition in 2004.
    :wikipedia_url: https://en.wikipedia.org/wiki/Claire_(programming_language)
  record/ff30c17c-a556-4e6e-8354-d42a39a0da72:
    :name: F
    :description: F is a modular, compiled, numeric programming language, designed
      for scientific programming and scientific computation. F was developed as a
      modern Fortran, thus making it a subset of Fortran 95. It combines both numerical
      and data abstraction features from these languages. F is also backwards compatible
      with Fortran 77, allowing calls to Fortran 77 programs. F was first included
      in the g95 compiler.
    :wikipedia_url: https://en.wikipedia.org/wiki/F_(programming_language)
  record/1db8ad38-0b01-4a5d-a854-af29eb77748d:
    :name: IBM 1620
    :description: The IBM 1620 was announced by IBM on October 21, 1959, and marketed
      as an inexpensive "scientific computer". After a total production of about two
      thousand machines, it was withdrawn on November 19, 1970. Modified versions
      of the 1620 were used as the CPU of the IBM 1710 and IBM 1720 Industrial Process
      Control Systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_1620
  record/4e33e701-4643-4cfe-8c49-01bd5c5f58be:
    :name: Nord Programming Language
    :description: Nord Programming Language, commonly abbreviated NPL, was a programming
      language by the Norwegian minicomputer manufacturer Norsk Data. It shipped as
      a standard component of the operating system SINTRAN III.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nord_Programming_Language
  record/7b21fc00-60a3-4809-b79b-7d9c6c0dafd9:
    :name: SAIL
    :description: SAIL, the Stanford Artificial Intelligence Language, was developed
      by Dan Swinehart and Bob Sproull of the Stanford AI Lab in 1970. It was originally
      a large ALGOL 60-like language for the PDP-10 and DECSYSTEM-20.
    :wikipedia_url: https://en.wikipedia.org/wiki/SAIL_(programming_language)
  record/0f2a7818-4558-43b3-bdd7-48ce41266ec0:
    :name: Factor
    :description: Factor is a stack-oriented programming language created by Slava
      Pestov. Factor is dynamically typed and has automatic memory management, as
      well as powerful metaprogramming features. The language has a single implementation
      featuring a self-hosted optimizing compiler and an interactive development environment.
      The Factor distribution includes a large standard library.
    :wikipedia_url: https://en.wikipedia.org/wiki/Factor_(programming_language)
  record/c5f41fc9-9de9-434e-8d5d-1c5338f3d50d:
    :name: Object Pascal
    :description: Object Pascal is an extension to the programming language Pascal
      that provides object-oriented programming (OOP) features such as classes and
      methods.
    :wikipedia_url: https://en.wikipedia.org/wiki/Object_Pascal
  record/b9b94794-e93d-4310-926a-f4d839570d1d:
    :name: YUI Library
    :description: |-
      The Yahoo! User Interface Library (YUI) is a discontinued open-source JavaScript library for building richly interactive web applications using techniques such as Ajax, DHTML, and DOM scripting. YUI includes several core CSS resources. It is available under a BSD License.
      Development on YUI began in 2005 and Yahoo! properties such as My Yahoo! and the Yahoo! front page began using YUI in the summer of that year. YUI was released for public use in February 2006. It was actively developed by a core team of Yahoo! engineers.
    :wikipedia_url: https://en.wikipedia.org/wiki/YUI_Library
  record/7df94357-1b8a-40a9-9d19-aff0450eb91c:
    :name: Little b
    :description: Little b is a domain-specific programming language, more specifically,
      a modeling language, designed to build modular mathematical models of biological
      systems. It was designed and authored by Aneil Mallavarapu. Little b is being
      developed in the Virtual Cell Program at Harvard Medical School, headed by mathematician
      Jeremy Gunawardena.
    :wikipedia_url: https://en.wikipedia.org/wiki/Little_b_(programming_language)
  record/013b742b-14ea-4c80-ba7a-92cf1ee11557:
    :name: TeX
    :description: TeX, stylized within the system as TeX, is a typesetting system
      which was designed and mostly written by Donald Knuth and released in 1978.
      TeX is a popular means of typesetting complex mathematical formulae; it has
      been noted as one of the most sophisticated digital typographical systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/TeX
  record/b431658d-d83f-4f61-a51f-5f305e92e4cd:
    :name: Joule
    :description: Joule is a concurrent dataflow programming language, designed for
      building distributed applications. It is so concurrent that the order of statements
      within a block is irrelevant to the operation of the block. Statements are executed
      whenever possible, based on their inputs. Everything in Joule happens by sending
      messages. There is no control flow. Instead, the programmer describes the flow
      of data, making it a dataflow programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Joule_(programming_language)
  record/aa6f7f96-c364-4e95-9990-1424b7bbbc2d:
    :name: DEC Text Processing Utility
    :description: DEC Text Processing Utility was a language developed by Digital
      Equipment Corporation (DEC) for developing text editors.
    :wikipedia_url: https://en.wikipedia.org/wiki/DEC_Text_Processing_Utility
  record/bb2a08d7-67ed-4b4d-b168-d029ba4913c2:
    :name: CorVision
    :description: CorVision is a fourth generation programming tool (4GL) currently
      owned by Attunity, Inc. CorVision was developed by Cortex Corporation for the
      VAX/VMS ISAM environment. Although Cortex beta tested CorVision-10 which was
      generated for PCs but CorVision itself stayed anchored on VMS. CorVision-10
      proved more difficult than hoped, and was never released.
    :wikipedia_url: https://en.wikipedia.org/wiki/CorVision
  record/afe26ccb-a819-4d0e-9f3b-9c67433c6029:
    :name: IBM 1401 Symbolic Programming System
    :description: The IBM 1401 Symbolic Programming System (SPS) was an assembler
      that was developed by Gary Mokotoff, IBM Applied Programming Department, for
      the IBM 1401 computer, the first of the IBM 1400 series. One source indicates
      that "This programming system was announced by IBM with the machine."
    :wikipedia_url: https://en.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System
  record/f92c154e-1e57-433f-b7f6-55f02f97cc53:
    :name: Cuneiform
    :description: |-
      Cuneiform is an open-source workflow language
      for large-scale scientific data analysis.
      It is a statically typed functional programming language promoting parallel computing. It features a versatile foreign function interface allowing users to integrate software from many external programming languages. At the organizational level Cuneiform provides facilities like conditional branching and general recursion making it Turing-complete. In this, Cuneiform is the attempt to close the gap between scientific workflow systems like Taverna, KNIME, or Galaxy and large-scale data analysis programming models like MapReduce or Pig Latin while offering the generality of a functional programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cuneiform_(programming_language)
  record/4fb888d6-de87-44f4-9c4f-204bf768a60e:
    :name: A+
    :description: A+ is an array programming language descended from the programming
      language A, which in turn was created to replace APL in 1988. Arthur Whitney
      developed the A portion of A+, while other developers at Morgan Stanley extended
      it, adding a graphical user interface and other language features. A+ is a high-level,
      interactive, interpreted language, designed for numerically intensive applications,
      especially those found in financial applications. A+ runs on many Unix variants,
      including Linux. It is free and open source software released under a GNU General
      Public License.
    :wikipedia_url: https://en.wikipedia.org/wiki/A%2B_(programming_language)
  record/5f627fa3-8e09-43fd-9b5f-4bae128262d3:
    :name: NetLogo
    :description: NetLogo is a programming language and integrated development environment
      (IDE) for agent-based modeling.
    :wikipedia_url: https://en.wikipedia.org/wiki/NetLogo
  record/2d1b6036-485a-422e-ba05-c85873c3fda7:
    :name: SuperTalk
    :description: SuperTalk is the scripting language used in SuperCard. SuperTalk
      is a descendant of HyperTalk.
    :wikipedia_url: https://en.wikipedia.org/wiki/SuperTalk
  record/043f2cc2-aca3-4c3c-b0e9-1210ed862a1a:
    :name: S-Lang
    :description: The S-Lang programming library is a software library for Unix, Windows,
      VMS, OS/2, and Mac OS X. It provides routines for embedding an interpreter for
      the S-Lang scripting language, and components to facilitate the creation of
      text-based applications. The latter class of functions include routines for
      constructing and manipulating keymaps, an interactive line-editing facility,
      and both low and high-level screen/terminal management functions. It is distributed
      under the terms of the GNU General Public License.
    :wikipedia_url: https://en.wikipedia.org/wiki/S-Lang
  record/ccbfcde9-0937-4bb1-b241-a232f6988f83:
    :name: Pharo
    :description: Pharo is an open source dynamic and reflective language which is
      inspired by the programming language Smalltalk. Pharo offers several live programming
      features such as immediate object manipulation, live update and hot recompiling.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pharo
  record/55330d1f-1b00-4a33-819d-4e8a498bcf82:
    :name: Boomerang
    :description: Boomerang is a programming language for writing lenses—well-behaved
      bidirectional transformations —that operate on ad-hoc, textual data formats.
    :wikipedia_url: https://en.wikipedia.org/wiki/Boomerang_(programming_language)
  record/573cc614-213d-4646-b75c-ab2db42417e2:
    :name: AWK
    :description: AWK (awk) is a domain-specific language designed for text processing
      and typically used as a data extraction and reporting tool. Like sed and grep,
      it's a filter, and is a standard feature of most Unix-like operating systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/AWK
  record/dcf7f561-5e96-4ba2-89fb-f73322922bdc:
    :name: Easy Programming Language
    :description: Easy Programming Language is a visual compiled multilingual proprietary
      programming language. EPL is somewhat popular in China because it features a
      full Chinese environment.
    :wikipedia_url: https://en.wikipedia.org/wiki/Easy_Programming_Language
  record/c3c4a617-ef27-481f-946f-cf8f086ed1b4:
    :name: Elixir
    :description: Elixir is a functional, concurrent, general-purpose programming
      language that runs on the BEAM virtual machine used to implement the Erlang
      programming language. Elixir builds on top of Erlang and shares the same abstractions
      for building distributed, fault-tolerant applications. Elixir also provides
      productive tooling and an extensible design. The latter is supported by compile-time
      metaprogramming with macros and polymorphism via protocols.
    :wikipedia_url: https://en.wikipedia.org/wiki/Elixir_(programming_language)
  record/5bd89601-e109-4ad1-bd10-8faf6f7bbf02:
    :name: Plus
    :description: Plus is a "Pascal-like" system implementation language from the
      University of British Columbia (UBC), Canada, based on the SUE system language
      developed at the University of Toronto, c. 1971.
    :wikipedia_url: https://en.wikipedia.org/wiki/Plus_(programming_language)
  record/dd237b15-8e54-4658-9e07-4cc954c9fd98:
    :name: XOD
    :description: XOD – is an open-source visual programming language for microcontrollers
      started in 2016. As a supported platform XOD started with Arduino boards compatibility
      and Raspberry PI.
    :wikipedia_url: https://en.wikipedia.org/wiki/XOD_(programming_language)
  record/43001ae7-dcb1-4988-a40f-da1f8a96b448:
    :name: Clojure
    :description: Clojure is a modern, dynamic, and functional dialect of the Lisp
      programming language on the Java platform. Like other Lisp dialects, Clojure
      treats code as data and has a Lisp macro system. The current development process
      is community-driven, overseen by Rich Hickey as its benevolent dictator for
      life (BDFL).
    :wikipedia_url: https://en.wikipedia.org/wiki/Clojure
  record/7d5d48f2-ce4f-4608-97ee-6211e8075a9c:
    :name: Unix shell
    :description: A Unix shell is a command-line interpreter or shell that provides
      a command line user interface for Unix-like operating systems. The shell is
      both an interactive command language and a scripting language, and is used by
      the operating system to control the execution of the system using shell scripts.
    :wikipedia_url: https://en.wikipedia.org/wiki/Unix_shell
  record/8e3b0608-79f0-4e78-8305-b22cd3d83773:
    :name: MUMPS
    :description: MUMPS, or M, is an integrated programming language and key–value
      database originally developed at Massachusetts General Hospital for managing
      hospital laboratory information systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/MUMPS
  record/35ec4200-bef2-4c43-a538-9e7fefba49cb:
    :name: Lithe
    :description: Lithe is an experimental programming language created in 1982 by
      David Sandberg at the University of Washington which allows the programmer to
      freely choose their own syntax. Lithe combines the ideas of syntax-directed
      translation and classes in a novel manner that results in a remarkably simple
      yet powerful language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lithe
  record/271ad8cb-8faf-40dd-af83-2d249314c0e6:
    :name: BCPL
    :description: BCPL is a procedural, imperative, and structured programming language.
      Originally intended for writing compilers for other languages, BCPL is no longer
      in common use. However, its influence is still felt because a stripped down
      and syntactically changed version of BCPL, called B, was the language on which
      the C programming language was based. BCPL introduced several features of many
      modern programming languages, including using curly braces to delimit code blocks.
      BCPL was first implemented by Martin Richards of the University of Cambridge
      in 1967.
    :wikipedia_url: https://en.wikipedia.org/wiki/BCPL
  record/fc0efec0-b949-4f74-a090-d5837d322ac6:
    :name: XBase++
    :description: |-
      Xbase++ is an object oriented programming language which has multiple inheritance and polymorphism. It is based on the XBase language dialect and conventions.
      It is 100% Clipper compatible language supporting multiple inheritance, polymorphism, object oriented programming. It supports the xBase data types, including Codeblocks. With Xbase++ it is possible to generate applications for Windows NT, 95, 98, Me, 2000, XP, VISTA and Windows 7, 8, 10.
    :wikipedia_url: https://en.wikipedia.org/wiki/XBase%2B%2B
  record/b47f4d67-37ad-49d4-8386-6babf1c0bf22:
    :name: Bash
    :description: Bash is a Unix shell and command language written by Brian Fox for
      the GNU Project as a free software replacement for the Bourne shell. First released
      in 1989, it has been used as the default login shell for most Linux distributions
      and all releases of Apple's macOS prior to macOS Catalina. A version is also
      available for Windows 10 via the Windows Subsystem for Linux. It is also the
      default user shell in Solaris 11.
    :wikipedia_url: https://en.wikipedia.org/wiki/Bash_(Unix_shell)
  record/b32d5d7e-c569-4a0b-b1df-6ec260216368:
    :name: Polymorphic Programming Language
    :description: The Polymorphic Programming Language (PPL) was developed in 1969
      at Harvard University by Thomas A. Standish. It is an interactive, extensible
      language with a base language similar to the language APL.
    :wikipedia_url: https://en.wikipedia.org/wiki/Polymorphic_Programming_Language
  record/6fd2b274-c053-40de-aea0-6ecd1a25f537:
    :name: IDL
    :description: IDL, short for Interactive Data Language, is a programming language
      used for data analysis. It is popular in particular areas of science, such as
      astronomy, atmospheric physics and medical imaging. IDL shares a common syntax
      with PV-Wave and originated from the same codebase, though the languages have
      subsequently diverged in detail. There are also free or costless implementations,
      such as GNU Data Language (GDL) and Fawlty Language (FL).
    :wikipedia_url: https://en.wikipedia.org/wiki/IDL_(programming_language)
  record/1aeea25b-3d3a-493c-b531-9eefd8088b9b:
    :name: XPL
    :description: XPL is a programming language based on PL/I, a portable one-pass
      compiler written in its own language, and a parser generator tool for easily
      implementing similar compilers for other languages. XPL was designed in 1967
      as a way to teach compiler design principles and as starting point for students
      to build compilers for their own languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/XPL
  record/80b3e575-5667-4e4e-9bdb-8e7592587baf:
    :name: Tea
    :description: Tea is a high-level scripting language for the Java environment.
      It combines features of Scheme, Tcl, and Java.
    :wikipedia_url: https://en.wikipedia.org/wiki/Tea_(programming_language)
  record/438d5886-7a99-439c-90de-0adf4b72a416:
    :name: SQL
    :description: SQL is a domain-specific language used in programming and designed
      for managing data held in a relational database management system (RDBMS), or
      for stream processing in a relational data stream management system (RDSMS).
      It is particularly useful in handling structured data, i.e. data incorporating
      relations among entities and variables.
    :wikipedia_url: https://en.wikipedia.org/wiki/SQL
  record/50830ac2-78c0-4087-8657-4d61c9138361:
    :name: Haskell
    :description: Haskell is a general-purpose, statically typed, purely functional
      programming language with type inference and lazy evaluation. Developed to be
      suitable for teaching, research and industrial application, Haskell has pioneered
      a number of advanced programming language features such as type classes, which
      enable type-safe operator overloading. Haskell's main implementation is the
      Glasgow Haskell Compiler (GHC). It is named after logician Haskell Curry.
    :wikipedia_url: https://en.wikipedia.org/wiki/Haskell_(programming_language)
  record/62f40c7d-8b32-48ee-b462-5834b968f3bd:
    :name: Nial
    :description: Nial is a high-level array programming language developed from about
      1981 by Mike Jenkins of Queen's University, Kingston, Ontario, Canada. Jenkins
      co-created the Jenkins–Traub algorithm.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nial
  record/0e3648ca-3ad1-47f0-be82-af7f1de99f02:
    :name: Alma-0
    :description: Alma-0 is a multi-paradigm computer programming language. This language
      is an augmented version of the imperative Modula-2 language with logic-programming
      features and convenient backtracking capability. It is small, strongly typed,
      and combines constraint programming, a limited number of features inspired by
      logic programming and supports imperative paradigms. The language advocates
      declarative programming. The designers claim that search-oriented solutions
      built with it are substantially simpler than their counterparts written in purely
      imperative or logic programming style. Alma-0 provides natural, high-level constructs
      for the construction of search trees.
    :wikipedia_url: https://en.wikipedia.org/wiki/Alma-0
  record/124d1549-7a99-430c-b8c3-5bb9dceb1831:
    :name: Scilab
    :description: |-
      Scilab is a free and open-source, cross-platform numerical computational package and a high-level, numerically oriented programming language. It
      can be used for signal processing, statistical analysis, image enhancement, fluid dynamics simulations, numerical optimization, and modeling, simulation of explicit and implicit dynamical systems and symbolic manipulations.
    :wikipedia_url: https://en.wikipedia.org/wiki/Scilab
  record/158b4d22-8d9b-410b-960e-18d74d8c3f4f:
    :name: Visual FoxPro
    :description: Visual FoxPro is a Microsoft data-centric procedural programming
      language that subsequently became object-oriented.
    :wikipedia_url: https://en.wikipedia.org/wiki/Visual_FoxPro
  record/08dbcdf7-da13-48eb-a87c-28d8302bbea4:
    :name: Milk
    :description: Milk is a programming language "that lets application developers
      manage memory more efficiently in programs that deal with scattered data points
      in large data sets."
    :wikipedia_url: https://en.wikipedia.org/wiki/Milk_(programming_language)
  record/d011aa23-8fc7-4d67-9f81-ae46c077ac22:
    :name: Aldor
    :description: Aldor is a programming language. It is the successor of A# as the
      extension language of the Axiom computer algebra system.
    :wikipedia_url: https://en.wikipedia.org/wiki/Aldor
  record/d064dc1a-67b9-49e9-951d-37c10ec4b727:
    :name: Kojo
    :description: Kojo is a programming language and integrated development environment
      (IDE) for computer programming and learning. It has many different features
      that enable playing, exploring, creating, and learning in the areas of computer
      programming, mental skills, (interactive) math, graphics, art, music, science,
      animation, games, and electronics. Kojo draws ideas from the programming languages
      Logo and Processing.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kojo_(learning_environment)
  record/5ec1c155-f5be-464b-951f-d5a326ef85ab:
    :name: Nemerle
    :description: Nemerle is a general-purpose, high-level, statically typed programming
      language designed for platforms using the Common Language Infrastructure (.NET/Mono).
      It offers functional, object-oriented and imperative features. It has a simple
      C#-like syntax and a powerful metaprogramming system. In June 2012, the core
      developers of Nemerle were hired by the Czech software development company JetBrains.
      The team is focusing on developing Nitra, a framework to implement extant and
      new programming languages. This framework will likely be used to create future
      versions of Nemerle.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nemerle
  record/c4de7bd1-f43a-4bff-8b19-b583a8be170c:
    :name: PROSE modeling language
    :description: |-
      Author Joseph Thames, now deceased (2019), has left us with his latest version of PROSE, called FortranCalculus. It is freeware that can be downloaded from https://goal-driven.net/apps/fc-compiler.html. Joe's www.metacalculus.com website is no longer up. I worked with Joe since ~1975, he will be missed!
      Thanks, Phil B Brubaker.
    :wikipedia_url: https://en.wikipedia.org/wiki/PROSE_modeling_language
  record/ea3b06e3-20b0-495d-b2ed-0865ab487a96:
    :name: Fortran
    :description: Fortran is a general-purpose, compiled imperative programming language
      that is especially suited to numeric computation and scientific computing.
    :wikipedia_url: https://en.wikipedia.org/wiki/Fortran
  record/fa6dd075-45c8-4e7c-8a3c-aea47d262812:
    :name: Join Java
    :description: Join Java is a programming language based on the join-pattern that
      extends the standard Java programming language with the join semantics of the
      join-calculus. It was written at the University of South Australia within the
      Reconfigurable Computing Lab by Dr. Von Itzstein.
    :wikipedia_url: https://en.wikipedia.org/wiki/Join_Java
  record/98ff24f9-4427-4336-8cf6-35547543ab12:
    :name: FOIL
    :description: FOIL was the name for two different programming languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/FOIL_(programming_language)
  record/746af6f0-a2fe-485b-a5cc-7c2f848f2d7a:
    :name: Kodu Game Lab
    :description: Kodu, originally named Boku, is a programming integrated development
      environment (IDE) by Microsoft's FUSE Labs. It runs on Xbox 360 and Microsoft
      Windows XP, Windows Vista, Windows 7, Windows 8 and Windows 10. It was released
      on the Xbox Live Marketplace on June 30, 2009. A Windows version is available
      to the general public for download from Microsoft's FUSE web portal.
    :wikipedia_url: https://en.wikipedia.org/wiki/Kodu_Game_Lab
  record/d4e13d8e-8253-4d7b-a0db-25af35ade1c6:
    :name: Mystic BBS
    :description: Mystic BBS is a bulletin board system software program that began
      in 1995 and was first released to the public in December 1997 under the MS-DOS
      platform. It has since been ported to Microsoft Windows, OS/2, OS X, and Linux.
      Mystic was designed to be a spiritual successor to the Telegard and Renegade
      bulletin board systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mystic_BBS
  record/48f3e8e8-1fa7-493d-9a52-f257344b19fc:
    :name: GPSS
    :description: General Purpose Simulation System (GPSS) is a discrete time simulation
      general-purpose programming language, where a simulation clock advances in discrete
      steps. A system is modelled as transactions enter the system and are passed
      from one service to another. It is used primarily as a process flow oriented
      simulation language; this is particularly well-suited for problems such as a
      factory.
    :wikipedia_url: https://en.wikipedia.org/wiki/GPSS
  record/13339953-d3f4-4ddd-b5ec-691532a17baa:
    :name: SenseTalk
    :description: SenseTalk is an intuitive, People Oriented Programming language
      designed to be both readable and expressive. Being readable makes it easier
      for a person unfamiliar with a particular script to understand what the script
      does. Being expressive allows people to describe actions to be taken using high-level
      human-task-oriented terms rather than in terms of the low-level operations the
      computer must perform to carry out those tasks.
    :wikipedia_url: https://en.wikipedia.org/wiki/SenseTalk
  record/91d7a5d1-c137-476d-b295-fb9efa3bdf08:
    :name: Racket
    :description: Racket is a general-purpose, multi-paradigm programming language
      based on the Scheme dialect of Lisp. It is designed to be a platform for programming
      language design and implementation. In addition to the core Racket language,
      Racket is also used to refer to the family of programming languages and set
      of tools supporting development on and with Racket. Racket is also used for
      scripting, computer science education, and research.
    :wikipedia_url: https://en.wikipedia.org/wiki/Racket_(programming_language)
  record/e4f2161c-6ce5-4846-ba54-2aacac86593a:
    :name: Nu
    :description: Nu is an interpreted object-oriented programming language, with
      a Lisp-like syntax, created by Tim Burks as an alternative scripting language
      to program OS X through its Cocoa application programming interface (API). Implementations
      also exist for iPhone and Linux.
    :wikipedia_url: https://en.wikipedia.org/wiki/Nu_(programming_language)
  record/9aad6fc6-989f-43ae-81d5-9e54b18bdaf8:
    :name: Mesa
    :description: Mesa is a programming language developed in the late 1970s at the
      Xerox Palo Alto Research Center in Palo Alto, California, United States. The
      language name was a pun based upon the programming language catchphrases of
      the time, because Mesa is a "high level" programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mesa_(programming_language)
  record/20374eed-0375-42c9-b179-fdcc8f23ea54:
    :name: fish
    :description: fish is a Unix shell that attempts to be more interactive and user-friendly
      than those with a longer history or those formulated as function-compatible
      replacements for the aforementioned. The design goal of fish is to give the
      user a rich set of powerful features in a way that is easy to discover, remember,
      and use. fish is considered an "exotic shell", in that its syntax derives from
      neither the Bourne shell nor the C shell. Also unlike previous shells, which
      disable certain features by default to save system resources, fish enables all
      features by default.
    :wikipedia_url: https://en.wikipedia.org/wiki/Fish_(Unix_shell)
  record/665810e1-7482-4892-b135-ac33effb486b:
    :name: ACC
    :description: ACC is a near-C compiler for the MS-DOS operating system on the
      IBM PC line of computers for programs. The compiler and compiled programs will
      run on any Intel 80386 or above PC running MS-DOS. Included with the compiler
      are a 386 assembler and a linker for combining multiple object files. There
      are also two libraries, which are a protected mode DOS extender, and a library
      of functions callable by C programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/ACC_(programming_language)
  record/e2f6c1a5-aea2-4d24-a26a-a0bb17c9534a:
    :name: MIVA Script
    :description: |-
      Miva Script is a proprietary computer scripting language mainly used for internet applications such as e-commerce. As of 2015, it is developed, maintained and owned by Miva Merchant, Inc., based in San Diego, California.
      Many web hosting companies support Miva Script on their servers, but it is significantly less widespread than other popular web languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/MIVA_Script
  record/0ad5818e-72c7-400b-a871-7af7e67b9dc2:
    :name: Squeak
    :description: The Squeak programming language is a dialect of Smalltalk. It is
      object-oriented, class-based, and reflective.
    :wikipedia_url: https://en.wikipedia.org/wiki/Squeak
  record/04a440a4-b00d-4632-ad8e-fe90c448104e:
    :name: Franz Lisp
    :description: In computer programming, Franz Lisp is a discontinued Lisp programming
      language system written at the University of California, Berkeley by Professor
      Richard Fateman and several students, based largely on Maclisp and distributed
      with the Berkeley Software Distribution (BSD) for the Digital Equipment Corporation
      (DEC) VAX minicomputer. Piggybacking on the popularity of the BSD package, Franz
      Lisp was probably the most widely distributed and used Lisp system of the 1970s
      and 1980s.
    :wikipedia_url: https://en.wikipedia.org/wiki/Franz_Lisp
  record/d09fa677-e99d-4c81-9e10-023ef1535bc7:
    :name: KornShell
    :description: KornShell (ksh) is a Unix shell which was developed by David Korn
      at Bell Labs in the early 1980s and announced at USENIX on July 14, 1983. The
      initial development was based on Bourne shell source code. Other early contributors
      were Bell Labs developers Mike Veach and Pat Sullivan, who wrote the Emacs and
      vi-style line editing modes' code, respectively. KornShell is backward-compatible
      with the Bourne shell and includes many features of the C shell, inspired by
      the requests of Bell Labs users.
    :wikipedia_url: https://en.wikipedia.org/wiki/KornShell
  record/8d66787f-4f83-4ac7-99a8-2c8bef508931:
    :name: Quantum programming
    :description: Quantum programming is the process of assembling sequences of instructions,
      called quantum programs, that are capable of running on a quantum computer.
      Quantum programming languages help express quantum algorithms using high-level
      constructs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Quantum_programming
  record/1fa69e3a-450d-4f4c-80a6-dbce042a72c2:
    :name: Cyclone
    :description: The Cyclone programming language is intended to be a safe dialect
      of the C language. Cyclone is designed to avoid buffer overflows and other vulnerabilities
      that are possible in C programs, without losing the power and convenience of
      C as a tool for system programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cyclone_(programming_language)
  record/bf12aee6-e871-4074-92c0-a7358ea54034:
    :name: Flavors
    :description: Flavors, an early object-oriented extension to Lisp developed by
      Howard Cannon at the MIT Artificial Intelligence Laboratory for the Lisp machine
      and its programming language Lisp Machine Lisp, was the first programming language
      to include mixins. Symbolics used it for its Lisp machines, and eventually developed
      it into New Flavors; both the original and new Flavors were message passing
      OO models. It was hugely influential in the development of the Common Lisp Object
      System (CLOS).
    :wikipedia_url: https://en.wikipedia.org/wiki/Flavors_(programming_language)
  record/2e4dbeae-215b-4af7-b961-7d53cffa3df7:
    :name: StarLogo
    :description: StarLogo is an agent-based simulation language developed by Mitchel
      Resnick, Eric Klopfer, and others at the Massachusetts Institute of Technology
      (MIT) Media Lab and Scheller Teacher Education Program in Massachusetts. It
      is an extension of the Logo programming language, a dialect of Lisp. Designed
      for education, StarLogo can be used by students to model or simulate the behavior
      of decentralized systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/StarLogo
  record/3c07b031-0d9d-4edd-a32f-9165647383ea:
    :name: NewtonScript
    :description: NewtonScript is a prototype-based programming language created to
      write programs for the Newton platform. It is heavily influenced by the Self
      programming language, but modified to be more suited to needs of mobile and
      embedded devices.
    :wikipedia_url: https://en.wikipedia.org/wiki/NewtonScript
  record/6c8f44dd-8df9-42e3-8346-738be78040b2:
    :name: Elm
    :description: Elm is a domain-specific programming language for declaratively
      creating web browser-based graphical user interfaces. Elm is purely functional,
      and is developed with emphasis on usability, performance, and robustness. It
      advertises "no runtime exceptions in practice", made possible by the Elm compiler's
      static type checking.
    :wikipedia_url: https://en.wikipedia.org/wiki/Elm_(programming_language)
  record/bf4a26f8-23d9-4c65-a06b-8c3f0f35a070:
    :name: Pike
    :description: Pike is an interpreted, general-purpose, high-level, cross-platform,
      dynamic programming language, with a syntax similar to that of C. Unlike many
      other dynamic languages, Pike is both statically and dynamically typed, and
      requires explicit type definitions. It features a flexible type system that
      allows the rapid development and flexible code of dynamically typed languages,
      while still providing some of the benefits of a statically typed language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Pike_(programming_language)
  record/940b397a-6035-491c-b0a9-6aa4d3c52d1e:
    :name: Scala
    :description: Scala is a general-purpose programming language providing support
      for both object-oriented programming and functional programming. The language
      has a strong static type system. Designed to be concise, many of Scala's design
      decisions are aimed to address criticisms of Java.
    :wikipedia_url: https://en.wikipedia.org/wiki/Scala_(programming_language)
  record/bc825b5e-4ec7-42df-99dd-6d6df7ba2d9b:
    :name: Geometric Description Language
    :description: In computer-aided design, Geometric Description Language (GDL) is
      the programming language of ArchiCAD library parts. GSM is the file format of
      these CAD objects.
    :wikipedia_url: https://en.wikipedia.org/wiki/Geometric_Description_Language
  record/b8d89883-7198-4000-ad97-d6de251e7598:
    :name: Rust
    :description: Rust is a multi-paradigm programming language designed for performance
      and safety, especially safe concurrency. Rust is syntactically similar to C++,
      but can guarantee memory safety by using a borrow checker to validate references.
      Rust achieves memory safety without garbage collection, and reference counting
      is optional.
    :wikipedia_url: https://en.wikipedia.org/wiki/Rust_(programming_language)
  record/c29c59af-cf5e-40eb-8791-7a814aae563d:
    :name: CEEMAC
    :description: CEEMAC is a programming language developed in the 1980s for the
      Apple II family of computers. It was authored by Brooke Boering and published
      by Vagabondo Enterprises,
    :wikipedia_url: https://en.wikipedia.org/wiki/CEEMAC
  record/a5a2c675-926a-4c14-a5a0-7b040817c117:
    :name: Microassembler
    :description: A microassembler is a computer program that helps prepare a microprogram,
      called firmware, to control the low level operation of a computer in much the
      same way an assembler helps prepare higher level code for a processor. The difference
      is that the microprogram is usually only developed by the processor manufacturer
      and works intimately with the computer hardware. On a microprogrammed computer
      the microprogram implements the operations of the instruction set in which any
      normal program is written. The use of a microprogram allows the manufacturer
      to fix certain mistakes, including working around hardware design errors, without
      modifying the hardware. Another means of employing microassembler-generated
      microprograms is in allowing the same hardware to run different instruction
      sets. After it is assembled, the microprogram is then loaded to a control store
      to become part of the logic of a CPU's control unit.
    :wikipedia_url: https://en.wikipedia.org/wiki/Microassembler
  record/2ffa67bb-f0b0-4061-b3df-778c83690739:
    :name: Cybil
    :description: Cybil was a Pascal-like language developed at Control Data Corporation
      for the Cyber computer family. Cybil was used as the implementation language
      for the NOS/VE operating system on the CDC Cyber series and was also used to
      write the eOS operating system for the ETA10 supercomputer in the 1980s.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cybil_(programming_language)
  record/d3ac73f7-a733-45d3-aa76-4337695f4e06:
    :name: GRASS
    :description: GRASS is a programming language created to script 2D vector graphics
      animations. GRASS was similar to BASIC in syntax, but added numerous instructions
      for specifying 2D object animation, including scaling, translation and rotation
      over time. These functions were directly supported by the Vector General 3D
      graphics terminal GRASS was written for. It quickly became a hit with the artistic
      community who were experimenting with the new medium of computer graphics, and
      is most famous for its use by Larry Cuba to create the original "attacking the
      Death Star will not be easy" animation in Star Wars (1977).
    :wikipedia_url: https://en.wikipedia.org/wiki/GRASS_(programming_language)
  record/8820f73d-b9da-461d-8fbc-c2b9622c791d:
    :name: Xojo
    :description: The Xojo programming environment and programming language is developed
      and commercially marketed by Xojo, Inc. of Austin, Texas for software development
      targeting macOS, Microsoft Windows, Linux, iOS, the Web and Raspberry Pi. Xojo
      uses a proprietary object-oriented language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Xojo
  record/fb643299-5600-47e5-9e73-4a0d95fb95e2:
    :name: Perl Data Language
    :description: Perl Data Language is a set of free software array programming extensions
      to the Perl programming language. PDL extends the data structures built into
      Perl, to include large multidimensional arrays, and adds functionality to manipulate
      those arrays as vector objects. It also provides tools for image processing,
      machine learning, computer modeling of physical systems, and graphical plotting
      and presentation. Simple operations are automatically vectorized across complete
      arrays, and higher-dimensional operations are supported.
    :wikipedia_url: https://en.wikipedia.org/wiki/Perl_Data_Language
  record/d9066288-60ac-41d7-8412-cc43a99243b2:
    :name: FP
    :description: FP is a programming language created by John Backus to support the
      function-level programming paradigm. This allows eliminating named variables.
      The language was introduced in Backus's 1977 Turing Award paper, "Can Programming
      Be Liberated from the von Neumann Style?", subtitled "a functional style and
      its algebra of programs." The paper sparked interest in functional programming
      research, eventually leading to modern functional languages, and not the function-level
      paradigm Backus had hoped.
    :wikipedia_url: https://en.wikipedia.org/wiki/FP_(programming_language)
  record/173d1816-351c-4c70-aaf0-5648f0794920:
    :name: Language H
    :description: Language H is a proprietary, procedural programming language created
      by NCR based on COBOL. The first compiler was developed in August 1962 to run
      on the National-Elliott 405M and produce object code for the National-Elliott
      803B. It is believed that the "H" stands for John C Harwell.
    :wikipedia_url: https://en.wikipedia.org/wiki/Language_H
  record/341d2dac-896a-473d-96ea-fe9aa8e3aa11:
    :name: Lucid
    :description: Lucid is a dataflow programming language designed to experiment
      with non-von Neumann programming models. It was designed by Bill Wadge and Ed
      Ashcroft and described in the 1985 book Lucid, the Dataflow Programming Language.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lucid_(programming_language)
  record/56675bd3-f43a-4b3d-8f60-6ebc47f08efe:
    :name: Máni
    :description: Máni is the personification of the Moon in Norse mythology. Máni,
      personified, is attested in the Poetic Edda, compiled in the 13th century from
      earlier traditional sources, and the Prose Edda, written in the 13th century
      by Snorri Sturluson. Both sources state that he is the brother of the personified
      sun, Sól, and the son of Mundilfari, while the Prose Edda adds that he is followed
      by the children Hjúki and Bil through the heavens. As a proper noun, Máni appears
      throughout Old Norse literature. Scholars have proposed theories about Máni's
      potential connection to the Northern European notion of the Man in the Moon,
      and a potentially otherwise unattested story regarding Máni through skaldic
      kennings.
    :wikipedia_url: https://en.wikipedia.org/wiki/M%C3%A1ni
  record/8333b835-d579-4863-8bd5-e6a8994b81eb:
    :name: Visual Prolog
    :description: Visual Prolog, formerly known as PDC Prolog and Turbo Prolog, is
      a strongly typed object-oriented extension of Prolog. As Turbo Prolog, it was
      marketed by Borland but it is now developed and marketed by the Danish firm
      Prolog Development Center (PDC) that originally developed it. Visual Prolog
      can build Microsoft Windows GUI-applications, console applications, DLLs, and
      CGI-programs. It can also link to COM components and to databases by means of
      ODBC.
    :wikipedia_url: https://en.wikipedia.org/wiki/Visual_Prolog
  record/be086d2c-1e3c-4052-84f0-e0f78dca14a5:
    :name: TRAC
    :description: TRAC Language is a programming language developed between 1959-1964
      by Calvin Mooers and first implemented on the PDP-1 in 1964 by L. Peter Deutsch.
      It was one of three "first languages" recommended by Ted Nelson in Computer
      Lib. TRAC T64 was used until at least 1984, when Mooers updated it to TRAC T84.
    :wikipedia_url: https://en.wikipedia.org/wiki/TRAC_(programming_language)
  record/30208a11-a864-411d-bb5d-51795ed8094e:
    :name: Harbour
    :description: Harbour is a computer programming language, primarily used to create
      database/business programs. It is a modernized, open sourced and cross-platform
      version of the older Clipper system, which in turn developed from the dBase
      database market of the 1980s and 1990s.
    :wikipedia_url: https://en.wikipedia.org/wiki/Harbour_(programming_language)
  record/e0652acc-42ab-4cde-b844-a79d65004051:
    :name: Cobra
    :description: Cobra is a discontinued general-purpose, object-oriented programming
      language. Cobra is designed by Charles Esterbrook, and runs on the Microsoft
      .NET and Mono platforms. It is strongly influenced by Python, C#, Eiffel, Objective-C,
      and other programming languages. It supports both static and dynamic typing.
      It has support for unit tests and contracts. It has lambda expressions, closures,
      list comprehensions, and generators.
    :wikipedia_url: https://en.wikipedia.org/wiki/Cobra_(programming_language)
  record/70d682f8-2a12-4692-8803-dfeaabce4013:
    :name: J Sharp
    :description: Visual J# was an implementation of the J# programming language that
      was a transitional language for programmers of Java and Visual J++ languages,
      so they could use their existing knowledge and applications with the .NET Framework.
      It was introduced in 2002 and discontinued in 2007, with support for the final
      release of the product continuing until October 2017.
    :wikipedia_url: https://en.wikipedia.org/wiki/J_Sharp
  record/7af35393-3034-48c8-bf94-04d51debc755:
    :name: CPL
    :description: CPL is a multi-paradigm programming language, that was developed
      in the early 1960s. It is an early ancestor of the C language via the BCPL and
      B languages.
    :wikipedia_url: https://en.wikipedia.org/wiki/CPL_(programming_language)
  record/4fa810f6-761e-4c80-a084-7f77de830f20:
    :name: S-PLUS
    :description: S-PLUS is a commercial implementation of the S programming language
      sold by TIBCO Software Inc.
    :wikipedia_url: https://en.wikipedia.org/wiki/S-PLUS
  record/773aa9ee-5018-47c9-9af4-6d2ad5badc17:
    :name: QuakeC
    :description: QuakeC is a compiled language developed in 1996 by John Carmack
      of id Software to program parts of the video game Quake. Using QuakeC, a programmer
      is able to customize Quake to great extents by adding weapons, changing game
      logic and physics, and programming complex scenarios. It can be used to control
      many aspects of the game itself, such as parts of the AI, triggers, or changes
      in the level. The Quake engine was the only game engine to use QuakeC. Following
      engines used DLL game modules for customization written in C, and C++ from id
      Tech 4 on.
    :wikipedia_url: https://en.wikipedia.org/wiki/QuakeC
  record/818d46a0-d369-4de5-9529-c74fe60137a7:
    :name: Mirah
    :description: Mirah is a programming language based on Ruby language syntax, local
      type inference, hybrid static–dynamic type system, and a pluggable compiler
      toolchain. Mirah was created by Charles Oliver Nutter to be "a 'Ruby-like' language,
      probably a subset of Ruby syntax, that [could] compile to solid, fast, idiomatic
      JVM bytecode." The word mirah refers to the gemstone ruby in the Javanese language,
      a play on the concept of Ruby in Java.
    :wikipedia_url: https://en.wikipedia.org/wiki/Mirah_(programming_language)
  record/d9c41cf6-114c-45e8-a986-b7a1505413d8:
    :name: KUKA Robot Language
    :description: The KUKA Robot Language, also known as KRL, is a proprietary programming
      language similar to Pascal and used to control KUKA robots.
    :wikipedia_url: https://en.wikipedia.org/wiki/KUKA_Robot_Language
  record/2dac36ba-bc4d-4bb4-b477-8fd82a78d56d:
    :name: Charm
    :description: Charm is a computer programming language devised in the early 1990s
      with similarities to the RTL/2, Pascal and C languages in addition to containing
      some unique features of its own. The Charm language is defined by a context-free
      grammar amenable to being processed by recursive descent parser as described
      in seminal books on compiler design.
    :wikipedia_url: https://en.wikipedia.org/wiki/Charm_(programming_language)
  record/3fb90b84-e7a1-47a0-8470-9d9f6c2eb180:
    :name: Lava
    :description: Lava is an experimental, visual object-oriented, interpreter-based
      programming language with an associated programming environment that uses structure
      editors instead of text editors. Only comments, constants, and new identifiers
      may be entered as text.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lava_(programming_language)
  record/0924b4c9-d73f-492c-9a89-4a9ab7d356ef:
    :name: CORAL
    :description: CORAL, short for Computer On-line Real-time Applications Language
      is a programming language originally developed in 1964 at the Royal Radar Establishment
      (RRE), Malvern, Worcestershire, United Kingdom (UK). The R was originally for
      "radar", not "real-time". It was influenced primarily by JOVIAL, and thus ALGOL,
      but is not a subset of either.
    :wikipedia_url: https://en.wikipedia.org/wiki/CORAL
  record/e9e52807-f17d-4423-abf0-5e0611e8af39:
    :name: Distributed Application Specification Language
    :description: The DASL Programming Language is a high-level, strongly typed programming
      language originally developed at Sun Microsystems Laboratories between 1999
      and 2003 as part of the Ace Project. The goals of the project were to enable
      rapid development of web-based applications based on Sun's J2EE architecture,
      and to eliminate the steep learning curve of platform-specific details.
    :wikipedia_url: https://en.wikipedia.org/wiki/Distributed_Application_Specification_Language
  record/24ef0131-e0b4-40cf-a325-d07c896d7218:
    :name: Caml
    :description: Caml is a multi-paradigm, general-purpose programming language which
      is a dialect of the ML programming language family. Caml was developed in France
      at INRIA and ENS.
    :wikipedia_url: https://en.wikipedia.org/wiki/Caml
  record/3cd3b194-2503-43da-aac0-35fe40c4e474:
    :name: NWScript
    :description: NWScript is the scripting language developed by BioWare for the
      role-playing video game Neverwinter Nights. It is based on the C programming
      language and is implemented in the Aurora toolset. Neverscript, an open source
      3rd party editor, has been created for the Mac OS X and Linux versions of Neverwinter
      Nights because the Aurora toolset has not been ported to those platforms.
    :wikipedia_url: https://en.wikipedia.org/wiki/NWScript
  record/d6271e80-7e86-43a4-a00f-e612b248b253:
    :name: Maxima
    :description: Maxima is a computer algebra system (CAS) based on a 1982 version
      of Macsyma. It is written in Common Lisp and runs on all POSIX platforms such
      as macOS, Unix, BSD, and Linux, as well as under Microsoft Windows and Android.
      It is free software released under the terms of the GNU General Public License
      (GPL).
    :wikipedia_url: https://en.wikipedia.org/wiki/Maxima_(software)
  record/e4cfebb9-7e50-44cd-a0c3-007d0029393e:
    :name: POP-11
    :description: POP-11 is a reflective, incrementally compiled programming language
      with many of the features of an interpreted language. It is the core language
      of the Poplog programming environment developed originally by the University
      of Sussex, and recently in the School of Computer Science at the University
      of Birmingham, which hosts the main Poplog website. There is now also a Github
      Poplog] site with the core source files.
    :wikipedia_url: https://en.wikipedia.org/wiki/POP-11
  record/89a601bf-388d-4c01-987f-eec233b892fb:
    :name: MAD
    :description: MAD is a programming language and compiler for the IBM 704 and later
      the IBM 709, IBM 7090, IBM 7040, UNIVAC 1107, UNIVAC 1108, Philco 210-211, and
      eventually the IBM S/370 mainframe computers. Developed in 1959 at the University
      of Michigan by Bernard Galler, Bruce Arden and Robert M. Graham, MAD is a variant
      of the ALGOL language. It was widely used to teach programming at colleges and
      universities during the 1960s and played a minor role in the development of
      CTSS, Multics, and the Michigan Terminal System computer operating systems.
    :wikipedia_url: https://en.wikipedia.org/wiki/MAD_(programming_language)
  record/4c5a6250-031a-4724-b53e-6d67e0f8c7af:
    :name: Zebra Programming Language
    :description: Zebra Programming Language (ZPL) is a page description language
      from Zebra Technologies, used primarily for labeling applications. The original
      language was superseded by ZPL II, but it is not fully compatible with the older
      version. Meanwhile, ZPL II is emulated by many label printers of various producers.
    :wikipedia_url: https://en.wikipedia.org/wiki/Zebra_Programming_Language
  record/232ee2b8-cb0c-4791-b429-a3cbeb2a5817:
    :name: Haxe
    :description: Haxe is an open source high-level cross-platform programming language
      and compiler that can produce applications and source code, for many different
      computing platforms from one code-base. It is free and open-source software,
      released under the MIT License. The compiler, written in OCaml, is released
      under the GNU General Public License (GPL) version 2.
    :wikipedia_url: https://en.wikipedia.org/wiki/Haxe
  record/3231df9c-0ab4-414c-af76-f5efef6276a7:
    :name: TADS
    :description: Text Adventure Development System (TADS) is a prototype-based domain-specific
      programming language and set of standard libraries for creating interactive
      fiction (IF) games.
    :wikipedia_url: https://en.wikipedia.org/wiki/TADS
  record/a96a6da9-8776-4bac-81a3-4666e2ec201c:
    :name: COBOL
    :description: COBOL is a compiled English-like computer programming language designed
      for business use. It is imperative, procedural and, since 2002, object-oriented.
      COBOL is primarily used in business, finance, and administrative systems for
      companies and governments. COBOL is still widely used in applications deployed
      on mainframe computers, such as large-scale batch and transaction processing
      jobs. But due to its declining popularity and the retirement of experienced
      COBOL programmers, programs are being migrated to new platforms, rewritten in
      modern languages or replaced with software packages. Most programming in COBOL
      is now purely to maintain existing applications, however many large financial
      institutions were still developing new systems in COBOL in 2006 due to the mainframe
      processing speed.
    :wikipedia_url: https://en.wikipedia.org/wiki/COBOL
  record/008080a2-1304-450a-9288-51a7ca77c485:
    :name: RAPID
    :description: RAPID is a high-level programming language used to control ABB industrial
      robots. RAPID was introduced along with S4 Control System in 1994 by ABB, superseding
      the ARLA programming language.
    :wikipedia_url: https://en.wikipedia.org/wiki/RAPID
  record/8f063506-774e-4ec1-b557-a730f7af7165:
    :name: mIRC scripting language
    :description: The mIRC scripting language is the scripting language embedded in
      mIRC, an IRC client for Windows.
    :wikipedia_url: https://en.wikipedia.org/wiki/MIRC_scripting_language
  record/d9f1f1fa-6c06-4298-bd9b-d4416ad96956:
    :name: OPS5
    :description: OPS5 is a rule-based or production system computer language, notable
      as the first such language to be used in a successful expert system, the R1/XCON
      system used to configure VAX computers.
    :wikipedia_url: https://en.wikipedia.org/wiki/OPS5
  record/a34ae154-33a4-4425-b8c8-b0409db727e3:
    :name: Lasso
    :description: Lasso is an application server and server management interface used
      to develop internet applications and is a general-purpose, high-level programming
      language. Originally a web datasource connection tool, for Filemaker and later
      included in Apple Computer's FileMaker 4.0 and Claris Homepage as CDML, it has
      since evolved into a complex language used to develop and serve large-scale
      internet applications and web pages.
    :wikipedia_url: https://en.wikipedia.org/wiki/Lasso_(programming_language)
  record/b58576ec-d917-4bd2-8298-87349f1267f1:
    :name: Net.Data
    :description: Net.Data is a programming language by IBM used largely for database-backed
      web applications.
    :wikipedia_url: https://en.wikipedia.org/wiki/Net.Data
  record/625e4cd9-9ca2-49f3-8728-a2850f30087b:
    :name: Hume
    :description: Hume is a functionally based programming language developed at the
      University of St Andrews and Heriot-Watt University in Scotland since the year
      2000. The language name is both an acronym meaning 'Higher-order Unified Meta-Environment'
      and an honorific to the 18th Century philosopher David Hume. It targets real-time
      embedded systems, aiming to produce a design that is both highly abstract, yet
      which will still allow precise extraction of time and space execution costs.
      This allows programmers to guarantee the bounded time and space demands of executing
      programs.
    :wikipedia_url: https://en.wikipedia.org/wiki/Hume_(programming_language)
  record/a256c93c-60d7-4716-bd78-74863a86203c:
    :name: CHILL
    :description: In computing, CHILL is a procedural programming language designed
      for use in telecommunication switches. The language is still used for legacy
      systems in some telecommunication companies and for signal box programming.
    :wikipedia_url: https://en.wikipedia.org/wiki/CHILL
  record/0277fc90-1b0e-43d1-b4ea-e28572692341:
    :name: FOCUS
    :description: 'FOCUS is a fourth-generation programming language (4GL) computer
      programming language and development environment that is used to build database
      queries. Produced by Information Builders Inc., it was originally developed
      for data handling and analysis on the IBM mainframe. Subsequently versions for
      minicomputers and such as the VAX and other platforms were implemented. FOCUS
      was later extended to personal computers and to the World Wide Web: the WebFOCUS
      product.'
    :wikipedia_url: https://en.wikipedia.org/wiki/FOCUS
