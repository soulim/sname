---
:records:
  record/dd53a709-9338-4383-8665-c1839c37ee5a:
    :type: standard
    :title: Haggis (programming language)
    :displaytitle: Haggis (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28404924
    :titles:
      :canonical: Haggis_(programming_language)
      :normalized: Haggis (programming language)
      :display: Haggis (programming language)
    :pageid: 52222071
    :lang: en
    :dir: ltr
    :revision: '938059397'
    :tid: 48c02ee0-1e55-11eb-8120-95c28787720c
    :timestamp: '2020-01-28T21:58:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Haggis_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Haggis_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Haggis_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Haggis_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Haggis_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Haggis_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Haggis_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Haggis_(programming_language)
    :extract: Haggis is a high-level reference programming language used primarily
      to examine computing science for Scottish pupils taking SQA courses on the subject.
      Haggis is used as a tool to bridge the gap between pseudocode and typical computer
      programming.
    :extract_html: "<p><b>Haggis</b> is a high-level reference programming language
      used primarily to examine computing science for Scottish pupils taking SQA courses
      on the subject. Haggis is used as a tool to bridge the gap between pseudocode
      and typical computer programming.</p>"
  record/6f119bb9-1df4-4088-bfb6-0ca9a3d299fd:
    :type: standard
    :title: LISA (Language for Instruction Set Architecture)
    :displaytitle: LISA (Language for Instruction Set Architecture)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6458803
    :titles:
      :canonical: LISA_(Language_for_Instruction_Set_Architecture)
      :normalized: LISA (Language for Instruction Set Architecture)
      :display: LISA (Language for Instruction Set Architecture)
    :pageid: 22061818
    :lang: en
    :dir: ltr
    :revision: '787046848'
    :tid: 8ab17760-2b01-11eb-8ab3-058d56177a71
    :timestamp: '2017-06-23T03:13:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)
        :revisions: https://en.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)?action=history
        :edit: https://en.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LISA_(Language_for_Instruction_Set_Architecture)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LISA_(Language_for_Instruction_Set_Architecture)
        :edit: https://en.m.wikipedia.org/wiki/LISA_(Language_for_Instruction_Set_Architecture)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LISA_(Language_for_Instruction_Set_Architecture)
    :extract: LISA is a language to describe the instruction set architecture of a
      processor. LISA captures the information required to generate software tools
      and implementation hardware of a given processor.
    :extract_html: "<p><b>LISA</b> is a language to describe the instruction set architecture
      of a processor. LISA captures the information required to generate software
      tools and implementation hardware of a given processor.</p>"
  record/252da080-6c96-4ee6-879a-0e60c4dd1cb4:
    :type: standard
    :title: Mouse (programming language)
    :displaytitle: Mouse (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17148785
    :titles:
      :canonical: Mouse_(programming_language)
      :normalized: Mouse (programming language)
      :display: Mouse (programming language)
    :pageid: 6378343
    :lang: en
    :dir: ltr
    :revision: '876707604'
    :tid: b96ff1e0-1f9d-11eb-995c-ed3f51f30b2e
    :timestamp: '2019-01-03T23:34:23Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mouse_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Mouse_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Mouse_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mouse_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mouse_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mouse_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Mouse_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mouse_(programming_language)
    :extract: The Mouse programming language is a small computer programming language
      developed by Dr. Peter Grogono in the late 1970s and early 1980s. It was developed
      as an extension of an earlier language called MUSYS, which was used to control
      digital and analog devices in an electronic music studio.
    :extract_html: "<p>The <b>Mouse programming language</b> is a small computer programming
      language developed by Dr. Peter Grogono in the late 1970s and early 1980s. It
      was developed as an extension of an earlier language called MUSYS, which was
      used to control digital and analog devices in an electronic music studio.</p>"
  record/a7d75a99-f605-43c8-82b6-279e75e6736a:
    :type: standard
    :title: QtScript
    :displaytitle: QtScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2562193
    :titles:
      :canonical: QtScript
      :normalized: QtScript
      :display: QtScript
    :pageid: 9609819
    :lang: en
    :dir: ltr
    :revision: '917412347'
    :tid: c6dc8eb0-1d04-11eb-a178-9b7f1c0fb2ff
    :timestamp: '2019-09-23T18:29:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/QtScript
        :revisions: https://en.wikipedia.org/wiki/QtScript?action=history
        :edit: https://en.wikipedia.org/wiki/QtScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:QtScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/QtScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/QtScript
        :edit: https://en.m.wikipedia.org/wiki/QtScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:QtScript
    :extract: QtScript is a scripting engine that has been part of the Qt cross-platform
      application framework since version 4.3.0.
    :extract_html: "<p><b>QtScript</b> is a scripting engine that has been part of
      the Qt cross-platform application framework since version 4.3.0.</p>"
  record/dd2fc1e7-8b69-4ff0-b114-d471da4187fc:
    :type: standard
    :title: Cilk
    :displaytitle: Cilk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2569373
    :titles:
      :canonical: Cilk
      :normalized: Cilk
      :display: Cilk
    :pageid: 945803
    :lang: en
    :dir: ltr
    :revision: '982808524'
    :tid: f290af80-23a0-11eb-999a-3bf38f504ff7
    :timestamp: '2020-10-10T13:41:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cilk
        :revisions: https://en.wikipedia.org/wiki/Cilk?action=history
        :edit: https://en.wikipedia.org/wiki/Cilk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cilk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cilk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cilk
        :edit: https://en.m.wikipedia.org/wiki/Cilk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cilk
    :extract: Cilk, Cilk++ and Cilk Plus are general-purpose programming languages
      designed for multithreaded parallel computing. They are based on the C and C++
      programming languages, which they extend with constructs to express parallel
      loops and the fork–join idiom.
    :extract_html: "<p><b>Cilk</b>, <b>Cilk++</b> and <b>Cilk Plus</b> are general-purpose
      programming languages designed for multithreaded parallel computing. They are
      based on the C and C++ programming languages, which they extend with constructs
      to express parallel loops and the fork–join idiom.</p>"
  record/4d004d7c-231e-46d9-9330-15c7b5bf1f3d:
    :type: standard
    :title: Visual J++
    :displaytitle: Visual J++
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q973097
    :titles:
      :canonical: Visual_J++
      :normalized: Visual J++
      :display: Visual J++
    :pageid: 1962467
    :lang: en
    :dir: ltr
    :revision: '983713408'
    :tid: 8a3c8060-23ac-11eb-a23c-83028a32b129
    :timestamp: '2020-10-15T20:28:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Visual_J%2B%2B
        :revisions: https://en.wikipedia.org/wiki/Visual_J%2B%2B?action=history
        :edit: https://en.wikipedia.org/wiki/Visual_J%2B%2B?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Visual_J%2B%2B
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Visual_J%2B%2B
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Visual_J%2B%2B
        :edit: https://en.m.wikipedia.org/wiki/Visual_J%2B%2B?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Visual_J%2B%2B
    :extract: Visual J++ (pronounced "Jay Plus Plus") is Microsoft's discontinued
      implementation of Java. Syntax, keywords, and grammatical conventions were the
      same as Java's. It was introduced in 1996 and discontinued in January 2004,
      replacing it to a certain extent with J# and C#.
    :extract_html: <p><b>Visual J++</b> <i>(pronounced "Jay Plus Plus")</i> is Microsoft's
      discontinued implementation of Java. Syntax, keywords, and grammatical conventions
      were the same as Java's. It was introduced in 1996 and discontinued in January
      2004, replacing it to a certain extent with J# and C#.</p>
  record/f6b586b4-7ded-4d66-8611-60266f8b4c78:
    :type: standard
    :title: Oz (programming language)
    :displaytitle: Oz (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1208217
    :titles:
      :canonical: Oz_(programming_language)
      :normalized: Oz (programming language)
      :display: Oz (programming language)
    :pageid: 256916
    :lang: en
    :dir: ltr
    :revision: '983137897'
    :tid: f59d01c0-2aca-11eb-a86a-337b63fad6cb
    :timestamp: '2020-10-12T13:27:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Oz_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Oz_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Oz_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Oz_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Oz_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Oz_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Oz_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Oz_(programming_language)
    :extract: 'Oz is a multiparadigm programming language, developed in the Programming
      Systems Lab at Université catholique de Louvain, for programming language education.
      It has a canonical textbook: Concepts, Techniques, and Models of Computer Programming.'
    :extract_html: "<p><b>Oz</b> is a multiparadigm programming language, developed
      in the Programming Systems Lab at Université catholique de Louvain, for programming
      language education. It has a canonical textbook: Concepts, Techniques, and Models
      of Computer Programming.</p>"
  record/5583f20f-7138-4fca-ac54-f0a4efc3ff3a:
    :type: standard
    :title: S3 (programming language)
    :displaytitle: S3 (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7388288
    :titles:
      :canonical: S3_(programming_language)
      :normalized: S3 (programming language)
      :display: S3 (programming language)
    :pageid: 11484588
    :lang: en
    :dir: ltr
    :revision: '752118071'
    :tid: 341af8d0-2689-11eb-8569-415acde83b44
    :timestamp: '2016-11-29T16:20:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/S3_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/S3_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/S3_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:S3_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/S3_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/S3_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/S3_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:S3_(programming_language)
    :extract: S3 is a structured, imperative high-level computer programming language.
      It was developed by the UK company International Computers Limited (ICL) for
      its 2900 Series mainframes. It is a system programming language with syntax
      influenced by ALGOL 68 but with data types and operators aligned to those offered
      by the 2900 Series. It was the implementation language of the operating system
      VME.
    :extract_html: "<p><b>S3</b> is a structured, imperative high-level computer programming
      language. It was developed by the UK company International Computers Limited
      (ICL) for its 2900 Series mainframes. It is a system programming language with
      syntax influenced by ALGOL 68 but with data types and operators aligned to those
      offered by the 2900 Series. It was the implementation language of the operating
      system VME.</p>"
  record/ffa4a07b-7101-4e58-b4ff-ea22fa7a0c82:
    :type: standard
    :title: Whiley (programming language)
    :displaytitle: Whiley (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q23653623
    :titles:
      :canonical: Whiley_(programming_language)
      :normalized: Whiley (programming language)
      :display: Whiley (programming language)
    :pageid: 48747326
    :lang: en
    :dir: ltr
    :revision: '978465039'
    :tid: d0abbb90-3137-11eb-b66f-2fe301dc8a8d
    :timestamp: '2020-09-15T02:44:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Whiley_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Whiley_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Whiley_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Whiley_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Whiley_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Whiley_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Whiley_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Whiley_(programming_language)
    :extract: Whiley is an experimental programming language that combines features
      from the functional and imperative paradigms, and supports formal specification
      through function preconditions, postconditions and loop invariants. The language
      uses flow-sensitive typing also known as "flow typing."
    :extract_html: <p><b>Whiley</b> is an experimental programming language that combines
      features from the functional and imperative paradigms, and supports formal specification
      through function preconditions, postconditions and loop invariants. The language
      uses flow-sensitive typing also known as "flow typing."</p>
  record/ab69eccd-d86e-4b10-a815-3e3938e388fa:
    :type: standard
    :title: LiveCode
    :displaytitle: LiveCode
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3068282
    :titles:
      :canonical: LiveCode
      :normalized: LiveCode
      :display: LiveCode
    :pageid: 30890362
    :lang: en
    :dir: ltr
    :revision: '976577347'
    :tid: fe04f5b0-30d4-11eb-9a51-5db79e95a145
    :timestamp: '2020-09-03T19:03:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LiveCode
        :revisions: https://en.wikipedia.org/wiki/LiveCode?action=history
        :edit: https://en.wikipedia.org/wiki/LiveCode?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LiveCode
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LiveCode
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LiveCode
        :edit: https://en.m.wikipedia.org/wiki/LiveCode?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LiveCode
    :extract: LiveCode is a cross-platform rapid application development runtime system
      inspired by HyperCard. It features the LiveCode Script programming language
      which belongs to the family of xTalk scripting languages like HyperCard's HyperTalk.
    :extract_html: "<p><b>LiveCode</b> is a cross-platform rapid application development
      runtime system inspired by HyperCard. It features the <i>LiveCode Script</i>
      programming language which belongs to the family of xTalk scripting languages
      like HyperCard's HyperTalk.</p>"
  record/2dad138e-59e1-4bbb-9f41-27cdc5de4c92:
    :type: standard
    :title: Q (programming language from Kx Systems)
    :displaytitle: Q (programming language from Kx Systems)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7265638
    :titles:
      :canonical: Q_(programming_language_from_Kx_Systems)
      :normalized: Q (programming language from Kx Systems)
      :display: Q (programming language from Kx Systems)
    :pageid: 18595067
    :lang: en
    :dir: ltr
    :revision: '967026133'
    :tid: 2fa66cb0-2a23-11eb-859a-9fba27bfeba3
    :timestamp: '2020-07-10T17:44:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)
        :revisions: https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)?action=history
        :edit: https://en.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Q_(programming_language_from_Kx_Systems)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Q_(programming_language_from_Kx_Systems)
        :edit: https://en.m.wikipedia.org/wiki/Q_(programming_language_from_Kx_Systems)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Q_(programming_language_from_Kx_Systems)
    :extract: Q is a programming language for array processing, developed by Arthur
      Whitney. It is proprietary software, commercialized by Kx Systems. Q serves
      as the query language for kdb+, a disk based and in-memory, column-based database.
      Kdb+ is based on the language k, a terse variant of the language APL. Q is a
      thin wrapper around k, providing a more readable, English-like interface.
    :extract_html: "<p><b>Q</b> is a programming language for array processing, developed
      by Arthur Whitney. It is proprietary software, commercialized by Kx Systems.
      Q serves as the query language for kdb+, a disk based and in-memory, column-based
      database. Kdb+ is based on the language k, a terse variant of the language APL.
      Q is a thin wrapper around k, providing a more readable, English-like interface.</p>"
  record/23f1f06e-6a4e-40fd-880c-86c4a4c7a449:
    :type: standard
    :title: Modula-3
    :displaytitle: Modula-3
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1928222
    :titles:
      :canonical: Modula-3
      :normalized: Modula-3
      :display: Modula-3
    :pageid: 241545
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Modula-3.svg/320px-Modula-3.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Modula-3.svg/512px-Modula-3.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '973196377'
    :tid: 1631bae0-1845-11eb-b88c-a9ebcadd5c8f
    :timestamp: '2020-08-15T22:35:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Modula-3
        :revisions: https://en.wikipedia.org/wiki/Modula-3?action=history
        :edit: https://en.wikipedia.org/wiki/Modula-3?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Modula-3
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Modula-3
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Modula-3
        :edit: https://en.m.wikipedia.org/wiki/Modula-3?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Modula-3
    :extract: Modula-3 is a programming language conceived as a successor to an upgraded
      version of Modula-2 known as Modula-2+. While it has been influential in research
      circles it has not been adopted widely in industry. It was designed by Luca
      Cardelli, James Donahue, Lucille Glassman, Mick Jordan, Bill Kalsow and Greg
      Nelson at the Digital Equipment Corporation (DEC) Systems Research Center (SRC)
      and the Olivetti Research Center (ORC) in the late 1980s.
    :extract_html: "<p><b>Modula-3</b> is a programming language conceived as a successor
      to an upgraded version of Modula-2 known as Modula-2+. While it has been influential
      in research circles it has not been adopted widely in industry. It was designed
      by Luca Cardelli, James Donahue, Lucille Glassman, Mick Jordan, Bill Kalsow
      and Greg Nelson at the Digital Equipment Corporation (DEC) Systems Research
      Center (SRC) and the Olivetti Research Center (ORC) in the late 1980s.</p>"
  record/4bdf7819-bc8d-471b-b4d6-3c74ba7e2fc3:
    :type: standard
    :title: FAUST (programming language)
    :displaytitle: FAUST (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1398550
    :titles:
      :canonical: FAUST_(programming_language)
      :normalized: FAUST (programming language)
      :display: FAUST (programming language)
    :pageid: 4532356
    :lang: en
    :dir: ltr
    :revision: '962595130'
    :tid: 88e88100-31c1-11eb-b2f8-73c2c93e13d7
    :timestamp: '2020-06-15T00:04:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FAUST_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/FAUST_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/FAUST_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FAUST_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FAUST_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FAUST_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/FAUST_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FAUST_(programming_language)
    :extract: 'FAUST is a domain-specific purely functional programming language for
      implementing signal processing algorithms in the form of libraries, audio plug-ins,
      or standalone applications. A FAUST program denotes a signal processor: a mathematical
      function that is applied to some input signal and then fed out.'
    :extract_html: "<p><b>FAUST</b> is a domain-specific purely functional programming
      language for implementing signal processing algorithms in the form of libraries,
      audio plug-ins, or standalone applications. A FAUST program denotes a signal
      processor: a mathematical function that is applied to some input signal and
      then fed out.</p>"
  record/24ffaa35-1620-43a0-9831-0b7c60780a53:
    :type: standard
    :title: OptimJ
    :displaytitle: OptimJ
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3354460
    :titles:
      :canonical: OptimJ
      :normalized: OptimJ
      :display: OptimJ
    :pageid: 28952622
    :lang: en
    :dir: ltr
    :revision: '959767907'
    :tid: 5fd327e0-296d-11eb-ba42-8ff21c33a2c4
    :timestamp: '2020-05-30T14:24:38Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OptimJ
        :revisions: https://en.wikipedia.org/wiki/OptimJ?action=history
        :edit: https://en.wikipedia.org/wiki/OptimJ?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OptimJ
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OptimJ
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OptimJ
        :edit: https://en.m.wikipedia.org/wiki/OptimJ?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OptimJ
    :extract: |-
      OptimJ is an extension for Java with language support for writing optimization models and abstractions for bulk data processing. The extensions and the proprietary product implementing the extensions were developed by Ateji which went out of business in September 2011.
      OptimJ aims at providing a clear and concise algebraic notation for optimization modeling, removing compatibility barriers between optimization modeling and application programming tools, and bringing software engineering techniques such as object-orientation and modern IDE support to optimization experts.
    :extract_html: |-
      <p><b>OptimJ</b> is an extension for Java with language support for writing optimization models and abstractions for bulk data processing. The extensions and the proprietary product implementing the extensions were developed by Ateji which went out of business in September 2011.
      OptimJ aims at providing a clear and concise algebraic notation for optimization modeling, removing compatibility barriers between optimization modeling and application programming tools, and bringing software engineering techniques such as object-orientation and modern IDE support to optimization experts.</p>
  record/fabeb6c8-a4ce-4dfd-a13e-beacacf7dbe2:
    :type: standard
    :title: WebAssembly
    :displaytitle: WebAssembly
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q20155677
    :titles:
      :canonical: WebAssembly
      :normalized: WebAssembly
      :display: WebAssembly
    :pageid: 47013794
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/WebAssembly_Logo.svg/320px-WebAssembly_Logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/WebAssembly_Logo.svg/612px-WebAssembly_Logo.svg.png
      :width: 612
      :height: 612
    :lang: en
    :dir: ltr
    :revision: '991811609'
    :tid: 3b40def0-342a-11eb-9b1b-e56960500449
    :timestamp: '2020-12-01T23:09:08Z'
    :description: binary format for executables used by web pages
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/WebAssembly
        :revisions: https://en.wikipedia.org/wiki/WebAssembly?action=history
        :edit: https://en.wikipedia.org/wiki/WebAssembly?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:WebAssembly
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/WebAssembly
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/WebAssembly
        :edit: https://en.m.wikipedia.org/wiki/WebAssembly?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:WebAssembly
    :extract: WebAssembly is an open standard that defines a portable binary-code
      format for executable programs, and a corresponding textual assembly language,
      as well as interfaces for facilitating interactions between such programs and
      their host environment. The main goal of WebAssembly is to enable high-performance
      applications on web pages, but the format is designed to be executed and integrated
      in other environments as well, including standalone ones.
    :extract_html: "<p><b>WebAssembly</b> is an open standard that defines a portable
      binary-code format for executable programs, and a corresponding textual assembly
      language, as well as interfaces for facilitating interactions between such programs
      and their host environment. The main goal of WebAssembly is to enable high-performance
      applications on web pages, but the format is designed to be executed and integrated
      in other environments as well, including standalone ones.</p>"
  record/4da2e44a-3668-4e26-998c-b3f7d41d0b35:
    :type: standard
    :title: IBM Basic Assembly Language and successors
    :displaytitle: IBM Basic Assembly Language and successors
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5968762
    :titles:
      :canonical: IBM_Basic_Assembly_Language_and_successors
      :normalized: IBM Basic Assembly Language and successors
      :display: IBM Basic Assembly Language and successors
    :pageid: 4321536
    :lang: en
    :dir: ltr
    :revision: '979514469'
    :tid: 9c3d6f60-1ec3-11eb-bb1e-8b7a1874cdad
    :timestamp: '2020-09-21T05:59:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors
        :revisions: https://en.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_Basic_Assembly_Language_and_successors
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_Basic_Assembly_Language_and_successors
        :edit: https://en.m.wikipedia.org/wiki/IBM_Basic_Assembly_Language_and_successors?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_Basic_Assembly_Language_and_successors
    :extract: Basic Assembly Language (BAL) is the commonly used term for a low-level
      programming language used on IBM System/360 and successor mainframes. Originally,
      "Basic Assembly Language" applied only to an extremely restricted dialect designed
      to run under control of IBM Basic Programming Support (BPS/360) on systems with
      only 8 KB of main memory, and only a card reader, a card punch, and a printer
      for input/output — thus the word "Basic". However, the full name and the initialism
      "BAL" almost immediately attached themselves in popular use to all assembly-language
      dialects on the System/360 and its descendants. BAL for BPS/360 was introduced
      with the System/360 in 1964.
    :extract_html: <p><b>Basic Assembly Language</b> (<b>BAL</b>) is the commonly
      used term for a low-level programming language used on IBM System/360 and successor
      mainframes. Originally, "Basic Assembly Language" applied only to an extremely
      restricted dialect designed to run under control of IBM Basic Programming Support
      (BPS/360) on systems with only 8 KB of main memory, and only a card reader,
      a card punch, and a printer for input/output — thus the word "Basic". However,
      the full name and the initialism "BAL" almost immediately attached themselves
      in popular use to all assembly-language dialects on the System/360 and its descendants.
      BAL for BPS/360 was introduced with the System/360 in 1964.</p>
  record/4a3e2419-84fd-4d35-baad-aa38daa5dfa7:
    :type: standard
    :title: Text Executive Programming Language
    :displaytitle: Text Executive Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475278
    :titles:
      :canonical: Text_Executive_Programming_Language
      :normalized: Text Executive Programming Language
      :display: Text Executive Programming Language
    :pageid: 13852549
    :lang: en
    :dir: ltr
    :revision: '978831156'
    :tid: c42e0570-195f-11eb-a166-89d1784f954e
    :timestamp: '2020-09-17T05:35:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Text_Executive_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Text_Executive_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Text_Executive_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Text_Executive_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Text_Executive_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Text_Executive_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Text_Executive_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Text_Executive_Programming_Language
    :extract: In 1979, Honeywell Information Systems announced a new programming language
      for their time-sharing service named TEX, an acronym for the Text Executive
      text processing system. TEX was a first generation scripting language, developed
      around the time of AWK and used by Honeywell initially as an in-house system
      test automation tool.
    :extract_html: "<p>In 1979, Honeywell Information Systems announced a new programming
      language for their time-sharing service named <b>TEX</b>, an acronym for the
      <b>Text Executive</b> text processing system. <b>TEX</b> was a first generation
      scripting language, developed around the time of AWK and used by Honeywell initially
      as an in-house system test automation tool.</p>"
  record/c9495573-628f-4120-a511-4d9c9f8f129c:
    :type: standard
    :title: Céu (programming language)
    :displaytitle: Céu (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28457754
    :titles:
      :canonical: Céu_(programming_language)
      :normalized: Céu (programming language)
      :display: Céu (programming language)
    :pageid: 52350190
    :lang: en
    :dir: ltr
    :revision: '771815496'
    :tid: 0bcff410-133e-11eb-8263-ab20a9de2d49
    :timestamp: '2017-03-23T17:49:17Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C%C3%A9u_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/C%C3%A9u_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/C%C3%A9u_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C%C3%A9u_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C%C3%A9u_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C%C3%A9u_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/C%C3%A9u_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C%C3%A9u_(programming_language)
    :extract: "Céu is \"Structured Synchronous Reactive Programming\" \nAccording
      to its web page, Céu supports synchronous concurrency with shared memory and
      deterministic execution and has a small memory footprint."
    :extract_html: "<p><b>Céu</b> is \"Structured Synchronous Reactive Programming\"
      \nAccording to its web page, Céu supports synchronous concurrency with shared
      memory and deterministic execution and has a small memory footprint.</p>"
  record/b022747d-9386-4bf9-b385-2fa693070958:
    :type: standard
    :title: JOSS
    :displaytitle: JOSS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q974083
    :titles:
      :canonical: JOSS
      :normalized: JOSS
      :display: JOSS
    :pageid: 140643
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/10/JOSS_Session.jpg/246px-JOSS_Session.jpg
      :width: 246
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/10/JOSS_Session.jpg
      :width: 2510
      :height: 3257
    :lang: en
    :dir: ltr
    :revision: '982315295'
    :tid: 056e5300-3008-11eb-afce-b3386c003d30
    :timestamp: '2020-10-07T11:58:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JOSS
        :revisions: https://en.wikipedia.org/wiki/JOSS?action=history
        :edit: https://en.wikipedia.org/wiki/JOSS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JOSS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JOSS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JOSS
        :edit: https://en.m.wikipedia.org/wiki/JOSS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JOSS
    :extract: JOSS, an acronym for JOHNNIAC Open Shop System, was one of the first
      interactive, time-sharing programming languages. It pioneered a number of features
      that would become common in languages from the 1960s into the 1980s, including
      line numbers as both editing instructions and targets for branches, statements
      predicated by boolean decisions, and a built-in editor that can perform instructions
      in "direct" or "immediate" mode, a conversational user interface.
    :extract_html: <p><b>JOSS</b>, an acronym for <b>JOHNNIAC Open Shop System</b>,
      was one of the first interactive, time-sharing programming languages. It pioneered
      a number of features that would become common in languages from the 1960s into
      the 1980s, including line numbers as both editing instructions and targets for
      branches, statements predicated by boolean decisions, and a built-in editor
      that can perform instructions in "direct" or "immediate" mode, a conversational
      user interface.</p>
  record/f361bec7-29ea-4ad9-b468-cba176e457f4:
    :type: standard
    :title: Unreal Engine
    :displaytitle: Unreal Engine
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q608276
    :titles:
      :canonical: Unreal_Engine
      :normalized: Unreal Engine
      :display: Unreal Engine
    :pageid: 417152
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/0/0a/Unreal_Engine_4_screenshot.png/320px-Unreal_Engine_4_screenshot.png
      :width: 320
      :height: 173
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0a/Unreal_Engine_4_screenshot.png
      :width: 429
      :height: 232
    :lang: en
    :dir: ltr
    :revision: '991528528'
    :tid: 45c25e10-3594-11eb-ac95-4b49e98a17ab
    :timestamp: '2020-11-30T15:08:19Z'
    :description: game engine developed by Epic Games
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Unreal_Engine
        :revisions: https://en.wikipedia.org/wiki/Unreal_Engine?action=history
        :edit: https://en.wikipedia.org/wiki/Unreal_Engine?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Unreal_Engine
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Unreal_Engine
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Unreal_Engine
        :edit: https://en.m.wikipedia.org/wiki/Unreal_Engine?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Unreal_Engine
    :extract: The Unreal Engine is a game engine developed by Epic Games, first showcased
      in the 1998 first-person shooter game Unreal. Although initially developed for
      first-person shooters, it has been used in a variety of other genres, including
      platformers, fighting games, and MMORPGs, and has seen adoption by many non-gaming
      projects. Written in C++, the Unreal Engine features a high degree of portability,
      supporting a wide range of platforms.
    :extract_html: "<p>The <b>Unreal Engine</b> is a game engine developed by Epic
      Games, first showcased in the 1998 first-person shooter game <i>Unreal</i>.
      Although initially developed for first-person shooters, it has been used in
      a variety of other genres, including platformers, fighting games, and MMORPGs,
      and has seen adoption by many non-gaming projects. Written in C++, the Unreal
      Engine features a high degree of portability, supporting a wide range of platforms.</p>"
  record/e53f4832-defd-4807-8b93-6a867c35df07:
    :type: standard
    :title: Common Intermediate Language
    :displaytitle: Common Intermediate Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q263544
    :titles:
      :canonical: Common_Intermediate_Language
      :normalized: Common Intermediate Language
      :display: Common Intermediate Language
    :pageid: 46004
    :lang: en
    :dir: ltr
    :revision: '987899925'
    :tid: 29effc70-34e9-11eb-aef1-036b9ed9e53f
    :timestamp: '2020-11-09T22:13:49Z'
    :description: Intermediate representation defined within the CLI specification
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Common_Intermediate_Language
        :revisions: https://en.wikipedia.org/wiki/Common_Intermediate_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Common_Intermediate_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Common_Intermediate_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Common_Intermediate_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Common_Intermediate_Language
        :edit: https://en.m.wikipedia.org/wiki/Common_Intermediate_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Common_Intermediate_Language
    :extract: Common Intermediate Language (CIL), formerly called Microsoft Intermediate
      Language (MSIL) or Intermediate Language (IL), is the intermediate language
      binary instruction set defined within the Common Language Infrastructure (CLI)
      specification. CIL instructions are executed by a CLI-compatible runtime environment
      such as the Common Language Runtime. Languages which target the CLI compile
      to CIL. CIL is object-oriented, stack-based bytecode. Runtimes typically just-in-time
      compile CIL instructions into native code.
    :extract_html: "<p><b>Common Intermediate Language</b> (<b>CIL</b>), formerly
      called <b>Microsoft Intermediate Language</b> (<b>MSIL</b>) or <b>Intermediate
      Language</b> (<b>IL</b>), is the intermediate language binary instruction set
      defined within the Common Language Infrastructure (CLI) specification. CIL instructions
      are executed by a CLI-compatible runtime environment such as the Common Language
      Runtime. Languages which target the CLI compile to CIL. CIL is object-oriented,
      stack-based bytecode. Runtimes typically just-in-time compile CIL instructions
      into native code.</p>"
  record/a30cb85f-f5cc-43f7-83ab-49aa165f403c:
    :type: standard
    :title: Keysight VEE
    :displaytitle: Keysight VEE
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q393768
    :titles:
      :canonical: Keysight_VEE
      :normalized: Keysight VEE
      :display: Keysight VEE
    :pageid: 2282754
    :lang: en
    :dir: ltr
    :revision: '881901850'
    :tid: a5628b60-2d29-11eb-bf35-63c16098c83a
    :timestamp: '2019-02-05T15:05:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Keysight_VEE
        :revisions: https://en.wikipedia.org/wiki/Keysight_VEE?action=history
        :edit: https://en.wikipedia.org/wiki/Keysight_VEE?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Keysight_VEE
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Keysight_VEE
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Keysight_VEE
        :edit: https://en.m.wikipedia.org/wiki/Keysight_VEE?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Keysight_VEE
    :extract: Keysight VEE is a graphical dataflow programming software development
      environment from Keysight Technologies for automated test, measurement, data
      analysis and reporting. VEE originally stood for Visual Engineering Environment
      and developed by HP designated as HP VEE; it has since been officially renamed
      to Keysight VEE. Keysight VEE has been widely used in various industries, serving
      the entire stage of a product lifecycle, from design, validation to manufacturing.
      It is optimized in instrument control and automation with test and measurement
      devices such as data acquisition instruments like digital voltmeters and oscilloscopes,
      and source devices like signal generators and programmable power supplies.
    :extract_html: "<p><b>Keysight VEE</b> is a graphical dataflow programming software
      development environment from Keysight Technologies for automated test, measurement,
      data analysis and reporting. VEE originally stood for Visual Engineering Environment
      and developed by HP designated as HP VEE; it has since been officially renamed
      to Keysight VEE. Keysight VEE has been widely used in various industries, serving
      the entire stage of a product lifecycle, from design, validation to manufacturing.
      It is optimized in instrument control and automation with test and measurement
      devices such as data acquisition instruments like digital voltmeters and oscilloscopes,
      and source devices like signal generators and programmable power supplies.</p>"
  record/27e05a77-68e7-40ca-b90f-af838dec7782:
    :type: standard
    :title: ActionScript
    :displaytitle: ActionScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q234657
    :titles:
      :canonical: ActionScript
      :normalized: ActionScript
      :display: ActionScript
    :pageid: 519691
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0f/ActionScript_icon.png
      :width: 256
      :height: 256
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0f/ActionScript_icon.png
      :width: 256
      :height: 256
    :lang: en
    :dir: ltr
    :revision: '988100030'
    :tid: fbef3e80-23c2-11eb-9645-07226b6950f4
    :timestamp: '2020-11-11T02:09:43Z'
    :description: object-oriented programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ActionScript
        :revisions: https://en.wikipedia.org/wiki/ActionScript?action=history
        :edit: https://en.wikipedia.org/wiki/ActionScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ActionScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ActionScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ActionScript
        :edit: https://en.m.wikipedia.org/wiki/ActionScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ActionScript
    :extract: ActionScript is an object-oriented programming language originally developed
      by Macromedia Inc.. It is influenced by HyperTalk, the scripting language for
      HyperCard. It is now an implementation of ECMAScript, though it originally arose
      as a sibling, both being influenced by HyperTalk.
    :extract_html: "<p><b>ActionScript</b> is an object-oriented programming language
      originally developed by Macromedia Inc.. It is influenced by HyperTalk, the
      scripting language for HyperCard. It is now an implementation of ECMAScript,
      though it originally arose as a sibling, both being influenced by HyperTalk.</p>"
  record/dc04c686-25e4-489d-9f45-672acd3ecdd3:
    :type: standard
    :title: Yahoo! Query Language
    :displaytitle: Yahoo! Query Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q8046864
    :titles:
      :canonical: Yahoo!_Query_Language
      :normalized: Yahoo! Query Language
      :display: Yahoo! Query Language
    :pageid: 22672444
    :lang: en
    :dir: ltr
    :revision: '991079105'
    :tid: 0df18510-32ba-11eb-bb0b-2578b07cb915
    :timestamp: '2020-11-28T04:02:50Z'
    :description: SQL-like query language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Yahoo!_Query_Language
        :revisions: https://en.wikipedia.org/wiki/Yahoo!_Query_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Yahoo!_Query_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Yahoo!_Query_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Yahoo!_Query_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Yahoo!_Query_Language
        :edit: https://en.m.wikipedia.org/wiki/Yahoo!_Query_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Yahoo!_Query_Language
    :extract: Yahoo! Query Language (YQL) is an SQL-like query language created by
      Yahoo! as part of their Developer Network. YQL is designed to retrieve and manipulate
      data from APIs through a single Web interface, thus allowing mashups that enable
      developers to create their own applications.
    :extract_html: "<p><b>Yahoo! Query Language</b> (<b>YQL</b>) is an SQL-like query
      language created by Yahoo! as part of their Developer Network. YQL is designed
      to retrieve and manipulate data from APIs through a single Web interface, thus
      allowing mashups that enable developers to create their own applications.</p>"
  record/5527af2d-d746-4029-ac59-db48802a81cb:
    :type: standard
    :title: DIGITAL Command Language
    :displaytitle: DIGITAL Command Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q427002
    :titles:
      :canonical: DIGITAL_Command_Language
      :normalized: DIGITAL Command Language
      :display: DIGITAL Command Language
    :pageid: 532369
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/51/Openvms-8.4-2L1-dcl.png/320px-Openvms-8.4-2L1-dcl.png
      :width: 320
      :height: 218
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/5/51/Openvms-8.4-2L1-dcl.png
      :width: 882
      :height: 602
    :lang: en
    :dir: ltr
    :revision: '985600438'
    :tid: 5719ff10-17d0-11eb-9716-d12efdac5737
    :timestamp: '2020-10-26T21:15:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DIGITAL_Command_Language
        :revisions: https://en.wikipedia.org/wiki/DIGITAL_Command_Language?action=history
        :edit: https://en.wikipedia.org/wiki/DIGITAL_Command_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DIGITAL_Command_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DIGITAL_Command_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DIGITAL_Command_Language
        :edit: https://en.m.wikipedia.org/wiki/DIGITAL_Command_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DIGITAL_Command_Language
    :extract: |-
      DIGITAL Command Language (DCL) is the standard command language

      adopted by most of the operating systems (OSs) that were sold by the former Digital Equipment Corporation. DCL had its roots in the IAS, TOPS-20, and RT-11 OSs and was implemented as a standard across most of Digital's OSs, notably RSX-11, but took its most powerful form in the OpenVMS OS.
    :extract_html: |-
      <p><b>DIGITAL Command Language</b> (<b>DCL</b>) is the standard command language

      adopted by most of the operating systems (OSs) that were sold by the former Digital Equipment Corporation. DCL had its roots in the IAS, TOPS-20, and RT-11 OSs and was implemented as a standard across most of Digital's OSs, notably RSX-11, but took its most powerful form in the OpenVMS OS.</p>
  record/adc009bb-72aa-4477-bc83-e4157f93b458:
    :type: standard
    :title: Chomski
    :displaytitle: chomski
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5104453
    :titles:
      :canonical: Chomski
      :normalized: Chomski
      :display: chomski
    :pageid: 18718048
    :lang: en
    :dir: ltr
    :revision: '967051041'
    :tid: e78623c0-34cd-11eb-894d-57201d613ce6
    :timestamp: '2020-07-10T20:48:42Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Chomski
        :revisions: https://en.wikipedia.org/wiki/Chomski?action=history
        :edit: https://en.wikipedia.org/wiki/Chomski?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Chomski
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Chomski
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Chomski
        :edit: https://en.m.wikipedia.org/wiki/Chomski?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Chomski
    :extract: pattern parsing virtual machine and pep refer to both a command line
      computer language and utility which can be used to parse and transform text
      patterns and languages. The utility reads input files character by character
      (sequentially), applying the operation which has been specified via the command
      line or a pep script, and then outputs the line. It was developed from 2006
      in the C language. Pep has derived a number of ideas and syntax elements from
      Sed, a command line text stream editor.
    :extract_html: "<p><b>pattern parsing virtual machine</b> and <b>pep</b> refer
      to both a command line computer language and utility which can be used to parse
      and transform text patterns and languages. The utility reads input files character
      by character (sequentially), applying the operation which has been specified
      via the command line or a <i>pep script</i>, and then outputs the line. It was
      developed from 2006 in the C language. Pep has derived a number of ideas and
      syntax elements from Sed, a command line text stream editor.</p>"
  record/5f9cb501-35e7-45eb-a02f-1e428087f4a3:
    :type: standard
    :title: Perl
    :displaytitle: Perl
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q42478
    :titles:
      :canonical: Perl
      :normalized: Perl
      :display: Perl
    :pageid: 23939
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e0/Programming-republic-of-perl.png
      :width: 97
      :height: 97
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e0/Programming-republic-of-perl.png
      :width: 97
      :height: 97
    :lang: en
    :dir: ltr
    :revision: '991528294'
    :tid: b7c1ed60-331d-11eb-9fa9-395faac089d8
    :timestamp: '2020-11-30T15:06:59Z'
    :description: Interpreted programming language first released in 1987
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Perl
        :revisions: https://en.wikipedia.org/wiki/Perl?action=history
        :edit: https://en.wikipedia.org/wiki/Perl?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Perl
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Perl
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Perl
        :edit: https://en.m.wikipedia.org/wiki/Perl?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Perl
    :extract: Perl is a family of two high-level, general-purpose, interpreted, dynamic
      programming languages. "Perl" refers to Perl 5, but from 2000 to 2019 it also
      referred to its redesigned "sister language", Perl 6, before the latter's name
      was officially changed to Raku in October 2019.
    :extract_html: <p><b>Perl</b> is a family of two high-level, general-purpose,
      interpreted, dynamic programming languages. "Perl" refers to Perl 5, but from
      2000 to 2019 it also referred to its redesigned "sister language", Perl 6, before
      the latter's name was officially changed to Raku in October 2019.</p>
  record/67c652c7-bdca-458e-905a-8933e81237e0:
    :type: standard
    :title: Knowledge Interchange Format
    :displaytitle: Knowledge Interchange Format
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q354163
    :titles:
      :canonical: Knowledge_Interchange_Format
      :normalized: Knowledge Interchange Format
      :display: Knowledge Interchange Format
    :pageid: 5558061
    :lang: en
    :dir: ltr
    :revision: '980105138'
    :tid: 32b45ec0-1f48-11eb-9518-c74dd7260682
    :timestamp: '2020-09-24T16:57:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Knowledge_Interchange_Format
        :revisions: https://en.wikipedia.org/wiki/Knowledge_Interchange_Format?action=history
        :edit: https://en.wikipedia.org/wiki/Knowledge_Interchange_Format?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Knowledge_Interchange_Format
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Knowledge_Interchange_Format
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Knowledge_Interchange_Format
        :edit: https://en.m.wikipedia.org/wiki/Knowledge_Interchange_Format?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Knowledge_Interchange_Format
    :extract: Knowledge Interchange Format (KIF) is a computer language designed to
      enable systems to share and re-use information from knowledge-based systems.
      KIF is similar to frame languages such as KL-One and LOOM but unlike such language
      its primary role is not intended as a framework for the expression or use of
      knowledge but rather for the interchange of knowledge between systems. The designers
      of KIF likened it to PostScript. PostScript was not designed primarily as a
      language to store and manipulate documents but rather as an interchange format
      for systems and devices to share documents. In the same way KIF is meant to
      facilitate sharing of knowledge across different systems that use different
      languages, formalisms, platforms, etc.
    :extract_html: "<p><b>Knowledge Interchange Format</b> (<b>KIF</b>) is a computer
      language designed to enable systems to share and re-use information from knowledge-based
      systems. KIF is similar to frame languages such as KL-One and LOOM but unlike
      such language its primary role is not intended as a framework for the expression
      or use of knowledge but rather for the interchange of knowledge between systems.
      The designers of KIF likened it to PostScript. PostScript was not designed primarily
      as a language to store and manipulate documents but rather as an interchange
      format for systems and devices to share documents. In the same way KIF is meant
      to facilitate sharing of knowledge across different systems that use different
      languages, formalisms, platforms, etc.</p>"
  record/66aa5516-6f56-4640-b364-9cc442d4c5c4:
    :type: standard
    :title: Wyvern (programming language)
    :displaytitle: Wyvern (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q18029891
    :titles:
      :canonical: Wyvern_(programming_language)
      :normalized: Wyvern (programming language)
      :display: Wyvern (programming language)
    :pageid: 43528524
    :lang: en
    :dir: ltr
    :revision: '991682645'
    :tid: c9099080-33b0-11eb-80fa-f90f5c3de947
    :timestamp: '2020-12-01T08:39:50Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Wyvern_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Wyvern_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Wyvern_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Wyvern_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Wyvern_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Wyvern_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Wyvern_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Wyvern_(programming_language)
    :extract: Wyvern is a computer programming language created by Jonathan Aldrich
      and Alex Potanin for the development of web and mobile applications with security
      and assurance being number one priority. Wyvern supports object capabilities,
      it is structurally typed, and aims to make secure way of programming easier
      than insecure - as described in the Wyvern Manifesto. One of the early available
      features that make Wyvern special is a way to safely use multiple programming
      languages within the same program so programmers can use the language most appropriate
      for each function while at the same time increasing the program's security.
    :extract_html: <p><b>Wyvern</b> is a computer programming language created by
      Jonathan Aldrich and Alex Potanin for the development of web and mobile applications
      with security and assurance being number one priority. Wyvern supports object
      capabilities, it is structurally typed, and aims to make secure way of programming
      <i>easier</i> than insecure - as described in the <span class="external text">Wyvern
      Manifesto</span>. One of the early available features that make Wyvern special
      is a way to safely use multiple programming languages within the same program
      so programmers can use the language most appropriate for each function while
      at the same time increasing the program's security.</p>
  record/57f67106-b481-4cbd-9043-d2d8161a9d65:
    :type: standard
    :title: Prolog
    :displaytitle: Prolog
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q163468
    :titles:
      :canonical: Prolog
      :normalized: Prolog
      :display: Prolog
    :pageid: 23485
    :lang: en
    :dir: ltr
    :revision: '991624480'
    :tid: 3d882b60-3370-11eb-897e-4dfa33057994
    :timestamp: '2020-12-01T00:57:42Z'
    :description: Programming language that uses first order logic
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Prolog
        :revisions: https://en.wikipedia.org/wiki/Prolog?action=history
        :edit: https://en.wikipedia.org/wiki/Prolog?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Prolog
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Prolog
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Prolog
        :edit: https://en.m.wikipedia.org/wiki/Prolog?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Prolog
    :extract: Prolog is a logic programming language associated with artificial intelligence
      and computational linguistics.
    :extract_html: "<p><b>Prolog</b> is a logic programming language associated with
      artificial intelligence and computational linguistics.</p>"
  record/7cd6f6c4-c430-4d89-b9df-a1a7c0d63bc4:
    :type: standard
    :title: DIBOL
    :displaytitle: DIBOL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5205093
    :titles:
      :canonical: DIBOL
      :normalized: DIBOL
      :display: DIBOL
    :pageid: 598142
    :lang: en
    :dir: ltr
    :revision: '977905965'
    :tid: 1504d100-1b21-11eb-a5f4-fddda4846512
    :timestamp: '2020-09-11T18:01:42Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DIBOL
        :revisions: https://en.wikipedia.org/wiki/DIBOL?action=history
        :edit: https://en.wikipedia.org/wiki/DIBOL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DIBOL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DIBOL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DIBOL
        :edit: https://en.m.wikipedia.org/wiki/DIBOL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DIBOL
    :extract: DIBOL or Digital's Business Oriented Language is a general-purpose,
      procedural, imperative programming language, designed for use in Management
      Information Systems (MIS) software development.
    :extract_html: "<p><b>DIBOL</b> or <b>Digital's Business Oriented Language</b>
      is a general-purpose, procedural, imperative programming language, designed
      for use in Management Information Systems (MIS) software development.</p>"
  record/c70681ea-bd37-4cd9-baac-6ebf3e30f3eb:
    :type: standard
    :title: Squirrel (programming language)
    :displaytitle: Squirrel (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1200182
    :titles:
      :canonical: Squirrel_(programming_language)
      :normalized: Squirrel (programming language)
      :display: Squirrel (programming language)
    :pageid: 2819069
    :lang: en
    :dir: ltr
    :revision: '990167282'
    :tid: ae5fd9d0-2d46-11eb-9e5a-155fca99dcc8
    :timestamp: '2020-11-23T04:45:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Squirrel_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Squirrel_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Squirrel_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Squirrel_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Squirrel_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Squirrel_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Squirrel_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Squirrel_(programming_language)
    :extract: Squirrel is a high level imperative, object-oriented programming language,
      designed to be a lightweight scripting language that fits in the size, memory
      bandwidth, and real-time requirements of applications like video games and embedded
      systems.
    :extract_html: "<p><b>Squirrel</b> is a high level imperative, object-oriented
      programming language, designed to be a lightweight scripting language that fits
      in the size, memory bandwidth, and real-time requirements of applications like
      video games and embedded systems.</p>"
  record/f8eaac5e-330c-418c-99b6-e2b1a82fb365:
    :type: standard
    :title: Tom (pattern matching language)
    :displaytitle: Tom (pattern matching language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7424115
    :titles:
      :canonical: Tom_(pattern_matching_language)
      :normalized: Tom (pattern matching language)
      :display: Tom (pattern matching language)
    :pageid: 11090262
    :lang: en
    :dir: ltr
    :revision: '973233772'
    :tid: c9d442f0-265c-11eb-96ff-6312eab55af0
    :timestamp: '2020-08-16T03:21:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Tom_(pattern_matching_language)
        :revisions: https://en.wikipedia.org/wiki/Tom_(pattern_matching_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Tom_(pattern_matching_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Tom_(pattern_matching_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Tom_(pattern_matching_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Tom_(pattern_matching_language)
        :edit: https://en.m.wikipedia.org/wiki/Tom_(pattern_matching_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Tom_(pattern_matching_language)
    :extract: Tom is a programming language particularly well-suited for programming
      various transformations on tree structures and XML based documents. Tom is a
      language extension which adds new matching primitives to C and Java as well
      as support for rewrite rules systems. The rules can be controlled using a strategy
      language.
    :extract_html: "<p><b>Tom</b> is a programming language particularly well-suited
      for programming various transformations on tree structures and XML based documents.
      Tom is a language extension which adds new matching primitives to C and Java
      as well as support for rewrite rules systems. The rules can be controlled using
      a strategy language.</p>"
  record/ef121ded-d562-4e57-b7df-7c08897426bc:
    :type: standard
    :title: LilyPond
    :displaytitle: LilyPond
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q195946
    :titles:
      :canonical: LilyPond
      :normalized: LilyPond
      :display: LilyPond
    :pageid: 169144
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/03/LilyPond-logo-with-music.png/320px-LilyPond-logo-with-music.png
      :width: 320
      :height: 191
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/03/LilyPond-logo-with-music.png
      :width: 321
      :height: 192
    :lang: en
    :dir: ltr
    :revision: '991814295'
    :tid: f02cb800-342c-11eb-a0af-07c93aeb3cac
    :timestamp: '2020-12-01T23:28:32Z'
    :description: Free software scorewriter
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LilyPond
        :revisions: https://en.wikipedia.org/wiki/LilyPond?action=history
        :edit: https://en.wikipedia.org/wiki/LilyPond?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LilyPond
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LilyPond
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LilyPond
        :edit: https://en.m.wikipedia.org/wiki/LilyPond?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LilyPond
    :extract: LilyPond is a computer program and file format for music engraving.
      One of LilyPond's major goals is to produce scores that are engraved with traditional
      layout rules, reflecting the era when scores were engraved by hand.
    :extract_html: "<p><b>LilyPond</b> is a computer program and file format for music
      engraving. One of LilyPond's major goals is to produce scores that are engraved
      with traditional layout rules, reflecting the era when scores were engraved
      by hand.</p>"
  record/caefb529-f12f-4490-8397-147036b7df1d:
    :type: standard
    :title: App Inventor for Android
    :displaytitle: App Inventor for Android
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q620620
    :titles:
      :canonical: App_Inventor_for_Android
      :normalized: App Inventor for Android
      :display: App Inventor for Android
    :pageid: 28015549
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/App_Inventor_2.png/320px-App_Inventor_2.png
      :width: 320
      :height: 160
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/87/App_Inventor_2.png
      :width: 1600
      :height: 799
    :lang: en
    :dir: ltr
    :revision: '979945857'
    :tid: e2b04b20-2bed-11eb-968f-410a883d0946
    :timestamp: '2020-09-23T17:57:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/App_Inventor_for_Android
        :revisions: https://en.wikipedia.org/wiki/App_Inventor_for_Android?action=history
        :edit: https://en.wikipedia.org/wiki/App_Inventor_for_Android?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:App_Inventor_for_Android
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/App_Inventor_for_Android
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/App_Inventor_for_Android
        :edit: https://en.m.wikipedia.org/wiki/App_Inventor_for_Android?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:App_Inventor_for_Android
    :extract: 'MIT App Inventor is a web application integrated development environment
      originally provided by Google, and now maintained by the Massachusetts Institute
      of Technology (MIT). It allows newcomers to computer programming to create application
      software(apps) for two operating systems (OS): Android, and iOS, which, as of
      8 July 2019, is in final beta testing. It is free and open-source software released
      under dual licensing: a Creative Commons Attribution ShareAlike 3.0 Unported
      license, and an Apache License 2.0 for the source code.'
    :extract_html: "<p><b>MIT App Inventor</b> is a web application integrated development
      environment originally provided by Google, and now maintained by the Massachusetts
      Institute of Technology (MIT). It allows newcomers to computer programming to
      create application software(apps) for two operating systems (OS): Android, and
      iOS, which, as of 8 July 2019, is in final beta testing. It is free and open-source
      software released under dual licensing: a Creative Commons Attribution ShareAlike
      3.0 Unported license, and an Apache License 2.0 for the source code.</p>"
  record/3c7b8266-4a4a-4f74-ad9a-ba7612db9223:
    :type: standard
    :title: FL (programming language)
    :displaytitle: FL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5426589
    :titles:
      :canonical: FL_(programming_language)
      :normalized: FL (programming language)
      :display: FL (programming language)
    :pageid: 2857297
    :lang: en
    :dir: ltr
    :revision: '988389725'
    :tid: fea70a30-2530-11eb-b324-6782cd775777
    :timestamp: '2020-11-12T21:49:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/FL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/FL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/FL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FL_(programming_language)
    :extract: FL is a programming language created at the IBM Almaden Research Center
      by John Backus, John Williams, and Edward Wimmers in the 1980s and documented
      in a report from 1989. FL was designed as a successor of Backus' earlier FP
      language, providing specific support for what Backus termed function-level programming.
    :extract_html: "<p><b>FL</b> is a programming language created at the IBM Almaden
      Research Center by John Backus, John Williams, and Edward Wimmers in the 1980s
      and documented in a report from 1989. FL was designed as a successor of Backus'
      earlier FP language, providing specific support for what Backus termed function-level
      programming.</p>"
  record/06c963cb-7f36-4e81-81a7-3486854598e3:
    :type: standard
    :title: Scheme (programming language)
    :displaytitle: Scheme (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q187560
    :titles:
      :canonical: Scheme_(programming_language)
      :normalized: Scheme (programming language)
      :display: Scheme (programming language)
    :pageid: 28119
    :lang: en
    :dir: ltr
    :revision: '989632598'
    :tid: 837c53b0-2fa3-11eb-b35b-8deb63125339
    :timestamp: '2020-11-20T03:15:32Z'
    :description: Dialect of Lisp
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Scheme_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Scheme_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Scheme_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Scheme_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Scheme_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Scheme_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Scheme_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Scheme_(programming_language)
    :extract: Scheme is a minimalist dialect of the Lisp family of programming languages.
      Scheme consists of a small standard core with several tools for language extension.
    :extract_html: "<p><b>Scheme</b> is a minimalist dialect of the Lisp family of
      programming languages. Scheme consists of a small standard core with several
      tools for language extension.</p>"
  record/e1f840b4-1e08-43b5-9170-b9694f6526ad:
    :type: standard
    :title: Rebol
    :displaytitle: Rebol
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1359171
    :titles:
      :canonical: Rebol
      :normalized: Rebol
      :display: Rebol
    :pageid: 26384
    :lang: en
    :dir: ltr
    :revision: '976387844'
    :tid: b2c8b3e0-3375-11eb-871b-67f4bbc61313
    :timestamp: '2020-09-02T17:15:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rebol
        :revisions: https://en.wikipedia.org/wiki/Rebol?action=history
        :edit: https://en.wikipedia.org/wiki/Rebol?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rebol
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rebol
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rebol
        :edit: https://en.m.wikipedia.org/wiki/Rebol?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rebol
    :extract: 'Rebol is a cross-platform data exchange language and a multi-paradigm
      dynamic programming language designed by Carl Sassenrath for network communications
      and distributed computing. It introduces the concept of dialecting: small, optimized,
      domain-specific languages for code and data, which is also the most notable
      property of the language according to its designer Carl Sassenrath:Although
      it can be used for programming, writing functions, and performing processes,
      its greatest strength is the ability to easily create domain-specific languages
      or dialects'
    :extract_html: '<p><b>Rebol</b> is a cross-platform data exchange language and
      a multi-paradigm dynamic programming language designed by Carl Sassenrath for
      network communications and distributed computing. It introduces the concept
      of dialecting: small, optimized, domain-specific languages for code and data,
      which is also the most notable property of the language according to its designer
      Carl Sassenrath:</p><blockquote class="templatequote"><p>Although it can be
      used for programming, writing functions, and performing processes, its greatest
      strength is the ability to easily create domain-specific languages or dialects</p></blockquote>'
  record/77444713-e3df-4095-80b1-b5cf09c7a2c2:
    :type: standard
    :title: PureScript
    :displaytitle: PureScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q65082796
    :titles:
      :canonical: PureScript
      :normalized: PureScript
      :display: PureScript
    :pageid: 60230260
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/64/PureScript_Logo.png
      :width: 300
      :height: 300
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/64/PureScript_Logo.png
      :width: 300
      :height: 300
    :lang: en
    :dir: ltr
    :revision: '982978560'
    :tid: 285c4b50-33b0-11eb-b03e-bd15a78f0e73
    :timestamp: '2020-10-11T14:41:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PureScript
        :revisions: https://en.wikipedia.org/wiki/PureScript?action=history
        :edit: https://en.wikipedia.org/wiki/PureScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PureScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PureScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PureScript
        :edit: https://en.m.wikipedia.org/wiki/PureScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PureScript
    :extract: PureScript is a strongly-typed, purely-functional programming language
      that compiles to JavaScript. It can be used to develop web applications, server
      side apps, and also desktop applications with use of Electron. Its syntax is
      mostly comparable to that of Haskell. In addition, it introduces row polymorphism
      and extensible records. Also, contrary to Haskell, PureScript adheres to a strict
      evaluation strategy.
    :extract_html: "<p><b>PureScript</b> is a strongly-typed, purely-functional programming
      language that compiles to JavaScript. It can be used to develop web applications,
      server side apps, and also desktop applications with use of Electron. Its syntax
      is mostly comparable to that of Haskell. In addition, it introduces row polymorphism
      and extensible records. Also, contrary to Haskell, PureScript adheres to a strict
      evaluation strategy.</p>"
  record/42427937-2200-4538-ad78-015c61db23e8:
    :type: standard
    :title: CoffeeScript
    :displaytitle: CoffeeScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1106819
    :titles:
      :canonical: CoffeeScript
      :normalized: CoffeeScript
      :display: CoffeeScript
    :pageid: 27403236
    :lang: en
    :dir: ltr
    :revision: '983298761'
    :tid: 55c0fbc0-2dea-11eb-938e-db4caf7296ec
    :timestamp: '2020-10-13T12:56:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CoffeeScript
        :revisions: https://en.wikipedia.org/wiki/CoffeeScript?action=history
        :edit: https://en.wikipedia.org/wiki/CoffeeScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CoffeeScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CoffeeScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CoffeeScript
        :edit: https://en.m.wikipedia.org/wiki/CoffeeScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CoffeeScript
    :extract: CoffeeScript is a programming language that compiles to JavaScript.
      It adds syntactic sugar inspired by Ruby, Python and Haskell in an effort to
      enhance JavaScript's brevity and readability. Specific additional features include
      list comprehension and destructuring assignment.
    :extract_html: "<p><b>CoffeeScript</b> is a programming language that compiles
      to JavaScript. It adds syntactic sugar inspired by Ruby, Python and Haskell
      in an effort to enhance JavaScript's brevity and readability. Specific additional
      features include list comprehension and destructuring assignment.</p>"
  record/6f304730-bd4e-43b6-a32d-7a6665ed61cf:
    :type: standard
    :title: CLU (programming language)
    :displaytitle: CLU (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q775159
    :titles:
      :canonical: CLU_(programming_language)
      :normalized: CLU (programming language)
      :display: CLU (programming language)
    :pageid: 7575
    :lang: en
    :dir: ltr
    :revision: '982782167'
    :tid: 2e5b09c0-1fd7-11eb-a76e-2fe5f0ccb7f5
    :timestamp: '2020-10-10T09:29:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CLU_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/CLU_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/CLU_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CLU_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CLU_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CLU_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/CLU_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CLU_(programming_language)
    :extract: CLU is a programming language created at the Massachusetts Institute
      of Technology (MIT) by Barbara Liskov and her students between 1974 and 1975.
      While it did not find extensive use, it introduced many features that are used
      widely now, and is seen as a step in the development of object-oriented programming
      (OOP).
    :extract_html: "<p><b>CLU</b> is a programming language created at the Massachusetts
      Institute of Technology (MIT) by Barbara Liskov and her students between 1974
      and 1975. While it did not find extensive use, it introduced many features that
      are used widely now, and is seen as a step in the development of object-oriented
      programming (OOP).</p>"
  record/7d7c6c17-c6d3-4916-9ad9-319a0c0f4c03:
    :type: standard
    :title: Eiffel (programming language)
    :displaytitle: Eiffel (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q732089
    :titles:
      :canonical: Eiffel_(programming_language)
      :normalized: Eiffel (programming language)
      :display: Eiffel (programming language)
    :pageid: 9838
    :lang: en
    :dir: ltr
    :revision: '977959344'
    :tid: b8c3ee10-1fd7-11eb-b1d3-77881452d0fd
    :timestamp: '2020-09-12T01:08:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Eiffel_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Eiffel_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Eiffel_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Eiffel_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Eiffel_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Eiffel_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Eiffel_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Eiffel_(programming_language)
    :extract: Eiffel is an object-oriented programming language designed by Bertrand
      Meyer and Eiffel Software. Meyer conceived the language in 1985 with the goal
      of increasing the reliability of commercial software development; the first
      version becoming available in 1986. In 2005, Eiffel became an ISO-standardized
      language.
    :extract_html: "<p><b>Eiffel</b> is an object-oriented programming language designed
      by Bertrand Meyer and Eiffel Software. Meyer conceived the language in 1985
      with the goal of increasing the reliability of commercial software development;
      the first version becoming available in 1986. In 2005, Eiffel became an ISO-standardized
      language.</p>"
  record/033b198d-5b6a-4d66-b3cb-92ad02225545:
    :type: standard
    :title: Simula
    :displaytitle: Simula
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q212569
    :titles:
      :canonical: Simula
      :normalized: Simula
      :display: Simula
    :pageid: 29513
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Simula_-_logo.svg/320px-Simula_-_logo.svg.png
      :width: 320
      :height: 155
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d9/Simula_-_logo.svg/512px-Simula_-_logo.svg.png
      :width: 512
      :height: 248
    :lang: en
    :dir: ltr
    :revision: '992047652'
    :tid: 366b2e90-3528-11eb-b4f0-df97e6e44245
    :timestamp: '2020-12-03T05:27:15Z'
    :description: Early object-oriented programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Simula
        :revisions: https://en.wikipedia.org/wiki/Simula?action=history
        :edit: https://en.wikipedia.org/wiki/Simula?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Simula
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Simula
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Simula
        :edit: https://en.m.wikipedia.org/wiki/Simula?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Simula
    :extract: Simula is the name of two simulation programming languages, Simula I
      and Simula 67, developed in the 1960s at the Norwegian Computing Center in Oslo,
      by Ole-Johan Dahl and Kristen Nygaard. Syntactically, it is a fairly faithful
      superset of ALGOL 60, also influenced by the design of Simscript.
    :extract_html: "<p><b>Simula</b> is the name of two simulation programming languages,
      Simula I and Simula 67, developed in the 1960s at the Norwegian Computing Center
      in Oslo, by Ole-Johan Dahl and Kristen Nygaard. Syntactically, it is a fairly
      faithful superset of ALGOL 60, also influenced by the design of Simscript.</p>"
  record/8c6fefda-afde-4301-9b9d-f81b7360214e:
    :type: standard
    :title: Hamilton C shell
    :displaytitle: Hamilton C shell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5644861
    :titles:
      :canonical: Hamilton_C_shell
      :normalized: Hamilton C shell
      :display: Hamilton C shell
    :pageid: 29820733
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/Hamilton_C_shell_x64_on_Windows_7.png/320px-Hamilton_C_shell_x64_on_Windows_7.png
      :width: 320
      :height: 200
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/ec/Hamilton_C_shell_x64_on_Windows_7.png
      :width: 1280
      :height: 800
    :lang: en
    :dir: ltr
    :revision: '964321391'
    :tid: 5e31c250-2cee-11eb-91b1-133e7f124f6f
    :timestamp: '2020-06-24T20:36:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hamilton_C_shell
        :revisions: https://en.wikipedia.org/wiki/Hamilton_C_shell?action=history
        :edit: https://en.wikipedia.org/wiki/Hamilton_C_shell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hamilton_C_shell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hamilton_C_shell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hamilton_C_shell
        :edit: https://en.m.wikipedia.org/wiki/Hamilton_C_shell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hamilton_C_shell
    :extract: Hamilton C shell is a clone of the Unix C shell and utilities for Microsoft
      Windows created by Nicole Hamilton at Hamilton Laboratories as a completely
      original work, not based on any prior code. It was first released on OS/2 on
      December 12, 1988 and on Windows NT in July 1992. The OS/2 version was discontinued
      in 2003 but the Windows version continues to be actively supported.
    :extract_html: "<p><b>Hamilton C shell</b> is a clone of the Unix C shell and
      utilities for Microsoft Windows created by Nicole Hamilton at Hamilton Laboratories
      as a completely original work, not based on any prior code. It was first released
      on OS/2 on December 12, 1988 and on Windows NT in July 1992. The OS/2 version
      was discontinued in 2003 but the Windows version continues to be actively supported.</p>"
  record/352eb714-4f8e-451b-94ca-0e685df4acd1:
    :type: standard
    :title: Euclid (programming language)
    :displaytitle: Euclid (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5406088
    :titles:
      :canonical: Euclid_(programming_language)
      :normalized: Euclid (programming language)
      :display: Euclid (programming language)
    :pageid: 827385
    :lang: en
    :dir: ltr
    :revision: '817164261'
    :tid: bac11230-20ca-11eb-8b06-2b29e00780ba
    :timestamp: '2017-12-26T16:22:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Euclid_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Euclid_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Euclid_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Euclid_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Euclid_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Euclid_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Euclid_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Euclid_(programming_language)
    :extract: Euclid is an imperative programming language for writing verifiable
      programs. It was designed by Butler Lampson and associates at the Xerox PARC
      lab in the mid-1970s. The implementation was led by Ric Holt at the University
      of Toronto and James Cordy was the principal programmer for the first implementation
      of the compiler. It was originally designed for the Motorola 6809 microprocessor.
      It was considered innovative for the time; the compiler development team had
      a $2 million budget over 2 years and was commissioned by the Defense Advanced
      Research Projects Agency of the U.S. Department of Defense and the Canadian
      Department of National Defence. It was used for a few years at I. P. Sharp Associates,
      MITRE Corporation, SRI International and various other international institutes
      for research in systems programming and secure software systems.
    :extract_html: "<p><b>Euclid</b> is an imperative programming language for writing
      verifiable programs. It was designed by Butler Lampson and associates at the
      Xerox PARC lab in the mid-1970s. The implementation was led by Ric Holt at the
      University of Toronto and James Cordy was the principal programmer for the first
      implementation of the compiler. It was originally designed for the Motorola
      6809 microprocessor. It was considered innovative for the time; the compiler
      development team had a $2 million budget over 2 years and was commissioned by
      the Defense Advanced Research Projects Agency of the U.S. Department of Defense
      and the Canadian Department of National Defence. It was used for a few years
      at I. P. Sharp Associates, MITRE Corporation, SRI International and various
      other international institutes for research in systems programming and secure
      software systems.</p>"
  record/45bc224d-3e92-4c22-a062-25f89bcf8b5a:
    :type: standard
    :title: Rexx
    :displaytitle: Rexx
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q685820
    :titles:
      :canonical: Rexx
      :normalized: Rexx
      :display: Rexx
    :pageid: 25572284
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/f/f7/Rexx-img-lg.png/320px-Rexx-img-lg.png
      :width: 320
      :height: 269
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f7/Rexx-img-lg.png
      :width: 344
      :height: 289
    :lang: en
    :dir: ltr
    :revision: '976527655'
    :tid: 68d0d750-3194-11eb-97e2-73ffe8d9a0fb
    :timestamp: '2020-09-03T12:54:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rexx
        :revisions: https://en.wikipedia.org/wiki/Rexx?action=history
        :edit: https://en.wikipedia.org/wiki/Rexx?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rexx
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rexx
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rexx
        :edit: https://en.m.wikipedia.org/wiki/Rexx?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rexx
    :extract: Rexx is an interpreted programming language developed at IBM by Mike
      Cowlishaw. It is a structured, high-level programming language designed for
      ease of learning and reading. Proprietary and open source Rexx interpreters
      exist for a wide range of computing platforms; compilers exist for IBM mainframe
      computers.
    :extract_html: "<p><b>Rexx</b> is an interpreted programming language developed
      at IBM by Mike Cowlishaw. It is a structured, high-level programming language
      designed for ease of learning and reading. Proprietary and open source Rexx
      interpreters exist for a wide range of computing platforms; compilers exist
      for IBM mainframe computers.</p>"
  record/448b0ea1-b51c-49df-83e3-6e5524a809c5:
    :type: standard
    :title: MIIS (programming language)
    :displaytitle: MIIS (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6716041
    :titles:
      :canonical: MIIS_(programming_language)
      :normalized: MIIS (programming language)
      :display: MIIS (programming language)
    :pageid: 3359079
    :lang: en
    :dir: ltr
    :revision: '908321798'
    :tid: ef52f9d0-1e33-11eb-94a4-3bf52e3c9cc9
    :timestamp: '2019-07-29T00:06:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MIIS_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/MIIS_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/MIIS_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MIIS_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MIIS_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MIIS_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/MIIS_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MIIS_(programming_language)
    :extract: 'MIIS is a MUMPS-like programming language that was created by A.Neil
      Pappalardo and Curt W. Marble, on a DEC PDP at Mass General Hospital from 1964
      to 1968. MUMPS evolution took two major directions: MUMPS proper and MIIS. MUMPS
      became an ANSI and ISO-standard language. When many MUMPS implementations standardized
      to be compatible, MIIS did not standardize, but became a proprietary system
      instead.'
    :extract_html: "<p><b>MIIS</b> is a MUMPS-like programming language that was created
      by A.Neil Pappalardo and Curt W. Marble, on a DEC PDP at Mass General Hospital
      from 1964 to 1968. MUMPS evolution took two major directions: MUMPS proper and
      MIIS. MUMPS became an ANSI and ISO-standard language. When many MUMPS implementations
      standardized to be compatible, MIIS did not standardize, but became a proprietary
      system instead.</p>"
  record/83ba3f67-dd93-4e46-956b-74934ff91425:
    :type: standard
    :title: Caché ObjectScript
    :displaytitle: Caché ObjectScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5016025
    :titles:
      :canonical: Caché_ObjectScript
      :normalized: Caché ObjectScript
      :display: Caché ObjectScript
    :pageid: 2242790
    :lang: en
    :dir: ltr
    :revision: '975291701'
    :tid: 515118e0-35c9-11eb-88bc-2f8c30372b61
    :timestamp: '2020-08-27T19:32:00Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cach%C3%A9_ObjectScript
        :revisions: https://en.wikipedia.org/wiki/Cach%C3%A9_ObjectScript?action=history
        :edit: https://en.wikipedia.org/wiki/Cach%C3%A9_ObjectScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cach%C3%A9_ObjectScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cach%C3%A9_ObjectScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cach%C3%A9_ObjectScript
        :edit: https://en.m.wikipedia.org/wiki/Cach%C3%A9_ObjectScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cach%C3%A9_ObjectScript
    :extract: Caché ObjectScript is a part of the Caché database system sold by InterSystems.
      The language is a functional superset of the ANSI-standard MUMPS programming
      language. Since Caché is at its core a MUMPS implementation, it can run ANSI
      MUMPS routines with no change. To appeal as a commercial product, Caché implements
      support for object-oriented programming, a macro preprocessing language, embedded
      SQL for ANSI-standard SQL access to M's built-in database, procedure and control
      blocks using C-like brace syntax, procedure-scoped variables, and relaxed whitespace
      syntax limitations.
    :extract_html: "<p><b>Caché ObjectScript</b> is a part of the Caché database system
      sold by InterSystems. The language is a functional superset of the ANSI-standard
      MUMPS programming language. Since Caché is at its core a MUMPS implementation,
      it can run ANSI MUMPS routines with no change. To appeal as a commercial product,
      Caché implements support for object-oriented programming, a macro preprocessing
      language, embedded SQL for ANSI-standard SQL access to M's built-in database,
      procedure and control blocks using C-like brace syntax, procedure-scoped variables,
      and relaxed whitespace syntax limitations.</p>"
  record/4ddc64ab-d69d-4f32-99a0-12d005f1f7a1:
    :type: standard
    :title: Clipper (programming language)
    :displaytitle: Clipper (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q834358
    :titles:
      :canonical: Clipper_(programming_language)
      :normalized: Clipper (programming language)
      :display: Clipper (programming language)
    :pageid: 246367
    :lang: en
    :dir: ltr
    :revision: '991380588'
    :tid: 4c9fd6a0-3278-11eb-88d9-2731cb1eadd5
    :timestamp: '2020-11-29T19:23:00Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Clipper_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Clipper_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Clipper_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Clipper_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Clipper_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Clipper_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Clipper_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Clipper_(programming_language)
    :extract: "Clipper is an xBase compiler that implements a variant of the xBase
      computer programming language. It is used to create \nor extend software programs
      that originally operated primarily under MS-DOS. Although it is a powerful general-purpose
      programming\nlanguage, it was primarily used to create database/business programs."
    :extract_html: "<p><b>Clipper</b> is an xBase compiler that implements a variant
      of the <i>xBase</i> computer programming language. It is used to create \nor
      extend software programs that originally operated primarily under MS-DOS. Although
      it is a powerful general-purpose programming\nlanguage, it was primarily used
      to create database/business programs.</p>"
  record/b0d16939-dadc-48b2-b407-0c5e30f5a36e:
    :type: standard
    :title: FORMAC
    :displaytitle: FORMAC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5426889
    :titles:
      :canonical: FORMAC
      :normalized: FORMAC
      :display: FORMAC
    :pageid: 2667822
    :lang: en
    :dir: ltr
    :revision: '960542110'
    :tid: bf394960-1d94-11eb-913b-ad84dd126789
    :timestamp: '2020-06-03T14:33:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FORMAC
        :revisions: https://en.wikipedia.org/wiki/FORMAC?action=history
        :edit: https://en.wikipedia.org/wiki/FORMAC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FORMAC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FORMAC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FORMAC
        :edit: https://en.m.wikipedia.org/wiki/FORMAC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FORMAC
    :extract: FORMAC, the FORmula MAnipulation Compiler, was the first computer algebra
      system to have significant use. It was developed by Jean E. Sammet and her team,
      as an extension of FORTRAN IV. The compiler was implemented as a preprocessor
      taking the FORMAC program and converting it to a FORTRAN IV program which was
      in turn compiled without further user intervention.
    :extract_html: "<p><b>FORMAC</b>, the <b>FOR</b>mula <b>MA</b>nipulation <b>C</b>ompiler,
      was the first computer algebra system to have significant use. It was developed
      by Jean E. Sammet and her team, as an extension of FORTRAN IV. The compiler
      was implemented as a preprocessor taking the FORMAC program and converting it
      to a FORTRAN IV program which was in turn compiled without further user intervention.</p>"
  record/1f29175f-46db-432f-8ba2-5849c13e75b6:
    :type: standard
    :title: GameMonkey Script
    :displaytitle: GameMonkey Script
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4039236
    :titles:
      :canonical: GameMonkey_Script
      :normalized: GameMonkey Script
      :display: GameMonkey Script
    :pageid: 1131159
    :lang: en
    :dir: ltr
    :revision: '915276054'
    :tid: d7ddcae0-35bd-11eb-8ab3-058d56177a71
    :timestamp: '2019-09-12T07:34:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GameMonkey_Script
        :revisions: https://en.wikipedia.org/wiki/GameMonkey_Script?action=history
        :edit: https://en.wikipedia.org/wiki/GameMonkey_Script?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GameMonkey_Script
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GameMonkey_Script
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GameMonkey_Script
        :edit: https://en.m.wikipedia.org/wiki/GameMonkey_Script?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GameMonkey_Script
    :extract: GameMonkey Script is a small, cross-platform scripting language designed
      for embedding into games. GameMonkey bears many similarities to Lua, except
      the syntax is more similar to that of C.
    :extract_html: "<p><b>GameMonkey Script</b> is a small, cross-platform scripting
      language designed for embedding into games. GameMonkey bears many similarities
      to Lua, except the syntax is more similar to that of C.</p>"
  record/7d3a25b7-cd99-4d75-a613-a596c483e086:
    :type: standard
    :title: Reason (syntax extension for OCaml)
    :displaytitle: Reason (syntax extension for OCaml)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q63565848
    :titles:
      :canonical: Reason_(syntax_extension_for_OCaml)
      :normalized: Reason (syntax extension for OCaml)
      :display: Reason (syntax extension for OCaml)
    :pageid: 60312680
    :lang: en
    :dir: ltr
    :revision: '982135392'
    :tid: 7b1e7b80-2b52-11eb-87e2-f52a228df387
    :timestamp: '2020-10-06T10:58:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)
        :revisions: https://en.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)?action=history
        :edit: https://en.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Reason_(syntax_extension_for_OCaml)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Reason_(syntax_extension_for_OCaml)
        :edit: https://en.m.wikipedia.org/wiki/Reason_(syntax_extension_for_OCaml)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Reason_(syntax_extension_for_OCaml)
    :extract: Reason, also known as ReasonML, is a syntax extension and toolchain
      for OCaml created by Jordan Walke at Facebook. Reason offers a syntax familiar
      to JavaScript programmers, and transpiles to OCaml. Statically typed Reason
      code may be compiled to dynamically typed JavaScript using the ReScript compiler.
    :extract_html: "<p><b>Reason</b>, also known as <b>ReasonML</b>, is a syntax extension
      and toolchain for OCaml created by Jordan Walke at Facebook. Reason offers a
      syntax familiar to JavaScript programmers, and transpiles to OCaml. Statically
      typed Reason code may be compiled to dynamically typed JavaScript using the
      <i>ReScript</i> compiler.</p>"
  record/bbbf263d-7df2-4504-ae70-a316e0a3d577:
    :type: standard
    :title: CA Technologies
    :displaytitle: CA Technologies
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q600624
    :titles:
      :canonical: CA_Technologies
      :normalized: CA Technologies
      :display: CA Technologies
    :pageid: 422752
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/CA_Technologies_logo.svg/320px-CA_Technologies_logo.svg.png
      :width: 320
      :height: 266
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/CA_Technologies_logo.svg/512px-CA_Technologies_logo.svg.png
      :width: 512
      :height: 425
    :lang: en
    :dir: ltr
    :revision: '991596487'
    :tid: 87cd6100-3356-11eb-a7d3-818c58fd3729
    :timestamp: '2020-11-30T21:53:42Z'
    :description: U.S. software company
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CA_Technologies
        :revisions: https://en.wikipedia.org/wiki/CA_Technologies?action=history
        :edit: https://en.wikipedia.org/wiki/CA_Technologies?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CA_Technologies
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CA_Technologies
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CA_Technologies
        :edit: https://en.m.wikipedia.org/wiki/CA_Technologies?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CA_Technologies
    :extract: CA Technologies, formerly known as CA, Inc. and Computer Associates
      International, Inc., is an American multinational corporation headquartered
      in New York City. Since November 5, 2018, the company has been a subsidiary
      of Broadcom Inc.
    :extract_html: "<p><b>CA Technologies</b>, formerly known as <b>CA, Inc.</b> and
      <b>Computer Associates International, Inc.</b>, is an American multinational
      corporation headquartered in New York City. Since November 5, 2018, the company
      has been a subsidiary of Broadcom Inc.</p>"
  record/819e30fa-da3d-486b-b454-65bf3b331eca:
    :type: standard
    :title: Action! (programming language)
    :displaytitle: Action! (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q343587
    :titles:
      :canonical: Action!_(programming_language)
      :normalized: Action! (programming language)
      :display: Action! (programming language)
    :pageid: 1273369
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/5/50/Actionscr.png/320px-Actionscr.png
      :width: 320
      :height: 229
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/50/Actionscr.png
      :width: 336
      :height: 240
    :lang: en
    :dir: ltr
    :revision: '961799649'
    :tid: 999a3f60-3028-11eb-b25a-d5ee39ece0db
    :timestamp: '2020-06-10T13:33:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Action!_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Action!_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Action!_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Action!_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Action!_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Action!_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Action!_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Action!_(programming_language)
    :extract: Action! is a procedural programming language similar to ALGOL that is
      intended to produce high-performance programs for the Atari 8-bit family. The
      language was written by Clinton Parker and distributed on ROM cartridge by Optimized
      Systems Software (OSS) starting in 1983. It was one of the first of OSS's bank
      switching "Super Cartridges", with a total of 16 kB of code.
    :extract_html: <p><b>Action!</b> is a procedural programming language similar
      to ALGOL that is intended to produce high-performance programs for the Atari
      8-bit family. The language was written by Clinton Parker and distributed on
      ROM cartridge by Optimized Systems Software (OSS) starting in 1983. It was one
      of the first of OSS's bank switching "Super Cartridges", with a total of 16 kB
      of code.</p>
  record/511856f6-1b5d-4d53-9105-cd78a3fc15bd:
    :type: standard
    :title: Z++
    :displaytitle: Z++
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17047882
    :titles:
      :canonical: Z++
      :normalized: Z++
      :display: Z++
    :pageid: 140589
    :lang: en
    :dir: ltr
    :revision: '902544046'
    :tid: 9f0c6f80-eb1e-11ea-8744-a1f05f0e73c0
    :timestamp: '2019-06-19T15:11:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Z%2B%2B
        :revisions: https://en.wikipedia.org/wiki/Z%2B%2B?action=history
        :edit: https://en.wikipedia.org/wiki/Z%2B%2B?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Z%2B%2B
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Z%2B%2B
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Z%2B%2B
        :edit: https://en.m.wikipedia.org/wiki/Z%2B%2B?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Z%2B%2B
    :extract: Z++ is an object-oriented extension to the Z specification language.
    :extract_html: "<p><b>Z++</b> is an object-oriented extension to the Z specification
      language.</p>"
  record/a5ea1e83-21b9-40de-87d5-038de161be9e:
    :type: standard
    :title: Emacs Lisp
    :displaytitle: Emacs Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1334586
    :titles:
      :canonical: Emacs_Lisp
      :normalized: Emacs Lisp
      :display: Emacs Lisp
    :pageid: 10392
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/EmacsIcon.svg/320px-EmacsIcon.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/EmacsIcon.svg/48px-EmacsIcon.svg.png
      :width: 48
      :height: 48
    :lang: en
    :dir: ltr
    :revision: '982808426'
    :tid: 8247a440-2fa3-11eb-8bd0-6de4d016b836
    :timestamp: '2020-10-10T13:41:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Emacs_Lisp
        :revisions: https://en.wikipedia.org/wiki/Emacs_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Emacs_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Emacs_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Emacs_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Emacs_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Emacs_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Emacs_Lisp
    :extract: Emacs Lisp is a dialect of the Lisp programming language used as a scripting
      language by Emacs. It is used for implementing most of the editing functionality
      built into Emacs, the remainder being written in C, as is the Lisp interpreter.
      Emacs Lisp is also termed Elisp, although there is also an older, unrelated
      Lisp dialect with that name.
    :extract_html: "<p><b>Emacs Lisp</b> is a dialect of the Lisp programming language
      used as a scripting language by Emacs. It is used for implementing most of the
      editing functionality built into Emacs, the remainder being written in C, as
      is the Lisp interpreter. Emacs Lisp is also termed <b>Elisp</b>, although there
      is also an older, unrelated Lisp dialect with that name.</p>"
  record/36d72f09-f598-4af3-8e23-b857ef2b385d:
    :type: standard
    :title: Red (programming language)
    :displaytitle: Red (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3217187
    :titles:
      :canonical: Red_(programming_language)
      :normalized: Red (programming language)
      :display: Red (programming language)
    :pageid: 35733875
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e9/Red_Language_Tower_Logo.png
      :width: 200
      :height: 200
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e9/Red_Language_Tower_Logo.png
      :width: 200
      :height: 200
    :lang: en
    :dir: ltr
    :revision: '976364888'
    :tid: c1a71570-33d7-11eb-86d6-2d32e6b0b952
    :timestamp: '2020-09-02T15:00:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Red_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Red_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Red_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Red_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Red_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Red_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Red_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Red_(programming_language)
    :extract: Red is a programming language designed to overcome the limitations of
      the programming language Rebol. Red was introduced in 2011 by Nenad Rakočević,
      and is both an imperative and functional programming language. Its syntax and
      general usage overlaps that of the interpreted Rebol language.
    :extract_html: "<p><b>Red</b> is a programming language designed to overcome the
      limitations of the programming language Rebol. Red was introduced in 2011 by
      Nenad Rakočević, and is both an imperative and functional programming language.
      Its syntax and general usage overlaps that of the interpreted Rebol language.</p>"
  record/a2faf485-8c3f-45a5-ab5c-5e342241655a:
    :type: standard
    :title: DRAKON
    :displaytitle: DRAKON
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2671999
    :titles:
      :canonical: DRAKON
      :normalized: DRAKON
      :display: DRAKON
    :pageid: 9912359
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/0f/Dutch_cryo_Moscow.png/320px-Dutch_cryo_Moscow.png
      :width: 320
      :height: 285
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/0f/Dutch_cryo_Moscow.png
      :width: 1250
      :height: 1112
    :lang: en
    :dir: ltr
    :revision: '990596842'
    :tid: 075fe020-2f13-11eb-bccc-1d3dd1155783
    :timestamp: '2020-11-25T11:40:29Z'
    :description: Algorithm mapping tool
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DRAKON
        :revisions: https://en.wikipedia.org/wiki/DRAKON?action=history
        :edit: https://en.wikipedia.org/wiki/DRAKON?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DRAKON
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DRAKON
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DRAKON
        :edit: https://en.m.wikipedia.org/wiki/DRAKON?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DRAKON
    :extract: DRAKON is an algorithmic visual programming and modeling language developed
      within the Buran space project following ergonomic design principles. The language
      provides a uniform way to represent flowcharts of any complexity that are easy
      to read and understand.
    :extract_html: "<p><b>DRAKON</b> is an algorithmic visual programming and modeling
      language developed within the Buran space project following ergonomic design
      principles. The language provides a uniform way to represent flowcharts of any
      complexity that are easy to read and understand.</p>"
  record/9b8d7289-3587-41d4-9cd2-4cacdd3d4c3a:
    :type: standard
    :title: Maya Embedded Language
    :displaytitle: Maya Embedded Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3304832
    :titles:
      :canonical: Maya_Embedded_Language
      :normalized: Maya Embedded Language
      :display: Maya Embedded Language
    :pageid: 1690201
    :lang: en
    :dir: ltr
    :revision: '956138325'
    :tid: 8026de00-0f60-11eb-85b2-0531293dcf0e
    :timestamp: '2020-05-11T18:07:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Maya_Embedded_Language
        :revisions: https://en.wikipedia.org/wiki/Maya_Embedded_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Maya_Embedded_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Maya_Embedded_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Maya_Embedded_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Maya_Embedded_Language
        :edit: https://en.m.wikipedia.org/wiki/Maya_Embedded_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Maya_Embedded_Language
    :extract: The Maya Embedded Language (MEL) is a scripting language used to simplify
      tasks in Autodesk's 3D Graphics Software Maya. Most tasks that can be achieved
      through Maya's GUI can be achieved with MEL, as well as certain tasks that are
      not available from the GUI. MEL offers a method of speeding up complicated or
      repetitive tasks, as well as allowing users to redistribute a specific set of
      commands to others that may find it useful.
    :extract_html: "<p>The <b>Maya Embedded Language</b> (MEL) is a scripting language
      used to simplify tasks in Autodesk's 3D Graphics Software <span><i>Maya</i></span>.
      Most tasks that can be achieved through Maya's GUI can be achieved with MEL,
      as well as certain tasks that are not available from the GUI. MEL offers a method
      of speeding up complicated or repetitive tasks, as well as allowing users to
      redistribute a specific set of commands to others that may find it useful.</p>"
  record/163df8a9-effc-4e11-ad4d-b84a61b0cb8e:
    :type: standard
    :title: OmniMark
    :displaytitle: OmniMark
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7090311
    :titles:
      :canonical: OmniMark
      :normalized: OmniMark
      :display: OmniMark
    :pageid: 3375679
    :lang: en
    :dir: ltr
    :revision: '956139551'
    :tid: 6cbdafd0-1e36-11eb-8d97-b109aae7867e
    :timestamp: '2020-05-11T18:15:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OmniMark
        :revisions: https://en.wikipedia.org/wiki/OmniMark?action=history
        :edit: https://en.wikipedia.org/wiki/OmniMark?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OmniMark
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OmniMark
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OmniMark
        :edit: https://en.m.wikipedia.org/wiki/OmniMark?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OmniMark
    :extract: OmniMark is a fourth-generation programming language used mostly in
      the publishing industry. It is currently a proprietary software product of Stilo
      International. As of September 2018 the most recent release of OmniMark was
      10.1.2, dated April 2016.
    :extract_html: "<p><b>OmniMark</b> is a fourth-generation programming language
      used mostly in the publishing industry. It is currently a proprietary software
      product of Stilo International. As of September 2018 the most recent release
      of OmniMark was 10.1.2, dated April 2016.</p>"
  record/18efcaee-36ad-404e-9d05-2d5bd48d2136:
    :type: standard
    :title: PowerHouse (programming language)
    :displaytitle: PowerHouse (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7236198
    :titles:
      :canonical: PowerHouse_(programming_language)
      :normalized: PowerHouse (programming language)
      :display: PowerHouse (programming language)
    :pageid: 4313670
    :lang: en
    :dir: ltr
    :revision: '958519055'
    :tid: 10e0b3d0-2d2a-11eb-aa48-433c3db05f2f
    :timestamp: '2020-05-24T07:51:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PowerHouse_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/PowerHouse_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/PowerHouse_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PowerHouse_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PowerHouse_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PowerHouse_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/PowerHouse_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PowerHouse_(programming_language)
    :extract: "PowerHouse is a trademarked name for a byte-compiled fourth-generation
      programming language originally produced by Quasar Corporation for the Hewlett-Packard
      HP3000 mini-computer, as well as Data General and DEC VAX VMS computing products.
      It was initially composed of five components:QDD, or Quasar Data Dictionary:
      for building a central data dictionary used by all other components\nQDesign:
      a character-based screen generator\nQuick: an interactive, character-based screen
      processor \nQuiz: a report writer\nQTP: a batch transaction processor."
    :extract_html: |-
      <p><b>PowerHouse</b> is a trademarked name for a byte-compiled fourth-generation programming language originally produced by Quasar Corporation for the Hewlett-Packard <i>HP3000</i> mini-computer, as well as Data General and DEC VAX VMS computing products. It was initially composed of five components:</p><ul><li><i>QDD, or Quasar Data Dictionary</i>: for building a central data dictionary used by all other components</li>
      <li><i>QDesign</i>: a character-based screen generator</li>
      <li><i>Quick</i>: an interactive, character-based screen processor </li>
      <li><i>Quiz</i>: a report writer</li>
      <li><i>QTP</i>: a batch transaction processor.</li></ul>
  record/02e6a366-ca8f-4848-8ba9-17d01ac073b6:
    :type: standard
    :title: JADE (programming language)
    :displaytitle: JADE (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6107617
    :titles:
      :canonical: JADE_(programming_language)
      :normalized: JADE (programming language)
      :display: JADE (programming language)
    :pageid: 5887624
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/9/94/JADE_%28programming_language%29_logo.svg/320px-JADE_%28programming_language%29_logo.svg.png
      :width: 320
      :height: 170
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/9/94/JADE_%28programming_language%29_logo.svg/303px-JADE_%28programming_language%29_logo.svg.png
      :width: 303
      :height: 161
    :lang: en
    :dir: ltr
    :revision: '963917643'
    :tid: 6b0c95c0-35e2-11eb-897e-4dfa33057994
    :timestamp: '2020-06-22T14:58:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JADE_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/JADE_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/JADE_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JADE_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JADE_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JADE_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/JADE_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JADE_(programming_language)
    :extract: JADE is a proprietary object-oriented software development and deployment
      platform product from the New Zealand-based Jade Software Corporation, first
      released in 1996. It consists of the JADE programming language, Integrated development
      environment and debugger, integrated application server and object database
      management system.
    :extract_html: "<p><b>JADE</b> is a proprietary object-oriented software development
      and deployment platform product from the New Zealand-based Jade Software Corporation,
      first released in 1996. It consists of the JADE programming language, Integrated
      development environment and debugger, integrated application server and object
      database management system.</p>"
  record/3d476cc2-357a-4d35-a820-1ca3e58aa4a4:
    :type: standard
    :title: EGL (programming language)
    :displaytitle: EGL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q464338
    :titles:
      :canonical: EGL_(programming_language)
      :normalized: EGL (programming language)
      :display: EGL (programming language)
    :pageid: 1205107
    :lang: en
    :dir: ltr
    :revision: '974063955'
    :tid: e6189480-220a-11eb-92b3-ffbdd2764896
    :timestamp: '2020-08-20T21:50:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/EGL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/EGL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/EGL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:EGL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/EGL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/EGL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/EGL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:EGL_(programming_language)
    :extract: EGL, originally developed by IBM and now available as the EDT open source
      project under the Eclipse Public License (EPL), is a programming technology
      designed to meet the challenges of modern, multi-platform application development
      by providing a common language and programming model across languages, frameworks,
      and runtime platforms.
    :extract_html: "<p><b>EGL</b>, originally developed by IBM and now available as
      the EDT open source project under the Eclipse Public License (EPL), is a programming
      technology designed to meet the challenges of modern, multi-platform application
      development by providing a common language and programming model across languages,
      frameworks, and runtime platforms.</p>"
  record/63c6e222-6788-4e98-b230-c9d498b5da34:
    :type: standard
    :title: P4 (programming language)
    :displaytitle: P4 (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q25215425
    :titles:
      :canonical: P4_(programming_language)
      :normalized: P4 (programming language)
      :display: P4 (programming language)
    :pageid: 46347117
    :lang: en
    :dir: ltr
    :revision: '986318930'
    :tid: 1b6fac70-3081-11eb-aef1-036b9ed9e53f
    :timestamp: '2020-10-31T03:11:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/P4_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/P4_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/P4_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:P4_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/P4_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/P4_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/P4_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:P4_(programming_language)
    :extract: P4 is a programming language for controlling packet forwarding planes
      in networking devices, such as routers and switches. In contrast to a general
      purpose language such as C or Python, P4 is a domain-specific language with
      a number of constructs optimized for network data forwarding. P4 is distributed
      as open-source, permissively licensed code, and is maintained by the P4 Language
      Consortium, a not-for-profit organization.
    :extract_html: "<p><b>P4</b> is a programming language for controlling packet
      forwarding planes in networking devices, such as routers and switches. In contrast
      to a general purpose language such as C or Python, P4 is a domain-specific language
      with a number of constructs optimized for network data forwarding. P4 is distributed
      as open-source, permissively licensed code, and is maintained by the P4 Language
      Consortium, a not-for-profit organization.</p>"
  record/071cc6da-1164-4109-acce-fcd09beee962:
    :type: standard
    :title: WATFIV
    :displaytitle: WATFIV
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475315
    :titles:
      :canonical: WATFIV
      :normalized: WATFIV
      :display: WATFIV
    :pageid: 1135659
    :lang: en
    :dir: ltr
    :revision: '992220283'
    :tid: 81e58af0-35e1-11eb-b2f9-857d682d27fa
    :timestamp: '2020-12-04T03:33:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/WATFIV
        :revisions: https://en.wikipedia.org/wiki/WATFIV?action=history
        :edit: https://en.wikipedia.org/wiki/WATFIV?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:WATFIV
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/WATFIV
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/WATFIV
        :edit: https://en.m.wikipedia.org/wiki/WATFIV?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:WATFIV
    :extract: WATFIV, or WATerloo FORTRAN IV, developed at the University of Waterloo,
      Canada is an implementation of the Fortran computer programming language. It
      is the successor of WATFOR.
    :extract_html: "<p><b>WATFIV</b>, or <b>WAT</b>erloo <b>F</b>ORTRAN <b>IV</b>,
      developed at the University of Waterloo, Canada is an implementation of the
      Fortran computer programming language. It is the successor of <b>WATFOR</b>.</p>"
  record/86cadad0-fe43-4cd2-b081-fac775810e13:
    :type: standard
    :title: SIMSCRIPT
    :displaytitle: SIMSCRIPT
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7390408
    :titles:
      :canonical: SIMSCRIPT
      :normalized: SIMSCRIPT
      :display: SIMSCRIPT
    :pageid: 1064164
    :lang: en
    :dir: ltr
    :revision: '985175431'
    :tid: a6bbc420-1ba1-11eb-a16c-d98fb7af8328
    :timestamp: '2020-10-24T12:18:43Z'
    :description: Simulation language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SIMSCRIPT
        :revisions: https://en.wikipedia.org/wiki/SIMSCRIPT?action=history
        :edit: https://en.wikipedia.org/wiki/SIMSCRIPT?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SIMSCRIPT
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SIMSCRIPT
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SIMSCRIPT
        :edit: https://en.m.wikipedia.org/wiki/SIMSCRIPT?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SIMSCRIPT
    :extract: SIMSCRIPT is a free-form, English-like general-purpose simulation language
      conceived by Harry Markowitz and Bernard Hausner at the RAND Corporation in
      1962. It was implemented as a Fortran preprocessor on the IBM 7090 and was designed
      for large discrete event simulations. It influenced Simula.
    :extract_html: "<p><b>SIMSCRIPT</b> is a free-form, English-like general-purpose
      simulation language conceived by Harry Markowitz and Bernard Hausner at the
      RAND Corporation in 1962. It was implemented as a Fortran preprocessor on the
      IBM 7090 and was designed for large discrete event simulations. It influenced
      Simula.</p>"
  record/b20d2183-0e7a-4685-8429-1d54c81ed209:
    :type: standard
    :title: Object Lisp
    :displaytitle: Object Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7075036
    :titles:
      :canonical: Object_Lisp
      :normalized: Object Lisp
      :display: Object Lisp
    :pageid: 1064021
    :lang: en
    :dir: ltr
    :revision: '857162784'
    :tid: 31ea4fb0-eb4d-11ea-934c-7154f25c048b
    :timestamp: '2018-08-29T23:41:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Object_Lisp
        :revisions: https://en.wikipedia.org/wiki/Object_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Object_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Object_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Object_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Object_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Object_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Object_Lisp
    :extract: Object Lisp was a computer programming language, a dialect of the Lisp
      language. It was an object-oriented extension for the Lisp dialect Lisp Machine
      Lisp, designed by Lisp Machines, Inc. Object Lisp was also an early example
      of prototype-based programming.
    :extract_html: "<p><b>Object Lisp</b> was a computer programming language, a dialect
      of the Lisp language. It was an object-oriented extension for the Lisp dialect
      Lisp Machine Lisp, designed by Lisp Machines, Inc. Object Lisp was also an early
      example of prototype-based programming.</p>"
  record/e75443b7-4d03-4b26-aa59-5cdd31ad7b65:
    :type: standard
    :title: Cayenne (programming language)
    :displaytitle: Cayenne (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5055293
    :titles:
      :canonical: Cayenne_(programming_language)
      :normalized: Cayenne (programming language)
      :display: Cayenne (programming language)
    :pageid: 6528823
    :lang: en
    :dir: ltr
    :revision: '956131655'
    :tid: e0536d30-1fa9-11eb-94cd-d19d9a9bbc30
    :timestamp: '2020-05-11T17:31:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cayenne_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cayenne_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cayenne_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cayenne_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cayenne_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cayenne_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cayenne_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cayenne_(programming_language)
    :extract: Cayenne is a dependently typed functional programming language created
      by Lennart Augustsson in 1998, making it one of the earliest dependently typed
      programming languages. A notable design decision is that the language allows
      unbounded recursive functions to be used on the type level, making type checking
      undecidable. Most dependently typed proof assistants and later dependently typed
      languages such as Agda included a termination checker to prevent the type checker
      from looping, while the contemporary Dependent ML restricted the expressivity
      of the type-level language to maintain decidability.
    :extract_html: "<p><b>Cayenne</b> is a dependently typed functional programming
      language created by Lennart Augustsson in 1998, making it one of the earliest
      dependently typed programming languages. A notable design decision is that the
      language allows unbounded recursive functions to be used on the type level,
      making type checking undecidable. Most dependently typed proof assistants and
      later dependently typed languages such as Agda included a termination checker
      to prevent the type checker from looping, while the contemporary Dependent ML
      restricted the expressivity of the type-level language to maintain decidability.</p>"
  record/fb9f0932-aa44-4916-bf51-378fa694f8c2:
    :type: standard
    :title: ".QL"
    :displaytitle: ".QL"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4545417
    :titles:
      :canonical: ".QL"
      :normalized: ".QL"
      :display: ".QL"
    :pageid: 11537140
    :lang: en
    :dir: ltr
    :revision: '959912556'
    :tid: 680eeec0-268f-11eb-aaf4-e5ec6e65a0d0
    :timestamp: '2020-05-31T06:02:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/.QL
        :revisions: https://en.wikipedia.org/wiki/.QL?action=history
        :edit: https://en.wikipedia.org/wiki/.QL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:.QL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/.QL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/.QL
        :edit: https://en.m.wikipedia.org/wiki/.QL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:.QL
    :extract: ".QL is an object-oriented query language used to retrieve data from
      relational database management systems. It is reminiscent of the standard query
      language SQL and the object-oriented programming language Java. .QL is an object-oriented
      variant of a logical query language called Datalog. Hierarchical data can therefore
      be naturally queried in .QL in a recursive manner."
    :extract_html: "<p><b>.QL</b> is an object-oriented query language used to retrieve
      data from relational database management systems. It is reminiscent of the standard
      query language SQL and the object-oriented programming language Java. .QL is
      an object-oriented variant of a logical query language called Datalog. Hierarchical
      data can therefore be naturally queried in .QL in a recursive manner.</p>"
  record/e8eebe5c-2060-49c1-b199-82fa48bc20bd:
    :type: standard
    :title: Go (programming language)
    :displaytitle: Go (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q37227
    :titles:
      :canonical: Go_(programming_language)
      :normalized: Go (programming language)
      :display: Go (programming language)
    :pageid: 25039021
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Go_Logo_Blue.svg/320px-Go_Logo_Blue.svg.png
      :width: 320
      :height: 119
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/05/Go_Logo_Blue.svg/512px-Go_Logo_Blue.svg.png
      :width: 512
      :height: 191
    :lang: en
    :dir: ltr
    :revision: '992213466'
    :tid: f88cbb40-35d9-11eb-a0cd-4bb0eb7983ec
    :timestamp: '2020-12-04T02:39:38Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Go_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Go_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Go_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Go_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Go_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Go_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Go_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Go_(programming_language)
    :extract: Go is a statically typed, compiled programming language designed at
      Google by Robert Griesemer, Rob Pike, and Ken Thompson. Go is syntactically
      similar to C, but with memory safety, garbage collection, structural typing,
      and CSP-style concurrency. The language is often referred to as Golang because
      of its domain name, golang.org, but the proper name is Go.
    :extract_html: "<p><b>Go</b> is a statically typed, compiled programming language
      designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. Go is syntactically
      similar to C, but with memory safety, garbage collection, structural typing,
      and CSP-style concurrency. The language is often referred to as <b>Golang</b>
      because of its domain name, <code>golang.org</code>, but the proper name is
      Go.</p>"
  record/65664a7c-fa8e-4c69-b297-fdf06263c8bc:
    :type: standard
    :title: AMPL
    :displaytitle: AMPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q295250
    :titles:
      :canonical: AMPL
      :normalized: AMPL
      :display: AMPL
    :pageid: 1076270
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/b/b6/AMPL_%28textbook_cover%29.jpg
      :width: 240
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/b/b6/AMPL_%28textbook_cover%29.jpg
      :width: 240
      :height: 240
    :lang: en
    :dir: ltr
    :revision: '986505902'
    :tid: a4cf8b70-20fa-11eb-ae02-5919ceda22b4
    :timestamp: '2020-11-01T08:25:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AMPL
        :revisions: https://en.wikipedia.org/wiki/AMPL?action=history
        :edit: https://en.wikipedia.org/wiki/AMPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AMPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AMPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AMPL
        :edit: https://en.m.wikipedia.org/wiki/AMPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AMPL
    :extract: |-
      AMPL is an algebraic modeling language to describe and solve high-complexity problems for large-scale mathematical computing .
      It was developed by Robert Fourer, David Gay, and Brian Kernighan at Bell Laboratories.
      AMPL supports dozens of solvers, both open source and commercial software, including CBC, CPLEX, FortMP, Gurobi, MINOS, IPOPT, SNOPT, KNITRO, and LGO. Problems are passed to solvers as nl files.
      AMPL is used by more than 100 corporate clients, and by government agencies and academic institutions.
    :extract_html: |-
      <p><b>AMPL</b> is an algebraic modeling language to describe and solve high-complexity problems for large-scale mathematical computing .
      It was developed by Robert Fourer, David Gay, and Brian Kernighan at Bell Laboratories.
      AMPL supports dozens of solvers, both open source and commercial software, including CBC, CPLEX, FortMP, Gurobi, MINOS, IPOPT, SNOPT, KNITRO, and LGO. Problems are passed to solvers as nl files.
      AMPL is used by more than 100 corporate clients, and by government agencies and academic institutions.</p>
  record/3aa73cb5-a86c-471c-86d1-9c6e448a43ee:
    :type: standard
    :title: Kivy (framework)
    :displaytitle: Kivy (framework)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q615738
    :titles:
      :canonical: Kivy_(framework)
      :normalized: Kivy (framework)
      :display: Kivy (framework)
    :pageid: 36091677
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/58/Kivy_logo.png/320px-Kivy_logo.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/5/58/Kivy_logo.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '979635541'
    :tid: 9a396e60-2d2f-11eb-87e2-f52a228df387
    :timestamp: '2020-09-21T21:21:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kivy_(framework)
        :revisions: https://en.wikipedia.org/wiki/Kivy_(framework)?action=history
        :edit: https://en.wikipedia.org/wiki/Kivy_(framework)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kivy_(framework)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kivy_(framework)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kivy_(framework)
        :edit: https://en.m.wikipedia.org/wiki/Kivy_(framework)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kivy_(framework)
    :extract: Kivy is a free and open source Python framework for developing mobile
      apps and other multitouch application software with a natural user interface
      (NUI). It is distributed under the terms of the MIT License, and can run on
      Android, iOS, GNU/Linux, macOS, and Windows.
    :extract_html: "<p><b>Kivy</b> is a free and open source Python framework for
      developing mobile apps and other multitouch application software with a natural
      user interface (NUI). It is distributed under the terms of the MIT License,
      and can run on Android, iOS, GNU/Linux, macOS, and Windows.</p>"
  record/01386d42-aaeb-43c7-9ed0-df3b5c585c0d:
    :type: standard
    :title: Nickle (programming language)
    :displaytitle: Nickle (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7028507
    :titles:
      :canonical: Nickle_(programming_language)
      :normalized: Nickle (programming language)
      :display: Nickle (programming language)
    :pageid: 4072208
    :lang: en
    :dir: ltr
    :revision: '580033012'
    :tid: e4d34070-35d8-11eb-bccc-1d3dd1155783
    :timestamp: '2013-11-03T18:01:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nickle_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Nickle_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Nickle_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nickle_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nickle_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nickle_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Nickle_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nickle_(programming_language)
    :extract: Nickle is a numeric oriented programming language by Keith Packard and
      Bart Massey. Originally used for desktop calculation, it has since expanded
      for prototyping of complicated algorithms.
    :extract_html: "<p><b>Nickle</b> is a numeric oriented programming language by
      Keith Packard and Bart Massey. Originally used for desktop calculation, it has
      since expanded for prototyping of complicated algorithms.</p>"
  record/01c0f776-a8a3-4ee3-9480-c448d9a4b32a:
    :type: standard
    :title: Occam-π
    :displaytitle: occam-π
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7075672
    :titles:
      :canonical: Occam-π
      :normalized: Occam-π
      :display: occam-π
    :pageid: 2079775
    :lang: en
    :dir: ltr
    :revision: '939188193'
    :tid: b36d8770-34ca-11eb-81bb-c3921fed90f6
    :timestamp: '2020-02-04T22:17:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Occam-%CF%80
        :revisions: https://en.wikipedia.org/wiki/Occam-%CF%80?action=history
        :edit: https://en.wikipedia.org/wiki/Occam-%CF%80?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Occam-%CF%80
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Occam-%CF%80
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Occam-%CF%80
        :edit: https://en.m.wikipedia.org/wiki/Occam-%CF%80?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Occam-%CF%80
    :extract: |-
      In computer science, occam-π is the name of a variant of the programming language occam developed by the Kent Retargetable occam Compiler (KRoC) team at the University of Kent. The name reflects the introduction of elements of π-calculus (pi-calculus) into occam, especially concepts involving mobile agents (processes) and data. The language contains several extensions to occam 2.1, including:Nested protocols
      Run-time process creation
      Mobile channels, data, and processes
      Recursion
      Protocol inheritance
      Array constructors
      Extended rendezvous
    :extract_html: |-
      <p>In computer science, <b>occam-π</b> is the name of a variant of the programming language occam developed by the Kent Retargetable occam Compiler (KRoC) team at the University of Kent. The name reflects the introduction of elements of π-calculus (pi-calculus) into occam, especially concepts involving mobile agents (processes) and data. The language contains several extensions to occam 2.1, including:</p><ul><li>Nested protocols</li>
      <li>Run-time process creation</li>
      <li>Mobile channels, data, and processes</li>
      <li>Recursion</li>
      <li>Protocol inheritance</li>
      <li>Array constructors</li>
      <li>Extended rendezvous</li></ul>
  record/b8ea5a47-93cf-4f35-b36d-97869b2272be:
    :type: standard
    :title: SYMPL
    :displaytitle: SYMPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7395256
    :titles:
      :canonical: SYMPL
      :normalized: SYMPL
      :display: SYMPL
    :pageid: 5029025
    :lang: en
    :dir: ltr
    :revision: '944321899'
    :tid: '056797a0-ec2d-11ea-800e-b7b0fc32767e'
    :timestamp: '2020-03-07T02:59:54Z'
    :description: obsolete programming language for use on the CDC 6000 series computer
      systems
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SYMPL
        :revisions: https://en.wikipedia.org/wiki/SYMPL?action=history
        :edit: https://en.wikipedia.org/wiki/SYMPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SYMPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SYMPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SYMPL
        :edit: https://en.m.wikipedia.org/wiki/SYMPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SYMPL
    :extract: SYMPL is an obsolete programming language developed by the Control Data
      Corporation (CDC) for use on the CDC 6000 series computer systems in the 1970s
      and 1980s. It was based on a subset of CDCs version of JOVIAL, as an alternative
      to assembly language. A number of important CDC software products were implemented
      in SYMPL, including compilers, libraries, a full-screen editor, and major subsystems.
    :extract_html: "<p><b>SYMPL</b> is an obsolete programming language developed
      by the Control Data Corporation (CDC) for use on the CDC 6000 series computer
      systems in the 1970s and 1980s. It was based on a subset of CDCs version of
      JOVIAL, as an alternative to assembly language. A number of important CDC software
      products were implemented in SYMPL, including compilers, libraries, a full-screen
      editor, and major subsystems.</p>"
  record/e9d7efdc-c530-4643-a23e-0cb05c705317:
    :type: standard
    :title: Prograph
    :displaytitle: Prograph
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7248516
    :titles:
      :canonical: Prograph
      :normalized: Prograph
      :display: Prograph
    :pageid: 521637
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/6/6e/Prograph_cpx_logo.PNG
      :width: 252
      :height: 228
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/6/6e/Prograph_cpx_logo.PNG
      :width: 252
      :height: 228
    :lang: en
    :dir: ltr
    :revision: '928042694'
    :tid: e4788080-2b07-11eb-a218-19311b398cc1
    :timestamp: '2019-11-26T12:34:32Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Prograph
        :revisions: https://en.wikipedia.org/wiki/Prograph?action=history
        :edit: https://en.wikipedia.org/wiki/Prograph?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Prograph
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Prograph
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Prograph
        :edit: https://en.m.wikipedia.org/wiki/Prograph?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Prograph
    :extract: Prograph is a visual, object-oriented, dataflow, multiparadigm programming
      language that uses iconic symbols to represent actions to be taken on data.
      Commercial Prograph software development environments such as Prograph Classic
      and Prograph CPX were available for the Apple Macintosh and Windows platforms
      for many years but were eventually withdrawn from the market in the late 1990s.
      Support for the Prograph language on macOS has recently reappeared with the
      release of the Marten software development environment.
    :extract_html: "<p><b>Prograph</b> is a visual, object-oriented, dataflow, multiparadigm
      programming language that uses iconic symbols to represent actions to be taken
      on data. Commercial Prograph software development environments such as Prograph
      Classic and Prograph CPX were available for the Apple Macintosh and Windows
      platforms for many years but were eventually withdrawn from the market in the
      late 1990s. Support for the Prograph language on macOS has recently reappeared
      with the release of the Marten software development environment.</p>"
  record/6a234855-83ac-4f55-8e02-d862b39ac974:
    :type: standard
    :title: JScript .NET
    :displaytitle: JScript .NET
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1417175
    :titles:
      :canonical: JScript_.NET
      :normalized: JScript .NET
      :display: JScript .NET
    :pageid: 840451
    :lang: en
    :dir: ltr
    :revision: '960913008'
    :tid: 2c2edcf0-35ba-11eb-b1fe-0ba46a060e8a
    :timestamp: '2020-06-05T15:58:16Z'
    :description: Programming language developed by Microsoft
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JScript_.NET
        :revisions: https://en.wikipedia.org/wiki/JScript_.NET?action=history
        :edit: https://en.wikipedia.org/wiki/JScript_.NET?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JScript_.NET
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JScript_.NET
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JScript_.NET
        :edit: https://en.m.wikipedia.org/wiki/JScript_.NET?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JScript_.NET
    :extract: JScript .NET is a .NET programming language developed by Microsoft.
    :extract_html: "<p><b>JScript .NET</b> is a .NET programming language developed
      by Microsoft.</p>"
  record/a46315f0-8385-4f0d-bc4a-af1db9af5a67:
    :type: standard
    :title: Pure (programming language)
    :displaytitle: Pure (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7261054
    :titles:
      :canonical: Pure_(programming_language)
      :normalized: Pure (programming language)
      :display: Pure (programming language)
    :pageid: 20446791
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5a/Pure_lang_logo.png
      :width: 54
      :height: 55
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5a/Pure_lang_logo.png
      :width: 54
      :height: 55
    :lang: en
    :dir: ltr
    :revision: '976794484'
    :tid: 5b8f0000-361a-11eb-af2e-8f75607bfaec
    :timestamp: '2020-09-05T02:06:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pure_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pure_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pure_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pure_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pure_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pure_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pure_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pure_(programming_language)
    :extract: Pure, successor to the equational language Q, is a dynamically typed,
      functional programming language based on term rewriting. It has facilities for
      user-defined operator syntax, macros, arbitrary-precision arithmetic, and compiling
      to native code through the LLVM. Pure is free and open-source software distributed
      (mostly) under the GNU Lesser General Public License version 3 or later.
    :extract_html: "<p><b>Pure</b>, successor to the equational language <b>Q</b>,
      is a dynamically typed, functional programming language based on term rewriting.
      It has facilities for user-defined operator syntax, macros, arbitrary-precision
      arithmetic, and compiling to native code through the LLVM. Pure is free and
      open-source software distributed (mostly) under the GNU Lesser General Public
      License version 3 or later.</p>"
  record/ca609de2-be52-4567-9815-589d79ff8480:
    :type: standard
    :title: MAPPER
    :displaytitle: MAPPER
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3287251
    :titles:
      :canonical: MAPPER
      :normalized: MAPPER
      :display: MAPPER
    :pageid: 7920952
    :lang: en
    :dir: ltr
    :revision: '986151852'
    :tid: abd94b30-1a5c-11eb-b596-7b7ff17a56b8
    :timestamp: '2020-10-30T03:04:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MAPPER
        :revisions: https://en.wikipedia.org/wiki/MAPPER?action=history
        :edit: https://en.wikipedia.org/wiki/MAPPER?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MAPPER
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MAPPER
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MAPPER
        :edit: https://en.m.wikipedia.org/wiki/MAPPER?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MAPPER
    :extract: |-
      MAPPER, now known as BIS, is a fourth-generation programming language from
      Sperry Univac. Mapper originated in the 1970s based on some work in the 1960s, but has been kept current. It was renamed and also given an extension named ICE - Internet Commerce Enabler.
    :extract_html: |-
      <p><b>MAPPER</b>, now known as BIS, is a fourth-generation programming language from
      Sperry Univac. Mapper originated in the 1970s based on some work in the 1960s, but has been kept current. It was renamed and also given an extension named ICE - Internet Commerce Enabler.</p>
  record/c836fef2-bb7c-4e64-9063-c90ea8aaeb07:
    :type: standard
    :title: Pico (programming language)
    :displaytitle: Pico (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3902685
    :titles:
      :canonical: Pico_(programming_language)
      :normalized: Pico (programming language)
      :display: Pico (programming language)
    :pageid: 379013
    :lang: en
    :dir: ltr
    :revision: '975892414'
    :tid: 59bd6090-205e-11eb-b93b-5ddc277c13d2
    :timestamp: '2020-08-31T00:38:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pico_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pico_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pico_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pico_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pico_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pico_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pico_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pico_(programming_language)
    :extract: Pico is a programming language developed at the Software Languages Lab
      at Vrije Universiteit Brussel. The language was created to introduce the essentials
      of programming to non-computer science students.
    :extract_html: "<p><b>Pico</b> is a programming language developed at the Software
      Languages Lab at Vrije Universiteit Brussel. The language was created to introduce
      the essentials of programming to non-computer science students.</p>"
  record/bca4df6c-b446-468b-b723-bb8f02ec0ebc:
    :type: standard
    :title: S2 (programming language)
    :displaytitle: S2 (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7388255
    :titles:
      :canonical: S2_(programming_language)
      :normalized: S2 (programming language)
      :display: S2 (programming language)
    :pageid: 439466
    :lang: en
    :dir: ltr
    :revision: '895869189'
    :tid: a43fc5c0-1f11-11eb-9d3b-23a729f37904
    :timestamp: '2019-05-07T00:27:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/S2_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/S2_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/S2_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:S2_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/S2_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/S2_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/S2_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:S2_(programming_language)
    :extract: S2  is an object-oriented programming language developed in the late
      1990s by Brad Fitzpatrick, Martin "Mart" Atkins, and others for the online journaling
      service LiveJournal in order to allow users full control over the appearance
      of their pages. S2 source code is compiled into Perl, which the webserver can
      then execute directly for individual web page requests.
    :extract_html: <p><b>S2 </b> is an object-oriented programming language developed
      in the late 1990s by Brad Fitzpatrick, Martin "Mart" Atkins, and others for
      the online journaling service LiveJournal in order to allow users full control
      over the appearance of their pages. S2 source code is compiled into Perl, which
      the webserver can then execute directly for individual web page requests.</p>
  record/4dc18ae8-0e39-460d-b4c9-1101d7e2ef3d:
    :type: standard
    :title: A-0 System
    :displaytitle: A-0 System
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q277713
    :titles:
      :canonical: A-0_System
      :normalized: A-0 System
      :display: A-0 System
    :pageid: 60383
    :lang: en
    :dir: ltr
    :revision: '985060399'
    :tid: 0b162850-1a41-11eb-af19-cdfc3a0a162b
    :timestamp: '2020-10-23T18:34:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/A-0_System
        :revisions: https://en.wikipedia.org/wiki/A-0_System?action=history
        :edit: https://en.wikipedia.org/wiki/A-0_System?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:A-0_System
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/A-0_System
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/A-0_System
        :edit: https://en.m.wikipedia.org/wiki/A-0_System?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:A-0_System
    :extract: The A-0 system, written by Grace Murray Hopper in 1951 and 1952 for
      the UNIVAC I, was an early compiler related tool developed for electronic computers.
      The A-0 functioned more as a loader or linker than the modern notion of a compiler.
      A program was specified as a sequence of subroutines and arguments. The subroutines
      were identified by a numeric code and the arguments to the subroutines were
      written directly after each subroutine code. The A-0 system converted the specification
      into machine code that could be fed into the computer a second time to execute
      the said program.
    :extract_html: "<p>The <b>A-0 system</b>, written by Grace Murray Hopper in 1951
      and 1952 for the UNIVAC I, was an early compiler related tool developed for
      electronic computers. The A-0 functioned more as a loader or linker than the
      modern notion of a compiler. A program was specified as a sequence of subroutines
      and arguments. The subroutines were identified by a numeric code and the arguments
      to the subroutines were written directly after each subroutine code. The A-0
      system converted the specification into machine code that could be fed into
      the computer a second time to execute the said program.</p>"
  record/21d51373-365b-4b8b-bbc4-a407aa81b0a5:
    :type: standard
    :title: FOCAL (programming language)
    :displaytitle: FOCAL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1966202
    :titles:
      :canonical: FOCAL_(programming_language)
      :normalized: FOCAL (programming language)
      :display: FOCAL (programming language)
    :pageid: 1170592
    :lang: en
    :dir: ltr
    :revision: '986721185'
    :tid: 923b1c50-3026-11eb-ab7b-91a5dc967eaf
    :timestamp: '2020-11-02T16:25:41Z'
    :description: Programming language used on DEC PDP-series machines
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FOCAL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/FOCAL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/FOCAL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FOCAL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FOCAL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FOCAL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/FOCAL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FOCAL_(programming_language)
    :extract: FOCAL is an interactive interpreted programming language based on JOSS
      and primarily used on Digital Equipment Corporation (DEC) PDP-series machines.
      The name is an acronym, alternately for Formulating On-Line Calculations in
      Algebraic Language, or FOrmula CALculator.
    :extract_html: "<p><b>FOCAL</b> is an interactive interpreted programming language
      based on JOSS and primarily used on Digital Equipment Corporation (DEC) PDP-series
      machines. The name is an acronym, alternately for <b>F</b>ormulating <b>O</b>n-Line
      <b>C</b>alculations in <b>A</b>lgebraic <b>L</b>anguage, or <b>FO</b>rmula <b>CAL</b>culator.</p>"
  record/90008ae5-567b-4a0f-aa2f-156bba3fd830:
    :type: standard
    :title: Axum (programming language)
    :displaytitle: Axum (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4830701
    :titles:
      :canonical: Axum_(programming_language)
      :normalized: Axum (programming language)
      :display: Axum (programming language)
    :pageid: 22433033
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/3/3d/Axum_Banner.png
      :width: 262
      :height: 155
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/3/3d/Axum_Banner.png
      :width: 262
      :height: 155
    :lang: en
    :dir: ltr
    :revision: '986559225'
    :tid: 2a345870-34e9-11eb-b66f-2fe301dc8a8d
    :timestamp: '2020-11-01T16:34:02Z'
    :description: Domain specific concurrent programming language originally developed
      by Microsoft
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Axum_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Axum_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Axum_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Axum_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Axum_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Axum_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Axum_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Axum_(programming_language)
    :extract: Axum is a domain-specific concurrent programming language, based on
      the Actor model, that was under active development by Microsoft between 2009
      and 2011. It is an object-oriented language based on the .NET Common Language
      Runtime using a C-like syntax which, being a domain-specific language, is intended
      for development of portions of a software application that is well-suited to
      concurrency. But it contains enough general-purpose constructs that one need
      not switch to a general-purpose programming language for the sequential parts
      of the concurrent components.
    :extract_html: "<p><b>Axum</b> is a domain-specific concurrent programming language,
      based on the Actor model, that was under active development by Microsoft between
      2009 and 2011. It is an object-oriented language based on the .NET Common Language
      Runtime using a C-like syntax which, being a domain-specific language, is intended
      for development of portions of a software application that is well-suited to
      concurrency. But it contains enough general-purpose constructs that one need
      not switch to a general-purpose programming language for the sequential parts
      of the concurrent components.</p>"
  record/887c5aca-676a-4541-8508-b5b9430dc7c6:
    :type: standard
    :title: IBM Informix-4GL
    :displaytitle: IBM Informix-4GL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2816938
    :titles:
      :canonical: IBM_Informix-4GL
      :normalized: IBM Informix-4GL
      :display: IBM Informix-4GL
    :pageid: 252830
    :lang: en
    :dir: ltr
    :revision: '958519009'
    :tid: a0022cc0-35b2-11eb-9f2a-f3e6434df506
    :timestamp: '2020-05-24T07:50:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_Informix-4GL
        :revisions: https://en.wikipedia.org/wiki/IBM_Informix-4GL?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_Informix-4GL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_Informix-4GL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_Informix-4GL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_Informix-4GL
        :edit: https://en.m.wikipedia.org/wiki/IBM_Informix-4GL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_Informix-4GL
    :extract: Informix-4GL is a 4GL programming language developed by Informix during
      the mid-1980s.
    :extract_html: "<p><b>Informix-4GL</b> is a 4GL programming language developed
      by Informix during the mid-1980s.</p>"
  record/c3024d6e-8845-4945-bba2-3388b9fb964b:
    :type: standard
    :title: SASL (programming language)
    :displaytitle: SASL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4048691
    :titles:
      :canonical: SASL_(programming_language)
      :normalized: SASL (programming language)
      :display: SASL (programming language)
    :pageid: 1298198
    :lang: en
    :dir: ltr
    :revision: '905320367'
    :tid: 15237fb0-1be9-11eb-94cd-d19d9a9bbc30
    :timestamp: '2019-07-08T11:17:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SASL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SASL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SASL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SASL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SASL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SASL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SASL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SASL_(programming_language)
    :extract: SASL is a purely functional programming language developed by David
      Turner at the University of St Andrews in 1972, based on the applicative subset
      of ISWIM. In 1976 Turner redesigned and reimplemented it as a non-strict (lazy)
      language. In this form it was the foundation of Turner's later languages KRC
      and Miranda, but SASL appears to be untyped whereas Miranda has polymorphic
      types.
    :extract_html: "<p><b>SASL</b> is a purely functional programming language developed
      by David Turner at the University of St Andrews in 1972, based on the applicative
      subset of ISWIM. In 1976 Turner redesigned and reimplemented it as a non-strict
      (lazy) language. In this form it was the foundation of Turner's later languages
      KRC and Miranda, but SASL appears to be untyped whereas Miranda has polymorphic
      types.</p>"
  record/fdf15235-d231-44ca-929c-9d36f6baf7be:
    :type: standard
    :title: NESL
    :displaytitle: NESL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6953575
    :titles:
      :canonical: NESL
      :normalized: NESL
      :display: NESL
    :pageid: 919571
    :lang: en
    :dir: ltr
    :revision: '979630146'
    :tid: 17a1e970-1b76-11eb-995c-ed3f51f30b2e
    :timestamp: '2020-09-21T20:46:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NESL
        :revisions: https://en.wikipedia.org/wiki/NESL?action=history
        :edit: https://en.wikipedia.org/wiki/NESL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NESL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NESL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NESL
        :edit: https://en.m.wikipedia.org/wiki/NESL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NESL
    :extract: NESL is a parallel programming language developed at Carnegie Mellon
      by the SCandAL project and released in 1993. It integrates various ideas from
      parallel algorithms, and functional programming and array programming languages.
    :extract_html: "<p><b>NESL</b> is a parallel programming language developed at
      Carnegie Mellon by the SCandAL project and released in 1993. It integrates various
      ideas from parallel algorithms, and functional programming and array programming
      languages.</p>"
  record/6f05d11b-0218-4c0c-b6ec-e145d17098f5:
    :type: standard
    :title: Objective-J
    :displaytitle: Objective-J
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1443431
    :titles:
      :canonical: Objective-J
      :normalized: Objective-J
      :display: Objective-J
    :pageid: 19176983
    :lang: en
    :dir: ltr
    :revision: '956139490'
    :tid: 7879cec0-2a49-11eb-8e2f-c5fc355cefa6
    :timestamp: '2020-05-11T18:14:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Objective-J
        :revisions: https://en.wikipedia.org/wiki/Objective-J?action=history
        :edit: https://en.wikipedia.org/wiki/Objective-J?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Objective-J
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Objective-J
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Objective-J
        :edit: https://en.m.wikipedia.org/wiki/Objective-J?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Objective-J
    :extract: 'Objective-J is a programming language developed as part of the Cappuccino
      web development framework. Its syntax is nearly identical to the Objective-C
      syntax and it shares with JavaScript the same relationship that Objective-C
      has with the C programming language: that of being a strict, but small, superset;
      adding traditional inheritance and Smalltalk/Objective-C style dynamic dispatch.
      Pure JavaScript, being a prototype-based language, already has a notion of object
      orientation and inheritance, but Objective-J adds the use of class-based programming
      to JavaScript.'
    :extract_html: "<p><b>Objective-J</b> is a programming language developed as part
      of the Cappuccino web development framework. Its syntax is nearly identical
      to the Objective-C syntax and it shares with JavaScript the same relationship
      that Objective-C has with the C programming language: that of being a strict,
      but small, superset; adding traditional inheritance and Smalltalk/Objective-C
      style dynamic dispatch. Pure JavaScript, being a prototype-based language, already
      has a notion of object orientation and inheritance, but Objective-J adds the
      use of class-based programming to JavaScript.</p>"
  record/30f0895d-6813-49cb-9940-6f244936738b:
    :type: standard
    :title: EC (programming language)
    :displaytitle: eC (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q22095795
    :titles:
      :canonical: EC_(programming_language)
      :normalized: EC (programming language)
      :display: eC (programming language)
    :pageid: 48971282
    :lang: en
    :dir: ltr
    :revision: '949165087'
    :tid: 0a78a590-3147-11eb-aef1-036b9ed9e53f
    :timestamp: '2020-04-05T00:33:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/EC_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/EC_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/EC_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:EC_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/EC_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/EC_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/EC_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:EC_(programming_language)
    :extract: eC is an object-oriented programming language, defined as a super-set
      of the C language.
    :extract_html: "<p><b>eC</b> is an object-oriented programming language, defined
      as a super-set of the C language.</p>"
  record/86657334-df45-46f9-83c6-0ab4313e7400:
    :type: standard
    :title: RPL (programming language)
    :displaytitle: RPL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q960361
    :titles:
      :canonical: RPL_(programming_language)
      :normalized: RPL (programming language)
      :display: RPL (programming language)
    :pageid: 512681
    :lang: en
    :dir: ltr
    :revision: '952726894'
    :tid: 7f918270-1afe-11eb-8433-a5a2fa7e9370
    :timestamp: '2020-04-23T19:49:17Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/RPL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/RPL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/RPL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:RPL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/RPL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/RPL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/RPL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:RPL_(programming_language)
    :extract: RPL is a handheld calculator operating system and application programming
      language used on Hewlett-Packard's scientific graphing RPN calculators of the
      HP 28, 48, 49 and 50 series, but it is also usable on non-RPN calculators, such
      as the 38, 39 and 40 series.
    :extract_html: "<p><b>RPL</b> is a handheld calculator operating system and application
      programming language used on Hewlett-Packard's scientific graphing RPN calculators
      of the HP 28, 48, 49 and 50 series, but it is also usable on non-RPN calculators,
      such as the 38, 39 and 40 series.</p>"
  record/291213dc-8f3e-4f8b-914b-7ca07ef5f7ee:
    :type: standard
    :title: MATH-MATIC
    :displaytitle: MATH-MATIC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16947404
    :titles:
      :canonical: MATH-MATIC
      :normalized: MATH-MATIC
      :display: MATH-MATIC
    :pageid: 202110
    :lang: en
    :dir: ltr
    :revision: '981935174'
    :tid: 3904eda0-1a8c-11eb-8786-19f320bb78a3
    :timestamp: '2020-10-05T07:48:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MATH-MATIC
        :revisions: https://en.wikipedia.org/wiki/MATH-MATIC?action=history
        :edit: https://en.wikipedia.org/wiki/MATH-MATIC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MATH-MATIC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MATH-MATIC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MATH-MATIC
        :edit: https://en.m.wikipedia.org/wiki/MATH-MATIC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MATH-MATIC
    :extract: MATH-MATIC is the marketing name for the AT-3 compiler, an early programming
      language for the UNIVAC I and UNIVAC II.
    :extract_html: "<p><b>MATH-MATIC</b> is the marketing name for the AT-3 compiler,
      an early programming language for the UNIVAC I and UNIVAC II.</p>"
  record/5b1b9691-2d6f-4d15-ac61-ebb6b2b66ddf:
    :type: standard
    :title: HyperTalk
    :displaytitle: HyperTalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q58329
    :titles:
      :canonical: HyperTalk
      :normalized: HyperTalk
      :display: HyperTalk
    :pageid: 78136
    :lang: en
    :dir: ltr
    :revision: '988282184'
    :tid: 23e330a0-35b0-11eb-af29-d14090a18b40
    :timestamp: '2020-11-12T06:11:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/HyperTalk
        :revisions: https://en.wikipedia.org/wiki/HyperTalk?action=history
        :edit: https://en.wikipedia.org/wiki/HyperTalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:HyperTalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/HyperTalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/HyperTalk
        :edit: https://en.m.wikipedia.org/wiki/HyperTalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:HyperTalk
    :extract: HyperTalk was a high-level, procedural programming language created
      in 1987 by Dan Winkler and used in conjunction with Apple Computer's HyperCard
      hypermedia program by Bill Atkinson. Because the main target audience of HyperTalk
      was beginning programmers, HyperTalk programmers were usually called "authors"
      and the process of writing programs was known as "scripting". HyperTalk scripts
      resembled written English and used a logical structure similar to that of the
      Pascal programming language.
    :extract_html: <p><b>HyperTalk</b> was a high-level, procedural programming language
      created in 1987 by Dan Winkler and used in conjunction with Apple Computer's
      HyperCard hypermedia program by Bill Atkinson. Because the main target audience
      of HyperTalk was beginning programmers, HyperTalk programmers were usually called
      "authors" and the process of writing programs was known as "scripting". HyperTalk
      scripts resembled written English and used a logical structure similar to that
      of the Pascal programming language.</p>
  record/693543af-77ec-4a92-bda0-d7e79b12b3ba:
    :type: standard
    :title: AMOS (programming language)
    :displaytitle: AMOS (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q295232
    :titles:
      :canonical: AMOS_(programming_language)
      :normalized: AMOS (programming language)
      :display: AMOS (programming language)
    :pageid: 2957
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/4/49/AMOS_Professional_Screenshot.png/320px-AMOS_Professional_Screenshot.png
      :width: 320
      :height: 256
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/4/49/AMOS_Professional_Screenshot.png
      :width: 353
      :height: 282
    :lang: en
    :dir: ltr
    :revision: '985898945'
    :tid: b45dcd40-35ae-11eb-93f0-ab4d8da8bf2e
    :timestamp: '2020-10-28T16:30:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AMOS_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/AMOS_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/AMOS_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AMOS_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AMOS_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AMOS_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/AMOS_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AMOS_(programming_language)
    :extract: AMOS BASIC is a dialect of the BASIC programming language implemented
      on the Amiga computer. AMOS BASIC was published by Europress Software and originally
      written by François Lionet with Constantin Sotiropoulos.
    :extract_html: "<p><b>AMOS BASIC</b> is a dialect of the BASIC programming language
      implemented on the Amiga computer. AMOS BASIC was published by Europress Software
      and originally written by François Lionet with Constantin Sotiropoulos.</p>"
  record/70831bf4-4ff0-430a-9954-b43c93633871:
    :type: standard
    :title: XOTcl
    :displaytitle: XOTcl
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4053333
    :titles:
      :canonical: XOTcl
      :normalized: XOTcl
      :display: XOTcl
    :pageid: 551037
    :lang: en
    :dir: ltr
    :revision: '850614423'
    :tid: 75d8c4b0-1b0c-11eb-b63a-69bafb8b9cbd
    :timestamp: '2018-07-16T23:45:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XOTcl
        :revisions: https://en.wikipedia.org/wiki/XOTcl?action=history
        :edit: https://en.wikipedia.org/wiki/XOTcl?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XOTcl
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XOTcl
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XOTcl
        :edit: https://en.m.wikipedia.org/wiki/XOTcl?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XOTcl
    :extract: XOTcl is an object-oriented extension for the Tool Command Language
      created by Gustaf Neumann and Uwe Zdun. It is a derivative of MIT OTcl. XOTcl
      is based on a dynamic object system with metaclasses which as influenced by
      CLOS. Class and method definitions are completely dynamic. XOTcl provides language
      support for design patterns via filters and decorator mixins.
    :extract_html: "<p><b>XOTcl</b> is an object-oriented extension for the Tool Command
      Language created by Gustaf Neumann and Uwe Zdun. It is a derivative of MIT OTcl.
      XOTcl is based on a dynamic object system with metaclasses which as influenced
      by CLOS. Class and method definitions are completely dynamic. XOTcl provides
      language support for design patterns via filters and decorator mixins.</p>"
  record/eeebf4ba-a122-4e0b-9e77-29947e230e59:
    :type: standard
    :title: LYaPAS
    :displaytitle: LYaPAS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6460486
    :titles:
      :canonical: LYaPAS
      :normalized: LYaPAS
      :display: LYaPAS
    :pageid: 18305664
    :lang: en
    :dir: ltr
    :revision: '991682446'
    :tid: 8490b9b0-33b0-11eb-81d1-2b44322a7957
    :timestamp: '2020-12-01T08:37:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LYaPAS
        :revisions: https://en.wikipedia.org/wiki/LYaPAS?action=history
        :edit: https://en.wikipedia.org/wiki/LYaPAS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LYaPAS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LYaPAS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LYaPAS
        :edit: https://en.m.wikipedia.org/wiki/LYaPAS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LYaPAS
    :extract: Logical Language for the Representation of Synthesis Algorithms is a
      programming language created by Arkady Zakrevsky in the Soviet Union.
    :extract_html: "<p><b>Logical Language for the Representation of Synthesis Algorithms</b>
      is a programming language created by Arkady Zakrevsky in the Soviet Union.</p>"
  record/f681c994-13e1-498e-a9e5-3cf47b37a8bf:
    :type: standard
    :title: Inform
    :displaytitle: Inform
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q539268
    :titles:
      :canonical: Inform
      :normalized: Inform
      :display: Inform
    :pageid: 227989
    :lang: en
    :dir: ltr
    :revision: '982833167'
    :tid: 02bc03b0-2d28-11eb-a477-3d54bc37e753
    :timestamp: '2020-10-10T16:57:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Inform
        :revisions: https://en.wikipedia.org/wiki/Inform?action=history
        :edit: https://en.wikipedia.org/wiki/Inform?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Inform
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Inform
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Inform
        :edit: https://en.m.wikipedia.org/wiki/Inform?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Inform
    :extract: |-
      Inform is a programming language and design system for interactive fiction originally created in 1993 by Graham Nelson. Inform can generate programs designed for the Z-code or Glulx virtual machines. Versions 1 through 5 were released between 1993 and 1996. Around 1996, Nelson rewrote Inform from first principles to create version 6 .
      Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction. In 2006, Nelson released Inform 7, a completely new language based on principles of natural language and a new set of tools based around a book-publishing metaphor.
    :extract_html: |-
      <p><b>Inform</b> is a programming language and design system for interactive fiction originally created in 1993 by Graham Nelson. Inform can generate programs designed for the Z-code or Glulx virtual machines. Versions 1 through 5 were released between 1993 and 1996. Around 1996, Nelson rewrote Inform from first principles to create version 6 .
      Over the following decade, version 6 became reasonably stable and a popular language for writing interactive fiction. In 2006, Nelson released <b>Inform 7</b>, a completely new language based on principles of natural language and a new set of tools based around a book-publishing metaphor.</p>
  record/e850f04b-9c75-407e-ae5d-d90038b74f12:
    :type: standard
    :title: Refal
    :displaytitle: Refal
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2626418
    :titles:
      :canonical: Refal
      :normalized: Refal
      :display: Refal
    :pageid: 14926151
    :lang: en
    :dir: ltr
    :revision: '973234119'
    :tid: 5fcbd7f0-2888-11eb-a80e-07f9fef5780d
    :timestamp: '2020-08-16T03:24:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Refal
        :revisions: https://en.wikipedia.org/wiki/Refal?action=history
        :edit: https://en.wikipedia.org/wiki/Refal?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Refal
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Refal
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Refal
        :edit: https://en.m.wikipedia.org/wiki/Refal?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Refal
    :extract: Refal "is a functional programming language oriented toward symbolic
      computations", including "string processing, language translation, [and] artificial
      intelligence". It is one of the oldest members of this family, first conceived
      of in 1966 as a theoretical tool, with the first implementation appearing in
      1968. Refal was intended to combine mathematical simplicity with practicality
      for writing large and sophisticated programs.
    :extract_html: <p><b>Refal</b> "is a functional programming language oriented
      toward symbolic computations", including "string processing, language translation,
      [and] artificial intelligence". It is one of the oldest members of this family,
      first conceived of in 1966 as a theoretical tool, with the first implementation
      appearing in 1968. Refal was intended to combine mathematical simplicity with
      practicality for writing large and sophisticated programs.</p>
  record/2e8ab031-f27a-4ea4-a5a0-5c849b912a5b:
    :type: standard
    :title: XBL
    :displaytitle: XBL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1691212
    :titles:
      :canonical: XBL
      :normalized: XBL
      :display: XBL
    :pageid: 793475
    :lang: en
    :dir: ltr
    :revision: '989052456'
    :tid: e1a81df0-3153-11eb-bce6-03a203091145
    :timestamp: '2020-11-16T19:56:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XBL
        :revisions: https://en.wikipedia.org/wiki/XBL?action=history
        :edit: https://en.wikipedia.org/wiki/XBL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XBL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XBL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XBL
        :edit: https://en.m.wikipedia.org/wiki/XBL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XBL
    :extract: XBL is an XML-based markup language for altering the behavior of XUL
      widgets. It was devised at Netscape in the late 1990s as an extension of XUL
      and existed in Firefox web browser codebase. Firefox deprecated XBL in 2017
      and completed the process of removing it in 2019. However, the UXP fork of the
      codebase intends to continue supporting XBL indefinitely.
    :extract_html: "<p><b>XBL</b> is an XML-based markup language for altering the
      behavior of XUL widgets. It was devised at Netscape in the late 1990s as an
      extension of XUL and existed in Firefox web browser codebase. Firefox deprecated
      XBL in 2017 and completed the process of removing it in 2019. However, the UXP
      fork of the codebase intends to continue supporting XBL indefinitely.</p>"
  record/b00cf1aa-74cf-4583-8416-edf595d1712a:
    :type: standard
    :title: G-code
    :displaytitle: G-code
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q620464
    :titles:
      :canonical: G-code
      :normalized: G-code
      :display: G-code
    :pageid: 1027403
    :lang: en
    :dir: ltr
    :revision: '991589326'
    :tid: 6e7fc680-3350-11eb-901e-531213fdf0c5
    :timestamp: '2020-11-30T21:10:04Z'
    :description: Programming languages
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/G-code
        :revisions: https://en.wikipedia.org/wiki/G-code?action=history
        :edit: https://en.wikipedia.org/wiki/G-code?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:G-code
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/G-code
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/G-code
        :edit: https://en.m.wikipedia.org/wiki/G-code?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:G-code
    :extract: G-code, which has many variants, is the common name for the most widely
      used computer numerical control (CNC) programming language. It is used mainly
      in computer-aided manufacturing to control automated machine tools.
    :extract_html: "<p><b>G-code</b>, which has many variants, is the common name
      for the most widely used computer numerical control (CNC) programming language.
      It is used mainly in computer-aided manufacturing to control automated machine
      tools.</p>"
  record/768b532d-bcda-4024-8275-3979515ee118:
    :type: standard
    :title: Hermes (programming language)
    :displaytitle: Hermes (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16989736
    :titles:
      :canonical: Hermes_(programming_language)
      :normalized: Hermes (programming language)
      :display: Hermes (programming language)
    :pageid: 24136948
    :lang: en
    :dir: ltr
    :revision: '935553627'
    :tid: ec0a8f90-1b54-11eb-b7d5-3d66363c94a8
    :timestamp: '2020-01-13T08:10:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hermes_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hermes_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hermes_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hermes_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hermes_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hermes_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hermes_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hermes_(programming_language)
    :extract: |-
      Hermes

      is a language for distributed programming
      that was developed at IBM's Thomas J. Watson Research Center from 1986 through 1992,
      with an open-source compiler and run-time system.
      Hermes' primary features included:Language support of processes and interprocess communication.
      Compile-time verification that operations use initialized data.
      Representation-independent data aggregates called tables.
      Lack of pointers.
    :extract_html: |-
      <p><b>Hermes</b>

      is a language for distributed programming
      that was developed at IBM's Thomas J. Watson Research Center from 1986 through 1992,
      with an open-source compiler and run-time system.
      Hermes' primary features included:</p><ul><li>Language support of processes and interprocess communication.</li>
      <li>Compile-time verification that operations use initialized data.</li>
      <li>Representation-independent data aggregates called tables.</li>
      <li>Lack of pointers.</li></ul>
  record/ee345bcf-5cc5-4b85-aaf4-1f0bf2c3e4e8:
    :type: standard
    :title: Genie (programming language)
    :displaytitle: Genie (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1106293
    :titles:
      :canonical: Genie_(programming_language)
      :normalized: Genie (programming language)
      :display: Genie (programming language)
    :pageid: 25291443
    :lang: en
    :dir: ltr
    :revision: '986328857'
    :tid: 2c3b37d0-2bdc-11eb-983f-d3039eeace28
    :timestamp: '2020-10-31T04:39:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Genie_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Genie_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Genie_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Genie_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Genie_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Genie_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Genie_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Genie_(programming_language)
    :extract: Genie is a modern, general-purpose high-level programming language in
      development since 2008. It was designed as an alternative, simpler and cleaner
      dialect for the Vala compiler, while preserving the same functionality of the
      Vala language. Genie uses the same compiler and libraries as Vala; the two can
      indeed be used alongside each other. The differences are only syntactic.
    :extract_html: "<p><b>Genie</b> is a modern, general-purpose high-level programming
      language in development since 2008. It was designed as an alternative, simpler
      and cleaner dialect for the Vala compiler, while preserving the same functionality
      of the Vala language. Genie uses the same compiler and libraries as Vala; the
      two can indeed be used alongside each other. The differences are only syntactic.</p>"
  record/568d90f9-19b4-4c97-b08d-947e9d237d93:
    :type: standard
    :title: PROIV
    :displaytitle: PROIV
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7120393
    :titles:
      :canonical: PROIV
      :normalized: PROIV
      :display: PROIV
    :pageid: 580197
    :lang: en
    :dir: ltr
    :revision: '958519058'
    :tid: ee0495d0-35b6-11eb-8ab6-87da076b81f2
    :timestamp: '2020-05-24T07:51:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PROIV
        :revisions: https://en.wikipedia.org/wiki/PROIV?action=history
        :edit: https://en.wikipedia.org/wiki/PROIV?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PROIV
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PROIV
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PROIV
        :edit: https://en.m.wikipedia.org/wiki/PROIV?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PROIV
    :extract: PROIV (/proʊ,fʊər/) is a low code development platform, developed and
      sold by NorthgateArinso, part of the Northgate Information Solutions Group.
      It has an active community of around 2500 developers and end-users worldwide,
      ranging from consultants to large multinationals, finance institutions, tax
      authorities, retailers, engineering companies, media operators and software
      houses.
    :extract_html: "<p><b>PROIV</b> (/proʊ,fʊər/) is a low code development platform,
      developed and sold by NorthgateArinso, part of the Northgate Information Solutions
      Group. It has an active community of around 2500 developers and end-users worldwide,
      ranging from consultants to large multinationals, finance institutions, tax
      authorities, retailers, engineering companies, media operators and software
      houses.</p>"
  record/ed71d9e7-fed0-4e18-8428-752e74591728:
    :type: standard
    :title: DYNAMO (programming language)
    :displaytitle: DYNAMO (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5206860
    :titles:
      :canonical: DYNAMO_(programming_language)
      :normalized: DYNAMO (programming language)
      :display: DYNAMO (programming language)
    :pageid: 26064582
    :lang: en
    :dir: ltr
    :revision: '990975063'
    :tid: 81492180-30cb-11eb-b871-4d9026ffcc1e
    :timestamp: '2020-11-27T16:13:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DYNAMO_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/DYNAMO_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/DYNAMO_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DYNAMO_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DYNAMO_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DYNAMO_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/DYNAMO_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DYNAMO_(programming_language)
    :extract: |-
      DYNAMO is a historically important simulation language and accompanying graphical notation developed within the system dynamics analytical framework. It was originally for industrial dynamics but was soon extended to other applications, including population and resource studies
      and urban planning.
    :extract_html: |-
      <p><b>DYNAMO</b> is a historically important simulation language and accompanying graphical notation developed within the system dynamics analytical framework. It was originally for industrial dynamics but was soon extended to other applications, including population and resource studies
      and urban planning.</p>
  record/67fb10c6-e8cb-437a-82a7-39230d88e834:
    :type: standard
    :title: AmbientTalk
    :displaytitle: AmbientTalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4741415
    :titles:
      :canonical: AmbientTalk
      :normalized: AmbientTalk
      :display: AmbientTalk
    :pageid: 12036551
    :lang: en
    :dir: ltr
    :revision: '907178904'
    :tid: 47417b00-35f7-11eb-a2bd-e9ff558bdb0a
    :timestamp: '2019-07-21T02:17:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AmbientTalk
        :revisions: https://en.wikipedia.org/wiki/AmbientTalk?action=history
        :edit: https://en.wikipedia.org/wiki/AmbientTalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AmbientTalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AmbientTalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AmbientTalk
        :edit: https://en.m.wikipedia.org/wiki/AmbientTalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AmbientTalk
    :extract: AmbientTalk is an experimental object-oriented distributed programming
      language developed at the Programming Technology Laboratory at the Vrije Universiteit
      Brussel, Belgium. The language is primarily targeted at writing programs deployed
      in mobile ad hoc networks.
    :extract_html: "<p><b>AmbientTalk</b> is an experimental object-oriented distributed
      programming language developed at the Programming Technology Laboratory at the
      Vrije Universiteit Brussel, Belgium. The language is primarily targeted at writing
      programs deployed in mobile ad hoc networks.</p>"
  record/80a50e8d-0b25-4bd9-853b-d8e5ae84e102:
    :type: standard
    :title: Adobe ColdFusion
    :displaytitle: Adobe ColdFusion
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q468446
    :titles:
      :canonical: Adobe_ColdFusion
      :normalized: Adobe ColdFusion
      :display: Adobe ColdFusion
    :pageid: 374636
    :lang: en
    :dir: ltr
    :revision: '990924259'
    :tid: 146c9d00-3088-11eb-946b-37329f801945
    :timestamp: '2020-11-27T08:10:53Z'
    :description: Rapid Web app development platform
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Adobe_ColdFusion
        :revisions: https://en.wikipedia.org/wiki/Adobe_ColdFusion?action=history
        :edit: https://en.wikipedia.org/wiki/Adobe_ColdFusion?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Adobe_ColdFusion
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Adobe_ColdFusion
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Adobe_ColdFusion
        :edit: https://en.m.wikipedia.org/wiki/Adobe_ColdFusion?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Adobe_ColdFusion
    :extract: Adobe ColdFusion is a commercial rapid web-application development computing
      platform created by J. J. Allaire in 1995. ColdFusion was originally designed
      to make it easier to connect simple HTML pages to a database. By version 2 (1996),
      it became a full platform that included an IDE in addition to a full scripting
      language.
    :extract_html: "<p>Adobe <b>ColdFusion</b> is a commercial rapid web-application
      development computing platform created by J. J. Allaire in 1995. ColdFusion
      was originally designed to make it easier to connect simple HTML pages to a
      database. By version 2 (1996), it became a full platform that included an IDE
      in addition to a full scripting language.</p>"
  record/1ea41076-5325-433f-8932-39eddb9bd069:
    :type: standard
    :title: Max (software)
    :displaytitle: Max (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1707206
    :titles:
      :canonical: Max_(software)
      :normalized: Max (software)
      :display: Max (software)
    :pageid: 479795
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/93/Logo_Max_8_software.jpg/320px-Logo_Max_8_software.jpg
      :width: 320
      :height: 315
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/9/93/Logo_Max_8_software.jpg
      :width: 934
      :height: 918
    :lang: en
    :dir: ltr
    :revision: '992116494'
    :tid: e47fdbd0-3581-11eb-9781-9195a64f31ed
    :timestamp: '2020-12-03T16:09:12Z'
    :description: Visual programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Max_(software)
        :revisions: https://en.wikipedia.org/wiki/Max_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/Max_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Max_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Max_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Max_(software)
        :edit: https://en.m.wikipedia.org/wiki/Max_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Max_(software)
    :extract: Max, also known as Max/MSP/Jitter, is a visual programming language
      for music and multimedia developed and maintained by San Francisco-based software
      company Cycling '74. Over its more than thirty-year history, it has been used
      by composers, performers, software designers, researchers, and artists to create
      recordings, performances, and installations.
    :extract_html: "<p><b>Max</b>, also known as Max/MSP/Jitter, is a visual programming
      language for music and multimedia developed and maintained by San Francisco-based
      software company Cycling '74. Over its more than thirty-year history, it has
      been used by composers, performers, software designers, researchers, and artists
      to create recordings, performances, and installations.</p>"
  record/9678a323-ccf9-483a-925f-8f544e7d6451:
    :type: standard
    :title: Oak (programming language)
    :displaytitle: Oak (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q10318621
    :titles:
      :canonical: Oak_(programming_language)
      :normalized: Oak (programming language)
      :display: Oak (programming language)
    :pageid: 16840885
    :lang: en
    :dir: ltr
    :revision: '991458528'
    :tid: c7b84a80-32c2-11eb-bd95-5d99398a67de
    :timestamp: '2020-11-30T04:16:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Oak_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Oak_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Oak_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Oak_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Oak_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Oak_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Oak_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Oak_(programming_language)
    :extract: |2-

      Oak is a discontinued programming language created by James Gosling in 1991, initially for Sun Microsystems' set-top box project. The language later evolved to become Java.
    :extract_html: |-
      <p>
      <b>Oak</b> is a discontinued programming language created by James Gosling in 1991, initially for Sun Microsystems' set-top box project. The language later evolved to become Java.</p>
  record/faf94387-0679-429e-914f-29f78f2ddb05:
    :type: standard
    :title: Nullsoft Scriptable Install System
    :displaytitle: Nullsoft Scriptable Install System
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q848317
    :titles:
      :canonical: Nullsoft_Scriptable_Install_System
      :normalized: Nullsoft Scriptable Install System
      :display: Nullsoft Scriptable Install System
    :pageid: 307436
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/04/Nullsoft_Scriptable_Install_System_icon.png
      :width: 48
      :height: 48
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/04/Nullsoft_Scriptable_Install_System_icon.png
      :width: 48
      :height: 48
    :lang: en
    :dir: ltr
    :revision: '978917589'
    :tid: 65606c90-307f-11eb-9eaf-e583d4b23627
    :timestamp: '2020-09-17T18:21:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System
        :revisions: https://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System?action=history
        :edit: https://en.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nullsoft_Scriptable_Install_System
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nullsoft_Scriptable_Install_System
        :edit: https://en.m.wikipedia.org/wiki/Nullsoft_Scriptable_Install_System?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nullsoft_Scriptable_Install_System
    :extract: Nullsoft Scriptable Install System (NSIS) is a script-driven installer
      authoring tool for Microsoft Windows backed by Nullsoft, the creators of Winamp.
      NSIS is released under a combination of free software licenses, primarily the
      zlib license. It has become a widely used alternative to commercial proprietary
      products like InstallShield, with users including Amazon.com, Dropbox, Google,
      Ubisoft, FL Studio, BitTorrent, and McAfee.
    :extract_html: "<p><b>Nullsoft Scriptable Install System</b> (<b>NSIS</b>) is
      a script-driven installer authoring tool for Microsoft Windows backed by Nullsoft,
      the creators of Winamp. NSIS is released under a combination of free software
      licenses, primarily the zlib license. It has become a widely used alternative
      to commercial proprietary products like InstallShield, with users including
      Amazon.com, Dropbox, Google, Ubisoft, FL Studio, BitTorrent, and McAfee.</p>"
  record/c47b3b68-e08f-4dde-9c23-0eb2b46d2d3b:
    :type: standard
    :title: TACL
    :displaytitle: TACL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q598722
    :titles:
      :canonical: TACL
      :normalized: TACL
      :display: TACL
    :pageid: 1558785
    :lang: en
    :dir: ltr
    :revision: '961543787'
    :tid: 0cfa2620-35c2-11eb-bf69-8359009a470c
    :timestamp: '2020-06-09T02:53:38Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TACL
        :revisions: https://en.wikipedia.org/wiki/TACL?action=history
        :edit: https://en.wikipedia.org/wiki/TACL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TACL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TACL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TACL
        :edit: https://en.m.wikipedia.org/wiki/TACL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TACL
    :extract: TACL is the scripting programming language used in Tandem Computers.
      TACL is the shell.
    :extract_html: "<p><b>TACL</b> is the scripting programming language used in Tandem
      Computers. TACL is the shell.</p>"
  record/8e48f187-26f0-4bb1-8145-723bda23b71a:
    :type: standard
    :title: Limnor
    :displaytitle: Limnor
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6549809
    :titles:
      :canonical: Limnor
      :normalized: Limnor
      :display: Limnor
    :pageid: 2782804
    :lang: en
    :dir: ltr
    :revision: '973497325'
    :tid: a22c00e0-35ce-11eb-94d3-eb4b4cb76cd0
    :timestamp: '2020-08-17T15:07:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Limnor
        :revisions: https://en.wikipedia.org/wiki/Limnor?action=history
        :edit: https://en.wikipedia.org/wiki/Limnor?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Limnor
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Limnor
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Limnor
        :edit: https://en.m.wikipedia.org/wiki/Limnor?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Limnor
    :extract: Limnor is a generic-purpose codeless and visual programming system.
      The aim is to enable users to create computer software without directly coding
      in a texture programming language. It can be extended by software developers.
      The general idea of Limnor codeless programming is to add "Actions" to classes.
    :extract_html: <p><b>Limnor</b> is a generic-purpose codeless and visual programming
      system. The aim is to enable users to create computer software without directly
      coding in a texture programming language. It can be extended by software developers.
      The general idea of Limnor codeless programming is to add "Actions" to classes.</p>
  record/000b4fa3-35de-46b7-84a9-40a672ad9bcc:
    :type: standard
    :title: TTM (programming language)
    :displaytitle: TTM (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7671956
    :titles:
      :canonical: TTM_(programming_language)
      :normalized: TTM (programming language)
      :display: TTM (programming language)
    :pageid: 37939929
    :lang: en
    :dir: ltr
    :revision: '965377414'
    :tid: 4016ee90-2e78-11eb-92f0-c9d14d02bf75
    :timestamp: '2020-07-01T00:00:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TTM_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/TTM_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/TTM_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TTM_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TTM_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TTM_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/TTM_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TTM_(programming_language)
    :extract: TTM is a string oriented, general purpose macro processing programming
      language developed in 1968 by Steven Caine and E. Kent Gordon at the California
      Institute of Technology.
    :extract_html: "<p><b>TTM</b> is a string oriented, general purpose macro processing
      programming language developed in 1968 by Steven Caine and E. Kent Gordon at
      the California Institute of Technology.</p>"
  record/76d5d341-5da5-4a38-a3d0-fb839cb2c224:
    :type: standard
    :title: C++
    :displaytitle: C++
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2407
    :titles:
      :canonical: C++
      :normalized: C++
      :display: C++
    :pageid: 72038
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/285px-ISO_C%2B%2B_Logo.svg.png
      :width: 285
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/18/ISO_C%2B%2B_Logo.svg/306px-ISO_C%2B%2B_Logo.svg.png
      :width: 306
      :height: 344
    :lang: en
    :dir: ltr
    :revision: '991532356'
    :tid: e7b08a10-35c8-11eb-94d7-953687f30e8e
    :timestamp: '2020-11-30T15:33:54Z'
    :description: General-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C%2B%2B
        :revisions: https://en.wikipedia.org/wiki/C%2B%2B?action=history
        :edit: https://en.wikipedia.org/wiki/C%2B%2B?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C%2B%2B
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C%2B%2B
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C%2B%2B
        :edit: https://en.m.wikipedia.org/wiki/C%2B%2B?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C%2B%2B
    :extract: C++ is a general-purpose programming language created by Bjarne Stroustrup
      as an extension of the C programming language, or "C with Classes". The language
      has expanded significantly over time, and modern C++ now has object-oriented,
      generic, and functional features in addition to facilities for low-level memory
      manipulation. It is almost always implemented as a compiled language, and many
      vendors provide C++ compilers, including the Free Software Foundation, LLVM,
      Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.
    :extract_html: <p><b>C++</b> is a general-purpose programming language created
      by Bjarne Stroustrup as an extension of the C programming language, or "C with
      Classes". The language has expanded significantly over time, and modern C++
      now has object-oriented, generic, and functional features in addition to facilities
      for low-level memory manipulation. It is almost always implemented as a compiled
      language, and many vendors provide C++ compilers, including the Free Software
      Foundation, LLVM, Microsoft, Intel, Oracle, and IBM, so it is available on many
      platforms.</p>
  record/d10b3162-e67a-43e3-b22f-aee07573ba3d:
    :type: standard
    :title: Bc (programming language)
    :displaytitle: bc (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q300897
    :titles:
      :canonical: Bc_(programming_language)
      :normalized: Bc (programming language)
      :display: bc (programming language)
    :pageid: 646359
    :lang: en
    :dir: ltr
    :revision: '978186588'
    :tid: c0f7aca0-34c9-11eb-91fd-51b1642a1f78
    :timestamp: '2020-09-13T12:06:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Bc_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Bc_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Bc_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Bc_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Bc_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Bc_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Bc_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Bc_(programming_language)
    :extract: bc, for basic calculator, is "an arbitrary-precision calculator language"
      with syntax similar to the C programming language. bc is typically used as either
      a mathematical scripting language or as an interactive mathematical shell.
    :extract_html: <p><b>bc</b>, for <i>basic calculator</i>, is "<i>an arbitrary-precision
      calculator language</i>" with syntax similar to the C programming language.
      bc is typically used as either a mathematical scripting language or as an interactive
      mathematical shell.</p>
  record/2c114e36-d64f-4e7a-b258-7cdc9f41a537:
    :type: standard
    :title: Agora (programming language)
    :displaytitle: Agora (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4693571
    :titles:
      :canonical: Agora_(programming_language)
      :normalized: Agora (programming language)
      :display: Agora (programming language)
    :pageid: 933477
    :lang: en
    :dir: ltr
    :revision: '973328469'
    :tid: ab1b1000-dfdf-11ea-bd9f-0f26e844e393
    :timestamp: '2020-08-16T16:43:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Agora_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Agora_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Agora_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Agora_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Agora_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Agora_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Agora_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Agora_(programming_language)
    :extract: Agora is a reflective, prototype-based, object-oriented programming
      language that is based exclusively on message passing and not delegation. Agora
      was intended to show that even subject to that limit, it is possible to build
      a full object-oriented language that features inheritance, cloning and reflective
      operators.
    :extract_html: "<p><b>Agora</b> is a reflective, prototype-based, object-oriented
      programming language that is based exclusively on message passing and not delegation.
      Agora was intended to show that even subject to that limit, it is possible to
      build a full object-oriented language that features inheritance, cloning and
      reflective operators.</p>"
  record/cf802331-5c5f-4194-a958-a3759ea187e0:
    :type: standard
    :title: XMOS
    :displaytitle: XMOS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q64698
    :titles:
      :canonical: XMOS
      :normalized: XMOS
      :display: XMOS
    :pageid: 21377036
    :lang: en
    :dir: ltr
    :revision: '986938327'
    :tid: 2b2bdef0-3314-11eb-bce1-dd7a465af7ec
    :timestamp: '2020-11-03T21:31:24Z'
    :coordinates:
      :lat: 51.45527778
      :lon: -2.59258333
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XMOS
        :revisions: https://en.wikipedia.org/wiki/XMOS?action=history
        :edit: https://en.wikipedia.org/wiki/XMOS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XMOS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XMOS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XMOS
        :edit: https://en.m.wikipedia.org/wiki/XMOS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XMOS
    :extract: XMOS is a fabless semiconductor company that develops audio products
      and multicore microcontrollers.
    :extract_html: "<p><b>XMOS</b> is a fabless semiconductor company that develops
      audio products and multicore microcontrollers.</p>"
  record/40d9e6a6-8bca-45a1-8159-f741e3e3a2ae:
    :type: standard
    :title: PILOT
    :displaytitle: PILOT
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2044212
    :titles:
      :canonical: PILOT
      :normalized: PILOT
      :display: PILOT
    :pageid: 57399
    :lang: en
    :dir: ltr
    :revision: '987744804'
    :tid: 1219e6b0-221f-11eb-a4a1-cb31cb489dfb
    :timestamp: '2020-11-09T00:03:50Z'
    :description: Simple high-level programming language developed in the 1960s
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PILOT
        :revisions: https://en.wikipedia.org/wiki/PILOT?action=history
        :edit: https://en.wikipedia.org/wiki/PILOT?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PILOT
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PILOT
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PILOT
        :edit: https://en.m.wikipedia.org/wiki/PILOT?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PILOT
    :extract: |-
      Programmed Inquiry, Learning, or Teaching (PILOT) is a simple high-level programming language developed in the 1960s.
      Like its younger sibling LOGO, it was an early foray into the technology of computer-assisted instruction.
    :extract_html: |-
      <p><b>Programmed Inquiry, Learning, or Teaching</b> (<b>PILOT</b>) is a simple high-level programming language developed in the 1960s.
      Like its younger sibling LOGO, it was an early foray into the technology of computer-assisted instruction.</p>
  record/31b72676-fabf-4449-8696-500373762275:
    :type: standard
    :title: Algebraic Logic Functional programming language
    :displaytitle: Algebraic Logic Functional programming language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4723982
    :titles:
      :canonical: Algebraic_Logic_Functional_programming_language
      :normalized: Algebraic Logic Functional programming language
      :display: Algebraic Logic Functional programming language
    :pageid: 11868019
    :lang: en
    :dir: ltr
    :revision: '967656033'
    :tid: 9be25900-26c4-11eb-a40d-1755562d7f3f
    :timestamp: '2020-07-14T14:14:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language
        :revisions: https://en.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language?action=history
        :edit: https://en.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Algebraic_Logic_Functional_programming_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Algebraic_Logic_Functional_programming_language
        :edit: https://en.m.wikipedia.org/wiki/Algebraic_Logic_Functional_programming_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Algebraic_Logic_Functional_programming_language
    :extract: Algebraic Logic Functional programming language, also known as ALF,
      is a programming language which combines functional and logic programming techniques.
      Its foundation is Horn clause logic with equality which consists of predicates
      and Horn clauses for logic programming, and functions and equations for functional
      programming.
    :extract_html: "<p><b>Algebraic Logic Functional programming language</b>, also
      known as <b>ALF</b>, is a programming language which combines functional and
      logic programming techniques. Its foundation is Horn clause logic with equality
      which consists of predicates and Horn clauses for logic programming, and functions
      and equations for functional programming.</p>"
  record/a53e6f04-7b5d-4fd3-bcd0-88f4cff4449d:
    :type: standard
    :title: MIMIC
    :displaytitle: MIMIC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6716125
    :titles:
      :canonical: MIMIC
      :normalized: MIMIC
      :display: MIMIC
    :pageid: 4017688
    :lang: en
    :dir: ltr
    :revision: '971498491'
    :tid: 5ca79c10-1e99-11eb-bea8-1d14a6c46056
    :timestamp: '2020-08-06T14:25:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MIMIC
        :revisions: https://en.wikipedia.org/wiki/MIMIC?action=history
        :edit: https://en.wikipedia.org/wiki/MIMIC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MIMIC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MIMIC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MIMIC
        :edit: https://en.m.wikipedia.org/wiki/MIMIC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MIMIC
    :extract: MIMIC, known in capitalized form only, is a former simulation computer
      language developed 1964 by H. E. Petersen, F. J. Sansom and L. M. Warshawsky
      of Systems Engineering Group within the Air Force Materiel Command at the Wright-Patterson
      AFB in Dayton, Ohio, United States. It is an expression-oriented continuous
      block simulation language, but capable of incorporating blocks of FORTRAN-like
      algebra.
    :extract_html: "<p><b>MIMIC</b>, known in capitalized form only, is a former simulation
      computer language developed 1964 by H. E. Petersen, F. J. Sansom and L. M. Warshawsky
      of Systems Engineering Group within the Air Force Materiel Command at the Wright-Patterson
      AFB in Dayton, Ohio, United States. It is an expression-oriented continuous
      block simulation language, but capable of incorporating blocks of FORTRAN-like
      algebra.</p>"
  record/fd704658-811e-418d-99c3-cb116cc2d2a5:
    :type: standard
    :title: Plankalkül
    :displaytitle: Plankalkül
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q34280
    :titles:
      :canonical: Plankalkül
      :normalized: Plankalkül
      :display: Plankalkül
    :pageid: 65944
    :lang: en
    :dir: ltr
    :revision: '988939093'
    :tid: a05acdc0-3004-11eb-b626-d76c3abda360
    :timestamp: '2020-11-16T03:25:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Plankalk%C3%BCl
        :revisions: https://en.wikipedia.org/wiki/Plankalk%C3%BCl?action=history
        :edit: https://en.wikipedia.org/wiki/Plankalk%C3%BCl?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Plankalk%C3%BCl
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Plankalk%C3%BCl
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Plankalk%C3%BCl
        :edit: https://en.m.wikipedia.org/wiki/Plankalk%C3%BCl?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Plankalk%C3%BCl
    :extract: Plankalkül is a programming language designed for engineering purposes
      by Konrad Zuse between 1942 and 1945. It was the first high-level programming
      language to be designed for a computer.
    :extract_html: "<p><b>Plankalkül</b> is a programming language designed for engineering
      purposes by Konrad Zuse between 1942 and 1945. It was the first high-level programming
      language to be designed for a computer.</p>"
  record/c0e214b3-7868-4bc0-808d-8c0471a2afa0:
    :type: standard
    :title: Emerald (programming language)
    :displaytitle: Emerald (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5370400
    :titles:
      :canonical: Emerald_(programming_language)
      :normalized: Emerald (programming language)
      :display: Emerald (programming language)
    :pageid: 32529580
    :lang: en
    :dir: ltr
    :revision: '981042247'
    :tid: d373bce0-2d60-11eb-ad06-0598439f25ae
    :timestamp: '2020-09-29T22:57:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Emerald_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Emerald_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Emerald_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Emerald_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Emerald_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Emerald_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Emerald_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Emerald_(programming_language)
    :extract: Emerald is a distributed, object-oriented programming language developed
      in the 1980s by Andrew P. Black, Norman C. Hutchinson, Eric B. Jul, and Henry
      M. Levy, in the Department of Computer Science at the University of Washington.
    :extract_html: "<p><b>Emerald</b> is a distributed, object-oriented programming
      language developed in the 1980s by Andrew P. Black, Norman C. Hutchinson, Eric
      B. Jul, and Henry M. Levy, in the Department of Computer Science at the University
      of Washington.</p>"
  record/d6116011-a9de-40ea-a776-877464770f08:
    :type: standard
    :title: Executable UML
    :displaytitle: Executable UML
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5419762
    :titles:
      :canonical: Executable_UML
      :normalized: Executable UML
      :display: Executable UML
    :pageid: 4849249
    :lang: en
    :dir: ltr
    :revision: '987064927'
    :tid: 99c466d0-1ec8-11eb-a274-638b22e9c8b1
    :timestamp: '2020-11-04T18:07:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Executable_UML
        :revisions: https://en.wikipedia.org/wiki/Executable_UML?action=history
        :edit: https://en.wikipedia.org/wiki/Executable_UML?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Executable_UML
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Executable_UML
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Executable_UML
        :edit: https://en.m.wikipedia.org/wiki/Executable_UML?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Executable_UML
    :extract: 'Executable UML is both a software development method and a highly abstract
      software language. It was described for the first time in 2002 in the book "Executable
      UML: A Foundation for Model-Driven Architecture". The language "combines a subset
      of the UML graphical notation with executable semantics and timing rules." The
      Executable UML method is the successor to the Shlaer–Mellor method.'
    :extract_html: '<p><b>Executable UML</b> is both a software development method
      and a highly abstract software language. It was described for the first time
      in 2002 in the book "Executable UML: A Foundation for Model-Driven Architecture".
      The language "combines a subset of the UML graphical notation with executable
      semantics and timing rules." The Executable UML method is the successor to the
      Shlaer–Mellor method.</p>'
  record/e93c4b4e-204c-48a1-8019-6d2cb4f87a8c:
    :type: standard
    :title: UCSD Pascal
    :displaytitle: UCSD Pascal
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q176984
    :titles:
      :canonical: UCSD_Pascal
      :normalized: UCSD Pascal
      :display: UCSD Pascal
    :pageid: 31925
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/UCSD_p-System.svg/320px-UCSD_p-System.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/UCSD_p-System.svg/10000px-UCSD_p-System.svg.png
      :width: 10000
      :height: 10000
    :lang: en
    :dir: ltr
    :revision: '986653519'
    :tid: 255d1f40-1fdf-11eb-a267-272c6ec87de9
    :timestamp: '2020-11-02T05:19:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/UCSD_Pascal
        :revisions: https://en.wikipedia.org/wiki/UCSD_Pascal?action=history
        :edit: https://en.wikipedia.org/wiki/UCSD_Pascal?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:UCSD_Pascal
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/UCSD_Pascal
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/UCSD_Pascal
        :edit: https://en.m.wikipedia.org/wiki/UCSD_Pascal?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:UCSD_Pascal
    :extract: UCSD Pascal is a Pascal programming language system that runs on the
      UCSD p-System, a portable, highly machine-independent operating system. UCSD
      Pascal was first released in 1977. It was developed at the University of California,
      San Diego (UCSD).
    :extract_html: "<p><b>UCSD Pascal</b> is a Pascal programming language system
      that runs on the <b>UCSD p-System</b>, a portable, highly machine-independent
      operating system. UCSD Pascal was first released in 1977. It was developed at
      the University of California, San Diego (UCSD).</p>"
  record/409b2634-5bf8-4cf7-834c-78f46aa14e14:
    :type: standard
    :title: KiXtart
    :displaytitle: KiXtart
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1477376
    :titles:
      :canonical: KiXtart
      :normalized: KiXtart
      :display: KiXtart
    :pageid: 1370630
    :lang: en
    :dir: ltr
    :revision: '947146537'
    :tid: e054aec0-2d28-11eb-8f68-f1ea13d5558f
    :timestamp: '2020-03-24T15:53:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/KiXtart
        :revisions: https://en.wikipedia.org/wiki/KiXtart?action=history
        :edit: https://en.wikipedia.org/wiki/KiXtart?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:KiXtart
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/KiXtart
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/KiXtart
        :edit: https://en.m.wikipedia.org/wiki/KiXtart?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:KiXtart
    :extract: KiXtart is a closed source free-format scripting language for Windows.
      It is described as a logon script processor and enhanced batch scripting language
      by the official website. Its name is a portmanteau of "kick start".
    :extract_html: <p><b>KiXtart</b> is a closed source free-format scripting language
      for Windows. It is described as a logon script processor and enhanced batch
      scripting language by the official website. Its name is a portmanteau of "kick
      start".</p>
  record/b0869ba2-97bc-431f-89b2-411431f5b000:
    :type: standard
    :title: Parallax Propeller
    :displaytitle: Parallax Propeller
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2051580
    :titles:
      :canonical: Parallax_Propeller
      :normalized: Parallax Propeller
      :display: Parallax Propeller
    :pageid: 5118476
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/45/Propeller_Chip.JPG/320px-Propeller_Chip.JPG
      :width: 320
      :height: 180
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/4/45/Propeller_Chip.JPG
      :width: 1024
      :height: 576
    :lang: en
    :dir: ltr
    :revision: '990741257'
    :tid: d96c3c20-2fb4-11eb-82d6-4b1dc444801e
    :timestamp: '2020-11-26T06:58:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Parallax_Propeller
        :revisions: https://en.wikipedia.org/wiki/Parallax_Propeller?action=history
        :edit: https://en.wikipedia.org/wiki/Parallax_Propeller?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Parallax_Propeller
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Parallax_Propeller
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Parallax_Propeller
        :edit: https://en.m.wikipedia.org/wiki/Parallax_Propeller?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Parallax_Propeller
    :extract: The Parallax P8X32A Propeller is a multi-core processor parallel computer
      architecture microcontroller chip with eight 32-bit reduced instruction set
      computer (RISC) central processing unit (CPU) cores. Introduced in 2006, it
      is designed and sold by Parallax, Inc.
    :extract_html: "<p>The <b>Parallax P8X32A Propeller</b> is a multi-core processor
      parallel computer architecture microcontroller chip with eight 32-bit reduced
      instruction set computer (RISC) central processing unit (CPU) cores. Introduced
      in 2006, it is designed and sold by Parallax, Inc.</p>"
  record/24cbd285-fd34-4864-a087-e82c33c9cb0f:
    :type: standard
    :title: Model 204
    :displaytitle: Model 204
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6888180
    :titles:
      :canonical: Model_204
      :normalized: Model 204
      :display: Model 204
    :pageid: 1318381
    :lang: en
    :dir: ltr
    :revision: '952336399'
    :tid: e5ceb360-1bed-11eb-a454-9b18924491a9
    :timestamp: '2020-04-21T18:49:05Z'
    :description: Database management system for IBM mainframes
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Model_204
        :revisions: https://en.wikipedia.org/wiki/Model_204?action=history
        :edit: https://en.wikipedia.org/wiki/Model_204?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Model_204
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Model_204
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Model_204
        :edit: https://en.m.wikipedia.org/wiki/Model_204?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Model_204
    :extract: Model 204 (M204) is a database management system for IBM and compatible
      mainframe computers developed and commercialized by Computer Corporation of
      America. It was announced in 1965, and first deployed in 1972. It incorporates
      a programming language and an environment for application development. Implemented
      in assembly language for IBM System/360 and its successors, M204 can deal with
      very large databases and transaction loads of 1000 TPS.
    :extract_html: "<p><b>Model 204</b> (<b>M204</b>) is a database management system
      for IBM and compatible mainframe computers developed and commercialized by Computer
      Corporation of America. It was announced in 1965, and first deployed in 1972.
      It incorporates a programming language and an environment for application development.
      Implemented in assembly language for IBM System/360 and its successors, M204
      can deal with very large databases and transaction loads of 1000 TPS.</p>"
  record/b0782909-fadf-47f1-aff0-418c112e1d2f:
    :type: standard
    :title: NekoVM
    :displaytitle: NekoVM
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3337877
    :titles:
      :canonical: NekoVM
      :normalized: NekoVM
      :display: NekoVM
    :pageid: 15110419
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/3/32/NekoLogo.png
      :width: 83
      :height: 85
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/3/32/NekoLogo.png
      :width: 83
      :height: 85
    :lang: en
    :dir: ltr
    :revision: '991498444'
    :tid: a5f9efe0-32fc-11eb-b5b6-37e38594d944
    :timestamp: '2020-11-30T11:10:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NekoVM
        :revisions: https://en.wikipedia.org/wiki/NekoVM?action=history
        :edit: https://en.wikipedia.org/wiki/NekoVM?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NekoVM
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NekoVM
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NekoVM
        :edit: https://en.m.wikipedia.org/wiki/NekoVM?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NekoVM
    :extract: 'NekoVM is a virtual machine developed by Nicolas Cannasse as part of
      research and development (R&D) efforts at two indie video game firms in Bordeaux,
      France: first at Motion Twin and then at Shiro Games. NekoVM''s native language
      is the bytecode for a high-level dynamically typed programming language called
      Neko. This pairing allows Neko to be used directly as an embedded scripting
      language or to target NekoVM by compiling some other language to NekoVM bytecode.'
    :extract_html: "<p><b>NekoVM</b> is a virtual machine developed by Nicolas Cannasse
      as part of research and development (R&amp;D) efforts at two indie video game
      firms in Bordeaux, France: first at Motion Twin and then at Shiro Games. NekoVM's
      native language is the bytecode for a high-level dynamically typed programming
      language called <b>Neko</b>. This pairing allows Neko to be used directly as
      an embedded scripting language or to target NekoVM by compiling some other language
      to NekoVM bytecode.</p>"
  record/027fd86c-ff7b-4373-aaff-935746c44d36:
    :type: standard
    :title: Singularity (operating system)
    :displaytitle: Singularity (operating system)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q604792
    :titles:
      :canonical: Singularity_(operating_system)
      :normalized: Singularity (operating system)
      :display: Singularity (operating system)
    :pageid: 2049655
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/12/Singularity_v1.png/320px-Singularity_v1.png
      :width: 320
      :height: 200
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/12/Singularity_v1.png
      :width: 640
      :height: 400
    :lang: en
    :dir: ltr
    :revision: '939207089'
    :tid: 930d52a0-3356-11eb-9014-934f80807e94
    :timestamp: '2020-02-05T00:57:38Z'
    :description: experimental operating system from Microsoft Research
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Singularity_(operating_system)
        :revisions: https://en.wikipedia.org/wiki/Singularity_(operating_system)?action=history
        :edit: https://en.wikipedia.org/wiki/Singularity_(operating_system)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Singularity_(operating_system)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Singularity_(operating_system)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Singularity_(operating_system)
        :edit: https://en.m.wikipedia.org/wiki/Singularity_(operating_system)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Singularity_(operating_system)
    :extract: Singularity is an experimental operating system (OS) which was built
      by Microsoft Research between 2003 and 2010. It was designed as a high dependability
      OS in which the kernel, device drivers, and application software were all written
      in managed code. Internal security uses type safety instead of hardware memory
      protection.
    :extract_html: "<p><b>Singularity</b> is an experimental operating system (OS)
      which was built by Microsoft Research between 2003 and 2010. It was designed
      as a high dependability OS in which the kernel, device drivers, and application
      software were all written in managed code. Internal security uses type safety
      instead of hardware memory protection.</p>"
  record/44cd27d4-ba56-4811-8565-001a0bddbf1f:
    :type: standard
    :title: Actor (programming language)
    :displaytitle: Actor (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4677713
    :titles:
      :canonical: Actor_(programming_language)
      :normalized: Actor (programming language)
      :display: Actor (programming language)
    :pageid: 26849115
    :lang: en
    :dir: ltr
    :revision: '981691347'
    :tid: 3f059f60-1bd1-11eb-be69-4555f927d72b
    :timestamp: '2020-10-03T21:27:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Actor_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Actor_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Actor_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Actor_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Actor_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Actor_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Actor_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Actor_(programming_language)
    :extract: The Actor programming language was invented by Charles Duff of The Whitewater
      Group in 1988. It was an offshoot of some object-oriented extensions to the
      Forth language he had been working on.
    :extract_html: "<p>The <b>Actor</b> programming language was invented by Charles
      Duff of The Whitewater Group in 1988. It was an offshoot of some object-oriented
      extensions to the Forth language he had been working on.</p>"
  record/d24b9c3d-27f8-4e5c-9056-b9e322718db0:
    :type: standard
    :title: SabreTalk
    :displaytitle: SabreTalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2210114
    :titles:
      :canonical: SabreTalk
      :normalized: SabreTalk
      :display: SabreTalk
    :pageid: 531030
    :lang: en
    :dir: ltr
    :revision: '961970330'
    :tid: 0a861dd0-0cce-11eb-9be6-35040f9b873d
    :timestamp: '2020-06-11T11:09:50Z'
    :description: discontinued dialect of PL/I for the S/360 IBM mainframes running
      the TPF platform
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SabreTalk
        :revisions: https://en.wikipedia.org/wiki/SabreTalk?action=history
        :edit: https://en.wikipedia.org/wiki/SabreTalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SabreTalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SabreTalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SabreTalk
        :edit: https://en.m.wikipedia.org/wiki/SabreTalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SabreTalk
    :extract: SabreTalk is a discontinued dialect of PL/I for the S/360 IBM mainframes
      running the TPF platform. SabreTalk was developed jointly by American Airlines,
      Eastern Air Lines and IBM. SabreTalk is known as PL/TPF.
    :extract_html: "<p><b>SabreTalk</b> is a discontinued dialect of PL/I for the
      S/360 IBM mainframes running the TPF platform. SabreTalk was developed jointly
      by American Airlines, Eastern Air Lines and IBM. SabreTalk is known as PL/TPF.</p>"
  record/23fbcdc3-0734-41d0-8464-de51334a626c:
    :type: standard
    :title: SOPHAEROS
    :displaytitle: SOPHAEROS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7562827
    :titles:
      :canonical: SOPHAEROS
      :normalized: SOPHAEROS
      :display: SOPHAEROS
    :pageid: 6400247
    :lang: en
    :dir: ltr
    :revision: '816062421'
    :tid: f036f040-35e4-11eb-add7-fb84d25dc7f8
    :timestamp: '2017-12-19T00:37:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SOPHAEROS
        :revisions: https://en.wikipedia.org/wiki/SOPHAEROS?action=history
        :edit: https://en.wikipedia.org/wiki/SOPHAEROS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SOPHAEROS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SOPHAEROS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SOPHAEROS
        :edit: https://en.m.wikipedia.org/wiki/SOPHAEROS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SOPHAEROS
    :extract: SOPHAEROS is a computer code, used by the AECL and French Nuclear program
      to simulate the transfer of fission products in the reactor chamber. It models
      fission product behaviour using a set of aerosol dynamic rules, and is used
      by AECL in fuel channel safety analyses.
    :extract_html: "<p><b>SOPHAEROS</b> is a computer code, used by the AECL and French
      Nuclear program to simulate the transfer of fission products in the reactor
      chamber. It models fission product behaviour using a set of aerosol dynamic
      rules, and is used by AECL in fuel channel safety analyses.</p>"
  record/d4bb4994-3e48-4e62-bddc-bb910d08fbdc:
    :type: standard
    :title: CLIPS
    :displaytitle: CLIPS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q165372
    :titles:
      :canonical: CLIPS
      :normalized: CLIPS
      :display: CLIPS
    :pageid: 418603
    :lang: en
    :dir: ltr
    :revision: '956131465'
    :tid: de4043a0-1ad2-11eb-958e-e198b0c22e87
    :timestamp: '2020-05-11T17:30:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CLIPS
        :revisions: https://en.wikipedia.org/wiki/CLIPS?action=history
        :edit: https://en.wikipedia.org/wiki/CLIPS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CLIPS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CLIPS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CLIPS
        :edit: https://en.m.wikipedia.org/wiki/CLIPS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CLIPS
    :extract: CLIPS is a public domain software tool for building expert systems.
      The name is an acronym for "C Language Integrated Production System." The syntax
      and name was inspired by Charles Forgy's OPS5. The first versions of CLIPS were
      developed starting in 1985 at NASA-Johnson Space Center until the mid-1990s
      when the development group's responsibilities ceased to focus on expert system
      technology. The original name of the project was NASA's AI Language (NAIL).
    :extract_html: <p><b>CLIPS</b> is a public domain software tool for building expert
      systems. The name is an acronym for "C Language Integrated Production System."
      The syntax and name was inspired by Charles Forgy's OPS5. The first versions
      of CLIPS were developed starting in 1985 at NASA-Johnson Space Center until
      the mid-1990s when the development group's responsibilities ceased to focus
      on expert system technology. The original name of the project was <i>NASA's
      AI Language</i> (<i>NAIL</i>).</p>
  record/10268038-3bf5-4927-8e1b-bc13119892c9:
    :type: standard
    :title: Sawzall (programming language)
    :displaytitle: Sawzall (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q970424
    :titles:
      :canonical: Sawzall_(programming_language)
      :normalized: Sawzall (programming language)
      :display: Sawzall (programming language)
    :pageid: 12640293
    :lang: en
    :dir: ltr
    :revision: '974582842'
    :tid: 559a1590-2715-11eb-808e-e519c90460c1
    :timestamp: '2020-08-23T20:26:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Sawzall_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Sawzall_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Sawzall_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Sawzall_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Sawzall_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Sawzall_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Sawzall_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Sawzall_(programming_language)
    :extract: Sawzall is a procedural domain-specific programming language, used by
      Google to process large numbers of individual log records. Sawzall was first
      described in 2003, and the szl runtime was open-sourced in August 2010. However,
      since the MapReduce table aggregators have not been released, the open-sourced
      runtime is not useful for large-scale data analysis of multiple log files off
      the shelf. Sawzall has been replaced by Lingo for most purposes within Google.
    :extract_html: "<p><b>Sawzall</b> is a procedural domain-specific programming
      language, used by Google to process large numbers of individual log records.
      Sawzall was first described in 2003, and the szl runtime was open-sourced in
      August 2010. However, since the MapReduce table aggregators have not been released,
      the open-sourced runtime is not useful for large-scale data analysis of multiple
      log files off the shelf. Sawzall has been replaced by Lingo for most purposes
      within Google.</p>"
  record/ffbd5170-c99d-41d1-ad3a-9c6da11e1252:
    :type: no-extract
    :title: Groovy (programming language)
    :displaytitle: Groovy (programming language)
    :namespace:
      :id: 0
      :text: ''
    :titles:
      :canonical: Groovy_(programming_language)
      :normalized: Groovy (programming language)
      :display: Groovy (programming language)
    :pageid: 57417762
    :lang: en
    :dir: ltr
    :revision: '989739168'
    :tid: 856bfc30-2b65-11eb-9bc4-358b68c97e12
    :timestamp: '2020-11-20T19:20:50Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Groovy_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Groovy_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Groovy_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Groovy_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Groovy_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Groovy_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Groovy_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Groovy_(programming_language)
    :extract: ''
    :extract_html: ''
  record/1595a855-8ee0-4b14-93b7-768f72f3255b:
    :type: standard
    :title: Dart (programming language)
    :displaytitle: Dart (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q406009
    :titles:
      :canonical: Dart_(programming_language)
      :normalized: Dart (programming language)
      :display: Dart (programming language)
    :pageid: 33033735
    :lang: en
    :dir: ltr
    :revision: '991490711'
    :tid: ba02b9a0-32f1-11eb-969d-ffc0c265cdab
    :timestamp: '2020-11-30T09:52:08Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Dart_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Dart_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Dart_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Dart_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Dart_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Dart_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Dart_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Dart_(programming_language)
    :extract: Dart is a client-optimized programming language for apps on multiple
      platforms. It is developed by Google and is used to build mobile, desktop, server,
      and web applications.
    :extract_html: "<p><b>Dart</b> is a client-optimized programming language for
      apps on multiple platforms. It is developed by Google and is used to build mobile,
      desktop, server, and web applications.</p>"
  record/020ae998-bbaf-46eb-9177-ba17be45fafe:
    :type: standard
    :title: MOO (programming language)
    :displaytitle: MOO (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6717087
    :titles:
      :canonical: MOO_(programming_language)
      :normalized: MOO (programming language)
      :display: MOO (programming language)
    :pageid: 20178
    :lang: en
    :dir: ltr
    :revision: '978918012'
    :tid: 204b9e20-1a29-11eb-9b38-9d83e4bff7f2
    :timestamp: '2020-09-17T18:23:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MOO_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/MOO_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/MOO_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MOO_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MOO_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MOO_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/MOO_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MOO_(programming_language)
    :extract: The MOO programming language is a relatively simple programming language
      used to support the MOO Server. It is dynamically typed and uses a prototype-based
      object-oriented system, with syntax roughly derived from the Ada school of programming
      languages.
    :extract_html: "<p>The <b>MOO programming language</b> is a relatively simple
      programming language used to support the MOO Server. It is dynamically typed
      and uses a prototype-based object-oriented system, with syntax roughly derived
      from the Ada school of programming languages.</p>"
  record/6dc3e7b8-7e2a-4ec7-bc82-b2e26339a2eb:
    :type: standard
    :title: Bertrand (programming language)
    :displaytitle: Bertrand (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4895846
    :titles:
      :canonical: Bertrand_(programming_language)
      :normalized: Bertrand (programming language)
      :display: Bertrand (programming language)
    :pageid: 21119400
    :lang: en
    :dir: ltr
    :revision: '796852896'
    :tid: 52bb2500-361d-11eb-999f-ed857e210fd7
    :timestamp: '2017-08-23T12:47:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Bertrand_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Bertrand_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Bertrand_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Bertrand_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Bertrand_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Bertrand_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Bertrand_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Bertrand_(programming_language)
    :extract: Bertrand is a computer programming language for creating constraint
      programming systems. The language was created by Wm Leler in the mid-1980s as
      part of his doctoral research. Bertrand has a declarative programming syntax
      and differentiates itself from other programming languages by use of a technique
      called augmented term rewriting.
    :extract_html: "<p><b>Bertrand</b> is a computer programming language for creating
      constraint programming systems. The language was created by Wm Leler in the
      mid-1980s as part of his doctoral research. Bertrand has a declarative programming
      syntax and differentiates itself from other programming languages by use of
      a technique called augmented term rewriting.</p>"
  record/397820d9-1620-4dc4-80d1-12768737ec92:
    :type: standard
    :title: Pizza (programming language)
    :displaytitle: Pizza (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q10350148
    :titles:
      :canonical: Pizza_(programming_language)
      :normalized: Pizza (programming language)
      :display: Pizza (programming language)
    :pageid: 509700
    :lang: en
    :dir: ltr
    :revision: '987558055'
    :tid: 3b367810-2139-11eb-9aba-e9895d28bc0b
    :timestamp: '2020-11-07T20:38:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pizza_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pizza_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pizza_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pizza_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pizza_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pizza_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pizza_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pizza_(programming_language)
    :extract: Pizza is an open-source superset of Java 1.4, prior to the introduction
      of generics for the Java programming language. In addition to its own solution
      for adding generics to the language, Pizza also added function pointers and
      algebraic types with case classes and pattern matching.
    :extract_html: "<p><b>Pizza</b> is an open-source superset of Java 1.4, prior
      to the introduction of generics for the Java programming language. In addition
      to its own solution for adding generics to the language, Pizza also added function
      pointers and algebraic types with case classes and pattern matching.</p>"
  record/288c815b-f880-44e1-bd5c-0636d0fc2acb:
    :type: standard
    :title: SiMPLE
    :displaytitle: SiMPLE
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7506340
    :titles:
      :canonical: SiMPLE
      :normalized: SiMPLE
      :display: SiMPLE
    :pageid: 39282074
    :lang: en
    :dir: ltr
    :revision: '960335479'
    :tid: 2ecd6380-1d7a-11eb-8fe0-fbff459b8539
    :timestamp: '2020-06-02T11:16:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SiMPLE
        :revisions: https://en.wikipedia.org/wiki/SiMPLE?action=history
        :edit: https://en.wikipedia.org/wiki/SiMPLE?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SiMPLE
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SiMPLE
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SiMPLE
        :edit: https://en.m.wikipedia.org/wiki/SiMPLE?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SiMPLE
    :extract: SiMPLE is a programming development system that was created to provide
      easy programming capabilities for everybody, especially non-professionals.
    :extract_html: "<p><b>SiMPLE</b> is a programming development system that was
      created to provide easy programming capabilities for everybody, especially non-professionals.</p>"
  record/cbacc989-b519-4469-9b63-d9d40c4e8df3:
    :type: standard
    :title: TUTOR
    :displaytitle: TUTOR
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7672049
    :titles:
      :canonical: TUTOR
      :normalized: TUTOR
      :display: TUTOR
    :pageid: 3281107
    :lang: en
    :dir: ltr
    :revision: '977042392'
    :tid: c46b70d0-17e4-11eb-bb47-6daaf0c58021
    :timestamp: '2020-09-06T15:56:41Z'
    :description: programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TUTOR
        :revisions: https://en.wikipedia.org/wiki/TUTOR?action=history
        :edit: https://en.wikipedia.org/wiki/TUTOR?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TUTOR
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TUTOR
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TUTOR
        :edit: https://en.m.wikipedia.org/wiki/TUTOR?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TUTOR
    :extract: TUTOR, also known as PLATO Author Language, is a programming language
      developed for use on the PLATO system at the University of Illinois at Urbana-Champaign
      beginning in roughly 1965. TUTOR was initially designed by Paul Tenczar for
      use in computer assisted instruction (CAI) and computer managed instruction
      (CMI) and has many features for that purpose. For example, TUTOR has powerful
      answer-parsing and answer-judging commands, graphics, and features to simplify
      handling student records and statistics by instructors. TUTOR's flexibility,
      in combination with PLATO's computational power, also made it suitable for the
      creation of games — including flight simulators, war games, dungeon style multiplayer
      role-playing games, card games, word games, and medical lesson games such as
      Bugs and Drugs (BND). TUTOR lives on today as the programming language for the
      Cyber1 PLATO System, which runs most of the source code from 1980s PLATO and
      has roughly 5000 users as of June 2020.
    :extract_html: "<p><b>TUTOR</b>, also known as <b>PLATO Author Language</b>, is
      a programming language developed for use on the PLATO system at the University
      of Illinois at Urbana-Champaign beginning in roughly 1965. TUTOR was initially
      designed by Paul Tenczar for use in computer assisted instruction (CAI) and
      computer managed instruction (CMI) and has many features for that purpose. For
      example, TUTOR has powerful answer-parsing and answer-judging commands, graphics,
      and features to simplify handling student records and statistics by instructors.
      TUTOR's flexibility, in combination with PLATO's computational power, also made
      it suitable for the creation of games — including flight simulators, war games,
      dungeon style multiplayer role-playing games, card games, word games, and medical
      lesson games such as <i>Bugs and Drugs</i> (<i>BND</i>). TUTOR lives on today
      as the programming language for the Cyber1 PLATO System, which runs most of
      the source code from 1980s PLATO and has roughly 5000 users as of June 2020.</p>"
  record/350de3b6-f1fc-4577-8f4e-680dcbd3eb30:
    :type: standard
    :title: Salesforce
    :displaytitle: Salesforce
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q941127
    :titles:
      :canonical: Salesforce
      :normalized: Salesforce
      :display: Salesforce
    :pageid: 2420207
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/8/83/Salesforce_logo.svg/320px-Salesforce_logo.svg.png
      :width: 320
      :height: 224
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/8/83/Salesforce_logo.svg/273px-Salesforce_logo.svg.png
      :width: 273
      :height: 191
    :lang: en
    :dir: ltr
    :revision: '992227645'
    :tid: 55aea3a0-35ea-11eb-b82c-73c5714045c3
    :timestamp: '2020-12-04T04:36:47Z'
    :description: American software company
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Salesforce
        :revisions: https://en.wikipedia.org/wiki/Salesforce?action=history
        :edit: https://en.wikipedia.org/wiki/Salesforce?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Salesforce
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Salesforce
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Salesforce
        :edit: https://en.m.wikipedia.org/wiki/Salesforce?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Salesforce
    :extract: Salesforce.com, Inc. is an American cloud-based software company headquartered
      in San Francisco, California. It provides customer relationship management (CRM)
      service and also sells a complementary suite of enterprise applications focused
      on customer service, marketing automation, analytics, and application development.
    :extract_html: "<p><b>Salesforce.com, Inc.</b> is an American cloud-based software
      company headquartered in San Francisco, California. It provides customer relationship
      management (CRM) service and also sells a complementary suite of enterprise
      applications focused on customer service, marketing automation, analytics, and
      application development.</p>"
  record/3ea40533-6e14-4ad0-aaf9-aa7ca9eba379:
    :type: standard
    :title: Raku (programming language)
    :displaytitle: Raku (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2052676
    :titles:
      :canonical: Raku_(programming_language)
      :normalized: Raku (programming language)
      :display: Raku (programming language)
    :pageid: 1146638
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Camelia.svg/320px-Camelia.svg.png
      :width: 320
      :height: 234
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/85/Camelia.svg/948px-Camelia.svg.png
      :width: 948
      :height: 693
    :lang: en
    :dir: ltr
    :revision: '985273096'
    :tid: 5ab44fe0-3387-11eb-b36e-fd96e168aed6
    :timestamp: '2020-10-25T00:42:55Z'
    :description: Programming language derived from Perl
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Raku_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Raku_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Raku_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Raku_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Raku_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Raku_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Raku_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Raku_(programming_language)
    :extract: Raku is a member of the Perl family of programming languages. Formerly
      known as Perl 6, it was renamed in October 2019. Raku introduces elements of
      many modern and historical languages. Compatibility with Perl was not a goal,
      though a compatibility mode is part of the specification. The design process
      for Raku began in 2000.
    :extract_html: "<p><b>Raku</b> is a member of the Perl family of programming languages.
      Formerly known as <b>Perl 6</b>, it was renamed in October 2019. Raku introduces
      elements of many modern and historical languages. Compatibility with Perl was
      not a goal, though a compatibility mode is part of the specification. The design
      process for Raku began in 2000.</p>"
  record/7d61b94d-b6fa-48f3-888d-7ee993e430e0:
    :type: standard
    :title: FreeBASIC
    :displaytitle: FreeBASIC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q195929
    :titles:
      :canonical: FreeBASIC
      :normalized: FreeBASIC
      :display: FreeBASIC
    :pageid: 1443566
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6d/Fblogo.gif
      :width: 200
      :height: 100
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6d/Fblogo.gif
      :width: 200
      :height: 100
    :lang: en
    :dir: ltr
    :revision: '988620635'
    :tid: 9dcf9890-264c-11eb-b9db-b311bbc8187a
    :timestamp: '2020-11-14T07:40:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FreeBASIC
        :revisions: https://en.wikipedia.org/wiki/FreeBASIC?action=history
        :edit: https://en.wikipedia.org/wiki/FreeBASIC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FreeBASIC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FreeBASIC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FreeBASIC
        :edit: https://en.m.wikipedia.org/wiki/FreeBASIC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FreeBASIC
    :extract: FreeBASIC is a multiplatform, free/open source (GPL) BASIC programming
      language and compiler for Microsoft Windows, protected-mode MS-DOS, Linux, FreeBSD
      and Xbox. The Xbox version is no longer maintained.
    :extract_html: "<p><b>FreeBASIC</b> is a multiplatform, free/open source (GPL)
      BASIC programming language and compiler for Microsoft Windows, protected-mode
      MS-DOS, Linux, FreeBSD and Xbox. The Xbox version is no longer maintained.</p>"
  record/9bd22c6e-5c74-49d5-bbc3-3edbc116a171:
    :type: standard
    :title: Halide (programming language)
    :displaytitle: Halide (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17020459
    :titles:
      :canonical: Halide_(programming_language)
      :normalized: Halide (programming language)
      :display: Halide (programming language)
    :pageid: 40586943
    :lang: en
    :dir: ltr
    :revision: '988562026'
    :tid: d0b863e0-2601-11eb-bc55-43352df6f5ff
    :timestamp: '2020-11-13T22:44:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Halide_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Halide_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Halide_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Halide_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Halide_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Halide_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Halide_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Halide_(programming_language)
    :extract: Halide is a computer programming language designed for writing digital
      image processing code that takes advantage of memory locality, vectorized computation
      and multi-core CPUs and GPUs. Halide is implemented as an internal domain-specific
      language (DSL) in C++.
    :extract_html: "<p><b>Halide</b> is a computer programming language designed for
      writing digital image processing code that takes advantage of memory locality,
      vectorized computation and multi-core CPUs and GPUs. Halide is implemented as
      an internal domain-specific language (DSL) in C++.</p>"
  record/740fcc48-9c4d-4ca9-948d-02a845ba39b8:
    :type: standard
    :title: XQuery
    :displaytitle: XQuery
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q850661
    :titles:
      :canonical: XQuery
      :normalized: XQuery
      :display: XQuery
    :pageid: 23742879
    :lang: en
    :dir: ltr
    :revision: '978132893'
    :tid: 7c6cfc30-33b0-11eb-8a96-5dad3f8dbdee
    :timestamp: '2020-09-13T03:04:12Z'
    :description: Functional programming and query language for XML
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XQuery
        :revisions: https://en.wikipedia.org/wiki/XQuery?action=history
        :edit: https://en.wikipedia.org/wiki/XQuery?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XQuery
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XQuery
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XQuery
        :edit: https://en.m.wikipedia.org/wiki/XQuery?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XQuery
    :extract: XQuery is a query and functional programming language that queries and
      transforms collections of structured and unstructured data, usually in the form
      of XML, text and with vendor-specific extensions for other data formats. The
      language is developed by the XML Query working group of the W3C. The work is
      closely coordinated with the development of XSLT by the XSL Working Group; the
      two groups share responsibility for XPath, which is a subset of XQuery.
    :extract_html: "<p><b>XQuery</b> is a query and functional programming language
      that queries and transforms collections of structured and unstructured data,
      usually in the form of XML, text and with vendor-specific extensions for other
      data formats. The language is developed by the XML Query working group of the
      W3C. The work is closely coordinated with the development of XSLT by the XSL
      Working Group; the two groups share responsibility for XPath, which is a subset
      of XQuery.</p>"
  record/2885c931-0e20-4380-898d-657c819e82c8:
    :type: standard
    :title: PROMAL
    :displaytitle: PROMAL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7120399
    :titles:
      :canonical: PROMAL
      :normalized: PROMAL
      :display: PROMAL
    :pageid: 1064169
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/2/2d/PROMAL_logo.png
      :width: 307
      :height: 284
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/2/2d/PROMAL_logo.png
      :width: 307
      :height: 284
    :lang: en
    :dir: ltr
    :revision: '901256766'
    :tid: 8c192b10-20f8-11eb-9e31-f3740d931939
    :timestamp: '2019-06-10T17:47:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PROMAL
        :revisions: https://en.wikipedia.org/wiki/PROMAL?action=history
        :edit: https://en.wikipedia.org/wiki/PROMAL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PROMAL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PROMAL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PROMAL
        :edit: https://en.m.wikipedia.org/wiki/PROMAL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PROMAL
    :extract: PROMAL is a structured programming language from Systems Management
      Associates for MS-DOS, Commodore 64, and Apple II. PROMAL features simple syntax,
      no line numbers, long variable names, functions and procedures with argument
      passing, real number type, arrays, strings, pointer, and a built-in I/O library.
      Like ABC and Python, indentation is part of the language syntax.
    :extract_html: "<p><b>PROMAL</b> is a structured programming language from Systems
      Management Associates for MS-DOS, Commodore 64, and Apple II. PROMAL features
      simple syntax, no line numbers, long variable names, functions and procedures
      with argument passing, real number type, arrays, strings, pointer, and a built-in
      I/O library. Like ABC and Python, indentation is part of the language syntax.</p>"
  record/01f35e69-b8ee-4268-9c73-5549bd58e89f:
    :type: standard
    :title: A Sharp (.NET)
    :displaytitle: A Sharp (.NET)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1049708
    :titles:
      :canonical: A_Sharp_(.NET)
      :normalized: A Sharp (.NET)
      :display: A Sharp (.NET)
    :pageid: 2994340
    :lang: en
    :dir: ltr
    :revision: '932297712'
    :tid: 29eeeb00-34e9-11eb-a0a9-5174177b6043
    :timestamp: '2019-12-24T20:52:26Z'
    :description: Programming language port
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/A_Sharp_(.NET)
        :revisions: https://en.wikipedia.org/wiki/A_Sharp_(.NET)?action=history
        :edit: https://en.wikipedia.org/wiki/A_Sharp_(.NET)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:A_Sharp_(.NET)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/A_Sharp_(.NET)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/A_Sharp_(.NET)
        :edit: https://en.m.wikipedia.org/wiki/A_Sharp_(.NET)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:A_Sharp_(.NET)
    :extract: A# is a port of the Ada programming language to the Microsoft .NET platform.
      A# is freely distributed by the Department of Computer Science at the United
      States Air Force Academy as a service to the Ada community under the terms of
      the GNU General Public License.
    :extract_html: "<p><b>A#</b> is a port of the Ada programming language to the
      Microsoft .NET platform. A# is freely distributed by the Department of Computer
      Science at the United States Air Force Academy as a service to the Ada community
      under the terms of the GNU General Public License.</p>"
  record/b1a017e2-7986-4918-8b46-718cf8a12dae:
    :type: standard
    :title: AdvPL
    :displaytitle: AdvPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q9555609
    :titles:
      :canonical: AdvPL
      :normalized: AdvPL
      :display: AdvPL
    :pageid: 41077376
    :lang: en
    :dir: ltr
    :revision: '986579879'
    :tid: faac0470-2f18-11eb-8e7a-e5f96f347203
    :timestamp: '2020-11-01T19:00:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AdvPL
        :revisions: https://en.wikipedia.org/wiki/AdvPL?action=history
        :edit: https://en.wikipedia.org/wiki/AdvPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AdvPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AdvPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AdvPL
        :edit: https://en.m.wikipedia.org/wiki/AdvPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AdvPL
    :extract: "AdvPL is a proprietary programming language based on xBase. It was
      released in 1999 and is used for development of applications in the \nERP Protheus
      made by TOTVS."
    :extract_html: "<p><b>AdvPL</b> is a proprietary programming language based on
      xBase. It was released in 1999 and is used for development of applications in
      the \nERP Protheus made by TOTVS.</p>"
  record/7e080112-a1bb-4420-b254-d2028193bbca:
    :type: standard
    :title: Self (programming language)
    :displaytitle: Self (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1864529
    :titles:
      :canonical: Self_(programming_language)
      :normalized: Self (programming language)
      :display: Self (programming language)
    :pageid: 60265
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Self-logo.svg/320px-Self-logo.svg.png
      :width: 320
      :height: 131
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/Self-logo.svg/467px-Self-logo.svg.png
      :width: 467
      :height: 191
    :lang: en
    :dir: ltr
    :revision: '974465597'
    :tid: d8b48360-1fe6-11eb-a4a1-cb31cb489dfb
    :timestamp: '2020-08-23T06:31:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Self_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Self_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Self_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Self_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Self_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Self_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Self_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Self_(programming_language)
    :extract: 'Self is an object-oriented programming language based on the concept
      of prototypes. Self began as a dialect of Smalltalk, being dynamically typed
      and using just-in-time compilation (JIT) as well as the prototype-based approach
      to objects: it was first used as an experimental test system for language design
      in the 1980s and 1990s. In 2006, Self was still being developed as part of the
      Klein project, which was a Self virtual machine written fully in Self. The latest
      version is 2017.1 released in May 2017.'
    :extract_html: "<p><b>Self</b> is an object-oriented programming language based
      on the concept of <i>prototypes</i>. Self began as a dialect of Smalltalk, being
      dynamically typed and using just-in-time compilation (JIT) as well as the prototype-based
      approach to objects: it was first used as an experimental test system for language
      design in the 1980s and 1990s. In 2006, Self was still being developed as part
      of the Klein project, which was a Self virtual machine written fully in Self.
      The latest version is 2017.1 released in May 2017.</p>"
  record/eaf7c05e-fe38-47aa-81ca-729f806ac323:
    :type: standard
    :title: ABAP
    :displaytitle: ABAP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q380523
    :titles:
      :canonical: ABAP
      :normalized: ABAP
      :display: ABAP
    :pageid: 271832
    :lang: en
    :dir: ltr
    :revision: '988040836'
    :tid: 0ab58b20-35b3-11eb-92fb-17ab4b5c3953
    :timestamp: '2020-11-10T18:17:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ABAP
        :revisions: https://en.wikipedia.org/wiki/ABAP?action=history
        :edit: https://en.wikipedia.org/wiki/ABAP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ABAP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ABAP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ABAP
        :edit: https://en.m.wikipedia.org/wiki/ABAP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ABAP
    :extract: ABAP is a high-level programming language created by the German software
      company SAP SE. It is extracted from the base computing languages Java, C, C++
      and Python. It is currently positioned, alongside Java, as the language for
      programming the SAP NetWeaver Application Server, which is part of the SAP NetWeaver
      platform for building business applications.
    :extract_html: "<p><b>ABAP</b> is a high-level programming language created by
      the German software company SAP SE. It is extracted from the base computing
      languages Java, C, C++ and Python. It is currently positioned, alongside Java,
      as the language for programming the SAP NetWeaver Application Server, which
      is part of the SAP NetWeaver platform for building business applications.</p>"
  record/2486998e-178c-4879-9094-abd3bf7a57a5:
    :type: standard
    :title: Smalltalk
    :displaytitle: Smalltalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q235086
    :titles:
      :canonical: Smalltalk
      :normalized: Smalltalk
      :display: Smalltalk
    :pageid: 28319
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c0/Smalltalk80book.jpg
      :width: 182
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c0/Smalltalk80book.jpg
      :width: 182
      :height: 240
    :lang: en
    :dir: ltr
    :revision: '989788432'
    :tid: 9e327270-2e36-11eb-b549-4f7c064412d0
    :timestamp: '2020-11-21T01:08:46Z'
    :description: Object-oriented programming language first released in 1972
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Smalltalk
        :revisions: https://en.wikipedia.org/wiki/Smalltalk?action=history
        :edit: https://en.wikipedia.org/wiki/Smalltalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Smalltalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Smalltalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Smalltalk
        :edit: https://en.m.wikipedia.org/wiki/Smalltalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Smalltalk
    :extract: Smalltalk is an object-oriented, dynamically typed reflective programming
      language. Smalltalk was created as the language underpinning the "new world"
      of computing exemplified by "human–computer symbiosis". It was designed and
      created in part for educational use, specifically for constructionist learning,
      at the Learning Research Group (LRG) of Xerox PARC by Alan Kay, Dan Ingalls,
      Adele Goldberg, Ted Kaehler, Diana Merry, Scott Wallace, and others during the
      1970s.
    :extract_html: <p><b>Smalltalk</b> is an object-oriented, dynamically typed reflective
      programming language. Smalltalk was created as the language underpinning the
      "new world" of computing exemplified by "human–computer symbiosis". It was designed
      and created in part for educational use, specifically for constructionist learning,
      at the Learning Research Group (LRG) of Xerox PARC by Alan Kay, Dan Ingalls,
      Adele Goldberg, Ted Kaehler, Diana Merry, Scott Wallace, and others during the
      1970s.</p>
  record/4243ef3e-edee-4e47-99ea-fe09d6073c42:
    :type: standard
    :title: Machine code
    :displaytitle: Machine code
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q55813
    :titles:
      :canonical: Machine_code
      :normalized: Machine code
      :display: Machine code
    :pageid: 20683
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c0/W65C816S_Machine_Code_Monitor.jpeg/320px-W65C816S_Machine_Code_Monitor.jpeg
      :width: 320
      :height: 255
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/c/c0/W65C816S_Machine_Code_Monitor.jpeg
      :width: 1368
      :height: 1089
    :lang: en
    :dir: ltr
    :revision: '990983639'
    :tid: 67dfc090-3194-11eb-8169-d59f62b0c97d
    :timestamp: '2020-11-27T17:11:58Z'
    :description: Set of instructions executed directly by a computer's central processing
      unit (CPU)
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Machine_code
        :revisions: https://en.wikipedia.org/wiki/Machine_code?action=history
        :edit: https://en.wikipedia.org/wiki/Machine_code?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Machine_code
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Machine_code
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Machine_code
        :edit: https://en.m.wikipedia.org/wiki/Machine_code?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Machine_code
    :extract: In computer programming, machine code, consisting of machine language
      instructions, is a low-level programming language used to directly control a
      computer's central processing unit (CPU). Each instruction causes the CPU to
      perform a very specific task, such as a load, a store, a jump, or an arithmetic
      logic unit (ALU) operation on one or more units of data in the CPU's registers
      or memory.
    :extract_html: "<p>In computer programming, <b>machine code</b>, consisting of
      <b>machine language</b> instructions, is a low-level programming language used
      to directly control a computer's central processing unit (CPU). Each instruction
      causes the CPU to perform a very specific task, such as a load, a store, a jump,
      or an arithmetic logic unit (ALU) operation on one or more units of data in
      the CPU's registers or memory.</p>"
  record/132e0962-eebe-45da-8196-7819aaff0b14:
    :type: standard
    :title: UNITY (programming language)
    :displaytitle: UNITY (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475904
    :titles:
      :canonical: UNITY_(programming_language)
      :normalized: UNITY (programming language)
      :display: UNITY (programming language)
    :pageid: 3092830
    :lang: en
    :dir: ltr
    :revision: '907179777'
    :tid: 78f17860-35d1-11eb-99c5-67f2c5a087df
    :timestamp: '2019-07-21T02:29:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/UNITY_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/UNITY_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/UNITY_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:UNITY_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/UNITY_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/UNITY_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/UNITY_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:UNITY_(programming_language)
    :extract: 'UNITY is a programming language constructed by K. Mani Chandy and Jayadev
      Misra for their book Parallel Program Design: A Foundation. It is a theoretical
      language which focuses on what, instead of where, when or how. The language
      contains no method of flow control, and program statements run in a nondeterministic
      way until statements cease to cause changes during execution. This allows for
      programs to run indefinitely, such as auto-pilot or power plant safety systems,
      as well as programs that would normally terminate.'
    :extract_html: "<p><b>UNITY</b> is a programming language constructed by K. Mani
      Chandy and Jayadev Misra for their book <i>Parallel Program Design: A Foundation</i>.
      It is a theoretical language which focuses on <i>what</i>, instead of <i>where</i>,
      <i>when</i> or <i>how</i>. The language contains no method of flow control,
      and program statements run in a nondeterministic way until statements cease
      to cause changes during execution. This allows for programs to run indefinitely,
      such as auto-pilot or power plant safety systems, as well as programs that would
      normally terminate.</p>"
  record/c9772dd7-c003-4e33-a8b3-0485200c3dda:
    :type: standard
    :title: Microsoft Macro Assembler
    :displaytitle: Microsoft Macro Assembler
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1756018
    :titles:
      :canonical: Microsoft_Macro_Assembler
      :normalized: Microsoft Macro Assembler
      :display: Microsoft Macro Assembler
    :pageid: 1061469
    :lang: en
    :dir: ltr
    :revision: '967347049'
    :tid: 880afa60-23ac-11eb-90f0-0bdcb56817ee
    :timestamp: '2020-07-12T18:28:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler
        :revisions: https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler?action=history
        :edit: https://en.wikipedia.org/wiki/Microsoft_Macro_Assembler?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Microsoft_Macro_Assembler
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Microsoft_Macro_Assembler
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Microsoft_Macro_Assembler
        :edit: https://en.m.wikipedia.org/wiki/Microsoft_Macro_Assembler?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Microsoft_Macro_Assembler
    :extract: 'The Microsoft Macro Assembler (MASM) is an x86 assembler that uses
      the Intel syntax for MS-DOS and Microsoft Windows. Beginning with MASM 8.0,
      there are two versions of the assembler: One for 16-bit & 32-bit assembly sources,
      and another (ML64) for 64-bit sources only.'
    :extract_html: "<p>The <b>Microsoft Macro Assembler</b> (<b>MASM</b>) is an x86
      assembler that uses the Intel syntax for MS-DOS and Microsoft Windows. Beginning
      with MASM 8.0, there are two versions of the assembler: One for 16-bit &amp;
      32-bit assembly sources, and another (<b>ML64</b>) for 64-bit sources only.</p>"
  record/f209a454-e25f-4e3a-af51-d5ae7be602b5:
    :type: standard
    :title: C (programming language)
    :displaytitle: C (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q15777
    :titles:
      :canonical: C_(programming_language)
      :normalized: C (programming language)
      :display: C (programming language)
    :pageid: 6021
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/The_C_Programming_Language_logo.svg/301px-The_C_Programming_Language_logo.svg.png
      :width: 301
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/35/The_C_Programming_Language_logo.svg/731px-The_C_Programming_Language_logo.svg.png
      :width: 731
      :height: 777
    :lang: en
    :dir: ltr
    :revision: '992264608'
    :tid: 54fa2da0-361f-11eb-ac95-4b49e98a17ab
    :timestamp: '2020-12-04T10:56:06Z'
    :description: general-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/C_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/C_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/C_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C_(programming_language)
    :extract: C is a general-purpose, procedural computer programming language supporting
      structured programming, lexical variable scope, and recursion, with a static
      type system. By design, C provides constructs that map efficiently to typical
      machine instructions. It has found lasting use in applications previously coded
      in assembly language. Such applications include operating systems and various
      application software for computer architectures that range from supercomputers
      to PLCs and embedded systems.
    :extract_html: "<p><b>C</b> is a general-purpose, procedural computer programming
      language supporting structured programming, lexical variable scope, and recursion,
      with a static type system. By design, C provides constructs that map efficiently
      to typical machine instructions. It has found lasting use in applications previously
      coded in assembly language. Such applications include operating systems and
      various application software for computer architectures that range from supercomputers
      to PLCs and embedded systems.</p>"
  record/f0a7a689-2c39-41a5-9e67-ebb3c3cf227e:
    :type: standard
    :title: M2001
    :displaytitle: M2001
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6713689
    :titles:
      :canonical: M2001
      :normalized: M2001
      :display: M2001
    :pageid: 941103
    :lang: en
    :dir: ltr
    :revision: '829900851'
    :tid: eaa06640-eb46-11ea-aeaf-af04e0463218
    :timestamp: '2018-03-11T14:25:08Z'
    :description: modular educational mathematical programming language for developing
      and presenting mathematical algorithms
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/M2001
        :revisions: https://en.wikipedia.org/wiki/M2001?action=history
        :edit: https://en.wikipedia.org/wiki/M2001?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:M2001
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/M2001
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/M2001
        :edit: https://en.m.wikipedia.org/wiki/M2001?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:M2001
    :extract: M2001 is a modular educational mathematical programming language for
      developing and presenting mathematical algorithms, from the modern discrete
      to the classical continuous mathematics. M2001 is built on a semantic framework
      that is based in category theory and has a syntax similar to that of Pascal
      or Modula-2.
    :extract_html: "<p><b>M2001</b> is a modular educational mathematical programming
      language for developing and presenting mathematical algorithms, from the modern
      discrete to the classical continuous mathematics. M2001 is built on a semantic
      framework that is based in category theory and has a syntax similar to that
      of Pascal or Modula-2.</p>"
  record/1290ad7e-d325-48a2-ad2a-51da0b28b692:
    :type: standard
    :title: SETL
    :displaytitle: SETL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2205923
    :titles:
      :canonical: SETL
      :normalized: SETL
      :display: SETL
    :pageid: 916963
    :lang: en
    :dir: ltr
    :revision: '894395241'
    :tid: 1f7b7400-1b75-11eb-bba0-ebdfb551e9c0
    :timestamp: '2019-04-27T16:37:55Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SETL
        :revisions: https://en.wikipedia.org/wiki/SETL?action=history
        :edit: https://en.wikipedia.org/wiki/SETL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SETL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SETL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SETL
        :edit: https://en.m.wikipedia.org/wiki/SETL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SETL
    :extract: SETL is a very high-level programming language based on the mathematical
      theory of sets. It was originally developed by (Jack) Jacob T. Schwartz at the
      New York University (NYU) Courant Institute of Mathematical Sciences in the
      late 1960s.
    :extract_html: "<p><b>SETL</b> is a very high-level programming language based
      on the mathematical theory of sets. It was originally developed by (Jack) Jacob
      T. Schwartz at the New York University (NYU) Courant Institute of Mathematical
      Sciences in the late 1960s.</p>"
  record/dfaa0c99-c023-4eb2-9dc1-eab38e4103fe:
    :type: standard
    :title: Grasshopper 3D
    :displaytitle: Grasshopper 3D
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5597529
    :titles:
      :canonical: Grasshopper_3D
      :normalized: Grasshopper 3D
      :display: Grasshopper 3D
    :pageid: 30776767
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/Grasshopper_MainWindow.png/320px-Grasshopper_MainWindow.png
      :width: 320
      :height: 271
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/2/20/Grasshopper_MainWindow.png
      :width: 1059
      :height: 896
    :lang: en
    :dir: ltr
    :revision: '980146269'
    :tid: de1d1d70-27c6-11eb-b8be-41e9df26893f
    :timestamp: '2020-09-24T21:33:13Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Grasshopper_3D
        :revisions: https://en.wikipedia.org/wiki/Grasshopper_3D?action=history
        :edit: https://en.wikipedia.org/wiki/Grasshopper_3D?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Grasshopper_3D
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Grasshopper_3D
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Grasshopper_3D
        :edit: https://en.m.wikipedia.org/wiki/Grasshopper_3D?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Grasshopper_3D
    :extract: Grasshopper is a visual programming language and environment that runs
      within the Rhinoceros 3D computer-aided design (CAD) application. The program
      was created by David Rutten at Robert McNeel & Associates. Programs are created
      by dragging components onto a canvas. The outputs to these components are then
      connected to the inputs of subsequent components.
    :extract_html: "<p><b>Grasshopper</b> is a visual programming language and environment
      that runs within the Rhinoceros 3D computer-aided design (CAD) application.
      The program was created by David Rutten at Robert McNeel &amp; Associates. Programs
      are created by dragging components onto a canvas. The outputs to these components
      are then connected to the inputs of subsequent components.</p>"
  record/a1cd6095-3fee-42b9-852d-c292db9c183d:
    :type: standard
    :title: Golo (programming language)
    :displaytitle: Golo (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q22681958
    :titles:
      :canonical: Golo_(programming_language)
      :normalized: Golo (programming language)
      :display: Golo (programming language)
    :pageid: 47051765
    :lang: en
    :dir: ltr
    :revision: '962132386'
    :tid: 6c9622f0-30b3-11eb-a465-898ccc4b0525
    :timestamp: '2020-06-12T08:20:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Golo_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Golo_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Golo_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Golo_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Golo_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Golo_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Golo_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Golo_(programming_language)
    :extract: Golo is computer software, a programming language for the Java virtual
      machine (JVM). It is simple, with dynamic, weak typing. It was created in 2012
      as part of the research activities of the DynaMid group of the Centre of Innovation
      in Telecommunications and Integration of service (CITI) Laboratory at Institut
      national des sciences appliquées de Lyon (INSA). It is distributed as free and
      open-source software under the Eclipse Public License 2.0.
    :extract_html: "<p><b>Golo</b> is computer software, a programming language for
      the Java virtual machine (JVM). It is simple, with dynamic, weak typing. It
      was created in 2012 as part of the research activities of the DynaMid group
      of the Centre of Innovation in Telecommunications and Integration of service
      (CITI) Laboratory at Institut national des sciences appliquées de Lyon (INSA).
      It is distributed as free and open-source software under the Eclipse Public
      License 2.0.</p>"
  record/ded5fdbb-41a7-4d6a-9aac-f82ae604a920:
    :type: standard
    :title: KRL (programming language)
    :displaytitle: KRL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6336852
    :titles:
      :canonical: KRL_(programming_language)
      :normalized: KRL (programming language)
      :display: KRL (programming language)
    :pageid: 17227
    :lang: en
    :dir: ltr
    :revision: '984191758'
    :tid: 70d5bf40-1fda-11eb-86be-95c06f151ba0
    :timestamp: '2020-10-18T18:54:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/KRL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/KRL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/KRL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:KRL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/KRL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/KRL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/KRL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:KRL_(programming_language)
    :extract: "KRL is a knowledge representation language, developed by Daniel G.
      Bobrow and Terry Winograd while at Xerox PARC and Stanford University, respectively.
      It is a frame-based language.\nKRL was an attempt to produce a language which
      was nice to read and write for the engineers who had to write programs in it,
      processed like human memory, so you could have realistic AI programs, had an
      underlying semantics which was firmly grounded like logic languages, all in
      one, all in one language. And I think it - again, in hindsight - it just bogged
      down under the weight of trying to satisfy all those things at once. \n\n"
    :extract_html: "<p><b>KRL</b> is a knowledge representation language, developed
      by Daniel G. Bobrow and Terry Winograd while at Xerox PARC and Stanford University,
      respectively. It is a frame-based language.</p><blockquote>\n<p>KRL was an attempt
      to produce a language which was nice to read and write for the engineers who
      had to write programs in it, processed like human memory, so you could have
      realistic AI programs, had an underlying semantics which was firmly grounded
      like logic languages, all in one, all in one language. And I think it - again,
      in hindsight - it just bogged down under the weight of trying to satisfy all
      those things at once. \n</p>\n</blockquote>"
  record/18a6ba8a-b849-4ec5-a7be-a60d45a61e62:
    :type: standard
    :title: Google Apps Script
    :displaytitle: Google Apps Script
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5583799
    :titles:
      :canonical: Google_Apps_Script
      :normalized: Google Apps Script
      :display: Google Apps Script
    :pageid: 31285354
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f2/Google_Apps_Script.png
      :width: 128
      :height: 128
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f2/Google_Apps_Script.png
      :width: 128
      :height: 128
    :lang: en
    :dir: ltr
    :revision: '988225217'
    :tid: e32490c0-2bed-11eb-b6da-7dd45203d6ac
    :timestamp: '2020-11-11T21:29:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Google_Apps_Script
        :revisions: https://en.wikipedia.org/wiki/Google_Apps_Script?action=history
        :edit: https://en.wikipedia.org/wiki/Google_Apps_Script?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Google_Apps_Script
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Google_Apps_Script
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Google_Apps_Script
        :edit: https://en.m.wikipedia.org/wiki/Google_Apps_Script?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Google_Apps_Script
    :extract: Apps Script is a scripting platform developed by Google for light-weight
      application development in the Google Workspace platform. Google Apps Script
      was initially developed by Mike Harm as a side project whilst working as a developer
      on Google Sheets. Google Apps Script was first publicly announced in May 2009
      when a beta testing program was announced by Jonathan Rochelle, then Product
      Manager, Google Docs. In August 2009 Google Apps Script was subsequently made
      available to all Google Apps Premier and Education Edition customers. It is
      based on JavaScript 1.6, but also includes some portions of 1.7 and 1.8 and
      a subset of the ECMAScript 5 API. Apps Script projects run server-side on Google's
      infrastructure. According to Google, Apps Script "provides easy ways to automate
      tasks across Google products and third party services." Apps Script is also
      the tool that powers the add-ons for Google Docs, Sheets and Slides.
    :extract_html: <p><b>Apps Script</b> is a scripting platform developed by Google
      for light-weight application development in the Google Workspace platform. Google
      Apps Script was initially developed by Mike Harm as a side project whilst working
      as a developer on Google Sheets. Google Apps Script was first publicly announced
      in May 2009 when a beta testing program was announced by Jonathan Rochelle,
      then Product Manager, Google Docs. In August 2009 Google Apps Script was subsequently
      made available to all Google Apps Premier and Education Edition customers. It
      is based on JavaScript 1.6, but also includes some portions of 1.7 and 1.8 and
      a subset of the ECMAScript 5 API. Apps Script projects run server-side on Google's
      infrastructure. According to Google, Apps Script "provides easy ways to automate
      tasks across Google products and third party services." Apps Script is also
      the tool that powers the add-ons for Google Docs, Sheets and Slides.</p>
  record/ea51be02-ed0b-4b42-804b-d74c1339e017:
    :type: standard
    :title: Constraint Handling Rules
    :displaytitle: Constraint Handling Rules
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5164373
    :titles:
      :canonical: Constraint_Handling_Rules
      :normalized: Constraint Handling Rules
      :display: Constraint Handling Rules
    :pageid: 1753362
    :lang: en
    :dir: ltr
    :revision: '959631362'
    :tid: d44009f0-2dd6-11eb-91a6-1b8225b623a6
    :timestamp: '2020-05-29T19:40:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Constraint_Handling_Rules
        :revisions: https://en.wikipedia.org/wiki/Constraint_Handling_Rules?action=history
        :edit: https://en.wikipedia.org/wiki/Constraint_Handling_Rules?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Constraint_Handling_Rules
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Constraint_Handling_Rules
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Constraint_Handling_Rules
        :edit: https://en.m.wikipedia.org/wiki/Constraint_Handling_Rules?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Constraint_Handling_Rules
    :extract: Constraint Handling Rules (CHR) is a declarative, rule-based language,
      introduced in 1991 by Thom Frühwirth at the time with ECRC in Munich, Germany.
      Originally intended for constraint programming, CHR finds applications in grammar
      induction, abductive reasoning, multi-agent systems, natural language processing,
      compilation, scheduling, spatial-temporal reasoning, testing and verification,
      and type systems.
    :extract_html: "<p><b>Constraint Handling Rules</b> (<b>CHR</b>) is a declarative,
      rule-based language, introduced in 1991 by Thom Frühwirth at the time with ECRC
      in Munich, Germany. Originally intended for constraint programming, CHR finds
      applications in grammar induction, abductive reasoning, multi-agent systems,
      natural language processing, compilation, scheduling, spatial-temporal reasoning,
      testing and verification, and type systems.</p>"
  record/79f6ab90-ddb5-4bc0-8cba-70734d3a5bce:
    :type: standard
    :title: Rc
    :displaytitle: rc
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1050629
    :titles:
      :canonical: Rc
      :normalized: Rc
      :display: rc
    :pageid: 171918
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Plan_9_from_Bell_Labs_%28process_management%29.png/320px-Plan_9_from_Bell_Labs_%28process_management%29.png
      :width: 320
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/16/Plan_9_from_Bell_Labs_%28process_management%29.png
      :width: 640
      :height: 480
    :lang: en
    :dir: ltr
    :revision: '963046001'
    :tid: be706580-34c9-11eb-a5b7-b5c44b5de91f
    :timestamp: '2020-06-17T13:48:50Z'
    :description: Command line interpreter for Version 10 Unix and Plan 9 from Bell
      Labs operating systems
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rc
        :revisions: https://en.wikipedia.org/wiki/Rc?action=history
        :edit: https://en.wikipedia.org/wiki/Rc?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rc
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rc
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rc
        :edit: https://en.m.wikipedia.org/wiki/Rc?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rc
    :extract: rc is the command line interpreter for Version 10 Unix and Plan 9 from
      Bell Labs operating systems. It resembles the Bourne shell, but its syntax is
      somewhat simpler. It was created by Tom Duff, who is better known for an unusual
      C programming language construct.
    :extract_html: "<p><b>rc</b> is the command line interpreter for Version 10 Unix
      and Plan 9 from Bell Labs operating systems. It resembles the Bourne shell,
      but its syntax is somewhat simpler. It was created by Tom Duff, who is better
      known for an unusual C programming language construct.</p>"
  record/ab981c77-1de3-40e2-a757-9b828f8a41fe:
    :type: standard
    :title: XBase
    :displaytitle: xBase
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q300917
    :titles:
      :canonical: XBase
      :normalized: XBase
      :display: xBase
    :pageid: 572327
    :lang: en
    :dir: ltr
    :revision: '978081282'
    :tid: c0a80600-34c9-11eb-80ec-effdcc368c25
    :timestamp: '2020-09-12T19:48:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XBase
        :revisions: https://en.wikipedia.org/wiki/XBase?action=history
        :edit: https://en.wikipedia.org/wiki/XBase?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XBase
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XBase
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XBase
        :edit: https://en.m.wikipedia.org/wiki/XBase?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XBase
    :extract: xBase is the generic term for all programming languages that derive
      from the original dBASE (Ashton-Tate) programming language and database formats.
      These are sometimes informally known as dBASE "clones". While there was a non-commercial
      predecessor to the Ashton-Tate product, most clones are based on Ashton-Tate's
      1986 dBASE III+ release — scripts written in the dBASE III+ dialect are most
      likely to run on all the clones.
    :extract_html: <p><b>xBase</b> is the generic term for all programming languages
      that derive from the original dBASE (Ashton-Tate) programming language and database
      formats. These are sometimes informally known as dBASE "clones". While there
      was a non-commercial predecessor to the Ashton-Tate product, most clones are
      based on Ashton-Tate's 1986 dBASE III+ release — scripts written in the dBASE
      III+ dialect are most likely to run on all the clones.</p>
  record/8a11f153-f4a3-4464-8916-3417fa62111d:
    :type: standard
    :title: CESIL
    :displaytitle: CESIL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5065544
    :titles:
      :canonical: CESIL
      :normalized: CESIL
      :display: CESIL
    :pageid: 2834686
    :lang: en
    :dir: ltr
    :revision: '870390538'
    :tid: 0761bb80-35cf-11eb-b4f0-df97e6e44245
    :timestamp: '2018-11-24T13:40:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CESIL
        :revisions: https://en.wikipedia.org/wiki/CESIL?action=history
        :edit: https://en.wikipedia.org/wiki/CESIL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CESIL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CESIL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CESIL
        :edit: https://en.m.wikipedia.org/wiki/CESIL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CESIL
    :extract: |-
      Cesil, or Computer Education in Schools Instruction Language, was a programming language designed to introduce pupils in British schools to Assembly language. It is a low level language containing a total of fourteen instructions:Load value - place the immediate value or the contents of the variable named in the accumulator.
      Store variable - place the contents of the accumulator in the variable.
      Jump label - transfer control to location labelled.
      Jineg label - transfer control to location labelled if the accumulator contains a negative value.
      Jizero label - transfer control to location labelled if the accumulator contains zero.
      Print literal - output the following string, delimited by single quotes.
      Line - output a carriage return
      In - allow user to input a numerical value from the console.
      Out - Output the contents of the accumulator as a decimal integer, signed if negative.
      Add value - add the variable or immediate integer value to the accumulator.
      Subtract value - subtract the variable or immediate integer from the accumulator.
      Multiply value - place the product of the accumulator and the variable or immediate integer in the accumulator.
      Divide value - place the contents of the accumulator divided by the value in the accumulator.
      Halt - return control to console.
    :extract_html: |-
      <p><b>Cesil</b>, or <b>C</b>omputer <b>E</b>ducation in <b>S</b>chools <b>I</b>nstruction <b>L</b>anguage, was a programming language designed to introduce pupils in British schools to Assembly language. It is a low level language containing a total of fourteen instructions:</p><ul><li>Load value - place the immediate value or the contents of the variable named in the accumulator.</li>
      <li>Store variable - place the contents of the accumulator in the variable.</li>
      <li>Jump label - transfer control to location labelled.</li>
      <li>Jineg label - transfer control to location labelled if the accumulator contains a negative value.</li>
      <li>Jizero label - transfer control to location labelled if the accumulator contains zero.</li>
      <li>Print literal - output the following string, delimited by single quotes.</li>
      <li>Line - output a carriage return</li>
      <li>In - allow user to input a numerical value from the console.</li>
      <li>Out - Output the contents of the accumulator as a decimal integer, signed if negative.</li>
      <li>Add value - add the variable or immediate integer value to the accumulator.</li>
      <li>Subtract value - subtract the variable or immediate integer from the accumulator.</li>
      <li>Multiply value - place the product of the accumulator and the variable or immediate integer in the accumulator.</li>
      <li>Divide value - place the contents of the accumulator divided by the value in the accumulator.</li>
      <li>Halt - return control to console.</li></ul>
  record/976cb9f0-fac0-49e8-bef8-96884dbd06ed:
    :type: standard
    :title: MPD (programming language)
    :displaytitle: MPD (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q840761
    :titles:
      :canonical: MPD_(programming_language)
      :normalized: MPD (programming language)
      :display: MPD (programming language)
    :pageid: 928466
    :lang: en
    :dir: ltr
    :revision: '990959092'
    :tid: be545420-30ba-11eb-8eec-99c5f6e6ce29
    :timestamp: '2020-11-27T14:13:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MPD_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/MPD_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/MPD_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MPD_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MPD_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MPD_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/MPD_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MPD_(programming_language)
    :extract: Multithreaded, Parallel, and Distributed Programming (MPD) is a concurrent
      programming language whose syntax is derived from the one used in the book Foundations
      of Multithreaded, Parallel, and Distributed Programming. The name lists the
      distinguishing features of the language, namely that it supports all three of
      these concurrent programming techniques.
    :extract_html: "<p><b>Multithreaded, Parallel, and Distributed Programming</b>
      (<b>MPD</b>) is a concurrent programming language whose syntax is derived from
      the one used in the book <i>Foundations of Multithreaded, Parallel, and Distributed
      Programming</i>. The name lists the distinguishing features of the language,
      namely that it supports all three of these concurrent programming techniques.</p>"
  record/f20e66db-d11e-433e-9188-6906c5e5bb7a:
    :type: standard
    :title: MHEG-5
    :displaytitle: MHEG-5
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1701057
    :titles:
      :canonical: MHEG-5
      :normalized: MHEG-5
      :display: MHEG-5
    :pageid: 226438
    :lang: en
    :dir: ltr
    :revision: '870888642'
    :tid: aa784c10-1a92-11eb-9645-07226b6950f4
    :timestamp: '2018-11-27T16:43:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MHEG-5
        :revisions: https://en.wikipedia.org/wiki/MHEG-5?action=history
        :edit: https://en.wikipedia.org/wiki/MHEG-5?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MHEG-5
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MHEG-5
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MHEG-5
        :edit: https://en.m.wikipedia.org/wiki/MHEG-5?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MHEG-5
    :extract: MHEG-5, or ISO/IEC 13522-5, is part of a set of international standards
      relating to the presentation of multimedia information, standardised by the
      Multimedia and Hypermedia Experts Group (MHEG). It is most commonly used as
      a language to describe interactive television services.
    :extract_html: "<p><b>MHEG-5</b>, or ISO/IEC 13522-5, is part of a set of international
      standards relating to the presentation of multimedia information, standardised
      by the Multimedia and Hypermedia Experts Group (MHEG). It is most commonly used
      as a language to describe interactive television services.</p>"
  record/222a0439-990b-4864-a6a0-afa7f764a315:
    :type: standard
    :title: SNOBOL
    :displaytitle: SNOBOL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q522041
    :titles:
      :canonical: SNOBOL
      :normalized: SNOBOL
      :display: SNOBOL
    :pageid: 29515
    :lang: en
    :dir: ltr
    :revision: '991567170'
    :tid: 21dc5990-35af-11eb-9d9c-29a23893dc21
    :timestamp: '2020-11-30T19:01:38Z'
    :description: Text-string-oriented programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SNOBOL
        :revisions: https://en.wikipedia.org/wiki/SNOBOL?action=history
        :edit: https://en.wikipedia.org/wiki/SNOBOL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SNOBOL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SNOBOL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SNOBOL
        :edit: https://en.m.wikipedia.org/wiki/SNOBOL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SNOBOL
    :extract: SNOBOL is a series of programming languages developed between 1962 and
      1967 at AT&T Bell Laboratories by David J. Farber, Ralph E. Griswold and Ivan
      P. Polonsky, culminating in SNOBOL4. It was one of a number of text-string-oriented
      languages developed during the 1950s and 1960s; others included COMIT and TRAC.
    :extract_html: "<p><b>SNOBOL</b> is a series of programming languages developed
      between 1962 and 1967 at AT&amp;T Bell Laboratories by David J. Farber, Ralph
      E. Griswold and Ivan P. Polonsky, culminating in SNOBOL4. It was one of a number
      of text-string-oriented languages developed during the 1950s and 1960s; others
      included COMIT and TRAC.</p>"
  record/f7079ae4-46ee-4080-8e90-0b4f3462fd4b:
    :type: standard
    :title: Transact-SQL
    :displaytitle: Transact-SQL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1411245
    :titles:
      :canonical: Transact-SQL
      :normalized: Transact-SQL
      :display: Transact-SQL
    :pageid: 295710
    :lang: en
    :dir: ltr
    :revision: '973213386'
    :tid: ee77ec80-ffbd-11ea-8f3f-a30cbdca0d86
    :timestamp: '2020-08-16T00:42:46Z'
    :description: Microsoft's and Sybase's proprietary extension to Structured Query
      Language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Transact-SQL
        :revisions: https://en.wikipedia.org/wiki/Transact-SQL?action=history
        :edit: https://en.wikipedia.org/wiki/Transact-SQL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Transact-SQL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Transact-SQL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Transact-SQL
        :edit: https://en.m.wikipedia.org/wiki/Transact-SQL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Transact-SQL
    :extract: Transact-SQL (T-SQL) is Microsoft's and Sybase's proprietary extension
      to the SQL used to interact with relational databases. T-SQL expands on the
      SQL standard to include procedural programming, local variables, various support
      functions for string processing, date processing, mathematics, etc. and changes
      to the DELETE and UPDATE statements.
    :extract_html: "<p><b>Transact-SQL</b> (<b>T-SQL</b>) is Microsoft's and Sybase's
      proprietary extension to the SQL used to interact with relational databases.
      T-SQL expands on the SQL standard to include procedural programming, local variables,
      various support functions for string processing, date processing, mathematics,
      etc. and changes to the DELETE and UPDATE statements.</p>"
  record/95f37b19-65c2-4d6a-ba2f-fd632b68b88f:
    :type: standard
    :title: Boo (programming language)
    :displaytitle: Boo (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q892948
    :titles:
      :canonical: Boo_(programming_language)
      :normalized: Boo (programming language)
      :display: Boo (programming language)
    :pageid: 1147624
    :lang: en
    :dir: ltr
    :revision: '985422218'
    :tid: 29d48530-34e9-11eb-ae32-1b906667ba6c
    :timestamp: '2020-10-25T21:27:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Boo_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Boo_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Boo_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Boo_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Boo_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Boo_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Boo_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Boo_(programming_language)
    :extract: Boo is an object-oriented, statically typed, general-purpose programming
      language that seeks to make use of the Common Language Infrastructure's support
      for Unicode, internationalization, and web applications, while using a Python-inspired
      syntax and a special focus on language and compiler extensibility. Some features
      of note include type inference, generators, multimethods, optional duck typing,
      macros, true closures, currying, and first-class functions.
    :extract_html: "<p><b>Boo</b> is an object-oriented, statically typed, general-purpose
      programming language that seeks to make use of the Common Language Infrastructure's
      support for Unicode, internationalization, and web applications, while using
      a Python-inspired syntax and a special focus on language and compiler extensibility.
      Some features of note include type inference, generators, multimethods, optional
      duck typing, macros, true closures, currying, and first-class functions.</p>"
  record/e52ba4e8-dc9a-4328-9caa-d716cf12724a:
    :type: standard
    :title: CMS-2
    :displaytitle: CMS-2
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5012997
    :titles:
      :canonical: CMS-2
      :normalized: CMS-2
      :display: CMS-2
    :pageid: 1181779
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/f/f1/CMS-2Y_Programmers_Reference_Manual_for_the_AN_UYK-7_and_AN_UYK-43_Oct86.jpg/247px-CMS-2Y_Programmers_Reference_Manual_for_the_AN_UYK-7_and_AN_UYK-43_Oct86.jpg
      :width: 247
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f1/CMS-2Y_Programmers_Reference_Manual_for_the_AN_UYK-7_and_AN_UYK-43_Oct86.jpg
      :width: 1274
      :height: 1649
    :lang: en
    :dir: ltr
    :revision: '971175746'
    :tid: 8fa61ed0-1bc8-11eb-a08c-4de516404334
    :timestamp: '2020-08-04T16:19:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CMS-2
        :revisions: https://en.wikipedia.org/wiki/CMS-2?action=history
        :edit: https://en.wikipedia.org/wiki/CMS-2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CMS-2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CMS-2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CMS-2
        :edit: https://en.m.wikipedia.org/wiki/CMS-2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CMS-2
    :extract: CMS-2 is an embedded systems programming language used by the United
      States Navy. It was an early attempt to develop a standardized high-level computer
      programming language intended to improve code portability and reusability. CMS-2
      was developed primarily for the US Navy’s tactical data systems (NTDS).
    :extract_html: "<p><b>CMS-2</b> is an embedded systems programming language used
      by the United States Navy. It was an early attempt to develop a standardized
      high-level computer programming language intended to improve code portability
      and reusability. CMS-2 was developed primarily for the US Navy’s tactical data
      systems (NTDS).</p>"
  record/702666d4-7fb0-43b8-b88e-4f7024aa6f6a:
    :type: standard
    :title: Kaleidoscope (programming language)
    :displaytitle: Kaleidoscope (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6351981
    :titles:
      :canonical: Kaleidoscope_(programming_language)
      :normalized: Kaleidoscope (programming language)
      :display: Kaleidoscope (programming language)
    :pageid: 4400159
    :lang: en
    :dir: ltr
    :revision: '786884966'
    :tid: c2668640-1ecd-11eb-9c6a-2b4e797d58c2
    :timestamp: '2017-06-22T04:55:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Kaleidoscope_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kaleidoscope_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kaleidoscope_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kaleidoscope_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Kaleidoscope_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kaleidoscope_(programming_language)
    :extract: The Kaleidoscope programming language is a constraint programming language
      embedding constraints into an imperative object-oriented language. It adds keywords
      always, once, and assert..during to make statements about relational invariants.
      Objects have constraint constructors, which are not methods, to enforce the
      meanings of user-defined datatypes.
    :extract_html: "<p>The <b>Kaleidoscope programming language</b> is a constraint
      programming language embedding constraints into an imperative object-oriented
      language. It adds keywords <i>always</i>, <i>once</i>, and <i>assert</i>..<i>during</i>
      to make statements about relational invariants. Objects have constraint constructors,
      which are not methods, to enforce the meanings of user-defined datatypes.</p>"
  record/d2eddaa3-4d7c-43c4-aa79-8e68b8394d12:
    :type: standard
    :title: POV-Ray
    :displaytitle: POV-Ray
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q521697
    :titles:
      :canonical: POV-Ray
      :normalized: POV-Ray
      :display: POV-Ray
    :pageid: 159350
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/62/Povray_logo_sphere.png/320px-Povray_logo_sphere.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/62/Povray_logo_sphere.png
      :width: 2048
      :height: 2048
    :lang: en
    :dir: ltr
    :revision: '954477053'
    :tid: 822675b0-3069-11eb-bcfb-75ceb8c24f0c
    :timestamp: '2020-05-02T16:33:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/POV-Ray
        :revisions: https://en.wikipedia.org/wiki/POV-Ray?action=history
        :edit: https://en.wikipedia.org/wiki/POV-Ray?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:POV-Ray
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/POV-Ray
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/POV-Ray
        :edit: https://en.m.wikipedia.org/wiki/POV-Ray?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:POV-Ray
    :extract: The Persistence of Vision Ray Tracer, most commonly acronymed as POV-Ray,
      is a cross-platform ray-tracing program that generates images from a text-based
      scene description. It was originally based on DKBTrace, written by David Kirk
      Buck and Aaron A. Collins for Amiga computers. There are also influences from
      the earlier Polyray raytracer because of contributions from its author, Alexander
      Enzmann. POV-Ray is free and open-source software, with the source code available
      under the AGPLv3.
    :extract_html: "<p>The <b>Persistence of Vision Ray Tracer</b>, most commonly
      acronymed as <b>POV-Ray</b>, is a cross-platform ray-tracing program that generates
      images from a text-based scene description. It was originally based on DKBTrace,
      written by David Kirk Buck and Aaron A. Collins for Amiga computers. There are
      also influences from the earlier Polyray raytracer because of contributions
      from its author, Alexander Enzmann. POV-Ray is free and open-source software,
      with the source code available under the AGPLv3.</p>"
  record/7648ed56-930b-471b-a06c-58d5f253df7a:
    :type: standard
    :title: Snowball (programming language)
    :displaytitle: Snowball (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7548444
    :titles:
      :canonical: Snowball_(programming_language)
      :normalized: Snowball (programming language)
      :display: Snowball (programming language)
    :pageid: 919808
    :lang: en
    :dir: ltr
    :revision: '946506246'
    :tid: 410ecf00-075b-11eb-8b8f-0757fe01188b
    :timestamp: '2020-03-20T16:15:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Snowball_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Snowball_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Snowball_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Snowball_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Snowball_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Snowball_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Snowball_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Snowball_(programming_language)
    :extract: Snowball is a small string processing programming language designed
      for creating stemming algorithms for use in information retrieval.
    :extract_html: "<p><b>Snowball</b> is a small string processing programming language
      designed for creating stemming algorithms for use in information retrieval.</p>"
  record/4436b49c-e7ad-4948-9b07-b41bdf4aca4b:
    :type: standard
    :title: EusLisp Robot Programming Language
    :displaytitle: EusLisp Robot Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5414185
    :titles:
      :canonical: EusLisp_Robot_Programming_Language
      :normalized: EusLisp Robot Programming Language
      :display: EusLisp Robot Programming Language
    :pageid: 7416368
    :lang: en
    :dir: ltr
    :revision: '637556515'
    :tid: b78dfcc0-ecab-11ea-8abc-c16f02380645
    :timestamp: '2014-12-11T01:15:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/EusLisp_Robot_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/EusLisp_Robot_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/EusLisp_Robot_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:EusLisp_Robot_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/EusLisp_Robot_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/EusLisp_Robot_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/EusLisp_Robot_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:EusLisp_Robot_Programming_Language
    :extract: EusLisp is a Lisp-based programming system. Built on the basis of object
      orientation, it is designed specifically for developing robotics software. The
      first version of it ran in 1986 on Unix-System5/Ustation-E20.
    :extract_html: "<p><b>EusLisp</b> is a Lisp-based programming system. Built on
      the basis of object orientation, it is designed specifically for developing
      robotics software. The first version of it ran in 1986 on Unix-System5/Ustation-E20.</p>"
  record/837817ff-5a2b-4d06-bf6b-03f95e285611:
    :type: standard
    :title: Pascal (programming language)
    :displaytitle: Pascal (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q81571
    :titles:
      :canonical: Pascal_(programming_language)
      :normalized: Pascal (programming language)
      :display: Pascal (programming language)
    :pageid: 23773
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f5/LagrangePAS.jpg/320px-LagrangePAS.jpg
      :width: 320
      :height: 258
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f5/LagrangePAS.jpg
      :width: 681
      :height: 549
    :lang: en
    :dir: ltr
    :revision: '991656678'
    :tid: 65214070-338f-11eb-9d55-5758f9e3ca5b
    :timestamp: '2020-12-01T04:40:47Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pascal_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pascal_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pascal_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pascal_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pascal_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pascal_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pascal_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pascal_(programming_language)
    :extract: Pascal is an imperative and procedural programming language, designed
      by Niklaus Wirth as a small, efficient language intended to encourage good programming
      practices using structured programming and data structuring. It is named in
      honour of the French mathematician, philosopher and physicist Blaise Pascal.
    :extract_html: "<p><b>Pascal</b> is an imperative and procedural programming language,
      designed by Niklaus Wirth as a small, efficient language intended to encourage
      good programming practices using structured programming and data structuring.
      It is named in honour of the French mathematician, philosopher and physicist
      Blaise Pascal.</p>"
  record/f76e8dd8-5f8c-4cab-9711-575a783b3844:
    :type: standard
    :title: Godot (game engine)
    :displaytitle: Godot (game engine)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16972633
    :titles:
      :canonical: Godot_(game_engine)
      :normalized: Godot (game engine)
      :display: Godot (game engine)
    :pageid: 42097999
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e4/Godot_3.1_screenshot.png/320px-Godot_3.1_screenshot.png
      :width: 320
      :height: 241
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/e4/Godot_3.1_screenshot.png
      :width: 1280
      :height: 962
    :lang: en
    :dir: ltr
    :revision: '992102824'
    :tid: 3f072250-3575-11eb-ac40-f9b7c9db8dda
    :timestamp: '2020-12-03T14:38:39Z'
    :description: Free, cross-platform and open-source game engine
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Godot_(game_engine)
        :revisions: https://en.wikipedia.org/wiki/Godot_(game_engine)?action=history
        :edit: https://en.wikipedia.org/wiki/Godot_(game_engine)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Godot_(game_engine)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Godot_(game_engine)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Godot_(game_engine)
        :edit: https://en.m.wikipedia.org/wiki/Godot_(game_engine)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Godot_(game_engine)
    :extract: Godot is a 2D and 3D, cross-platform, free and open-source game engine
      released under the MIT license. It was initially developed by Juan Linietsky
      and Ariel Manzur for several companies in Latin America prior to its public
      release. The development environment runs on multiple operating systems including
      Linux, macOS, and Microsoft Windows. Godot can create games targeting PC, mobile,
      and web platforms.
    :extract_html: "<p><b>Godot</b> is a 2D and 3D, cross-platform, free and open-source
      game engine released under the MIT license. It was initially developed by Juan
      Linietsky and Ariel Manzur for several companies in Latin America prior to its
      public release. The development environment runs on multiple operating systems
      including Linux, macOS, and Microsoft Windows. Godot can create games targeting
      PC, mobile, and web platforms.</p>"
  record/ad3eaf10-d1d4-40d6-a099-ab48486fcde9:
    :type: standard
    :title: Oxygene (programming language)
    :displaytitle: Oxygene (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q910482
    :titles:
      :canonical: Oxygene_(programming_language)
      :normalized: Oxygene (programming language)
      :display: Oxygene (programming language)
    :pageid: 4249746
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/9/9e/Chrome-128.png
      :width: 128
      :height: 128
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/9/9e/Chrome-128.png
      :width: 128
      :height: 128
    :lang: en
    :dir: ltr
    :revision: '979636711'
    :tid: 2a626d50-34e9-11eb-97d5-cd7bd2bcfbf9
    :timestamp: '2020-09-21T21:27:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Oxygene_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Oxygene_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Oxygene_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Oxygene_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Oxygene_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Oxygene_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Oxygene_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Oxygene_(programming_language)
    :extract: Oxygene is a programming language developed by RemObjects Software for
      Microsoft's Common Language Infrastructure, the Java Platform and Cocoa. Oxygene
      based on Delphi's Object Pascal, but also has influences from C#, Eiffel, Java,
      F# and other languages.
    :extract_html: "<p><b>Oxygene</b> is a programming language developed by RemObjects
      Software for Microsoft's Common Language Infrastructure, the Java Platform and
      Cocoa. Oxygene based on Delphi's Object Pascal, but also has influences from
      C#, Eiffel, Java, F# and other languages.</p>"
  record/78d12be2-b725-4229-a942-0adaa8a0709c:
    :type: standard
    :title: Lustre (programming language)
    :displaytitle: Lustre (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q464622
    :titles:
      :canonical: Lustre_(programming_language)
      :normalized: Lustre (programming language)
      :display: Lustre (programming language)
    :pageid: 2211835
    :lang: en
    :dir: ltr
    :revision: '902236753'
    :tid: 3e18fe50-1cf6-11eb-966c-5559a72a71da
    :timestamp: '2019-06-17T13:59:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lustre_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lustre_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lustre_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lustre_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lustre_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lustre_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lustre_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lustre_(programming_language)
    :extract: Lustre is a formally defined, declarative, and synchronous dataflow
      programming language for programming reactive systems. It began as a research
      project in the early 1980s. A formal presentation of the language can be found
      in the 1991 Proceedings of the IEEE. In 1993 it progressed to practical, industrial
      use in a commercial product as the core language of the industrial environment
      SCADE, developed by Esterel Technologies. It is now used for critical control
      software in aircraft, helicopters, and nuclear power plants.
    :extract_html: "<p><b>Lustre</b> is a formally defined, declarative, and synchronous
      dataflow programming language for programming reactive systems. It began as
      a research project in the early 1980s. A formal presentation of the language
      can be found in the 1991 Proceedings of the IEEE. In 1993 it progressed to practical,
      industrial use in a commercial product as the core language of the industrial
      environment SCADE, developed by Esterel Technologies. It is now used for critical
      control software in aircraft, helicopters, and nuclear power plants.</p>"
  record/1c70d7c9-a2b8-47fc-bed1-07a404eb28bc:
    :type: standard
    :title: SQR
    :displaytitle: SQR
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3459986
    :titles:
      :canonical: SQR
      :normalized: SQR
      :display: SQR
    :pageid: 1862060
    :lang: en
    :dir: ltr
    :revision: '985350411'
    :tid: 32273970-16c2-11eb-b79d-6b6ecbd7ca3c
    :timestamp: '2020-10-25T13:01:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SQR
        :revisions: https://en.wikipedia.org/wiki/SQR?action=history
        :edit: https://en.wikipedia.org/wiki/SQR?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SQR
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SQR
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SQR
        :edit: https://en.m.wikipedia.org/wiki/SQR?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SQR
    :extract: SQR is a programming language designed for generating reports from database
      management system management systems. The name is an abbreviation of Structured
      Query Reporter, which suggests its relationship to SQL. Any SQL statement can
      be embedded in an SQR program.
    :extract_html: "<p>SQR is a programming language designed for generating reports
      from database management system management systems. The name is an abbreviation
      of Structured Query Reporter, which suggests its relationship to SQL. Any SQL
      statement can be embedded in an SQR program.</p>"
  record/1c127b26-c634-4efc-9596-7fb495240f9b:
    :type: standard
    :title: ALGOL 68
    :displaytitle: ALGOL 68
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2166735
    :titles:
      :canonical: ALGOL_68
      :normalized: ALGOL 68
      :display: ALGOL 68
    :pageid: 692880
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/3/35/Algol68RevisedReportCover.jpg/216px-Algol68RevisedReportCover.jpg
      :width: 216
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/3/35/Algol68RevisedReportCover.jpg
      :width: 259
      :height: 383
    :lang: en
    :dir: ltr
    :revision: '987912919'
    :tid: 41950750-301e-11eb-8060-d3ac91e746ec
    :timestamp: '2020-11-09T23:54:56Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ALGOL_68
        :revisions: https://en.wikipedia.org/wiki/ALGOL_68?action=history
        :edit: https://en.wikipedia.org/wiki/ALGOL_68?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ALGOL_68
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ALGOL_68
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ALGOL_68
        :edit: https://en.m.wikipedia.org/wiki/ALGOL_68?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ALGOL_68
    :extract: ALGOL 68 is an imperative programming language that was conceived as
      a successor to the ALGOL 60 programming language, designed with the goal of
      a much wider scope of application and more rigorously defined syntax and semantics.
    :extract_html: "<p><b>ALGOL 68</b> is an imperative programming language that
      was conceived as a successor to the ALGOL 60 programming language, designed
      with the goal of a much wider scope of application and more rigorously defined
      syntax and semantics.</p>"
  record/80760f20-b1c8-4bbb-9ab0-83a6319e4e09:
    :type: standard
    :title: P (programming language)
    :displaytitle: P (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q30599213
    :titles:
      :canonical: P_(programming_language)
      :normalized: P (programming language)
      :display: P (programming language)
    :pageid: 53163248
    :lang: en
    :dir: ltr
    :revision: '944562073'
    :tid: 044b4c40-34e9-11eb-8fc3-8fee46bf293a
    :timestamp: '2020-03-08T16:19:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/P_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/P_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/P_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:P_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/P_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/P_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/P_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:P_(programming_language)
    :extract: P is a programming language for asynchronous event-driven programming
      and the IoT that was developed by Microsoft and University of California, Berkeley.
    :extract_html: "<p><b>P</b> is a programming language for asynchronous event-driven
      programming and the IoT that was developed by Microsoft and University of California,
      Berkeley.</p>"
  record/38356312-380a-4100-a6f5-06ee2dba72d2:
    :type: standard
    :title: BLISS
    :displaytitle: BLISS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2877155
    :titles:
      :canonical: BLISS
      :normalized: BLISS
      :display: BLISS
    :pageid: 390261
    :lang: en
    :dir: ltr
    :revision: '973679916'
    :tid: 05c04fc0-321a-11eb-baae-158e30a8f33d
    :timestamp: '2020-08-18T16:15:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BLISS
        :revisions: https://en.wikipedia.org/wiki/BLISS?action=history
        :edit: https://en.wikipedia.org/wiki/BLISS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BLISS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BLISS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BLISS
        :edit: https://en.m.wikipedia.org/wiki/BLISS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BLISS
    :extract: BLISS is a system programming language developed at Carnegie Mellon
      University by W. A. Wulf, D. B. Russell, and A. N. Habermann around 1970. It
      was perhaps the best known systems programming language right up until C made
      its debut a few years later. Since then, C took off and BLISS faded into obscurity.
      When C was in its infancy, a few projects within Bell Labs were debating the
      merits of BLISS vs. C.
    :extract_html: "<p><b>BLISS</b> is a system programming language developed at
      Carnegie Mellon University by W. A. Wulf, D. B. Russell, and A. N. Habermann
      around 1970. It was perhaps the best known systems programming language right
      up until C made its debut a few years later. Since then, C took off and BLISS
      faded into obscurity. When C was in its infancy, a few projects within Bell
      Labs were debating the merits of BLISS vs. C.</p>"
  record/2d65d3f2-7a62-44b9-9c23-a48fdb5e2837:
    :type: standard
    :title: NewLISP
    :displaytitle: newLISP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q827233
    :titles:
      :canonical: NewLISP
      :normalized: NewLISP
      :display: newLISP
    :pageid: 1964813
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e7/Nl_logo_libel_side_color_240X100.png
      :width: 240
      :height: 100
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e7/Nl_logo_libel_side_color_240X100.png
      :width: 240
      :height: 100
    :lang: en
    :dir: ltr
    :revision: '902537071'
    :tid: 82093bb0-2fa3-11eb-b6bd-8d5c8711cac7
    :timestamp: '2019-06-19T14:13:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NewLISP
        :revisions: https://en.wikipedia.org/wiki/NewLISP?action=history
        :edit: https://en.wikipedia.org/wiki/NewLISP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NewLISP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NewLISP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NewLISP
        :edit: https://en.m.wikipedia.org/wiki/NewLISP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NewLISP
    :extract: newLISP is a scripting language which is a dialect of the Lisp family
      of programming languages. It was designed and developed by Lutz Mueller. newLISP
      is free and open-source software released under the GNU General Public License,
      version 3 or later.
    :extract_html: "<p><b>newLISP</b> is a scripting language which is a dialect of
      the Lisp family of programming languages. It was designed and developed by Lutz
      Mueller. newLISP is free and open-source software released under the GNU General
      Public License, version 3 or later.</p>"
  record/1570b989-3381-465b-a336-c9a8af1d04dc:
    :type: standard
    :title: Programming Computable Functions
    :displaytitle: Programming Computable Functions
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7248484
    :titles:
      :canonical: Programming_Computable_Functions
      :normalized: Programming Computable Functions
      :display: Programming Computable Functions
    :pageid: 3239232
    :lang: en
    :dir: ltr
    :revision: '984074849'
    :tid: ef2f24a0-303b-11eb-aa2f-6f89f9bab9eb
    :timestamp: '2020-10-18T00:52:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Programming_Computable_Functions
        :revisions: https://en.wikipedia.org/wiki/Programming_Computable_Functions?action=history
        :edit: https://en.wikipedia.org/wiki/Programming_Computable_Functions?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Programming_Computable_Functions
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Programming_Computable_Functions
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Programming_Computable_Functions
        :edit: https://en.m.wikipedia.org/wiki/Programming_Computable_Functions?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Programming_Computable_Functions
    :extract: In computer science, Programming Computable Functions' (PCF) is a typed
      functional language introduced by Gordon Plotkin in 1977, based on previous
      unpublished material by Dana Scott. It can be considered to be an extended version
      of the typed lambda calculus or a simplified version of modern typed functional
      languages such as ML or Haskell.
    :extract_html: "<p>In computer science, <b>Programming Computable Functions'<i>
      (</i>PCF</b>) is a typed functional language introduced by Gordon Plotkin in
      1977, based on previous unpublished material by Dana Scott. It can be considered
      to be an extended version of the typed lambda calculus or a simplified version
      of modern typed functional languages such as ML or Haskell.</p>"
  record/5e85131d-84e6-409c-891e-78d5e514efbb:
    :type: standard
    :title: Ada (programming language)
    :displaytitle: Ada (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q154755
    :titles:
      :canonical: Ada_(programming_language)
      :normalized: Ada (programming language)
      :display: Ada (programming language)
    :pageid: 1242
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Ada_Mascot_with_slogan.svg/295px-Ada_Mascot_with_slogan.svg.png
      :width: 295
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d6/Ada_Mascot_with_slogan.svg/2470px-Ada_Mascot_with_slogan.svg.png
      :width: 2470
      :height: 2680
    :lang: en
    :dir: ltr
    :revision: '990948123'
    :tid: 6d91f6d0-30ad-11eb-aa8f-89c4da74665f
    :timestamp: '2020-11-27T12:38:11Z'
    :description: High-level programming language first released in 1980
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ada_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ada_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ada_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ada_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ada_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ada_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ada_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ada_(programming_language)
    :extract: Ada is a structured, statically typed, imperative, and object-oriented
      high-level programming language, extended from Pascal and other languages. It
      has built-in language support for design by contract (DbC), extremely strong
      typing, explicit concurrency, tasks, synchronous message passing, protected
      objects, and non-determinism. Ada improves code safety and maintainability by
      using the compiler to find errors in favor of runtime errors. Ada is an international
      technical standard, jointly defined by the International Organization for Standardization
      (ISO), and the International Electrotechnical Commission (IEC). As of 2020,
      the standard, called Ada 2012 informally, is ISO/IEC 8652:2012.
    :extract_html: "<p><b>Ada</b> is a structured, statically typed, imperative, and
      object-oriented high-level programming language, extended from Pascal and other
      languages. It has built-in language support for <i>design by contract</i> (DbC),
      extremely strong typing, explicit concurrency, tasks, synchronous message passing,
      protected objects, and non-determinism. Ada improves code safety and maintainability
      by using the compiler to find errors in favor of runtime errors. Ada is an international
      technical standard, jointly defined by the International Organization for Standardization
      (ISO), and the International Electrotechnical Commission (IEC). As of 2020,
      the standard, called Ada 2012 informally, is ISO/IEC 8652:2012.</p>"
  record/006e6b89-f46e-4d97-8b25-39461b0d05cc:
    :type: standard
    :title: Oriel (scripting language)
    :displaytitle: Oriel (scripting language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7102251
    :titles:
      :canonical: Oriel_(scripting_language)
      :normalized: Oriel (scripting language)
      :display: Oriel (scripting language)
    :pageid: 35116049
    :lang: en
    :dir: ltr
    :revision: '763637282'
    :tid: f3621df0-2de0-11eb-86c3-63df01c22061
    :timestamp: '2017-02-04T09:25:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Oriel_(scripting_language)
        :revisions: https://en.wikipedia.org/wiki/Oriel_(scripting_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Oriel_(scripting_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Oriel_(scripting_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Oriel_(scripting_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Oriel_(scripting_language)
        :edit: https://en.m.wikipedia.org/wiki/Oriel_(scripting_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Oriel_(scripting_language)
    :extract: Oriel is a scripting language released with the Power Tools series of
      instructional books written by the LeBlond Group. Described in its documentation
      as a "graphics-based batch language", it was originally designed for Microsoft
      Windows 3.0 and released with the book Windows 3 Power Tools in 1991. However,
      versions of the language were also bundled with Windows 3.1 Power Tools in 1992
      and Windows NT Power Tools in 1994.
    :extract_html: <p><b>Oriel</b> is a scripting language released with the <i>Power
      Tools</i> series of instructional books written by the LeBlond Group. Described
      in its documentation as a "graphics-based batch language", it was originally
      designed for Microsoft Windows 3.0 and released with the book <i>Windows 3 Power
      Tools</i> in 1991. However, versions of the language were also bundled with
      <i>Windows 3.1 Power Tools</i> in 1992 and <i>Windows NT Power Tools</i> in
      1994.</p>
  record/efd8c3c8-3553-4244-9400-113ab1da0872:
    :type: standard
    :title: Source (programming language)
    :displaytitle: Source (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q85802202
    :titles:
      :canonical: Source_(programming_language)
      :normalized: Source (programming language)
      :display: Source (programming language)
    :pageid: 62661728
    :lang: en
    :dir: ltr
    :revision: '976481084'
    :tid: 52428360-2dea-11eb-a191-37cc93aa2c7f
    :timestamp: '2020-09-03T05:06:23Z'
    :description: family of JavaScript sub-languages
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Source_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Source_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Source_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Source_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Source_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Source_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Source_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Source_(programming_language)
    :extract: Source is a family of sublanguages of JavaScript, developed for the
      textbook Structure and Interpretation of Computer Programs, JavaScript Adaptation.
      The JavaScript sublanguages Source §1, Source §2, Source §3 and Source §4 are
      designed to be just powerful enough to support all examples of the respective
      chapter of the textbook.
    :extract_html: "<p><b>Source</b> is a family of sublanguages of JavaScript, developed
      for the textbook Structure and Interpretation of Computer Programs, JavaScript
      Adaptation. The JavaScript sublanguages Source §1, Source §2, Source §3 and
      Source §4 are designed to be just powerful enough to support all examples of
      the respective chapter of the textbook.</p>"
  record/fbc73374-06ea-4eb8-b155-91cef779a5c9:
    :type: standard
    :title: Little Implementation Language
    :displaytitle: Little Implementation Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6650398
    :titles:
      :canonical: Little_Implementation_Language
      :normalized: Little Implementation Language
      :display: Little Implementation Language
    :pageid: 35320077
    :lang: en
    :dir: ltr
    :revision: '905854877'
    :tid: b543a730-0d86-11ea-8ad3-aff892777e24
    :timestamp: '2019-07-11T22:01:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Little_Implementation_Language
        :revisions: https://en.wikipedia.org/wiki/Little_Implementation_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Little_Implementation_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Little_Implementation_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Little_Implementation_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Little_Implementation_Language
        :edit: https://en.m.wikipedia.org/wiki/Little_Implementation_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Little_Implementation_Language
    :api_urls:
      :summary: https://en.wikipedia.org/api/rest_v1/page/summary/Little_Implementation_Language
      :metadata: https://en.wikipedia.org/api/rest_v1/page/metadata/Little_Implementation_Language
      :references: https://en.wikipedia.org/api/rest_v1/page/references/Little_Implementation_Language
      :media: https://en.wikipedia.org/api/rest_v1/page/media/Little_Implementation_Language
      :edit_html: https://en.wikipedia.org/api/rest_v1/page/html/Little_Implementation_Language
      :talk_page_html: https://en.wikipedia.org/api/rest_v1/page/html/Talk:Little_Implementation_Language
    :extract: LIL, the Little Implementation Language, was a system programming language
      during the early days of Unix history on PDP-11 machines. It was written by
      P. J. Plauger of Bell Labs.
    :extract_html: "<p><b>LIL</b>, the <b>Little Implementation Language</b>, was
      a system programming language during the early days of Unix history on PDP-11
      machines. It was written by P. J. Plauger of Bell Labs.</p>"
  record/814f261b-a015-402f-af9b-c4782e00ff0a:
    :type: standard
    :title: SR (programming language)
    :displaytitle: SR (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q446168
    :titles:
      :canonical: SR_(programming_language)
      :normalized: SR (programming language)
      :display: SR (programming language)
    :pageid: 485875
    :lang: en
    :dir: ltr
    :revision: '910833128'
    :tid: 436b6e20-0cb5-11eb-9aa9-61f742ff0caa
    :timestamp: '2019-08-14T19:32:34Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SR_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SR_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SR_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SR_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SR_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SR_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SR_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SR_(programming_language)
    :extract: SR is a programming language designed for concurrent programming.
    :extract_html: "<p><b>SR</b> is a programming language designed for concurrent
      programming.</p>"
  record/4e28535c-9f21-4f2a-94e9-6dc24f1b442c:
    :type: standard
    :title: Obliq
    :displaytitle: Obliq
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7075164
    :titles:
      :canonical: Obliq
      :normalized: Obliq
      :display: Obliq
    :pageid: 602578
    :lang: en
    :dir: ltr
    :revision: '949045338'
    :tid: cb0c21a0-1b22-11eb-8d77-b37b62ee811d
    :timestamp: '2020-04-04T11:23:25Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Obliq
        :revisions: https://en.wikipedia.org/wiki/Obliq?action=history
        :edit: https://en.wikipedia.org/wiki/Obliq?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Obliq
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Obliq
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Obliq
        :edit: https://en.m.wikipedia.org/wiki/Obliq?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Obliq
    :extract: |-
      Obliq is an interpreted, object-oriented programming language designed to make distributed, and locally multithreaded, computing simpler and easier to program, while providing program safety and an implicit type system. The interpreter is written in Modula-3, and provides Obliq with full access to Modula-3's network objects abilities. A type inference algorithm for record concatenation, subtyping, and recursive types has been developed for Obliq. Further, it has been proved to be NP-complete
      and its lowest complexity to be Ο(n3) or if under other modeling up to certain conditions down to Ο(n2) and its best known implementation runs in Ο(n5).
      Obliq's syntax is very similar to Modula-3, the biggest difference being that Obliq has no need of explicit typed variables although explicit type declarations are allowed and ignored by the interpreter. The basic data types in the language include booleans, integers, reals, characters, strings, and arrays. Obliq supports the usual set of sequential control structures, and special control forms for concurrency. Further, Obliq's objects can be cloned and safely copied remotely by any machine in a distributed network object and it can be done safely and transparently.
    :extract_html: |-
      <p><b>Obliq</b> is an interpreted, object-oriented programming language designed to make distributed, and locally multithreaded, computing simpler and easier to program, while providing program safety and an implicit type system. The interpreter is written in Modula-3, and provides Obliq with full access to Modula-3's network objects abilities. A type inference algorithm for record concatenation, subtyping, and recursive types has been developed for Obliq. Further, it has been proved to be NP-complete
      and its lowest complexity to be <span class="texhtml "><i>Ο</i>(<i>n</i><sup>3</sup>)</span> or if under other modeling up to certain conditions down to <span class="texhtml "><i>Ο</i>(<i>n</i><sup>2</sup>)</span> and its best known implementation runs in <span class="texhtml "><i>Ο</i>(<i>n</i><sup>5</sup>)</span>.
      Obliq's syntax is very similar to Modula-3, the biggest difference being that Obliq has no need of explicit typed variables although explicit type declarations are allowed and ignored by the interpreter. The basic data types in the language include booleans, integers, reals, characters, strings, and arrays. Obliq supports the usual set of sequential control structures, and special control forms for concurrency. Further, Obliq's objects can be cloned and safely copied remotely by any machine in a distributed network object and it can be done safely and transparently.</p>
  record/ffa2c724-ac04-4d1c-8775-be1a88966e16:
    :type: standard
    :title: Rational Synergy
    :displaytitle: Rational Synergy
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2132780
    :titles:
      :canonical: Rational_Synergy
      :normalized: Rational Synergy
      :display: Rational Synergy
    :pageid: 19047417
    :lang: en
    :dir: ltr
    :revision: '984220993'
    :tid: 823bcc20-2d2c-11eb-a16c-6bd4be6f32d8
    :timestamp: '2020-10-18T22:27:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rational_Synergy
        :revisions: https://en.wikipedia.org/wiki/Rational_Synergy?action=history
        :edit: https://en.wikipedia.org/wiki/Rational_Synergy?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rational_Synergy
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rational_Synergy
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rational_Synergy
        :edit: https://en.m.wikipedia.org/wiki/Rational_Synergy?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rational_Synergy
    :extract: Rational Synergy is a software tool that provides software configuration
      management (SCM) capabilities for all artifacts related to software development
      including source code, documents and images as well as the final built software
      executable and libraries. Rational Synergy also provides the repository for
      the change management tool known as Rational Change. Together these two tools
      form an integrated configuration management and change management environment
      that is used in software development organizations that need controlled SCM
      processes and an understanding of what is in a build of their software.
    :extract_html: "<p><b>Rational Synergy</b> is a software tool that provides software
      configuration management (SCM) capabilities for all artifacts related to software
      development including source code, documents and images as well as the final
      built software executable and libraries. Rational Synergy also provides the
      repository for the change management tool known as Rational Change. Together
      these two tools form an integrated configuration management and change management
      environment that is used in software development organizations that need controlled
      SCM processes and an understanding of what is in a build of their software.</p>"
  record/2b26a674-6002-403e-a31e-9e17283a8195:
    :type: standard
    :title: Visual Objects
    :displaytitle: Visual Objects
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1309721
    :titles:
      :canonical: Visual_Objects
      :normalized: Visual Objects
      :display: Visual Objects
    :pageid: 837643
    :lang: en
    :dir: ltr
    :revision: '961800374'
    :tid: 2ac09bf0-1b58-11eb-849d-3140c43b2b18
    :timestamp: '2020-06-10T13:38:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Visual_Objects
        :revisions: https://en.wikipedia.org/wiki/Visual_Objects?action=history
        :edit: https://en.wikipedia.org/wiki/Visual_Objects?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Visual_Objects
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Visual_Objects
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Visual_Objects
        :edit: https://en.m.wikipedia.org/wiki/Visual_Objects?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Visual_Objects
    :extract: Visual Objects is an object-oriented computer programming language that
      is used to create computer programs that operate primarily under Windows. Although
      it can be used as a general-purpose programming tool, it is almost exclusively
      used to create database programs.
    :extract_html: "<p><b>Visual Objects</b> is an object-oriented computer programming
      language that is used to create computer programs that operate primarily under
      Windows. Although it can be used as a general-purpose programming tool, it is
      almost exclusively used to create database programs.</p>"
  record/da563de5-1773-4b8e-8c06-a2918a061185:
    :type: standard
    :title: Uniface (programming language)
    :displaytitle: Uniface (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2143563
    :titles:
      :canonical: Uniface_(programming_language)
      :normalized: Uniface (programming language)
      :display: Uniface (programming language)
    :pageid: 2905637
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Logo_Payoff_RGB.svg/320px-Logo_Payoff_RGB.svg.png
      :width: 320
      :height: 118
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Logo_Payoff_RGB.svg/512px-Logo_Payoff_RGB.svg.png
      :width: 512
      :height: 189
    :lang: en
    :dir: ltr
    :revision: '989181400'
    :tid: 0fc49200-28e3-11eb-81f6-dd293e8d1e8b
    :timestamp: '2020-11-17T14:42:01Z'
    :description: Low-code development platform
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Uniface_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Uniface_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Uniface_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Uniface_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Uniface_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Uniface_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Uniface_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Uniface_(programming_language)
    :extract: Uniface is a low-code development and deployment platform for enterprise
      applications that can run in a large range of runtime environments, including
      mobile, mainframe, web, Service-oriented architecture (SOA), Windows, Java EE
      and .NET. Uniface is a model-driven, Rapid Application Development (RAD) environment
      used to create mission-critical applications.
    :extract_html: "<p><b>Uniface</b> is a low-code development and deployment platform
      for enterprise applications that can run in a large range of runtime environments,
      including mobile, mainframe, web, Service-oriented architecture (SOA), Windows,
      Java EE and .NET. Uniface is a model-driven, Rapid Application Development (RAD)
      environment used to create mission-critical applications.</p>"
  record/9b468ffd-147e-41d7-ab17-486bc11b1fc1:
    :type: standard
    :title: ChucK
    :displaytitle: ChucK
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q850484
    :titles:
      :canonical: ChucK
      :normalized: ChucK
      :display: ChucK
    :pageid: 478750
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6a/ChucK_logo2.jpg
      :width: 200
      :height: 180
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6a/ChucK_logo2.jpg
      :width: 200
      :height: 180
    :lang: en
    :dir: ltr
    :revision: '981236189'
    :tid: bfc4a1a0-1af0-11eb-ab2c-6701a0f06421
    :timestamp: '2020-10-01T03:07:13Z'
    :description: Audio programming language for real-time synthesis, composition,
      and performance
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ChucK
        :revisions: https://en.wikipedia.org/wiki/ChucK?action=history
        :edit: https://en.wikipedia.org/wiki/ChucK?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ChucK
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ChucK
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ChucK
        :edit: https://en.m.wikipedia.org/wiki/ChucK?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ChucK
    :extract: |-
      ChucK is a concurrent, strongly timed audio programming language for real-time synthesis, composition, and performance,
      which runs on Linux, Mac OS X, Microsoft Windows, and iOS. It is designed to favor readability and flexibility for the programmer over other considerations such as raw performance. It natively supports deterministic concurrency and multiple, simultaneous, dynamic control rates. Another key feature is the ability to live code; adding, removing, and modifying code on the fly, while the program is running, without stopping or restarting. It has a highly precise timing/concurrency model, allowing for arbitrarily fine granularity. It offers composers and researchers a powerful and flexible programming tool for building and experimenting with complex audio synthesis programs, and real-time interactive control.
    :extract_html: |-
      <p><b>ChucK</b> is a concurrent, strongly timed audio programming language for real-time synthesis, composition, and performance,
      which runs on Linux, Mac OS X, Microsoft Windows, and iOS. It is designed to favor readability and flexibility for the programmer over other considerations such as raw performance. It natively supports deterministic concurrency and multiple, simultaneous, dynamic control rates. Another key feature is the ability to live code; adding, removing, and modifying code on the fly, while the program is running, without stopping or restarting. It has a highly precise timing/concurrency model, allowing for arbitrarily fine granularity. It offers composers and researchers a powerful and flexible programming tool for building and experimenting with complex audio synthesis programs, and real-time interactive control.</p>
  record/c0fa4a25-9206-4ffb-b25e-2ac5ff910471:
    :type: standard
    :title: TTCN
    :displaytitle: TTCN
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2007031
    :titles:
      :canonical: TTCN
      :normalized: TTCN
      :display: TTCN
    :pageid: 780024
    :lang: en
    :dir: ltr
    :revision: '984506788'
    :tid: 07d5f040-12d4-11eb-9e6c-0f67df0637a0
    :timestamp: '2020-10-20T12:59:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TTCN
        :revisions: https://en.wikipedia.org/wiki/TTCN?action=history
        :edit: https://en.wikipedia.org/wiki/TTCN?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TTCN
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TTCN
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TTCN
        :edit: https://en.m.wikipedia.org/wiki/TTCN?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TTCN
    :extract: |-
      TTCN is a programming language used for testing of communication protocols and web services. A TTCN test suite consists of many test cases written in the TTCN programming language.
      Until version 2 the language was written in tables and called Tree and Tabular Combined Notation. Reading and editing this language required special TTCN editors. Beginning with version 3 TTCN was renamed to Testing and Test Control Notation. It is now closer to current programming languages and can be edited with traditional editors. TTCN-3 is more flexible than TTCN-2 in that it can be used for protocol testing as well as testing traditional software.
    :extract_html: |-
      <p><b>TTCN</b> is a programming language used for testing of communication protocols and web services. A TTCN test suite consists of many test cases written in the TTCN programming language.
      Until version 2 the language was written in tables and called <i><b>Tree and Tabular Combined Notation</b></i>. Reading and editing this language required special TTCN editors. Beginning with version 3 TTCN was renamed to <i><b>Testing and Test Control Notation</b></i>. It is now closer to current programming languages and can be edited with traditional editors. TTCN-3 is more flexible than TTCN-2 in that it can be used for protocol testing as well as testing traditional software.</p>
  record/2860a3bd-433e-4bb5-b6ab-41e20cad10e8:
    :type: standard
    :title: Z notation
    :displaytitle: Z notation
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1430781
    :titles:
      :canonical: Z_notation
      :normalized: Z notation
      :display: Z notation
    :pageid: 34521
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Agendacumple_en_Z.svg/214px-Agendacumple_en_Z.svg.png
      :width: 214
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/67/Agendacumple_en_Z.svg/403px-Agendacumple_en_Z.svg.png
      :width: 403
      :height: 603
    :lang: en
    :dir: ltr
    :revision: '965617132'
    :tid: cd561af0-2f55-11eb-8174-23622063659b
    :timestamp: '2020-07-02T11:29:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Z_notation
        :revisions: https://en.wikipedia.org/wiki/Z_notation?action=history
        :edit: https://en.wikipedia.org/wiki/Z_notation?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Z_notation
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Z_notation
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Z_notation
        :edit: https://en.m.wikipedia.org/wiki/Z_notation?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Z_notation
    :extract: The Z notation is a formal specification language used for describing
      and modelling computing systems. It is targeted at the clear specification of
      computer programs and computer-based systems in general.
    :extract_html: "<p>The <b>Z notation</b> is a formal specification language used
      for describing and modelling computing systems. It is targeted at the clear
      specification of computer programs and computer-based systems in general.</p>"
  record/b873bb81-ed78-4154-bb82-3c49b21174ca:
    :type: standard
    :title: Argus (programming language)
    :displaytitle: Argus (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3622471
    :titles:
      :canonical: Argus_(programming_language)
      :normalized: Argus (programming language)
      :display: Argus (programming language)
    :pageid: 27580389
    :lang: en
    :dir: ltr
    :revision: '918325974'
    :tid: 5db4d6b0-1bc2-11eb-a10b-812de49dea1b
    :timestamp: '2019-09-28T03:34:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Argus_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Argus_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Argus_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Argus_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Argus_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Argus_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Argus_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Argus_(programming_language)
    :extract: Argus is a programming language created at MIT by Barbara Liskov between
      1982 and 1988, in collaboration with Maurice Herlihy, Paul Johnson, Robert Scheifler,
      and William Weihl. It is an extension of the CLU language, and utilizes most
      of the same syntax and semantics. Argus was designed to support the creation
      of distributed programs, by encapsulating related procedures within objects
      called guardians, and by supporting atomic operations called actions.
    :extract_html: "<p><b>Argus</b> is a programming language created at MIT by Barbara
      Liskov between 1982 and 1988, in collaboration with Maurice Herlihy, Paul Johnson,
      Robert Scheifler, and William Weihl. It is an extension of the CLU language,
      and utilizes most of the same syntax and semantics. Argus was designed to support
      the creation of distributed programs, by encapsulating related procedures within
      objects called <i>guardians</i>, and by supporting atomic operations called
      <i>actions</i>.</p>"
  record/4bb04715-ca6a-44f4-9365-f4d741b84d85:
    :type: standard
    :title: Occam (programming language)
    :displaytitle: occam (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q838062
    :titles:
      :canonical: Occam_(programming_language)
      :normalized: Occam (programming language)
      :display: occam (programming language)
    :pageid: 22660
    :lang: en
    :dir: ltr
    :revision: '991648906'
    :tid: 4d6dd550-3386-11eb-9910-cdb6a1d2b3ab
    :timestamp: '2020-12-01T03:35:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Occam_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Occam_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Occam_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Occam_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Occam_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Occam_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Occam_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Occam_(programming_language)
    :extract: occam is a programming language which is concurrent and builds on the
      communicating sequential processes (CSP) process algebra, and shares many of
      its features. It is named after philosopher William of Ockham after whom Occam's
      razor is named.
    :extract_html: "<p><b>occam</b> is a programming language which is concurrent
      and builds on the communicating sequential processes (CSP) process algebra,
      and shares many of its features. It is named after philosopher William of Ockham
      after whom Occam's razor is named.</p>"
  record/78386089-216d-454c-ba49-086f7847567a:
    :type: standard
    :title: Secure Operations Language
    :displaytitle: Secure Operations Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7424380
    :titles:
      :canonical: Secure_Operations_Language
      :normalized: Secure Operations Language
      :display: Secure Operations Language
    :pageid: 4536722
    :lang: en
    :dir: ltr
    :revision: '951521671'
    :tid: e341eab0-35db-11eb-8148-cd2dc9f73ac7
    :timestamp: '2020-04-17T16:00:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Secure_Operations_Language
        :revisions: https://en.wikipedia.org/wiki/Secure_Operations_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Secure_Operations_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Secure_Operations_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Secure_Operations_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Secure_Operations_Language
        :edit: https://en.m.wikipedia.org/wiki/Secure_Operations_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Secure_Operations_Language
    :extract: "The Secure Operations Language (SOL) was developed jointly by the United
      States Naval Research Laboratory and Utah State University in the United States.
      SOL is a domain-specific synchronous programming language for developing distributed
      applications and is based on software engineering principles developed in the
      Software Cost Reduction project at the Naval Research Laboratory in the late
      1970s and early 1980s. SOL is intended to be a domain-specific language for
      developing service-based systems. Concurrently, a domain-specific extension
      of Java (SOLj) is being developed \nApplication domains include sensor networks,
      defense and space systems, healthcare delivery, power control, etc."
    :extract_html: "<p>The <b>Secure Operations Language</b> (<b>SOL</b>) was developed
      jointly by the United States Naval Research Laboratory and Utah State University
      in the United States. SOL is a domain-specific synchronous programming language
      for developing distributed applications and is based on software engineering
      principles developed in the Software Cost Reduction project at the Naval Research
      Laboratory in the late 1970s and early 1980s. SOL is intended to be a domain-specific
      language for developing service-based systems. Concurrently, a domain-specific
      extension of Java (SOLj) is being developed \nApplication domains include sensor
      networks, defense and space systems, healthcare delivery, power control, etc.</p>"
  record/0c94244f-52b6-4771-a37e-44123458e609:
    :type: standard
    :title: Ladder logic
    :displaytitle: Ladder logic
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1411875
    :titles:
      :canonical: Ladder_logic
      :normalized: Ladder logic
      :display: Ladder logic
    :pageid: 66251
    :lang: en
    :dir: ltr
    :revision: '983383087'
    :tid: a40436d0-1a44-11eb-933e-3b1954c69386
    :timestamp: '2020-10-13T23:04:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ladder_logic
        :revisions: https://en.wikipedia.org/wiki/Ladder_logic?action=history
        :edit: https://en.wikipedia.org/wiki/Ladder_logic?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ladder_logic
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ladder_logic
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ladder_logic
        :edit: https://en.m.wikipedia.org/wiki/Ladder_logic?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ladder_logic
    :extract: Ladder logic was originally a written method to document the design
      and construction of relay racks as used in manufacturing and process control.
      Each device in the relay rack would be represented by a symbol on the ladder
      diagram with connections between those devices shown. In addition, other items
      external to the relay rack such as pumps, heaters, and so forth would also be
      shown on the ladder diagram.
    :extract_html: "<p><b>Ladder logic</b> was originally a written method to document
      the design and construction of relay racks as used in manufacturing and process
      control. Each device in the relay rack would be represented by a symbol on the
      ladder diagram with connections between those devices shown. In addition, other
      items external to the relay rack such as pumps, heaters, and so forth would
      also be shown on the ladder diagram.</p>"
  record/b538f1a0-1741-44f9-b4c1-4d753fb00760:
    :type: standard
    :title: Rlab
    :displaytitle: Rlab
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7339173
    :titles:
      :canonical: Rlab
      :normalized: Rlab
      :display: Rlab
    :pageid: 593529
    :lang: en
    :dir: ltr
    :revision: '869221711'
    :tid: 566be150-35b7-11eb-9694-0f9a2716579e
    :timestamp: '2018-11-17T05:23:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rlab
        :revisions: https://en.wikipedia.org/wiki/Rlab?action=history
        :edit: https://en.wikipedia.org/wiki/Rlab?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rlab
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rlab
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rlab
        :edit: https://en.m.wikipedia.org/wiki/Rlab?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rlab
    :extract: Rlab is an interactive, interpreted numerical computation program and
      its core programming language, written by Ian Searle. Rlab is very high level
      and is intended to provide fast prototyping and program development, as well
      as easy data-visualization, and processing.
    :extract_html: "<p><b>Rlab</b> is an interactive, interpreted numerical computation
      program and its core programming language, written by Ian Searle. Rlab is very
      high level and is intended to provide fast prototyping and program development,
      as well as easy data-visualization, and processing.</p>"
  record/050c6a54-53dc-4860-99b3-bdc1263131fc:
    :type: standard
    :title: DBase
    :displaytitle: dBase
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q300971
    :titles:
      :canonical: DBase
      :normalized: DBase
      :display: dBase
    :pageid: 209537
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/00/DBaseLogo_BlackWithRed_glass_300.png
      :width: 300
      :height: 101
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/00/DBaseLogo_BlackWithRed_glass_300.png
      :width: 300
      :height: 101
    :lang: en
    :dir: ltr
    :revision: '991279033'
    :tid: c37e8590-320b-11eb-a2c4-61ff5667767b
    :timestamp: '2020-11-29T06:26:03Z'
    :description: Database management system
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DBase
        :revisions: https://en.wikipedia.org/wiki/DBase?action=history
        :edit: https://en.wikipedia.org/wiki/DBase?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DBase
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DBase
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DBase
        :edit: https://en.m.wikipedia.org/wiki/DBase?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DBase
    :extract: dBase was one of the first database management systems for microcomputers,
      and the most successful in its day. The dBase system includes the core database
      engine, a query system, a forms engine, and a programming language that ties
      all of these components together. dBase's underlying file format, the .dbf file,
      is widely used in applications needing a simple format to store structured data.
    :extract_html: <p><b>dBase</b> was one of the first database management systems
      for microcomputers, and the most successful in its day. The dBase system includes
      the core database engine, a query system, a forms engine, and a programming
      language that ties all of these components together. dBase's underlying file
      format, the <span class="monospaced">.dbf</span> file, is widely used in applications
      needing a simple format to store structured data.</p>
  record/ca5dca20-b14c-4caf-b2b2-45cb66a59862:
    :type: standard
    :title: Fantom (programming language)
    :displaytitle: Fantom (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2699404
    :titles:
      :canonical: Fantom_(programming_language)
      :normalized: Fantom (programming language)
      :display: Fantom (programming language)
    :pageid: 18969637
    :lang: en
    :dir: ltr
    :revision: '991289920'
    :tid: 58ff46d0-321c-11eb-88e2-0f08519e02ac
    :timestamp: '2020-11-29T08:24:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Fantom_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Fantom_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Fantom_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Fantom_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Fantom_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Fantom_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Fantom_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Fantom_(programming_language)
    :extract: Fantom is a general purpose object-oriented programming language created
      by Brian and Andy Frank that runs on the Java Runtime Environment (JRE), JavaScript,
      and the .NET Common Language Runtime (CLR). Its primary design goal is to provide
      a standard library API that abstracts away the question of whether the code
      will ultimately run on the JRE or CLR. Like C# and Java, Fantom uses a curly
      brace syntax. The language supports functional programming through closures
      and concurrency through the Actor model. Fantom takes a "middle of the road"
      approach to its type system, blending together aspects of both static and dynamic
      typing.
    :extract_html: <p><b>Fantom</b> is a general purpose object-oriented programming
      language created by Brian and Andy Frank that runs on the Java Runtime Environment
      (JRE), JavaScript, and the .NET Common Language Runtime (CLR). Its primary design
      goal is to provide a standard library API that abstracts away the question of
      whether the code will ultimately run on the JRE or CLR. Like C# and Java, Fantom
      uses a curly brace syntax. The language supports functional programming through
      closures and concurrency through the Actor model. Fantom takes a "middle of
      the road" approach to its type system, blending together aspects of both static
      and dynamic typing.</p>
  record/58257902-4ae9-4fa4-acc9-452f242764d5:
    :type: standard
    :title: Forth (programming language)
    :displaytitle: Forth (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q275472
    :titles:
      :canonical: Forth_(programming_language)
      :normalized: Forth (programming language)
      :display: Forth (programming language)
    :pageid: 11012
    :lang: en
    :dir: ltr
    :revision: '990810106'
    :tid: f9335f90-3007-11eb-887b-6f4457b5e6c2
    :timestamp: '2020-11-26T16:53:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Forth_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Forth_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Forth_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Forth_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Forth_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Forth_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Forth_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Forth_(programming_language)
    :extract: Forth is an imperative stack-based computer programming language and
      environment originally designed by Chuck Moore. Language features include structured
      programming, reflection, concatenative programming and extensibility. Although
      not an acronym, the language's name is sometimes spelled with all capital letters
      as FORTH, following the customary usage during its earlier years.
    :extract_html: "<p><b>Forth</b> is an imperative stack-based computer programming
      language and environment originally designed by Chuck Moore. Language features
      include structured programming, reflection, concatenative programming and extensibility.
      Although not an acronym, the language's name is sometimes spelled with all capital
      letters as FORTH, following the customary usage during its earlier years.</p>"
  record/d0e1a411-2012-487f-bb4e-240726dcb7bf:
    :type: standard
    :title: Zig (programming language)
    :displaytitle: Zig (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q51885456
    :titles:
      :canonical: Zig_(programming_language)
      :normalized: Zig (programming language)
      :display: Zig (programming language)
    :pageid: 61049743
    :lang: en
    :dir: ltr
    :revision: '987825399'
    :tid: 46c4c360-228f-11eb-862d-adf380f46d56
    :timestamp: '2020-11-09T13:27:09Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Zig_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Zig_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Zig_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Zig_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Zig_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Zig_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Zig_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Zig_(programming_language)
    :extract: |-
      Zig is an imperative, general-purpose, statically typed, compiled system programming language designed by Andrew Kelley. The language is designed for "robustness, optimality and maintainability"

      , supporting compile-time generics and reflection, cross-compilation and manual memory management. A major goal of the language is to compete with C, while also taking inspiration from Rust, among others.
    :extract_html: |-
      <p><b>Zig</b> is an imperative, general-purpose, statically typed, compiled system programming language designed by Andrew Kelley. The language is designed for "robustness, optimality and maintainability"

      , supporting compile-time generics and reflection, cross-compilation and manual memory management. A major goal of the language is to compete with C, while also taking inspiration from Rust, among others.</p>
  record/31dd69f7-6d78-40cc-a4a9-bc5dd23dbf84:
    :type: standard
    :title: Orc (programming language)
    :displaytitle: Orc (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7100142
    :titles:
      :canonical: Orc_(programming_language)
      :normalized: Orc (programming language)
      :display: Orc (programming language)
    :pageid: 13345244
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5e/Orc_programming_language_logo.png
      :width: 108
      :height: 108
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5e/Orc_programming_language_logo.png
      :width: 108
      :height: 108
    :lang: en
    :dir: ltr
    :revision: '981881291'
    :tid: d878f730-27cc-11eb-a9af-4dcc2a9b626c
    :timestamp: '2020-10-04T23:40:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Orc_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Orc_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Orc_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Orc_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Orc_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Orc_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Orc_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Orc_(programming_language)
    :extract: Orc is a concurrent, nondeterministic computer programming language
      created by Jayadev Misra at the University of Texas at Austin.
    :extract_html: "<p><b>Orc</b> is a concurrent, nondeterministic computer programming
      language created by Jayadev Misra at the University of Texas at Austin.</p>"
  record/d4ea691d-13d6-4562-a95a-682a017b3349:
    :type: standard
    :title: Cecil (programming language)
    :displaytitle: Cecil (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7427136
    :titles:
      :canonical: Cecil_(programming_language)
      :normalized: Cecil (programming language)
      :display: Cecil (programming language)
    :pageid: 527946
    :lang: en
    :dir: ltr
    :revision: '813019881'
    :tid: 863ac2d0-35b6-11eb-b03e-bd15a78f0e73
    :timestamp: '2017-12-01T07:15:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cecil_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cecil_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cecil_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cecil_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cecil_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cecil_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cecil_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cecil_(programming_language)
    :extract: Cecil is a pure object-oriented programming language that was developed
      by Craig Chambers at the University of Washington in 1992 to be part of the
      Vortex project there. Cecil has many similarities to other object-oriented languages,
      most notably Objective-C, Modula-3, and Self. The main goals of the project
      were extensibility, orthogonality, efficiency, and ease-of-use.
    :extract_html: "<p><b>Cecil</b> is a pure object-oriented programming language
      that was developed by Craig Chambers at the University of Washington in 1992
      to be part of the Vortex project there. Cecil has many similarities to other
      object-oriented languages, most notably Objective-C, Modula-3, and Self. The
      main goals of the project were extensibility, orthogonality, efficiency, and
      ease-of-use.</p>"
  record/d5b28bc7-0d91-4823-9a04-63aa8592714d:
    :type: standard
    :title: JavaScript
    :displaytitle: JavaScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2005
    :titles:
      :canonical: JavaScript
      :normalized: JavaScript
      :display: JavaScript
    :pageid: 9845
    :lang: en
    :dir: ltr
    :revision: '992238514'
    :tid: 8d268170-35f6-11eb-b942-b9f7cb0a2647
    :timestamp: '2020-12-04T06:04:11Z'
    :description: High-level programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JavaScript
        :revisions: https://en.wikipedia.org/wiki/JavaScript?action=history
        :edit: https://en.wikipedia.org/wiki/JavaScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JavaScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JavaScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JavaScript
        :edit: https://en.m.wikipedia.org/wiki/JavaScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JavaScript
    :extract: JavaScript, often abbreviated as JS, is a programming language that
      conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time
      compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based
      object-orientation, and first-class functions.
    :extract_html: "<p><b>JavaScript</b>, often abbreviated as <b>JS</b>, is a programming
      language that conforms to the ECMAScript specification. JavaScript is high-level,
      often just-in-time compiled, and multi-paradigm. It has curly-bracket syntax,
      dynamic typing, prototype-based object-orientation, and first-class functions.</p>"
  record/1444f914-89d8-4084-aa3f-70bf4dd6b5fe:
    :type: standard
    :title: SAS (software)
    :displaytitle: SAS (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2003932
    :titles:
      :canonical: SAS_(software)
      :normalized: SAS (software)
      :display: SAS (software)
    :pageid: 990677
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/e/e8/SAS_9_on_Microsoft_Windows.png/320px-SAS_9_on_Microsoft_Windows.png
      :width: 320
      :height: 231
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/e/e8/SAS_9_on_Microsoft_Windows.png
      :width: 372
      :height: 268
    :lang: en
    :dir: ltr
    :revision: '991320754'
    :tid: 4973de20-3243-11eb-aba9-c93d703fe600
    :timestamp: '2020-11-29T13:03:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SAS_(software)
        :revisions: https://en.wikipedia.org/wiki/SAS_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/SAS_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SAS_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SAS_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SAS_(software)
        :edit: https://en.m.wikipedia.org/wiki/SAS_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SAS_(software)
    :extract: SAS is a statistical software suite developed by SAS Institute for data
      management, advanced analytics, multivariate analysis, business intelligence,
      criminal investigation, and predictive analytics.
    :extract_html: "<p><b>SAS</b> is a statistical software suite developed by SAS
      Institute for data management, advanced analytics, multivariate analysis, business
      intelligence, criminal investigation, and predictive analytics.</p>"
  record/eb9bc22f-e557-49ff-84ab-4041b6e2bdc5:
    :type: standard
    :title: Clarion (programming language)
    :displaytitle: Clarion (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1095608
    :titles:
      :canonical: Clarion_(programming_language)
      :normalized: Clarion (programming language)
      :display: Clarion (programming language)
    :pageid: 508614
    :lang: en
    :dir: ltr
    :revision: '983271606'
    :tid: 856b8bf0-35b6-11eb-9b7c-a578bf8f95fd
    :timestamp: '2020-10-13T08:30:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Clarion_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Clarion_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Clarion_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Clarion_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Clarion_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Clarion_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Clarion_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Clarion_(programming_language)
    :extract: Clarion is a commercial, proprietary, fourth-generation programming
      language (4GL), multi-paradigm, programming language and integrated development
      environment (IDE) from SoftVelocity used to program database applications. It
      is compatible with indexed sequential access method (ISAM), Structured Query
      Language (SQL), and ActiveX Data Objects (ADO) data access methods, reads and
      writes several flat file desktop database formats including ASCII, comma-separated
      values (CSV), DOS (binary), FoxPro, Clipper, dBase, and some relational databases
      via ODBC, Microsoft SQL Server, Sybase SQL Anywhere, and Oracle Database through
      the use of accelerated native database drivers, and XML, Clarion can be used
      to output to HTML, XML, plain text, and Portable Document Format (PDF), among
      others.
    :extract_html: "<p><b>Clarion</b> is a commercial, proprietary, fourth-generation
      programming language (4GL), multi-paradigm, programming language and integrated
      development environment (IDE) from SoftVelocity used to program database applications.
      It is compatible with <i>indexed sequential access method</i> (ISAM), <i>Structured
      Query Language</i> (SQL), and <i>ActiveX Data Objects</i> (ADO) data access
      methods, reads and writes several flat file desktop database formats including
      ASCII, comma-separated values (CSV), DOS (binary), FoxPro, Clipper, dBase, and
      some relational databases via ODBC, Microsoft SQL Server, Sybase SQL Anywhere,
      and Oracle Database through the use of accelerated native database drivers,
      and XML, Clarion can be used to output to HTML, XML, plain text, and Portable
      Document Format (PDF), among others.</p>"
  record/711db561-9fca-4988-bc03-963eb663e01b:
    :type: standard
    :title: Hopscotch (programming language)
    :displaytitle: Hopscotch (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17091945
    :titles:
      :canonical: Hopscotch_(programming_language)
      :normalized: Hopscotch (programming language)
      :display: Hopscotch (programming language)
    :pageid: 39338454
    :lang: en
    :dir: ltr
    :revision: '986236173'
    :tid: 3fd6a9b0-1ace-11eb-8cb5-b7011d178ffb
    :timestamp: '2020-10-30T16:37:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hopscotch_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hopscotch_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hopscotch_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hopscotch_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hopscotch_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hopscotch_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hopscotch_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hopscotch_(programming_language)
    :extract: Hopscotch is a visual programming language developed by Hopscotch Technologies,
      designed to allow young or beginner programmers to develop simple projects.
      Its simple UI allows its users to drag and drop blocks to create scripts that
      can be played when activated. Although the language is easy to use for simple
      programming, it lacks the power to be used for more complex programs. The use
      of the language is through an iPad or iPhone supporting Hopscotch.
    :extract_html: "<p><b>Hopscotch</b> is a visual programming language developed
      by Hopscotch Technologies, designed to allow young or beginner programmers to
      develop simple projects. Its simple UI allows its users to drag and drop blocks
      to create scripts that can be played when activated. Although the language is
      easy to use for simple programming, it lacks the power to be used for more complex
      programs. The use of the language is through an iPad or iPhone supporting Hopscotch.</p>"
  record/d820eeca-3654-4969-a115-4251f22d2e9c:
    :type: standard
    :title: JEAN
    :displaytitle: JEAN
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6108047
    :titles:
      :canonical: JEAN
      :normalized: JEAN
      :display: JEAN
    :pageid: 22203007
    :lang: en
    :dir: ltr
    :revision: '967094644'
    :tid: 5f9bdab0-1b08-11eb-8f3a-f155ed169998
    :timestamp: '2020-07-11T03:28:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JEAN
        :revisions: https://en.wikipedia.org/wiki/JEAN?action=history
        :edit: https://en.wikipedia.org/wiki/JEAN?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JEAN
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JEAN
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JEAN
        :edit: https://en.m.wikipedia.org/wiki/JEAN?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JEAN
    :extract: JEAN was a dialect of the JOSS programming language developed for and
      used on ICT 1900 series computers in the late 1960s and early 1970s; it was
      implemented under the MINIMOP operating system. It was used at the University
      of Southampton.
    :extract_html: "<p><b>JEAN</b> was a dialect of the JOSS programming language
      developed for and used on ICT 1900 series computers in the late 1960s and early
      1970s; it was implemented under the MINIMOP operating system. It was used at
      the University of Southampton.</p>"
  record/a0ae46f3-1599-4589-a669-6f0664057c55:
    :type: standard
    :title: LSE (programming language)
    :displaytitle: LSE (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3206154
    :titles:
      :canonical: LSE_(programming_language)
      :normalized: LSE (programming language)
      :display: LSE (programming language)
    :pageid: 11730351
    :lang: en
    :dir: ltr
    :revision: '988653240'
    :tid: 53ad4f70-3568-11eb-84f4-67b3c376c7ca
    :timestamp: '2020-11-14T13:25:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LSE_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/LSE_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/LSE_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LSE_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LSE_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LSE_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/LSE_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LSE_(programming_language)
    :extract: LSE is a programming language developed at Supélec and Télémécanique
      from the late 1960s to the mid 1970s.It is similar to BASIC, except with French-language
      instead of English-language keywords. It was derived from an earlier language
      called LSD, also developed at Supélec. It is most commonly said to be an acronym
      for Langage Symbolique d'Enseignement, but other expansions are also known.
    :extract_html: "<p><b>LSE</b> is a programming language developed at Supélec and
      Télémécanique from the late 1960s to the mid 1970s.It is similar to BASIC, except
      with French-language instead of English-language keywords. It was derived from
      an earlier language called <i>LSD</i>, also developed at Supélec. It is most
      commonly said to be an acronym for <i>Langage Symbolique d'Enseignement</i>,
      but other expansions are also known.</p>"
  record/0591e675-cd19-49d8-9ae2-599221657d23:
    :type: standard
    :title: Transaction Application Language
    :displaytitle: Transaction Application Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q389350
    :titles:
      :canonical: Transaction_Application_Language
      :normalized: Transaction Application Language
      :display: Transaction Application Language
    :pageid: 1558864
    :lang: en
    :dir: ltr
    :revision: '921769913'
    :tid: d0cf0080-eb66-11ea-880c-dba40a2f2ade
    :timestamp: '2019-10-17T19:44:27Z'
    :description: block-structured, procedural language optimized for use on Tandem
      hardware
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Transaction_Application_Language
        :revisions: https://en.wikipedia.org/wiki/Transaction_Application_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Transaction_Application_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Transaction_Application_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Transaction_Application_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Transaction_Application_Language
        :edit: https://en.m.wikipedia.org/wiki/Transaction_Application_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Transaction_Application_Language
    :extract: Transaction Application Language or TAL is a block-structured, procedural
      language optimized for use on Tandem hardware. TAL resembles a cross between
      C and Pascal. It was the original system programming language for the Tandem
      CISC machines, which had no assembler.
    :extract_html: "<p><b>Transaction Application Language</b> or <b>TAL</b> is a
      block-structured, procedural language optimized for use on Tandem hardware.
      TAL resembles a cross between C and Pascal. It was the original system programming
      language for the Tandem CISC machines, which had no assembler.</p>"
  record/ae101280-0cc7-46f7-8991-c778d8f708ed:
    :type: standard
    :title: Blockly
    :displaytitle: Blockly
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q18202981
    :titles:
      :canonical: Blockly
      :normalized: Blockly
      :display: Blockly
    :pageid: 44494473
    :lang: en
    :dir: ltr
    :revision: '983296372'
    :tid: '04494450-2d31-11eb-980c-99010ca5d98e'
    :timestamp: '2020-10-13T12:37:05Z'
    :description: JavaScript library
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Blockly
        :revisions: https://en.wikipedia.org/wiki/Blockly?action=history
        :edit: https://en.wikipedia.org/wiki/Blockly?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Blockly
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Blockly
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Blockly
        :edit: https://en.m.wikipedia.org/wiki/Blockly?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Blockly
    :extract: Blockly is a client-side library for the programming language JavaScript
      for creating block-based visual programming languages (VPLs) and editors. It
      is a project of Google and is free and open-source software released under the
      Apache License 2.0. It typically runs in a web browser, and visually resembles
      the language Scratch. Blockly is also being implemented for the mobile operating
      systems Android and iOS, though not all web browser based features are available
      for these.
    :extract_html: "<p><b>Blockly</b> is a client-side library for the programming
      language JavaScript for creating block-based visual programming languages (VPLs)
      and editors. It is a project of Google and is free and open-source software
      released under the Apache License 2.0. It typically runs in a web browser, and
      visually resembles the language Scratch. Blockly is also being implemented for
      the mobile operating systems Android and iOS, though not all web browser based
      features are available for these.</p>"
  record/7e5fce64-c7bb-46fb-86a5-8318d5838fc2:
    :type: standard
    :title: SA-C (programming language)
    :displaytitle: SA-C (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7388405
    :titles:
      :canonical: SA-C_(programming_language)
      :normalized: SA-C (programming language)
      :display: SA-C (programming language)
    :pageid: 8787221
    :lang: en
    :dir: ltr
    :revision: '980312024'
    :tid: 7ae66570-ff69-11ea-8e75-31f7a821db36
    :timestamp: '2020-09-25T19:58:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SA-C_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SA-C_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SA-C_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SA-C_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SA-C_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SA-C_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SA-C_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SA-C_(programming_language)
    :extract: Single Assignment C (SA-C) is a member of the C programming language
      family designed to be directly and intuitively translatable into circuits, including
      FPGAs. To ease translation, SA-C does not include pointers and arithmetics thereon.
      To retain most of the expressiveness of C, SA-C instead features true n-dimensional
      arrays as first-class objects of the language.
    :extract_html: "<p><b>Single Assignment C</b> (<b>SA-C</b>) is a member of the
      C programming language family designed to be directly and intuitively translatable
      into circuits, including FPGAs. To ease translation, SA-C does not include pointers
      and arithmetics thereon. To retain most of the expressiveness of C, SA-C instead
      features true n-dimensional arrays as first-class objects of the language.</p>"
  record/99925b52-12ee-459d-99b5-6765922d93c7:
    :type: standard
    :title: Pict (programming language)
    :displaytitle: Pict (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7191089
    :titles:
      :canonical: Pict_(programming_language)
      :normalized: Pict (programming language)
      :display: Pict (programming language)
    :pageid: 6751312
    :lang: en
    :dir: ltr
    :revision: '877341630'
    :tid: '088c6160-35e6-11eb-990f-592b926de1e1'
    :timestamp: '2019-01-08T02:21:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pict_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pict_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pict_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pict_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pict_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pict_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pict_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pict_(programming_language)
    :extract: Pict is a statically typed programming language, one of the very few
      based on the π-calculus. Work on the language began at the University of Edinburgh
      in 1992, and development has been more or less dormant since 1998. The language
      is still at an experimental stage.
    :extract_html: "<p><b>Pict</b> is a statically typed programming language, one
      of the very few based on the π-calculus. Work on the language began at the University
      of Edinburgh in 1992, and development has been more or less dormant since 1998.
      The language is still at an experimental stage.</p>"
  record/74a446bc-e42a-4b1c-97e0-3f7d276e9464:
    :type: standard
    :title: Modelica
    :displaytitle: Modelica
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q385325
    :titles:
      :canonical: Modelica
      :normalized: Modelica
      :display: Modelica
    :pageid: 1467946
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/0/0e/Modelica_Language.png/320px-Modelica_Language.png
      :width: 320
      :height: 160
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0e/Modelica_Language.png
      :width: 783
      :height: 392
    :lang: en
    :dir: ltr
    :revision: '972785907'
    :tid: 1222fc00-1c0c-11eb-a7c2-9dca517a6039
    :timestamp: '2020-08-13T20:11:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Modelica
        :revisions: https://en.wikipedia.org/wiki/Modelica?action=history
        :edit: https://en.wikipedia.org/wiki/Modelica?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Modelica
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Modelica
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Modelica
        :edit: https://en.m.wikipedia.org/wiki/Modelica?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Modelica
    :extract: |-
      Modelica is an object-oriented, declarative, multi-domain modeling language for component-oriented modeling of complex systems, e.g., systems containing mechanical, electrical, electronic, hydraulic, thermal, control, electric power or process-oriented subcomponents.
      The free Modelica language
      is developed by the non-profit Modelica Association. The Modelica Association also develops the free Modelica Standard Library that contains about 1400 generic model components and 1200 functions in various domains, as of version 4.0.0.
    :extract_html: |-
      <p><b>Modelica</b> is an object-oriented, declarative, multi-domain modeling language for component-oriented modeling of complex systems, e.g., systems containing mechanical, electrical, electronic, hydraulic, thermal, control, electric power or process-oriented subcomponents.
      The free Modelica language
      is developed by the non-profit Modelica Association. The Modelica Association also develops the free Modelica Standard Library that contains about 1400 generic model components and 1200 functions in various domains, as of version 4.0.0.</p>
  record/8b2c55a6-7465-41af-a949-502af008a600:
    :type: standard
    :title: Component Pascal
    :displaytitle: Component Pascal
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1121719
    :titles:
      :canonical: Component_Pascal
      :normalized: Component Pascal
      :display: Component Pascal
    :pageid: 357599
    :lang: en
    :dir: ltr
    :revision: '971276959'
    :tid: dc2ccfe0-2057-11eb-9360-d599cc652bc8
    :timestamp: '2020-08-05T03:36:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Component_Pascal
        :revisions: https://en.wikipedia.org/wiki/Component_Pascal?action=history
        :edit: https://en.wikipedia.org/wiki/Component_Pascal?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Component_Pascal
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Component_Pascal
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Component_Pascal
        :edit: https://en.m.wikipedia.org/wiki/Component_Pascal?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Component_Pascal
    :extract: Component Pascal is a programming language in the tradition of Niklaus
      Wirth's Pascal, Modula-2, Oberon and Oberon-2. It bears the name of the Pascal
      programming language and it preserves its heritage, but it is not compatible
      with Pascal. Instead, it is a minor variant and refinement of Oberon-2 with
      a more expressive type system and built-in string support. Component Pascal
      was originally designed and supported by a small ETH Zürich spin-off company
      called Oberon microsystems under the name Oberon/L. They developed an IDE called
      BlackBox Component Builder. Since 2014 development and support has been taken
      over by a small group of volunteers. At the time the first version of the IDE
      was released it presented a novel approach to graphical user interface (GUI)
      construction based on editable forms, where fields and command buttons are linked
      to exported variables and executable procedures. This approach bears some similarity
      to the code-behind way used in Microsoft's .NET 3.0 to access code in XAML,
      which was released in 2008.
    :extract_html: "<p><b>Component Pascal</b> is a programming language in the tradition
      of Niklaus Wirth's Pascal, Modula-2, Oberon and Oberon-2. It bears the name
      of the Pascal programming language and it preserves its heritage, but it is
      not compatible with Pascal. Instead, it is a minor variant and refinement of
      Oberon-2 with a more expressive type system and built-in string support. Component
      Pascal was originally designed and supported by a small ETH Zürich spin-off
      company called Oberon microsystems under the name Oberon/L. They developed an
      IDE called BlackBox Component Builder. Since 2014 development and support has
      been taken over by a small group of volunteers. At the time the first version
      of the IDE was released it presented a novel approach to graphical user interface
      (GUI) construction based on editable forms, where fields and command buttons
      are linked to exported variables and executable procedures. This approach bears
      some similarity to the code-behind way used in Microsoft's .NET 3.0 to access
      code in XAML, which was released in 2008.</p>"
  record/ee18459b-d0ac-4400-9156-bde68dc7aa3e:
    :type: standard
    :title: Ballerina (programming language)
    :displaytitle: Ballerina (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q55604776
    :titles:
      :canonical: Ballerina_(programming_language)
      :normalized: Ballerina (programming language)
      :display: Ballerina (programming language)
    :pageid: 57629994
    :lang: en
    :dir: ltr
    :revision: '981529208'
    :tid: 9cdbd160-333f-11eb-a71f-1d1a5dbe893a
    :timestamp: '2020-10-02T21:26:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ballerina_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ballerina_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ballerina_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ballerina_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ballerina_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ballerina_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ballerina_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ballerina_(programming_language)
    :extract: Ballerina is an open source general-purpose programming language and
      platform designed by WSO2 for cloud-era application programmers. It is easy
      to write and modify and is suitable for application programmers.
    :extract_html: "<p><b>Ballerina</b> is an open source general-purpose programming
      language and platform designed by WSO2 for cloud-era application programmers.
      It is easy to write and modify and is suitable for application programmers.</p>"
  record/43dc0479-0adb-4a8a-a71f-f1aab4a52e0a:
    :type: standard
    :title: Dylan (programming language)
    :displaytitle: Dylan (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1268744
    :titles:
      :canonical: Dylan_(programming_language)
      :normalized: Dylan (programming language)
      :display: Dylan (programming language)
    :pageid: 8741
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/2/25/Dylan_logo.png
      :width: 145
      :height: 58
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/2/25/Dylan_logo.png
      :width: 145
      :height: 58
    :lang: en
    :dir: ltr
    :revision: '987835715'
    :tid: 614b9e20-2d3e-11eb-8b39-c13d6cb052b5
    :timestamp: '2020-11-09T14:52:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Dylan_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Dylan_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Dylan_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Dylan_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Dylan_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Dylan_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Dylan_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Dylan_(programming_language)
    :extract: Dylan is a multi-paradigm programming language that includes support
      for functional and object-oriented programming (OOP), and is dynamic and reflective
      while providing a programming model designed to support generating efficient
      machine code, including fine-grained control over dynamic and static behaviors.
      It was created in the early 1990s by a group led by Apple Computer.
    :extract_html: "<p><b>Dylan</b> is a multi-paradigm programming language that
      includes support for functional and object-oriented programming (OOP), and is
      dynamic and reflective while providing a programming model designed to support
      generating efficient machine code, including fine-grained control over dynamic
      and static behaviors. It was created in the early 1990s by a group led by Apple
      Computer.</p>"
  record/5b74bd9c-7c31-437f-86f8-2a468930a7f4:
    :type: standard
    :title: Alice (programming language)
    :displaytitle: Alice (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1136926
    :titles:
      :canonical: Alice_(programming_language)
      :normalized: Alice (programming language)
      :display: Alice (programming language)
    :pageid: 30877972
    :lang: en
    :dir: ltr
    :revision: '962375845'
    :tid: 52022770-2d18-11eb-beb6-a732d66eb647
    :timestamp: '2020-06-13T17:50:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Alice_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Alice_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Alice_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Alice_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Alice_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Alice_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Alice_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Alice_(programming_language)
    :extract: Alice ML is a programming language designed by the Programming Systems
      Laboratory at Saarland University, Saarbrücken, Germany. It is a dialect of
      Standard ML, augmented with support for lazy evaluation, concurrency and constraint
      programming.
    :extract_html: "<p><b>Alice ML</b> is a programming language designed by the Programming
      Systems Laboratory at Saarland University, Saarbrücken, Germany. It is a dialect
      of Standard ML, augmented with support for lazy evaluation, concurrency and
      constraint programming.</p>"
  record/7e80b401-d08a-42b4-912f-3eaec4996172:
    :type: standard
    :title: Pure Data
    :displaytitle: Pure Data
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1401466
    :titles:
      :canonical: Pure_Data
      :normalized: Pure Data
      :display: Pure Data
    :pageid: 480378
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Pure_Data_with_many_patches_open_%28showing_netpd_project%29.png/320px-Pure_Data_with_many_patches_open_%28showing_netpd_project%29.png
      :width: 320
      :height: 200
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f8/Pure_Data_with_many_patches_open_%28showing_netpd_project%29.png
      :width: 1680
      :height: 1050
    :lang: en
    :dir: ltr
    :revision: '988362443'
    :tid: 1abf8950-3381-11eb-a5b3-a32dc64ed454
    :timestamp: '2020-11-12T18:32:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pure_Data
        :revisions: https://en.wikipedia.org/wiki/Pure_Data?action=history
        :edit: https://en.wikipedia.org/wiki/Pure_Data?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pure_Data
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pure_Data
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pure_Data
        :edit: https://en.m.wikipedia.org/wiki/Pure_Data?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pure_Data
    :extract: Pure Data (Pd) is a visual programming language developed by Miller
      Puckette in the 1990s for creating interactive computer music and multimedia
      works. While Puckette is the main author of the program, Pd is an open-source
      project with a large developer base working on new extensions. It is released
      under a license similar to the BSD license. It runs on GNU/Linux, Mac OS X,
      iOS, Android and Windows. Ports exist for FreeBSD and IRIX.
    :extract_html: <p><b>Pure Data</b> (<b>Pd</b>) is a visual programming language
      developed by Miller Puckette in the 1990s for creating interactive computer
      music and multimedia works. While Puckette is the main author of the program,
      Pd is an open-source project with a large developer base working on new extensions.
      It is released under a license similar to the BSD license. It runs on GNU/Linux,
      <span class="nowrap">Mac OS X</span>, iOS, Android and Windows. Ports exist
      for FreeBSD and IRIX.</p>
  record/12198a22-a8f2-4647-a0e7-d37eb9d4896f:
    :type: standard
    :title: Euler (programming language)
    :displaytitle: Euler (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q907880
    :titles:
      :canonical: Euler_(programming_language)
      :normalized: Euler (programming language)
      :display: Euler (programming language)
    :pageid: 908540
    :lang: en
    :dir: ltr
    :revision: '920754237'
    :tid: 8ad6ec80-1b65-11eb-a100-1537068e70cc
    :timestamp: '2019-10-11T17:08:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Euler_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Euler_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Euler_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Euler_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Euler_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Euler_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Euler_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Euler_(programming_language)
    :extract: |-
      Euler is a programming language created by Niklaus Wirth and Helmut Weber, conceived as an extension and generalization of ALGOL 60. The designers' goal was to create a language:which was simpler, and yet more flexible, than ALGOL 60
      that was a useful programming language processed with reasonable efficiency
      that can be defined with rigorous formality
    :extract_html: |-
      <p><b>Euler</b> is a programming language created by Niklaus Wirth and Helmut Weber, conceived as an extension and generalization of ALGOL 60. The designers' goal was to create a language:</p><ul><li>which was simpler, and yet more flexible, than ALGOL 60</li>
      <li>that was a useful programming language processed with reasonable efficiency</li>
      <li>that can be defined with rigorous formality</li></ul>
  record/777314ce-efdf-451b-83bb-f799ac6118e6:
    :type: standard
    :title: PostScript
    :displaytitle: PostScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q218170
    :titles:
      :canonical: PostScript
      :normalized: PostScript
      :display: PostScript
    :pageid: 24080
    :lang: en
    :dir: ltr
    :revision: '987447035'
    :tid: 7dda5c80-20a4-11eb-85df-4d62da1aa806
    :timestamp: '2020-11-07T02:53:58Z'
    :description: File format
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PostScript
        :revisions: https://en.wikipedia.org/wiki/PostScript?action=history
        :edit: https://en.wikipedia.org/wiki/PostScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PostScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PostScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PostScript
        :edit: https://en.m.wikipedia.org/wiki/PostScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PostScript
    :extract: PostScript (PS) is a page description language in the electronic publishing
      and desktop publishing business. It is a dynamically typed, concatenative programming
      language. It was created at Adobe Systems by John Warnock, Charles Geschke,
      Doug Brotz, Ed Taft and Bill Paxton from 1982 to 1984.
    :extract_html: "<p><b>PostScript</b> (<b>PS</b>) is a page description language
      in the electronic publishing and desktop publishing business. It is a dynamically
      typed, concatenative programming language. It was created at Adobe Systems by
      John Warnock, Charles Geschke, Doug Brotz, Ed Taft and Bill Paxton from 1982
      to 1984.</p>"
  record/1721c5b1-114f-4364-b73c-e9156020d5ff:
    :type: standard
    :title: TXL (programming language)
    :displaytitle: TXL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7590386
    :titles:
      :canonical: TXL_(programming_language)
      :normalized: TXL (programming language)
      :display: TXL (programming language)
    :pageid: 7025179
    :lang: en
    :dir: ltr
    :revision: '930528968'
    :tid: d332e240-246b-11eb-9935-2d80beba0b7d
    :timestamp: '2019-12-13T03:13:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TXL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/TXL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/TXL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TXL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TXL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TXL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/TXL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TXL_(programming_language)
    :extract: TXL is a special-purpose programming language originally designed by
      Charles Halpern-Hamu and James Cordy at the University of Toronto in 1985. The
      acronym "TXL" originally stood for "Turing eXtender Language" after the language's
      original purpose, the specification and rapid prototyping of variants and extensions
      of the Turing programming language, but no longer has any meaningful interpretation.
    :extract_html: <p><b>TXL</b> is a special-purpose programming language originally
      designed by Charles Halpern-Hamu and James Cordy at the University of Toronto
      in 1985. The acronym "TXL" originally stood for "Turing eXtender Language" after
      the language's original purpose, the specification and rapid prototyping of
      variants and extensions of the Turing programming language, but no longer has
      any meaningful interpretation.</p>
  record/fe0afc2e-c2ae-436c-8a2d-b0b3348b4c4b:
    :type: standard
    :title: Datalog
    :displaytitle: Datalog
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1172264
    :titles:
      :canonical: Datalog
      :normalized: Datalog
      :display: Datalog
    :pageid: 968357
    :lang: en
    :dir: ltr
    :revision: '987158859'
    :tid: 7b8d2b90-3023-11eb-befc-834588f6e789
    :timestamp: '2020-11-05T08:23:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Datalog
        :revisions: https://en.wikipedia.org/wiki/Datalog?action=history
        :edit: https://en.wikipedia.org/wiki/Datalog?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Datalog
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Datalog
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Datalog
        :edit: https://en.m.wikipedia.org/wiki/Datalog?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Datalog
    :extract: Datalog is a declarative logic programming language that syntactically
      is a subset of Prolog. It is often used as a query language for deductive databases.
      In recent years, Datalog has found new application in data integration, information
      extraction, networking, program analysis, security, cloud computing and machine
      learning.
    :extract_html: "<p><b>Datalog</b> is a declarative logic programming language
      that syntactically is a subset of Prolog. It is often used as a query language
      for deductive databases. In recent years, Datalog has found new application
      in data integration, information extraction, networking, program analysis, security,
      cloud computing and machine learning.</p>"
  record/87e8b53c-1c74-4ca2-82e5-afa1b44c6e86:
    :type: standard
    :title: T (programming language)
    :displaytitle: T (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7672623
    :titles:
      :canonical: T_(programming_language)
      :normalized: T (programming language)
      :display: T (programming language)
    :pageid: 875484
    :lang: en
    :dir: ltr
    :revision: '982810547'
    :tid: 822a0a20-2fa3-11eb-aaf1-8786918ec82e
    :timestamp: '2020-10-10T13:59:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/T_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/T_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/T_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:T_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/T_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/T_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/T_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:T_(programming_language)
    :extract: The programming language T is a dialect of the language Scheme developed
      in the early 1980s by Jonathan A. Rees, Kent M. Pitman, and Norman I. Adams
      of Yale University as an experiment in language design and implementation.
    :extract_html: "<p>The programming language <b>T</b> is a dialect of the language
      Scheme developed in the early 1980s by Jonathan A. Rees, Kent M. Pitman, and
      Norman I. Adams of Yale University as an experiment in language design and implementation.</p>"
  record/86325ff1-d156-4fcd-a8aa-7d7605c71f08:
    :type: standard
    :title: Umple
    :displaytitle: Umple
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16958879
    :titles:
      :canonical: Umple
      :normalized: Umple
      :display: Umple
    :pageid: 39874090
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6f/Umple_Logo.png
      :width: 313
      :height: 169
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6f/Umple_Logo.png
      :width: 313
      :height: 169
    :lang: en
    :dir: ltr
    :revision: '988318765'
    :tid: e7aafc40-24e7-11eb-a0ef-c96431b8b243
    :timestamp: '2020-11-12T13:06:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Umple
        :revisions: https://en.wikipedia.org/wiki/Umple?action=history
        :edit: https://en.wikipedia.org/wiki/Umple?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Umple
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Umple
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Umple
        :edit: https://en.m.wikipedia.org/wiki/Umple?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Umple
    :extract: |-
      Umple is a language for both object-oriented programming and modelling with class diagrams and state diagrams.
      The name Umple is a portmanteau of "UML", "ample" and "Simple", indicating that it is designed to provide ample features to extend programming languages with UML capabilities.
    :extract_html: |-
      <p><b>Umple</b> is a language for both object-oriented programming and modelling with class diagrams and state diagrams.
      The name Umple is a portmanteau of "UML", "ample" and "Simple", indicating that it is designed to provide ample features to extend programming languages with UML capabilities.</p>
  record/18334fc5-0b08-491e-b19a-87e4073cda3d:
    :type: standard
    :title: ALGOL W
    :displaytitle: ALGOL W
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1538458
    :titles:
      :canonical: ALGOL_W
      :normalized: ALGOL W
      :display: ALGOL W
    :pageid: 211058
    :lang: en
    :dir: ltr
    :revision: '982432605'
    :tid: f72bfae0-2ca6-11eb-8532-8b0e00359a3b
    :timestamp: '2020-10-08T03:10:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ALGOL_W
        :revisions: https://en.wikipedia.org/wiki/ALGOL_W?action=history
        :edit: https://en.wikipedia.org/wiki/ALGOL_W?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ALGOL_W
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ALGOL_W
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ALGOL_W
        :edit: https://en.m.wikipedia.org/wiki/ALGOL_W?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ALGOL_W
    :extract: ALGOL W is a programming language. It is based on a proposal for ALGOL
      X by Niklaus Wirth and Tony Hoare as a successor to ALGOL 60 in International
      Federation for Information Processing (IFIP) IFIP Working Group 2.1 on Algorithmic
      Languages and Calculi, which specified, maintains, and supports the languages
      ALGOL 60 and ALGOL 68. When the committee decided that the proposal was an insufficient
      advance over ALGOL 60, the proposal was published as A contribution to the development
      of ALGOL. After making small modifications to the language Wirth supervised
      a high quality implementation for the IBM System/360 at Stanford University
      that was widely distributed.
    :extract_html: "<p><b>ALGOL W</b> is a programming language. It is based on a
      proposal for ALGOL X by Niklaus Wirth and Tony Hoare as a successor to ALGOL
      60 in International Federation for Information Processing (IFIP) IFIP Working
      Group 2.1 on Algorithmic Languages and Calculi, which specified, maintains,
      and supports the languages ALGOL 60 and ALGOL 68. When the committee decided
      that the proposal was an insufficient advance over ALGOL 60, the proposal was
      published as <i>A contribution to the development of ALGOL</i>. After making
      small modifications to the language Wirth supervised a high quality implementation
      for the IBM System/360 at Stanford University that was widely distributed.</p>"
  record/80ed0813-2a87-448c-962d-ed924b4c9439:
    :type: standard
    :title: PeopleCode
    :displaytitle: PeopleCode
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7165836
    :titles:
      :canonical: PeopleCode
      :normalized: PeopleCode
      :display: PeopleCode
    :pageid: 5157513
    :lang: en
    :dir: ltr
    :revision: '966454929'
    :tid: '0094e830-35df-11eb-9883-4b7689cca35f'
    :timestamp: '2020-07-07T06:37:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PeopleCode
        :revisions: https://en.wikipedia.org/wiki/PeopleCode?action=history
        :edit: https://en.wikipedia.org/wiki/PeopleCode?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PeopleCode
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PeopleCode
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PeopleCode
        :edit: https://en.m.wikipedia.org/wiki/PeopleCode?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PeopleCode
    :extract: PeopleCode is a proprietary object-oriented programming language used
      to express business logic for PeopleSoft applications. Syntactically, PeopleCode
      is similar to other programming languages, and can be found in both loosely-typed
      and strongly-typed forms. PeopleCode and its run-time environment is part of
      the larger PeopleTools framework. PeopleCode has evolved over time and its implementation
      through the PeopleSoft applications lack consistency. PeopleCode offers some
      interoperability with the Java programming language. Definition name references,
      for example, enable you to refer to PeopleTools definitions, such as record
      definitions or pages, without using hard-coded string literals. Other language
      features, such as PeopleCode data types and metastrings, reflect the close interaction
      of PeopleTools and Structured Query Language (SQL). Dot notation, classes and
      methods in PeopleCode are similar to other object oriented languages, like Java.
      Object syntax was an important feature of PeopleTools 8.
    :extract_html: "<p><b>PeopleCode</b> is a proprietary object-oriented programming
      language used to express business logic for PeopleSoft applications. Syntactically,
      PeopleCode is similar to other programming languages, and can be found in both
      loosely-typed and strongly-typed forms. PeopleCode and its run-time environment
      is part of the larger PeopleTools framework. PeopleCode has evolved over time
      and its implementation through the PeopleSoft applications lack consistency.
      PeopleCode offers some interoperability with the Java programming language.
      Definition name references, for example, enable you to refer to PeopleTools
      definitions, such as record definitions or pages, without using hard-coded string
      literals. Other language features, such as PeopleCode data types and metastrings,
      reflect the close interaction of PeopleTools and Structured Query Language (SQL).
      Dot notation, classes and methods in PeopleCode are similar to other object
      oriented languages, like Java. Object syntax was an important feature of PeopleTools
      8.</p>"
  record/a5f4366e-eacc-463f-8480-45c9f2a7515a:
    :type: standard
    :title: CLIST
    :displaytitle: CLIST
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q579880
    :titles:
      :canonical: CLIST
      :normalized: CLIST
      :display: CLIST
    :pageid: 391542
    :lang: en
    :dir: ltr
    :revision: '956131471'
    :tid: da67ba80-1e9a-11eb-833a-2545dc61f38a
    :timestamp: '2020-05-11T17:30:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CLIST
        :revisions: https://en.wikipedia.org/wiki/CLIST?action=history
        :edit: https://en.wikipedia.org/wiki/CLIST?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CLIST
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CLIST
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CLIST
        :edit: https://en.m.wikipedia.org/wiki/CLIST?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CLIST
    :extract: CLIST  is a procedural programming language for TSO in MVS systems.
      It originated in OS/360 Release 20 and has assumed a secondary role since the
      availability of Rexx in TSO/E Version 2. The term CLIST is also used for command
      lists written by users of NetView.
    :extract_html: "<p><b>CLIST </b> is a procedural programming language for TSO
      in MVS systems. It originated in OS/360 Release 20 and has assumed a secondary
      role since the availability of Rexx in TSO/E Version 2. The term CLIST is also
      used for command lists written by users of NetView.</p>"
  record/1996ca4d-02d5-4a00-8278-808e62428bf4:
    :type: standard
    :title: Agda (programming language)
    :displaytitle: Agda (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q20479
    :titles:
      :canonical: Agda_(programming_language)
      :normalized: Agda (programming language)
      :display: Agda (programming language)
    :pageid: 4426773
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Agda%27s_official_logo.svg/320px-Agda%27s_official_logo.svg.png
      :width: 320
      :height: 105
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/7/71/Agda%27s_official_logo.svg/5217px-Agda%27s_official_logo.svg.png
      :width: 5217
      :height: 1707
    :lang: en
    :dir: ltr
    :revision: '991553356'
    :tid: 3eaa29e0-3333-11eb-866e-df618dd12424
    :timestamp: '2020-11-30T17:41:11Z'
    :description: Functional programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Agda_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Agda_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Agda_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Agda_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Agda_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Agda_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Agda_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Agda_(programming_language)
    :extract: Agda is a dependently typed functional programming language originally
      developed by Ulf Norell at Chalmers University of Technology with implementation
      described in his PhD thesis. The original Agda system was developed at Chalmers
      by Catarina Coquand in 1999. The current version, originally known as Agda 2,
      is a full rewrite, which should be considered a new language that shares a name
      and tradition.
    :extract_html: "<p><b>Agda</b> is a dependently typed functional programming language
      originally developed by Ulf Norell at Chalmers University of Technology with
      implementation described in his PhD thesis. The original Agda system was developed
      at Chalmers by Catarina Coquand in 1999. The current version, originally known
      as Agda 2, is a full rewrite, which should be considered a new language that
      shares a name and tradition.</p>"
  record/3cea35d6-702a-4f4a-b61f-57ff393e191d:
    :type: standard
    :title: VHDL
    :displaytitle: VHDL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q209455
    :titles:
      :canonical: VHDL
      :normalized: VHDL
      :display: VHDL
    :pageid: 43410
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Vhdl_signed_adder_source.svg/298px-Vhdl_signed_adder_source.svg.png
      :width: 298
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/83/Vhdl_signed_adder_source.svg/486px-Vhdl_signed_adder_source.svg.png
      :width: 486
      :height: 521
    :lang: en
    :dir: ltr
    :revision: '984618560'
    :tid: 6da364f0-304a-11eb-8156-9d5c0747c13a
    :timestamp: '2020-10-21T03:24:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/VHDL
        :revisions: https://en.wikipedia.org/wiki/VHDL?action=history
        :edit: https://en.wikipedia.org/wiki/VHDL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:VHDL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/VHDL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/VHDL
        :edit: https://en.m.wikipedia.org/wiki/VHDL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:VHDL
    :extract: VHDL is a hardware description language used in electronic design automation
      to describe digital and mixed-signal systems such as field-programmable gate
      arrays and integrated circuits. VHDL can also be used as a general-purpose parallel
      programming language.
    :extract_html: "<p><b>VHDL</b> is a hardware description language used in electronic
      design automation to describe digital and mixed-signal systems such as field-programmable
      gate arrays and integrated circuits. VHDL can also be used as a general-purpose
      parallel programming language.</p>"
  record/f46786fc-6e82-418c-ae5c-cba87443e3c4:
    :type: standard
    :title: Tensilica Instruction Extension
    :displaytitle: Tensilica Instruction Extension
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7700662
    :titles:
      :canonical: Tensilica_Instruction_Extension
      :normalized: Tensilica Instruction Extension
      :display: Tensilica Instruction Extension
    :pageid: 15500092
    :lang: en
    :dir: ltr
    :revision: '963904917'
    :tid: a9245f30-dfd6-11ea-8e62-d56fc8bd4e6b
    :timestamp: '2020-06-22T13:27:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Tensilica_Instruction_Extension
        :revisions: https://en.wikipedia.org/wiki/Tensilica_Instruction_Extension?action=history
        :edit: https://en.wikipedia.org/wiki/Tensilica_Instruction_Extension?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Tensilica_Instruction_Extension
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Tensilica_Instruction_Extension
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Tensilica_Instruction_Extension
        :edit: https://en.m.wikipedia.org/wiki/Tensilica_Instruction_Extension?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Tensilica_Instruction_Extension
    :extract: Tensilica Instruction Extension refers to the proprietary language that
      is used to customize Tensilica's Xtensa processor core architecture.
    :extract_html: "<p><b>Tensilica Instruction Extension</b> refers to the proprietary
      language that is used to customize Tensilica's Xtensa processor core architecture.</p>"
  record/2aac47ab-8cac-4638-a1ce-6e8cbc7d32b7:
    :type: standard
    :title: PowerShell
    :displaytitle: PowerShell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q840410
    :titles:
      :canonical: PowerShell
      :normalized: PowerShell
      :display: PowerShell
    :pageid: 14465871
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Windows_PowerShell_1.0_PD.png/303px-Windows_PowerShell_1.0_PD.png
      :width: 303
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/d/d5/Windows_PowerShell_1.0_PD.png
      :width: 658
      :height: 696
    :lang: en
    :dir: ltr
    :revision: '991553332'
    :tid: '069d79a0-34e9-11eb-b5e0-1d8bad9a83fe'
    :timestamp: '2020-11-30T17:41:01Z'
    :description: Cross-platform command-line interface and scripting language for
      system and network administration
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PowerShell
        :revisions: https://en.wikipedia.org/wiki/PowerShell?action=history
        :edit: https://en.wikipedia.org/wiki/PowerShell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PowerShell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PowerShell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PowerShell
        :edit: https://en.m.wikipedia.org/wiki/PowerShell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PowerShell
    :extract: PowerShell is a task automation and configuration management framework
      from Microsoft, consisting of a command-line shell and the associated scripting
      language. Initially a Windows component only, known as Windows PowerShell, it
      was made open-source and cross-platform on 18 August 2016 with the introduction
      of PowerShell Core. The former is built on the .NET Framework, the latter on
      .NET Core.
    :extract_html: "<p><b>PowerShell</b> is a task automation and configuration management
      framework from Microsoft, consisting of a command-line shell and the associated
      scripting language. Initially a Windows component only, known as <b>Windows
      PowerShell</b>, it was made open-source and cross-platform on 18 August 2016
      with the introduction of <b>PowerShell Core</b>. The former is built on the
      .NET Framework, the latter on .NET Core.</p>"
  record/90b390af-927a-4947-ad11-e365d738c681:
    :type: standard
    :title: Wolfram Language
    :displaytitle: Wolfram Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q15241057
    :titles:
      :canonical: Wolfram_Language
      :normalized: Wolfram Language
      :display: Wolfram Language
    :pageid: 40205956
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/1/17/Wolfram_Language_Logo_2016.svg/320px-Wolfram_Language_Logo_2016.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/1/17/Wolfram_Language_Logo_2016.svg/198px-Wolfram_Language_Logo_2016.svg.png
      :width: 198
      :height: 198
    :lang: en
    :dir: ltr
    :revision: '991388167'
    :tid: b23778a0-327e-11eb-98f6-cd79720efc33
    :timestamp: '2020-11-29T20:08:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Wolfram_Language
        :revisions: https://en.wikipedia.org/wiki/Wolfram_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Wolfram_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Wolfram_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Wolfram_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Wolfram_Language
        :edit: https://en.m.wikipedia.org/wiki/Wolfram_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Wolfram_Language
    :extract: The Wolfram Language is a general multi-paradigm computational language
      developed by Wolfram Research. It emphasizes symbolic computation, functional
      programming, and rule-based programming and can employ arbitrary structures
      and data. It is the programming language of the mathematical symbolic computation
      program Mathematica.
    :extract_html: "<p>The <b>Wolfram Language</b> is a general multi-paradigm computational
      language developed by Wolfram Research. It emphasizes symbolic computation,
      functional programming, and rule-based programming and can employ arbitrary
      structures and data. It is the programming language of the mathematical symbolic
      computation program Mathematica.</p>"
  record/fa0c2979-ece4-4191-839d-65faeee7664d:
    :type: standard
    :title: Kotlin (programming language)
    :displaytitle: Kotlin (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3816639
    :titles:
      :canonical: Kotlin_(programming_language)
      :normalized: Kotlin (programming language)
      :display: Kotlin (programming language)
    :pageid: 41819039
    :lang: en
    :dir: ltr
    :revision: '991605666'
    :tid: b3d141b0-335e-11eb-b793-1bf28e31a9c3
    :timestamp: '2020-11-30T22:52:07Z'
    :description: General-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kotlin_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Kotlin_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Kotlin_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kotlin_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kotlin_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kotlin_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Kotlin_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kotlin_(programming_language)
    :extract: Kotlin is a cross-platform, statically typed, general-purpose programming
      language with type inference. Kotlin is designed to interoperate fully with
      Java, and the JVM version of Kotlin's standard library depends on the Java Class
      Library, but type inference allows its syntax to be more concise. Kotlin mainly
      targets the JVM, but also compiles to JavaScript or native code, e.g. for native
      iOS apps sharing business logic with Android apps. Language development costs
      are borne by JetBrains, while the Kotlin Foundation protects the Kotlin trademark.
    :extract_html: "<p><b>Kotlin</b> is a cross-platform, statically typed, general-purpose
      programming language with type inference. Kotlin is designed to interoperate
      fully with Java, and the JVM version of Kotlin's standard library depends on
      the Java Class Library, but type inference allows its syntax to be more concise.
      Kotlin mainly targets the JVM, but also compiles to JavaScript or native code,
      e.g. for native iOS apps sharing business logic with Android apps. Language
      development costs are borne by JetBrains, while the Kotlin Foundation protects
      the Kotlin trademark.</p>"
  record/51541b9b-4aee-4068-b835-841e9e9d69cf:
    :type: standard
    :title: Turing (programming language)
    :displaytitle: Turing (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q490481
    :titles:
      :canonical: Turing_(programming_language)
      :normalized: Turing (programming language)
      :display: Turing (programming language)
    :pageid: 31105
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/1/10/Turing_logo.gif
      :width: 192
      :height: 132
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/1/10/Turing_logo.gif
      :width: 192
      :height: 132
    :lang: en
    :dir: ltr
    :revision: '974370300'
    :tid: 8c124360-1fde-11eb-bde3-9576b1adbcc1
    :timestamp: '2020-08-22T16:23:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Turing_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Turing_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Turing_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Turing_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Turing_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Turing_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Turing_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Turing_(programming_language)
    :extract: Turing is a Pascal-like programming language developed in 1982 by Ric
      Holt and James Cordy, then of University of Toronto, in Toronto, Ontario, Canada.
      Turing is a descendant of Euclid, Pascal and SP/k that features a clean syntax
      and precise machine-independent semantics.
    :extract_html: "<p><b>Turing</b> is a Pascal-like programming language developed
      in 1982 by Ric Holt and James Cordy, then of University of Toronto, in Toronto,
      Ontario, Canada. Turing is a descendant of Euclid, Pascal and SP/k that features
      a clean syntax and precise machine-independent semantics.</p>"
  record/061d0c3b-94e3-4c00-a4cb-a56b67b4847a:
    :type: standard
    :title: Speedcoding
    :displaytitle: Speedcoding
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475416
    :titles:
      :canonical: Speedcoding
      :normalized: Speedcoding
      :display: Speedcoding
    :pageid: 6616312
    :lang: en
    :dir: ltr
    :revision: '979420150'
    :tid: 5e476c50-241e-11eb-b533-55bcd39fdc22
    :timestamp: '2020-09-20T17:14:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Speedcoding
        :revisions: https://en.wikipedia.org/wiki/Speedcoding?action=history
        :edit: https://en.wikipedia.org/wiki/Speedcoding?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Speedcoding
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Speedcoding
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Speedcoding
        :edit: https://en.m.wikipedia.org/wiki/Speedcoding?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Speedcoding
    :extract: Speedcoding or Speedcode was the first high-level programming language
      created for an IBM computer. The language was developed by John Backus in 1953
      for the IBM 701 to support computation with floating point numbers. Here high
      level means symbolic and aiming for natural language expressivity as a goal
      as opposed to machine or hardware instruction oriented coding.
    :extract_html: "<p><b>Speedcoding</b> or <b>Speedcode</b> was the first high-level
      programming language created for an IBM computer. The language was developed
      by John Backus in 1953 for the IBM 701 to support computation with floating
      point numbers. Here high level means symbolic and aiming for natural language
      expressivity as a goal as opposed to machine or hardware instruction oriented
      coding.</p>"
  record/e6c71b7b-c8d3-4fa8-8ba8-133ee3487cc3:
    :type: standard
    :title: Scratch (programming language)
    :displaytitle: Scratch (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q275131
    :titles:
      :canonical: Scratch_(programming_language)
      :normalized: Scratch (programming language)
      :display: Scratch (programming language)
    :pageid: 9236158
    :lang: en
    :dir: ltr
    :revision: '992070606'
    :tid: 0b39f8a0-354b-11eb-b5fa-c9b3e2666484
    :timestamp: '2020-12-03T09:36:33Z'
    :description: Programming language learning environment
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Scratch_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Scratch_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Scratch_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Scratch_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Scratch_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Scratch_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Scratch_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Scratch_(programming_language)
    :extract: Scratch is a block-based visual programming language and website targeted
      primarily at children 8-16 to help learn code. Users of the site can create
      projects on the web using a block-like interface. The service is developed by
      the MIT Media Lab, has been translated into 70+ languages, and is used in most
      parts of the world. Scratch is taught and used in after-school centers, schools,
      and colleges, as well as other public knowledge institutions. As of September
      2020, community statistics on the language's official website show more than
      59 million projects shared by over 58 million users, and almost 36 million monthly
      website visits.
    :extract_html: "<p><b>Scratch</b> is a block-based visual programming language
      and website targeted primarily at children 8-16 to help learn code. Users of
      the site can create projects on the web using a block-like interface. The service
      is developed by the MIT Media Lab, has been translated into 70+ languages, and
      is used in most parts of the world. Scratch is taught and used in after-school
      centers, schools, and colleges, as well as other public knowledge institutions.
      As of September 2020, community statistics on the language's official website
      show more than 59 million projects shared by over 58 million users, and almost
      36 million monthly website visits.</p>"
  record/ceabd659-7f56-48fc-b0e3-f9036f5b5ce1:
    :type: standard
    :title: COMPASS
    :displaytitle: COMPASS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5013363
    :titles:
      :canonical: COMPASS
      :normalized: COMPASS
      :display: COMPASS
    :pageid: 492451
    :lang: en
    :dir: ltr
    :revision: '960084803'
    :tid: 24eab290-1af6-11eb-ac5b-8f008ca0da5e
    :timestamp: '2020-06-01T01:53:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COMPASS
        :revisions: https://en.wikipedia.org/wiki/COMPASS?action=history
        :edit: https://en.wikipedia.org/wiki/COMPASS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COMPASS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COMPASS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COMPASS
        :edit: https://en.m.wikipedia.org/wiki/COMPASS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COMPASS
    :extract: COMPASS, COMPrehensive ASSembler, is any of a family of macro assembly
      languages on Control Data Corporation's 3000 series, and on the 60-bit CDC 6000
      series, 7600 and Cyber 70 and 170 series mainframe computers. While the architectures
      are very different, the macro and conditional assembly facilities are similar.
    :extract_html: "<p><b>COMPASS</b>, <b><i>COMP</i>rehensive <i>ASS</i>embler</b>,
      is any of a family of macro assembly languages on Control Data Corporation's
      3000 series, and on the 60-bit CDC 6000 series, 7600 and Cyber 70 and 170 series
      mainframe computers. While the architectures are very different, the macro and
      conditional assembly facilities are similar.</p>"
  record/ee2caa32-b75f-400d-852f-a23d002b9b22:
    :type: standard
    :title: Ratfor
    :displaytitle: Ratfor
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4115288
    :titles:
      :canonical: Ratfor
      :normalized: Ratfor
      :display: Ratfor
    :pageid: 390257
    :lang: en
    :dir: ltr
    :revision: '969865432'
    :tid: aeab6640-1ac5-11eb-aa4e-af75871a8cae
    :timestamp: '2020-07-27T20:43:42Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ratfor
        :revisions: https://en.wikipedia.org/wiki/Ratfor?action=history
        :edit: https://en.wikipedia.org/wiki/Ratfor?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ratfor
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ratfor
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ratfor
        :edit: https://en.m.wikipedia.org/wiki/Ratfor?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ratfor
    :extract: Ratfor is a programming language implemented as a preprocessor for Fortran
      66. It provides modern control structures, unavailable in Fortran 66, to replace
      GOTOs and statement numbers.
    :extract_html: "<p><b>Ratfor</b> is a programming language implemented as a preprocessor
      for Fortran 66. It provides modern control structures, unavailable in Fortran
      66, to replace GOTOs and statement numbers.</p>"
  record/bae374f9-b8bb-4425-90d7-9a2b427efd59:
    :type: standard
    :title: JavaFX Script
    :displaytitle: JavaFX Script
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q609804
    :titles:
      :canonical: JavaFX_Script
      :normalized: JavaFX Script
      :display: JavaFX Script
    :pageid: 11117691
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/c/cc/JavaFX_Logo.png/320px-JavaFX_Logo.png
      :width: 320
      :height: 133
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/c/cc/JavaFX_Logo.png
      :width: 489
      :height: 204
    :lang: en
    :dir: ltr
    :revision: '965875826'
    :tid: 791df5c0-265e-11eb-a4d4-677cde0b36e1
    :timestamp: '2020-07-03T22:55:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JavaFX_Script
        :revisions: https://en.wikipedia.org/wiki/JavaFX_Script?action=history
        :edit: https://en.wikipedia.org/wiki/JavaFX_Script?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JavaFX_Script
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JavaFX_Script
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JavaFX_Script
        :edit: https://en.m.wikipedia.org/wiki/JavaFX_Script?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JavaFX_Script
    :extract: JavaFX Script was a scripting language designed by Sun Microsystems,
      forming part of the JavaFX family of technologies on the Java Platform.
    :extract_html: "<p><b>JavaFX Script</b> was a scripting language designed by Sun
      Microsystems, forming part of the JavaFX family of technologies on the Java
      Platform.</p>"
  record/73024b08-4d7c-4cd2-b733-89cda3b588af:
    :type: standard
    :title: Programming Language for Business
    :displaytitle: Programming Language for Business
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2924087
    :titles:
      :canonical: Programming_Language_for_Business
      :normalized: Programming Language for Business
      :display: Programming Language for Business
    :pageid: 350323
    :lang: en
    :dir: ltr
    :revision: '947665389'
    :tid: 8e68a760-1ab8-11eb-8966-e5f7b23ec5ed
    :timestamp: '2020-03-27T18:50:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Programming_Language_for_Business
        :revisions: https://en.wikipedia.org/wiki/Programming_Language_for_Business?action=history
        :edit: https://en.wikipedia.org/wiki/Programming_Language_for_Business?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Programming_Language_for_Business
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Programming_Language_for_Business
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Programming_Language_for_Business
        :edit: https://en.m.wikipedia.org/wiki/Programming_Language_for_Business?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Programming_Language_for_Business
    :extract: Programming Language for Business or PL/B is a business-oriented programming
      language originally called DATABUS and designed by Datapoint in 1972 as an alternative
      to COBOL because Datapoint's 8-bit computers could not fit COBOL into their
      limited memory, and because COBOL did not at the time have facilities to deal
      with Datapoint's built-in keyboard and screen.
    :extract_html: "<p><b>Programming Language for Business</b> or <b>PL/B</b> is
      a business-oriented programming language originally called <b>DATABUS</b> and
      designed by Datapoint in 1972 as an alternative to COBOL because Datapoint's
      8-bit computers could not fit COBOL into their limited memory, and because COBOL
      did not at the time have facilities to deal with Datapoint's built-in keyboard
      and screen.</p>"
  record/c46682f3-2f6b-4ff1-a282-305f14f6a626:
    :type: standard
    :title: Ease (programming language)
    :displaytitle: Ease (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5327483
    :titles:
      :canonical: Ease_(programming_language)
      :normalized: Ease (programming language)
      :display: Ease (programming language)
    :pageid: 1968693
    :lang: en
    :dir: ltr
    :revision: '896035814'
    :tid: 17b8ce50-1c9e-11eb-9563-d50b0ee3524d
    :timestamp: '2019-05-08T01:38:25Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ease_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ease_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ease_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ease_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ease_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ease_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ease_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ease_(programming_language)
    :extract: Ease is a general purpose parallel programming language. It is designed
      by Steven Ericsson-Zenith, a researcher at Yale University, the Institute for
      Advanced Science & Engineering in Silicon Valley, California, the Ecole Nationale
      Supérieure des Mines de Paris, and the Pierre and Marie Curie University, the
      science department of the Sorbonne.
    :extract_html: "<p><b>Ease</b> is a general purpose parallel programming language.
      It is designed by Steven Ericsson-Zenith, a researcher at Yale University, the
      Institute for Advanced Science &amp; Engineering in Silicon Valley, California,
      the Ecole Nationale Supérieure des Mines de Paris, and the Pierre and Marie
      Curie University, the science department of the Sorbonne.</p>"
  record/b12fc885-c7b9-4d2a-9cca-19fa8a2f9ead:
    :type: standard
    :title: LINC 4GL
    :displaytitle: LINC 4GL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6458741
    :titles:
      :canonical: LINC_4GL
      :normalized: LINC 4GL
      :display: LINC 4GL
    :pageid: 4298516
    :lang: en
    :dir: ltr
    :revision: '991958834'
    :tid: 1fddb430-34cf-11eb-92fb-17ab4b5c3953
    :timestamp: '2020-12-02T18:49:32Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LINC_4GL
        :revisions: https://en.wikipedia.org/wiki/LINC_4GL?action=history
        :edit: https://en.wikipedia.org/wiki/LINC_4GL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LINC_4GL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LINC_4GL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LINC_4GL
        :edit: https://en.m.wikipedia.org/wiki/LINC_4GL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LINC_4GL
    :extract: |2-

      LINC is a fourth-generation programming language, used mostly on Unisys computer systems.
    :extract_html: |-
      <p>
      <b>LINC</b> is a fourth-generation programming language, used mostly on Unisys computer systems.</p>
  record/f975a6a4-a721-47c8-ba37-262c9e748170:
    :type: standard
    :title: ML (programming language)
    :displaytitle: ML (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q860654
    :titles:
      :canonical: ML_(programming_language)
      :normalized: ML (programming language)
      :display: ML (programming language)
    :pageid: 20607
    :lang: en
    :dir: ltr
    :revision: '988471592'
    :tid: 7adfb3f0-25a3-11eb-90f0-0bdcb56817ee
    :timestamp: '2020-11-13T11:29:18Z'
    :description: General purpose functional programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ML_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ML_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ML_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ML_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ML_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ML_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ML_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ML_(programming_language)
    :extract: ML is a general-purpose functional programming language. ML is statically-scoped.
      It is known for its use of the polymorphic Hindley–Milner type system, which
      automatically assigns the types of most expressions without requiring explicit
      type annotations, and ensures type safety – there is a formal proof that a well-typed
      ML program does not cause runtime type errors. ML provides pattern matching
      for function arguments, garbage collection, imperative programming, call-by-value
      and currying. It is used heavily in programming language research and is one
      of the few languages to be completely specified and verified using formal semantics.
      Its types and pattern matching make it well-suited and commonly used to operate
      on other formal languages, such as in compiler writing, automated theorem proving,
      and formal verification.
    :extract_html: "<p><b>ML</b> is a general-purpose functional programming language.
      ML is statically-scoped. It is known for its use of the polymorphic Hindley–Milner
      type system, which automatically assigns the types of most expressions without
      requiring explicit type annotations, and ensures type safety – there is a formal
      proof that a well-typed ML program does not cause runtime type errors. ML provides
      pattern matching for function arguments, garbage collection, imperative programming,
      call-by-value and currying. It is used heavily in programming language research
      and is one of the few languages to be completely specified and verified using
      formal semantics. Its types and pattern matching make it well-suited and commonly
      used to operate on other formal languages, such as in compiler writing, automated
      theorem proving, and formal verification.</p>"
  record/19e789cb-4178-4c49-95bf-3c60b293725e:
    :type: standard
    :title: Warcraft III World Editor
    :displaytitle: "<i>Warcraft III World Editor</i>"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q897537
    :titles:
      :canonical: Warcraft_III_World_Editor
      :normalized: Warcraft III World Editor
      :display: "<i>Warcraft III World Editor</i>"
    :pageid: 21119001
    :lang: en
    :dir: ltr
    :revision: '985097956'
    :tid: 7485b940-3080-11eb-bdc6-ffebdd27bb97
    :timestamp: '2020-10-23T23:08:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Warcraft_III_World_Editor
        :revisions: https://en.wikipedia.org/wiki/Warcraft_III_World_Editor?action=history
        :edit: https://en.wikipedia.org/wiki/Warcraft_III_World_Editor?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Warcraft_III_World_Editor
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Warcraft_III_World_Editor
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Warcraft_III_World_Editor
        :edit: https://en.m.wikipedia.org/wiki/Warcraft_III_World_Editor?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Warcraft_III_World_Editor
    :extract: |-
      The Warcraft III World Editor is the built-in level editor for the real-time strategy game Warcraft III: Reign of Chaos and its expansion set Warcraft III: The Frozen Throne. Incorporating the core mechanics of the level editor of Blizzard Entertainment's previous strategy game StarCraft, it allows users to create and customize their own maps with a high level of detail and flexibility. The editor has been used in creating several popular custom maps, including Defense of the Ancients. The level editor was substantially improved for The Frozen Throne and allowed users to create cut scenes supporting voice-overs.
      Advanced features of the editor allow for custom models, tilesets and icons. The editor also supports Blizzard's JASS scripting language for programming complex actions otherwise not supported by the graphical interface.
    :extract_html: |-
      <p>The <i><b>Warcraft III World Editor</b></i> is the built-in level editor for the real-time strategy game <i>Warcraft III: Reign of Chaos</i> and its expansion set <i>Warcraft III: The Frozen Throne</i>. Incorporating the core mechanics of the level editor of Blizzard Entertainment's previous strategy game <i>StarCraft</i>, it allows users to create and customize their own maps with a high level of detail and flexibility. The editor has been used in creating several popular custom maps, including <i>Defense of the Ancients</i>. The level editor was substantially improved for <i>The Frozen Throne</i> and allowed users to create cut scenes supporting voice-overs.
      Advanced features of the editor allow for custom models, tilesets and icons. The editor also supports Blizzard's JASS scripting language for programming complex actions otherwise not supported by the graphical interface.</p>
  record/c3c57171-b2fa-45de-8d1b-ec550208d248:
    :type: standard
    :title: PL/M
    :displaytitle: PL/M
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2160963
    :titles:
      :canonical: PL/M
      :normalized: PL/M
      :display: PL/M
    :pageid: 543057
    :lang: en
    :dir: ltr
    :revision: '967975619'
    :tid: 8451c8a0-1b09-11eb-ab68-cdb864c0be86
    :timestamp: '2020-07-16T13:02:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PL%2FM
        :revisions: https://en.wikipedia.org/wiki/PL%2FM?action=history
        :edit: https://en.wikipedia.org/wiki/PL%2FM?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PL%2FM
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PL%2FM
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PL%2FM
        :edit: https://en.m.wikipedia.org/wiki/PL%2FM?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PL%2FM
    :extract: "The PL/M programming language \n(an acronym of Programming Language
      for Microcomputers)\nis a high-level language conceived and developed by \nGary
      Kildall in 1973 for Hank Smith at Intel for its microprocessors."
    :extract_html: "<p>The <b>PL/M programming language</b> \n(an acronym of <i><b>P</b>rogramming
      <b>L</b>anguage for <b>M</b>icrocomputers</i>)\nis a high-level language conceived
      and developed by \nGary Kildall in 1973 for Hank Smith at Intel for its microprocessors.</p>"
  record/c2ddc6f4-1a3f-445a-a289-564ede0a5111:
    :type: standard
    :title: Crystal (programming language)
    :displaytitle: Crystal (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q21921428
    :titles:
      :canonical: Crystal_(programming_language)
      :normalized: Crystal (programming language)
      :display: Crystal (programming language)
    :pageid: 48972626
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Crystal_language_logo.svg/320px-Crystal_language_logo.svg.png
      :width: 320
      :height: 129
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/cb/Crystal_language_logo.svg/512px-Crystal_language_logo.svg.png
      :width: 512
      :height: 207
    :lang: en
    :dir: ltr
    :revision: '985294696'
    :tid: d864eb40-2f25-11eb-b2b2-19170a2639b5
    :timestamp: '2020-10-25T03:59:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Crystal_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Crystal_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Crystal_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Crystal_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Crystal_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Crystal_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Crystal_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Crystal_(programming_language)
    :extract: "Crystal is a general-purpose, object-oriented programming language,
      designed and developed by Ary Borenszweig, Juan Wajnerman, Brian Cardiff and
      more than 300 contributors. With syntax inspired by the language Ruby, it is
      a compiled language with static type-checking, but specifying the types of variables
      or method arguments is generally unneeded. Types are resolved by an advanced
      global type inference algorithm. Crystal \nis currently in active development.
      It is released as free and open-source software under the Apache License version
      2.0."
    :extract_html: "<p><b>Crystal</b> is a general-purpose, object-oriented programming
      language, designed and developed by Ary Borenszweig, Juan Wajnerman, Brian Cardiff
      and more than 300 contributors. With syntax inspired by the language Ruby, it
      is a compiled language with static type-checking, but specifying the types of
      variables or method arguments is generally unneeded. Types are resolved by an
      advanced global type inference algorithm. Crystal \nis currently in active development.
      It is released as free and open-source software under the Apache License version
      2.0.</p>"
  record/e1b84d02-b702-42db-a205-ba0ef26abce7:
    :type: standard
    :title: CFEngine
    :displaytitle: CFEngine
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q505877
    :titles:
      :canonical: CFEngine
      :normalized: CFEngine
      :display: CFEngine
    :pageid: 1109117
    :lang: en
    :dir: ltr
    :revision: '989657763'
    :tid: b9141750-2b03-11eb-8ba5-c3e44360fe3d
    :timestamp: '2020-11-20T07:40:52Z'
    :description: Configuration management software
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CFEngine
        :revisions: https://en.wikipedia.org/wiki/CFEngine?action=history
        :edit: https://en.wikipedia.org/wiki/CFEngine?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CFEngine
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CFEngine
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CFEngine
        :edit: https://en.m.wikipedia.org/wiki/CFEngine?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CFEngine
    :extract: CFEngine is an open-source configuration management system, written
      by Mark Burgess. Its primary function is to provide automated configuration
      and maintenance of large-scale computer systems, including the unified management
      of servers, desktops, consumer and industrial devices, embedded networked devices,
      mobile smartphones, and tablet computers.
    :extract_html: "<p><b>CFEngine</b> is an open-source configuration management
      system, written by Mark Burgess. Its primary function is to provide automated
      configuration and maintenance of large-scale computer systems, including the
      unified management of servers, desktops, consumer and industrial devices, embedded
      networked devices, mobile smartphones, and tablet computers.</p>"
  record/e2c845cf-247b-4317-b370-670742b5a310:
    :type: standard
    :title: Draco (programming language)
    :displaytitle: Draco (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5304638
    :titles:
      :canonical: Draco_(programming_language)
      :normalized: Draco (programming language)
      :display: Draco (programming language)
    :pageid: 507348
    :lang: en
    :dir: ltr
    :revision: '875751475'
    :tid: 63b0bd20-1afc-11eb-a0a6-7b92f782d901
    :timestamp: '2018-12-28T19:44:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Draco_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Draco_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Draco_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Draco_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Draco_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Draco_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Draco_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Draco_(programming_language)
    :extract: Draco was a shareware programming language created by Chris Gray. First
      developed for CP/M systems, Amiga version followed in 1987.
    :extract_html: "<p><b>Draco</b> was a shareware programming language created by
      Chris Gray. First developed for CP/M systems, Amiga version followed in 1987.</p>"
  record/3ff8af15-9fe4-47f6-8607-958fe5589101:
    :type: standard
    :title: DataFlex
    :displaytitle: DataFlex
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2391203
    :titles:
      :canonical: DataFlex
      :normalized: DataFlex
      :display: DataFlex
    :pageid: 742526
    :lang: en
    :dir: ltr
    :revision: '976265989'
    :tid: 7252e8b0-2d28-11eb-a8d8-41d82a4171fd
    :timestamp: '2020-09-02T01:59:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DataFlex
        :revisions: https://en.wikipedia.org/wiki/DataFlex?action=history
        :edit: https://en.wikipedia.org/wiki/DataFlex?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DataFlex
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DataFlex
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DataFlex
        :edit: https://en.m.wikipedia.org/wiki/DataFlex?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DataFlex
    :extract: DataFlex is an object-oriented high-level programming language and a
      fourth generation visual tool 4GL for developing Windows, web and mobile software
      applications on one framework-based platform. It was introduced and developed
      by Data Access Corporation beginning in 1982.
    :extract_html: "<p><b>DataFlex</b> is an object-oriented high-level programming
      language and a fourth generation visual tool 4GL for developing Windows, web
      and mobile software applications on one framework-based platform. It was introduced
      and developed by <i>Data Access Corporation</i> beginning in 1982.</p>"
  record/0abecd0c-2978-4551-a7f6-3c8acb3e1782:
    :type: standard
    :title: F Sharp (programming language)
    :displaytitle: F Sharp (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q648619
    :titles:
      :canonical: F_Sharp_(programming_language)
      :normalized: F Sharp (programming language)
      :display: F Sharp (programming language)
    :pageid: 239964
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/57/Fsharp_logo.png/320px-Fsharp_logo.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/5/57/Fsharp_logo.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '990365793'
    :tid: e9d8e850-35c8-11eb-8148-cd2dc9f73ac7
    :timestamp: '2020-11-24T02:52:58Z'
    :description: Microsoft programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/F_Sharp_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/F_Sharp_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/F_Sharp_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:F_Sharp_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/F_Sharp_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/F_Sharp_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/F_Sharp_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:F_Sharp_(programming_language)
    :extract: F# is a functional-first, general purpose, strongly typed, multi-paradigm
      programming language that encompasses functional, imperative, and object-oriented
      programming methods. F# is most often used as a cross-platform Common Language
      Infrastructure (CLI) language on .NET Core, but it can also generate JavaScript
      and graphics processing unit (GPU) code.
    :extract_html: "<p><b>F#</b> is a functional-first, general purpose, strongly
      typed, multi-paradigm programming language that encompasses functional, imperative,
      and object-oriented programming methods. F# is most often used as a cross-platform
      Common Language Infrastructure (CLI) language on .NET Core, but it can also
      generate JavaScript and graphics processing unit (GPU) code.</p>"
  record/ce9aa325-0b9a-4cfa-a365-dad04b53775f:
    :type: standard
    :title: Zeno (programming language)
    :displaytitle: Zeno (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475367
    :titles:
      :canonical: Zeno_(programming_language)
      :normalized: Zeno (programming language)
      :display: Zeno (programming language)
    :pageid: 928636
    :lang: en
    :dir: ltr
    :revision: '895986402'
    :tid: 32e50790-eb46-11ea-8820-65d663a01ab7
    :timestamp: '2019-05-07T18:35:44Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Zeno_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Zeno_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Zeno_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Zeno_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Zeno_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Zeno_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Zeno_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Zeno_(programming_language)
    :extract: Zeno is an imperative procedural programming language designed to be
      easy to learn and user friendly. Zeno is generic in the sense that it contains
      most of the essential elements used in other languages to develop real applications.
    :extract_html: "<p><b>Zeno</b> is an imperative procedural programming language
      designed to be easy to learn and user friendly. Zeno is generic in the sense
      that it contains most of the essential elements used in other languages to develop
      real applications.</p>"
  record/36981612-106e-4828-9ca2-b7ce1997395d:
    :type: standard
    :title: Sather
    :displaytitle: Sather
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q602012
    :titles:
      :canonical: Sather
      :normalized: Sather
      :display: Sather
    :pageid: 28763
    :lang: en
    :dir: ltr
    :revision: '986846888'
    :tid: 9a627e70-1dbe-11eb-81b5-278a0b788099
    :timestamp: '2020-11-03T10:23:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Sather
        :revisions: https://en.wikipedia.org/wiki/Sather?action=history
        :edit: https://en.wikipedia.org/wiki/Sather?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Sather
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Sather
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Sather
        :edit: https://en.m.wikipedia.org/wiki/Sather?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Sather
    :extract: For people with the surname, see Sather (surname).
    :extract_html: "<p><i>For people with the surname, see Sather (surname).</i></p>"
  record/d10254d7-7baa-4077-a0c8-d024f684c355:
    :type: standard
    :title: Fortress (programming language)
    :displaytitle: Fortress (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1439015
    :titles:
      :canonical: Fortress_(programming_language)
      :normalized: Fortress (programming language)
      :display: Fortress (programming language)
    :pageid: 1822171
    :lang: en
    :dir: ltr
    :revision: '976090906'
    :tid: bbc57ab0-1c68-11eb-b030-df9e8964e362
    :timestamp: '2020-09-01T04:31:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Fortress_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Fortress_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Fortress_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Fortress_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Fortress_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Fortress_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Fortress_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Fortress_(programming_language)
    :extract: Fortress is a discontinued experimental programming language for high-performance
      computing, created by Sun Microsystems with funding from DARPA's High Productivity
      Computing Systems project. One of the language designers was Guy L. Steele Jr.,
      whose previous work includes Scheme, Common Lisp, and Java.
    :extract_html: "<p><b>Fortress</b> is a discontinued experimental programming
      language for high-performance computing, created by Sun Microsystems with funding
      from DARPA's High Productivity Computing Systems project. One of the language
      designers was Guy L. Steele Jr., whose previous work includes Scheme, Common
      Lisp, and Java.</p>"
  record/0a59556f-2573-406e-be31-3abfc4af9ed2:
    :type: standard
    :title: Core War
    :displaytitle: "<i>Core War</i>"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1132500
    :titles:
      :canonical: Core_War
      :normalized: Core War
      :display: "<i>Core War</i>"
    :pageid: 274362
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c2/Core_War_PMars_Screenshot.png/320px-Core_War_PMars_Screenshot.png
      :width: 320
      :height: 222
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/c/c2/Core_War_PMars_Screenshot.png
      :width: 328
      :height: 228
    :lang: en
    :dir: ltr
    :revision: '988961054'
    :tid: 25a32730-306d-11eb-9ccb-65199b4bee94
    :timestamp: '2020-11-16T07:19:05Z'
    :description: 1984 programming game
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Core_War
        :revisions: https://en.wikipedia.org/wiki/Core_War?action=history
        :edit: https://en.wikipedia.org/wiki/Core_War?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Core_War
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Core_War
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Core_War
        :edit: https://en.m.wikipedia.org/wiki/Core_War?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Core_War
    :extract: Core War is a 1984 programming game created by D. G. Jones and A. K.
      Dewdney in which two or more battle programs compete for control of a virtual
      computer. These battle programs are written in an abstract assembly language
      called Redcode.
    :extract_html: "<p><i><b>Core War</b></i> is a 1984 programming game created by
      D. G. Jones and A. K. Dewdney in which two or more battle programs compete for
      control of a virtual computer. These battle programs are written in an abstract
      assembly language called <i>Redcode</i>.</p>"
  record/9f1a3dbf-a2ff-4f3a-90e2-05953a356fba:
    :type: standard
    :title: Alef (programming language)
    :displaytitle: Alef (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1895587
    :titles:
      :canonical: Alef_(programming_language)
      :normalized: Alef (programming language)
      :display: Alef (programming language)
    :pageid: 1935217
    :lang: en
    :dir: ltr
    :revision: '956109047'
    :tid: 3710c8c0-1c8f-11eb-96d6-85fabc69e68e
    :timestamp: '2020-05-11T15:16:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Alef_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Alef_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Alef_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Alef_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Alef_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Alef_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Alef_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Alef_(programming_language)
    :extract: Alef is a discontinued concurrent programming language, designed as
      part of the Plan 9 operating system by Phil Winterbottom of Bell Labs. It implemented
      the channel-based concurrency model of Newsqueak in a compiled, C-like language.
    :extract_html: "<p><b>Alef</b> is a discontinued concurrent programming language,
      designed as part of the Plan 9 operating system by Phil Winterbottom of Bell
      Labs. It implemented the channel-based concurrency model of Newsqueak in a compiled,
      C-like language.</p>"
  record/a57a6a8a-ac47-49df-9e71-1382a682640f:
    :type: standard
    :title: Jess (programming language)
    :displaytitle: Jess (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2259392
    :titles:
      :canonical: Jess_(programming_language)
      :normalized: Jess (programming language)
      :display: Jess (programming language)
    :pageid: 37091
    :lang: en
    :dir: ltr
    :revision: '972699481'
    :tid: ffe11e50-2d27-11eb-91e0-93ea397ac371
    :timestamp: '2020-08-13T11:53:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Jess_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Jess_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Jess_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Jess_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Jess_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Jess_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Jess_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Jess_(programming_language)
    :extract: Jess is a rule engine for the Java platform that was developed by Ernest
      Friedman-Hill of Sandia National Labs. It is a superset of the CLIPS programming
      language. It was first written in late 1995. The language provides rule-based
      programming for the automation of an expert system, and is frequently termed
      as an expert system shell. In recent years, intelligent agent systems have also
      developed, which depend on a similar capability.
    :extract_html: "<p><b>Jess</b> is a rule engine for the Java platform that was
      developed by Ernest Friedman-Hill of Sandia National Labs. It is a superset
      of the CLIPS programming language. It was first written in late 1995. The language
      provides rule-based programming for the automation of an expert system, and
      is frequently termed as an <i>expert system shell</i>. In recent years, intelligent
      agent systems have also developed, which depend on a similar capability.</p>"
  record/52aa7257-c587-4f27-a33e-36f2a5e29529:
    :type: standard
    :title: Xtend
    :displaytitle: Xtend
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1691738
    :titles:
      :canonical: Xtend
      :normalized: Xtend
      :display: Xtend
    :pageid: 36462606
    :lang: en
    :dir: ltr
    :revision: '987918223'
    :tid: 2a231d70-22ed-11eb-b1b5-c127754c14ca
    :timestamp: '2020-11-10T00:38:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Xtend
        :revisions: https://en.wikipedia.org/wiki/Xtend?action=history
        :edit: https://en.wikipedia.org/wiki/Xtend?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Xtend
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Xtend
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Xtend
        :edit: https://en.m.wikipedia.org/wiki/Xtend?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Xtend
    :extract: Xtend is a general-purpose high-level programming language for the Java
      Virtual Machine. Syntactically and semantically Xtend has its roots in the Java
      programming language but focuses on a more concise syntax and some additional
      functionality such as type inference, extension methods, and operator overloading.
      Being primarily an object-oriented language, it also integrates features known
      from functional programming, e.g. lambda expressions. Xtend is statically typed
      and uses Java's type system without modifications. It is compiled to Java code
      and thereby seamlessly integrates with all existing Java libraries.
    :extract_html: "<p><b>Xtend</b> is a general-purpose high-level programming language
      for the Java Virtual Machine. Syntactically and semantically Xtend has its roots
      in the Java programming language but focuses on a more concise syntax and some
      additional functionality such as type inference, extension methods, and operator
      overloading. Being primarily an object-oriented language, it also integrates
      features known from functional programming, e.g. lambda expressions. Xtend is
      statically typed and uses Java's type system without modifications. It is compiled
      to Java code and thereby seamlessly integrates with all existing Java libraries.</p>"
  record/2047f50c-a792-4493-be00-93902fcdc37b:
    :type: standard
    :title: Ratfiv
    :displaytitle: Ratfiv
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7295568
    :titles:
      :canonical: Ratfiv
      :normalized: Ratfiv
      :display: Ratfiv
    :pageid: 642890
    :lang: en
    :dir: ltr
    :revision: '883228290'
    :tid: cb6986b0-35b7-11eb-a4e8-ff0340bbce06
    :timestamp: '2019-02-14T02:31:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ratfiv
        :revisions: https://en.wikipedia.org/wiki/Ratfiv?action=history
        :edit: https://en.wikipedia.org/wiki/Ratfiv?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ratfiv
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ratfiv
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ratfiv
        :edit: https://en.m.wikipedia.org/wiki/Ratfiv?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ratfiv
    :extract: Ratfiv is an enhanced version of the Ratfor programming language, a
      preprocessor for Fortran designed to give it C-like capabilities. Fortran was
      widely used for scientific programming but had very basic control-flow primitives
      and no "macro" facility which limited its expressiveness.
    :extract_html: <p><b>Ratfiv</b> is an enhanced version of the Ratfor programming
      language, a preprocessor for Fortran designed to give it C-like capabilities.
      Fortran was widely used for scientific programming but had very basic control-flow
      primitives and no "macro" facility which limited its expressiveness.</p>
  record/61ce2f8a-f5c1-4198-b3c3-3baccef7db7d:
    :type: standard
    :title: Swift (parallel scripting language)
    :displaytitle: Swift (parallel scripting language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17147733
    :titles:
      :canonical: Swift_(parallel_scripting_language)
      :normalized: Swift (parallel scripting language)
      :display: Swift (parallel scripting language)
    :pageid: 42946796
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/8/86/Swift_%28programing_language%29_logo.png
      :width: 190
      :height: 83
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/8/86/Swift_%28programing_language%29_logo.png
      :width: 190
      :height: 83
    :lang: en
    :dir: ltr
    :revision: '953897127'
    :tid: ca68dce0-2f93-11eb-9605-f3079c26d39e
    :timestamp: '2020-04-29T16:40:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Swift_(parallel_scripting_language)
        :revisions: https://en.wikipedia.org/wiki/Swift_(parallel_scripting_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Swift_(parallel_scripting_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Swift_(parallel_scripting_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Swift_(parallel_scripting_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Swift_(parallel_scripting_language)
        :edit: https://en.m.wikipedia.org/wiki/Swift_(parallel_scripting_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Swift_(parallel_scripting_language)
    :extract: Swift is an implicitly parallel programming language that allows writing
      scripts that distribute program execution across distributed computing resources,
      including clusters, clouds, grids, and supercomputers. Swift implementations
      are open-source software under the Apache License, version 2.0.
    :extract_html: "<p><b>Swift</b> is an implicitly parallel programming language
      that allows writing scripts that distribute program execution across distributed
      computing resources, including clusters, clouds, grids, and supercomputers.
      Swift implementations are open-source software under the Apache License, version
      2.0.</p>"
  record/7747fcba-5c0a-4200-b311-65408a77ec3f:
    :type: standard
    :title: JScript
    :displaytitle: JScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q553514
    :titles:
      :canonical: JScript
      :normalized: JScript
      :display: JScript
    :pageid: 263872
    :lang: en
    :dir: ltr
    :revision: '991771399'
    :tid: 89194710-3408-11eb-b677-617fe4f894ce
    :timestamp: '2020-12-01T19:07:57Z'
    :description: An implementation of ECMAScript by Microsoft
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JScript
        :revisions: https://en.wikipedia.org/wiki/JScript?action=history
        :edit: https://en.wikipedia.org/wiki/JScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JScript
        :edit: https://en.m.wikipedia.org/wiki/JScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JScript
    :extract: JScript is Microsoft's dialect of the ECMAScript standard that is used
      in Microsoft's Internet Explorer.
    :extract_html: "<p><b>JScript</b> is Microsoft's dialect of the ECMAScript standard
      that is used in Microsoft's Internet Explorer.</p>"
  record/aec152c3-891a-46ae-8b32-814737324cf2:
    :type: standard
    :title: MuPAD
    :displaytitle: MuPAD
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1951595
    :titles:
      :canonical: MuPAD
      :normalized: MuPAD
      :display: MuPAD
    :pageid: 30874575
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f2/MuPADCube.png
      :width: 66
      :height: 59
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f2/MuPADCube.png
      :width: 66
      :height: 59
    :lang: en
    :dir: ltr
    :revision: '968633857'
    :tid: e24989a0-2d17-11eb-ac34-3711ad166cc8
    :timestamp: '2020-07-20T15:41:42Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MuPAD
        :revisions: https://en.wikipedia.org/wiki/MuPAD?action=history
        :edit: https://en.wikipedia.org/wiki/MuPAD?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MuPAD
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MuPAD
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MuPAD
        :edit: https://en.m.wikipedia.org/wiki/MuPAD?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MuPAD
    :extract: MuPAD is a computer algebra system (CAS). Originally developed by the
      MuPAD research group at the University of Paderborn, Germany, development was
      taken over by the company SciFace Software GmbH & Co. KG in cooperation with
      the MuPAD research group and partners from some other universities starting
      in 1997. MuPAD's graphics package was particularly successful, especially considering
      the era when it was developed.
    :extract_html: "<p><b>MuPAD</b> is a computer algebra system (CAS). Originally
      developed by the MuPAD research group at the University of Paderborn, Germany,
      development was taken over by the company SciFace Software GmbH &amp; Co. KG
      in cooperation with the MuPAD research group and partners from some other universities
      starting in 1997. MuPAD's graphics package was particularly successful, especially
      considering the era when it was developed.</p>"
  record/38f04253-a21d-4ee9-b500-66f176764776:
    :type: standard
    :title: ProvideX
    :displaytitle: ProvideX
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3408297
    :titles:
      :canonical: ProvideX
      :normalized: ProvideX
      :display: ProvideX
    :pageid: 2276397
    :lang: en
    :dir: ltr
    :revision: '857061882'
    :tid: 8ab3fa50-23ac-11eb-86e4-f56bfe62da0e
    :timestamp: '2018-08-29T09:13:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ProvideX
        :revisions: https://en.wikipedia.org/wiki/ProvideX?action=history
        :edit: https://en.wikipedia.org/wiki/ProvideX?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ProvideX
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ProvideX
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ProvideX
        :edit: https://en.m.wikipedia.org/wiki/ProvideX?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ProvideX
    :extract: ProvideX is a computer language and development environment derived
      from Business Basic in the mid-1980s.
    :extract_html: "<p><b>ProvideX</b> is a computer language and development environment
      derived from Business Basic in the mid-1980s.</p>"
  record/6869eef0-e5f2-4319-8ed6-d2dfa5d65b88:
    :type: standard
    :title: BeanShell
    :displaytitle: BeanShell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q812964
    :titles:
      :canonical: BeanShell
      :normalized: BeanShell
      :display: BeanShell
    :pageid: 1565435
    :lang: en
    :dir: ltr
    :revision: '951188377'
    :tid: 54386880-26ae-11eb-96d4-8946fc466132
    :timestamp: '2020-04-15T23:03:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BeanShell
        :revisions: https://en.wikipedia.org/wiki/BeanShell?action=history
        :edit: https://en.wikipedia.org/wiki/BeanShell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BeanShell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BeanShell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BeanShell
        :edit: https://en.m.wikipedia.org/wiki/BeanShell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BeanShell
    :extract: BeanShell is a Java-like scripting language, invented by Patrick Niemeyer.
      It runs in the Java Runtime Environment (JRE) and uses a variation of the Java
      syntax, in addition to scripting commands and syntax.
    :extract_html: "<p><b>BeanShell</b> is a Java-like scripting language, invented
      by Patrick Niemeyer. It runs in the Java Runtime Environment (JRE) and uses
      a variation of the Java syntax, in addition to scripting commands and syntax.</p>"
  record/de1d1a30-8616-4e57-b5e6-9b4f3923964e:
    :type: standard
    :title: Idris (programming language)
    :displaytitle: Idris (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q15408477
    :titles:
      :canonical: Idris_(programming_language)
      :normalized: Idris (programming language)
      :display: Idris (programming language)
    :pageid: 39035048
    :lang: en
    :dir: ltr
    :revision: '985377123'
    :tid: c3d10610-2c9f-11eb-bd71-31cd530faeaf
    :timestamp: '2020-10-25T16:31:32Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Idris_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Idris_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Idris_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Idris_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Idris_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Idris_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Idris_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Idris_(programming_language)
    :extract: Idris is a purely-functional programming language with dependent types,
      optional lazy evaluation, and features such as a totality checker. Idris may
      be used as a proof assistant, but it is designed to be a general-purpose programming
      language similar to Haskell.
    :extract_html: "<p><b>Idris</b> is a purely-functional programming language with
      dependent types, optional lazy evaluation, and features such as a totality checker.
      Idris may be used as a proof assistant, but it is designed to be a general-purpose
      programming language similar to Haskell.</p>"
  record/5662910d-2e04-459d-9375-1b880085ee5a:
    :type: standard
    :title: C shell
    :displaytitle: C shell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1064516
    :titles:
      :canonical: C_shell
      :normalized: C shell
      :display: C shell
    :pageid: 95833
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png/320px-Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png
      :width: 320
      :height: 183
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/1f/Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png
      :width: 1280
      :height: 733
    :lang: en
    :dir: ltr
    :revision: '988719278'
    :tid: f01be0e0-26bf-11eb-b118-4123bae1c5d0
    :timestamp: '2020-11-14T21:25:30Z'
    :description: Unix shell
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C_shell
        :revisions: https://en.wikipedia.org/wiki/C_shell?action=history
        :edit: https://en.wikipedia.org/wiki/C_shell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C_shell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C_shell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C_shell
        :edit: https://en.m.wikipedia.org/wiki/C_shell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C_shell
    :extract: The C shell is a Unix shell created by Bill Joy while he was a graduate
      student at University of California, Berkeley in the late 1970s. It has been
      widely distributed, beginning with the 2BSD release of the Berkeley Software
      Distribution (BSD) which Joy first distributed in 1978. Other early contributors
      to the ideas or the code were Michael Ubell, Eric Allman, Mike O'Brien and Jim
      Kulp.
    :extract_html: "<p>The <b>C shell</b> is a Unix shell created by Bill Joy while
      he was a graduate student at University of California, Berkeley in the late
      1970s. It has been widely distributed, beginning with the 2BSD release of the
      Berkeley Software Distribution (BSD) which Joy first distributed in 1978. Other
      early contributors to the ideas or the code were Michael Ubell, Eric Allman,
      Mike O'Brien and Jim Kulp.</p>"
  record/202351a5-b2a2-4b90-9e62-75cffc371260:
    :type: standard
    :title: GNU Guile
    :displaytitle: GNU Guile
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1486208
    :titles:
      :canonical: GNU_Guile
      :normalized: GNU Guile
      :display: GNU Guile
    :pageid: 1436948
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/GNU-Guile-logo.svg/320px-GNU-Guile-logo.svg.png
      :width: 320
      :height: 172
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b3/GNU-Guile-logo.svg/325px-GNU-Guile-logo.svg.png
      :width: 325
      :height: 175
    :lang: en
    :dir: ltr
    :revision: '988316999'
    :tid: 8244be10-2fa3-11eb-8740-71b5d699fd0f
    :timestamp: '2020-11-12T12:51:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GNU_Guile
        :revisions: https://en.wikipedia.org/wiki/GNU_Guile?action=history
        :edit: https://en.wikipedia.org/wiki/GNU_Guile?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GNU_Guile
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GNU_Guile
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GNU_Guile
        :edit: https://en.m.wikipedia.org/wiki/GNU_Guile?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GNU_Guile
    :extract: GNU Ubiquitous Intelligent Language for Extensions is the preferred
      extension language system for the GNU Project and features an implementation
      of the programming language Scheme. Its first version was released in 1993.
      In addition to large parts of Scheme standards, Guile Scheme includes modularized
      extensions for many different programming tasks.
    :extract_html: "<p><b>GNU Ubiquitous Intelligent Language for Extensions</b> is
      the preferred extension language system for the GNU Project and features an
      implementation of the programming language Scheme. Its first version was released
      in 1993. In addition to large parts of Scheme standards, Guile Scheme includes
      modularized extensions for many different programming tasks.</p>"
  record/492e4919-2234-4460-8867-1d781473df86:
    :type: standard
    :title: Miranda (programming language)
    :displaytitle: Miranda (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q780803
    :titles:
      :canonical: Miranda_(programming_language)
      :normalized: Miranda (programming language)
      :display: Miranda (programming language)
    :pageid: 93267
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/3/34/Miranda_logo_%28programming_language%29.jpg
      :width: 303
      :height: 125
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/3/34/Miranda_logo_%28programming_language%29.jpg
      :width: 303
      :height: 125
    :lang: en
    :dir: ltr
    :revision: '986721444'
    :tid: c9501bc0-1fee-11eb-9e8a-d75d9f20ca40
    :timestamp: '2020-11-02T16:28:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Miranda_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Miranda_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Miranda_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Miranda_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Miranda_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Miranda_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Miranda_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Miranda_(programming_language)
    :extract: Miranda is a lazy, purely functional programming language designed by
      David Turner as a successor to his earlier programming languages SASL and KRC,
      using some concepts from ML and Hope. It was produced by Research Software Ltd.
      of England and was the first purely functional language to be commercially supported.
    :extract_html: "<p><b>Miranda</b> is a lazy, purely functional programming language
      designed by David Turner as a successor to his earlier programming languages
      SASL and KRC, using some concepts from ML and Hope. It was produced by Research
      Software Ltd. of England and was the first purely functional language to be
      commercially supported.</p>"
  record/33567618-c754-4f36-b28a-9bd397210af6:
    :type: standard
    :title: Krypton (programming language)
    :displaytitle: Krypton (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6439704
    :titles:
      :canonical: Krypton_(programming_language)
      :normalized: Krypton (programming language)
      :display: Krypton (programming language)
    :pageid: 87224
    :lang: en
    :dir: ltr
    :revision: '917620860'
    :tid: 918857c0-35b0-11eb-a4f0-b399f5abeb8c
    :timestamp: '2019-09-24T17:36:47Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Krypton_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Krypton_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Krypton_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Krypton_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Krypton_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Krypton_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Krypton_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Krypton_(programming_language)
    :extract: Krypton is a frame-based computer programming language.
    :extract_html: "<p><b>Krypton</b> is a frame-based computer programming language.</p>"
  record/4749b1da-bce4-4dfd-bfca-75184b13992a:
    :type: standard
    :title: OpenEdge Advanced Business Language
    :displaytitle: OpenEdge Advanced Business Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1963461
    :titles:
      :canonical: OpenEdge_Advanced_Business_Language
      :normalized: OpenEdge Advanced Business Language
      :display: OpenEdge Advanced Business Language
    :pageid: 1071357
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/5/58/OpenEdge_logo.png/320px-OpenEdge_logo.png
      :width: 320
      :height: 167
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/58/OpenEdge_logo.png
      :width: 436
      :height: 228
    :lang: en
    :dir: ltr
    :revision: '989487165'
    :tid: 25da8600-2a3a-11eb-89d0-f39e924a7c1a
    :timestamp: '2020-11-19T07:37:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language
        :revisions: https://en.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language?action=history
        :edit: https://en.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OpenEdge_Advanced_Business_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OpenEdge_Advanced_Business_Language
        :edit: https://en.m.wikipedia.org/wiki/OpenEdge_Advanced_Business_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OpenEdge_Advanced_Business_Language
    :extract: OpenEdge Advanced Business Language, or OpenEdge ABL for short, is a
      business application development language created and maintained by Progress
      Software Corporation (PSC). The language, typically classified as a fourth-generation
      programming language, uses an English-like syntax to simplify software development.
      The language was called PROGRESS or Progress 4GL up until version 9, but in
      2006 PSC changed the name to OpenEdge Advanced Business Language in order to
      overcome a presumed industry perception that 4GLs were less capable than other
      languages. A subset of the language, called SpeedScript, is used in the development
      of web applications.
    :extract_html: "<p><b>OpenEdge Advanced Business Language</b>, or <b>OpenEdge
      ABL</b> for short, is a business application development language created and
      maintained by Progress Software Corporation (PSC). The language, typically classified
      as a fourth-generation programming language, uses an English-like syntax to
      simplify software development. The language was called <b>PROGRESS</b> or <b>Progress
      4GL</b> up until version 9, but in 2006 PSC changed the name to OpenEdge Advanced
      Business Language in order to overcome a presumed industry perception that 4GLs
      were less capable than other languages. A subset of the language, called <i>SpeedScript</i>,
      is used in the development of web applications.</p>"
  record/0eabc53f-2c1d-45c3-893f-ad079df799fb:
    :type: standard
    :title: Computer Sciences Corporation
    :displaytitle: Computer Sciences Corporation
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1122329
    :titles:
      :canonical: Computer_Sciences_Corporation
      :normalized: Computer Sciences Corporation
      :display: Computer Sciences Corporation
    :pageid: 942857
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/CSC_Logo.svg/320px-CSC_Logo.svg.png
      :width: 320
      :height: 193
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/CSC_Logo.svg/202px-CSC_Logo.svg.png
      :width: 202
      :height: 122
    :lang: en
    :dir: ltr
    :revision: '991818230'
    :tid: 1f64e580-3431-11eb-a3d0-c983f5c72280
    :timestamp: '2020-12-01T23:58:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Computer_Sciences_Corporation
        :revisions: https://en.wikipedia.org/wiki/Computer_Sciences_Corporation?action=history
        :edit: https://en.wikipedia.org/wiki/Computer_Sciences_Corporation?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Computer_Sciences_Corporation
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Computer_Sciences_Corporation
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Computer_Sciences_Corporation
        :edit: https://en.m.wikipedia.org/wiki/Computer_Sciences_Corporation?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Computer_Sciences_Corporation
    :extract: Computer Sciences Corporation (CSC) was an American multinational corporation
      that provided information technology (IT) services and professional services.
      On April 3, 2017, it merged with the Enterprise Services line of business of
      HP Enterprise to create DXC Technology.
    :extract_html: "<p><b>Computer Sciences Corporation</b> (<b>CSC</b>) was an American
      multinational corporation that provided information technology (IT) services
      and professional services. On April 3, 2017, it merged with the Enterprise Services
      line of business of HP Enterprise to create DXC Technology.</p>"
  record/977ac963-01c8-4a4f-ae27-2f38b44709b8:
    :type: standard
    :title: Verilog
    :displaytitle: Verilog
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q827773
    :titles:
      :canonical: Verilog
      :normalized: Verilog
      :display: Verilog
    :pageid: 63863
    :lang: en
    :dir: ltr
    :revision: '985867209'
    :tid: c46a1c50-1918-11eb-b160-179c673a6bfe
    :timestamp: '2020-10-28T12:26:06Z'
    :description: Hardware description language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Verilog
        :revisions: https://en.wikipedia.org/wiki/Verilog?action=history
        :edit: https://en.wikipedia.org/wiki/Verilog?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Verilog
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Verilog
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Verilog
        :edit: https://en.m.wikipedia.org/wiki/Verilog?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Verilog
    :extract: Verilog, standardized as IEEE 1364, is a hardware description language
      (HDL) used to model electronic systems. It is most commonly used in the design
      and verification of digital circuits at the register-transfer level of abstraction.
      It is also used in the verification of analog circuits and mixed-signal circuits,
      as well as in the design of genetic circuits. In 2009, the Verilog standard
      was merged into the SystemVerilog standard, creating IEEE Standard 1800-2009.
      Since then, Verilog is officially part of the SystemVerilog language. The current
      version is IEEE standard 1800-2017.
    :extract_html: "<p><b>Verilog</b>, standardized as <b>IEEE 1364</b>, is a hardware
      description language (HDL) used to model electronic systems. It is most commonly
      used in the design and verification of digital circuits at the register-transfer
      level of abstraction. It is also used in the verification of analog circuits
      and mixed-signal circuits, as well as in the design of genetic circuits. In
      2009, the Verilog standard was merged into the SystemVerilog standard, creating
      IEEE Standard 1800-2009. Since then, Verilog is officially part of the SystemVerilog
      language. The current version is IEEE standard 1800-2017.</p>"
  record/a43666a6-02b9-4fa0-8690-179305ca94eb:
    :type: standard
    :title: Csound
    :displaytitle: Csound
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q259347
    :titles:
      :canonical: Csound
      :normalized: Csound
      :display: Csound
    :pageid: 149998
    :lang: en
    :dir: ltr
    :revision: '991253919'
    :tid: 7251a470-31ef-11eb-9731-317a772faeab
    :timestamp: '2020-11-29T03:03:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Csound
        :revisions: https://en.wikipedia.org/wiki/Csound?action=history
        :edit: https://en.wikipedia.org/wiki/Csound?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Csound
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Csound
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Csound
        :edit: https://en.m.wikipedia.org/wiki/Csound?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Csound
    :extract: Csound is a Domain-specific computer programming language for audio
      programming. It is called Csound because it is written in C, as opposed to some
      of its predecessors.
    :extract_html: "<p><b>Csound</b> is a Domain-specific computer programming language
      for audio programming. It is called Csound because it is written in C, as opposed
      to some of its predecessors.</p>"
  record/2feb218b-a79d-4e6a-a228-a401644ab671:
    :type: standard
    :title: Coq
    :displaytitle: Coq
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1131652
    :titles:
      :canonical: Coq
      :normalized: Coq
      :display: Coq
    :pageid: 581974
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/d/d8/Coq_logo.png
      :width: 66
      :height: 100
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/d/d8/Coq_logo.png
      :width: 66
      :height: 100
    :lang: en
    :dir: ltr
    :revision: '990855443'
    :tid: bb46e150-309f-11eb-925d-7755d34c0ac5
    :timestamp: '2020-11-26T22:04:22Z'
    :description: Proof assistant
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Coq
        :revisions: https://en.wikipedia.org/wiki/Coq?action=history
        :edit: https://en.wikipedia.org/wiki/Coq?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Coq
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Coq
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Coq
        :edit: https://en.m.wikipedia.org/wiki/Coq?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Coq
    :extract: Coq is an interactive theorem prover first released in 1989. It allows
      for the expression of mathematical assertions, mechanically checks proofs of
      these assertions, helps to find formal proofs, and extracts a certified program
      from the constructive proof of its formal specification. Coq works within the
      theory of the calculus of inductive constructions, a derivative of the calculus
      of constructions. Coq is not an automated theorem prover but includes automatic
      theorem proving tactics (procedures) and various decision procedures.
    :extract_html: "<p><b>Coq</b> is an interactive theorem prover first released
      in 1989. It allows for the expression of mathematical assertions, mechanically
      checks proofs of these assertions, helps to find formal proofs, and extracts
      a certified program from the constructive proof of its formal specification.
      Coq works within the theory of the calculus of inductive constructions, a derivative
      of the calculus of constructions. Coq is not an automated theorem prover but
      includes automatic theorem proving tactics (procedures) and various decision
      procedures.</p>"
  record/5456973c-e560-464b-a221-bb9da733806e:
    :type: standard
    :title: Cypher (query language)
    :displaytitle: Cypher (query language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16834355
    :titles:
      :canonical: Cypher_(query_language)
      :normalized: Cypher (query language)
      :display: Cypher (query language)
    :pageid: 41583056
    :lang: en
    :dir: ltr
    :revision: '984503926'
    :tid: fcedb5d0-2d51-11eb-84f4-67b3c376c7ca
    :timestamp: '2020-10-20T12:33:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cypher_(query_language)
        :revisions: https://en.wikipedia.org/wiki/Cypher_(query_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cypher_(query_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cypher_(query_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cypher_(query_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cypher_(query_language)
        :edit: https://en.m.wikipedia.org/wiki/Cypher_(query_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cypher_(query_language)
    :extract: Cypher is a declarative graph query language that allows for expressive
      and efficient data querying in a property graph.
    :extract_html: "<p><b>Cypher</b> is a declarative graph query language that allows
      for expressive and efficient data querying in a property graph.</p>"
  record/6566dccf-397b-4338-8ca2-6ea5061380d2:
    :type: standard
    :title: Objective-C
    :displaytitle: Objective-C
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q188531
    :titles:
      :canonical: Objective-C
      :normalized: Objective-C
      :display: Objective-C
    :pageid: 39809523
    :lang: en
    :dir: ltr
    :revision: '991014598'
    :tid: 7546bfe0-30ef-11eb-8d7e-35b928ec63f7
    :timestamp: '2020-11-27T20:30:51Z'
    :description: General-purpose, object-oriented programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Objective-C
        :revisions: https://en.wikipedia.org/wiki/Objective-C?action=history
        :edit: https://en.wikipedia.org/wiki/Objective-C?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Objective-C
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Objective-C
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Objective-C
        :edit: https://en.m.wikipedia.org/wiki/Objective-C?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Objective-C
    :extract: Objective-C is a general-purpose, object-oriented programming language
      that adds Smalltalk-style messaging to the C programming language. It was the
      main programming language supported by Apple for macOS, iOS, and their respective
      application programming interfaces (APIs), Cocoa and Cocoa Touch, until the
      introduction of Swift in 2014.
    :extract_html: "<p><b>Objective-C</b> is a general-purpose, object-oriented programming
      language that adds Smalltalk-style messaging to the C programming language.
      It was the main programming language supported by Apple for macOS, iOS, and
      their respective application programming interfaces (APIs), Cocoa and Cocoa
      Touch, until the introduction of Swift in 2014.</p>"
  record/885a5311-7b91-4847-a435-031b464a71cc:
    :type: standard
    :title: YAML
    :displaytitle: YAML
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q281876
    :titles:
      :canonical: YAML
      :normalized: YAML
      :display: YAML
    :pageid: 326530
    :lang: en
    :dir: ltr
    :revision: '991935776'
    :tid: 1bd34a20-34bc-11eb-81f7-9703991fb1b9
    :timestamp: '2020-12-02T16:33:24Z'
    :description: Human-readable data serialization format
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/YAML
        :revisions: https://en.wikipedia.org/wiki/YAML?action=history
        :edit: https://en.wikipedia.org/wiki/YAML?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:YAML
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/YAML
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/YAML
        :edit: https://en.m.wikipedia.org/wiki/YAML?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:YAML
    :extract: YAML is a human-readable data-serialization language. It is commonly
      used for configuration files and in applications where data is being stored
      or transmitted. YAML targets many of the same communications applications as
      Extensible Markup Language (XML) but has a minimal syntax which intentionally
      differs from SGML. It uses both Python-style indentation to indicate nesting,
      and a more compact format that uses [...] for lists and {...} for maps making
      YAML 1.2 a superset of JSON.
    :extract_html: <p><b>YAML</b> is a human-readable data-serialization language.
      It is commonly used for configuration files and in applications where data is
      being stored or transmitted. YAML targets many of the same communications applications
      as Extensible Markup Language (XML) but has a minimal syntax which intentionally
      differs from SGML. It uses both Python-style indentation to indicate nesting,
      and a more compact format that uses <code class="mw-highlight mw-highlight-lang-text"
      dir="ltr">[...]</code> for lists and <code class="mw-highlight mw-highlight-lang-text"
      dir="ltr">{...}</code> for maps making YAML 1.2 a superset of JSON.</p>
  record/ed201da1-adfd-4fe7-9d6c-911e4dc03996:
    :type: standard
    :title: Lua (programming language)
    :displaytitle: Lua (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q207316
    :titles:
      :canonical: Lua_(programming_language)
      :normalized: Lua (programming language)
      :display: Lua (programming language)
    :pageid: 46150
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Lua-Logo.svg/320px-Lua-Logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Lua-Logo.svg/947px-Lua-Logo.svg.png
      :width: 947
      :height: 947
    :lang: en
    :dir: ltr
    :revision: '991363577'
    :tid: 108d2ce0-348e-11eb-84ff-5d93b0e2f0ec
    :timestamp: '2020-11-29T17:44:50Z'
    :description: Lightweight programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lua_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lua_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lua_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lua_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lua_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lua_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lua_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lua_(programming_language)
    :extract: Lua is a lightweight, high-level, multi-paradigm programming language
      designed primarily for embedded use in applications. Lua is cross-platform,
      since the interpreter of compiled bytecode is written in ANSI C, and Lua has
      a relatively simple C API to embed it into applications.
    :extract_html: "<p><b>Lua</b> is a lightweight, high-level, multi-paradigm programming
      language designed primarily for embedded use in applications. Lua is cross-platform,
      since the interpreter of compiled bytecode is written in ANSI C, and Lua has
      a relatively simple C API to embed it into applications.</p>"
  record/bad26220-25bf-4a36-9c66-a5aef80e4d64:
    :type: standard
    :title: Project Verona
    :displaytitle: Project Verona
    :namespace:
      :id: 0
      :text: ''
    :titles:
      :canonical: Project_Verona
      :normalized: Project Verona
      :display: Project Verona
    :pageid: 65846629
    :lang: en
    :dir: ltr
    :revision: '989729351'
    :tid: 0476a200-34e9-11eb-ac7e-271025615a3e
    :timestamp: '2020-11-20T18:08:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Project_Verona
        :revisions: https://en.wikipedia.org/wiki/Project_Verona?action=history
        :edit: https://en.wikipedia.org/wiki/Project_Verona?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Project_Verona
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Project_Verona
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Project_Verona
        :edit: https://en.m.wikipedia.org/wiki/Project_Verona?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Project_Verona
    :extract: Project Verona is an experimental research programming language developed
      by Microsoft and aimed at dealing with memory situations to make other programming
      languages safer.
    :extract_html: "<p><b>Project Verona</b> is an experimental research programming
      language developed by Microsoft and aimed at dealing with memory situations
      to make other programming languages safer.</p>"
  record/6a438ea4-15da-473c-a0ec-b4d56c55ed38:
    :type: standard
    :title: System programming language
    :displaytitle: System programming language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4117397
    :titles:
      :canonical: System_programming_language
      :normalized: System programming language
      :display: System programming language
    :pageid: 472805
    :lang: en
    :dir: ltr
    :revision: '991508253'
    :tid: dc0f6ca0-330a-11eb-ab8a-7d72673ae853
    :timestamp: '2020-11-30T12:52:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/System_programming_language
        :revisions: https://en.wikipedia.org/wiki/System_programming_language?action=history
        :edit: https://en.wikipedia.org/wiki/System_programming_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:System_programming_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/System_programming_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/System_programming_language
        :edit: https://en.m.wikipedia.org/wiki/System_programming_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:System_programming_language
    :extract: A system programming language is a programming language used for system
      programming; such languages are designed for writing system software, which
      usually requires different development approaches when compared with application
      software. Edsger Dijkstra refers to these language as Machine Oriented High
      Order Languages, or mohol.
    :extract_html: "<p>A <b>system programming language</b> is a programming language
      used for system programming; such languages are designed for writing system
      software, which usually requires different development approaches when compared
      with application software. Edsger Dijkstra refers to these language as <b>Machine
      Oriented High Order Languages</b>, or <b>mohol</b>.</p>"
  record/f6c2e890-0015-4255-9daf-d5d24ceb3e38:
    :type: standard
    :title: Magik (programming language)
    :displaytitle: Magik (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q9026871
    :titles:
      :canonical: Magik_(programming_language)
      :normalized: Magik (programming language)
      :display: Magik (programming language)
    :pageid: 2988758
    :lang: en
    :dir: ltr
    :revision: '938376471'
    :tid: 979299f0-1ddc-11eb-8777-919b66992236
    :timestamp: '2020-01-30T20:23:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Magik_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Magik_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Magik_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Magik_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Magik_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Magik_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Magik_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Magik_(programming_language)
    :extract: Magik is an object-oriented programming language that supports multiple
      inheritance and polymorphism, and it is dynamically typed. It was designed and
      implemented in 1989 by Arthur Chance of Smallworld Systems Ltd. as part of Smallworld
      Geographical Information System (GIS). Following Smallworld's acquisition in
      2000, Magik is now provided by GE Energy, still as part of its Smallworld technology
      platform.
    :extract_html: "<p><b>Magik</b> is an object-oriented programming language that
      supports multiple inheritance and polymorphism, and it is dynamically typed.
      It was designed and implemented in 1989 by Arthur Chance of Smallworld Systems
      Ltd. as part of Smallworld Geographical Information System (GIS). Following
      Smallworld's acquisition in 2000, Magik is now provided by GE Energy, still
      as part of its Smallworld technology platform.</p>"
  record/063a6920-267d-4d74-a12e-bcfe994a30e4:
    :type: standard
    :title: PL360
    :displaytitle: PL360
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7119559
    :titles:
      :canonical: PL360
      :normalized: PL360
      :display: PL360
    :pageid: 15774460
    :lang: en
    :dir: ltr
    :revision: '956139940'
    :tid: 65299870-19b2-11eb-8b10-f350e5079fe4
    :timestamp: '2020-05-11T18:17:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PL360
        :revisions: https://en.wikipedia.org/wiki/PL360?action=history
        :edit: https://en.wikipedia.org/wiki/PL360?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PL360
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PL360
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PL360
        :edit: https://en.m.wikipedia.org/wiki/PL360?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PL360
    :extract: PL360 is a system programming language designed by Niklaus Wirth and
      written by Niklaus Wirth, Joseph W. Wells, Jr., and Edwin Satterthwaite, Jr.
      for the IBM System/360 computer at Stanford University. A description of PL360
      was published in early 1968, although the implementation was probably completed
      before Wirth left Stanford in 1967.
    :extract_html: "<p><b>PL360</b> is a system programming language designed by Niklaus
      Wirth and written by Niklaus Wirth, Joseph W. Wells, Jr., and Edwin Satterthwaite,
      Jr. for the IBM System/360 computer at Stanford University. A description of
      PL360 was published in early 1968, although the implementation was probably
      completed before Wirth left Stanford in 1967.</p>"
  record/84797ecc-6811-4253-9330-a2ac63cadb6c:
    :type: standard
    :title: PHP
    :displaytitle: PHP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q59
    :titles:
      :canonical: PHP
      :normalized: PHP
      :display: PHP
    :pageid: 24131
    :lang: en
    :dir: ltr
    :revision: '991686186'
    :tid: 29eb4320-3489-11eb-920a-f7f0fabaa803
    :timestamp: '2020-12-01T09:12:35Z'
    :description: Server-side scripting language originally created in 1994
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PHP
        :revisions: https://en.wikipedia.org/wiki/PHP?action=history
        :edit: https://en.wikipedia.org/wiki/PHP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PHP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PHP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PHP
        :edit: https://en.m.wikipedia.org/wiki/PHP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PHP
    :extract: 'PHP is a general-purpose scripting language especially suited to web
      development. It was originally created by Danish-Canadian programmer Rasmus
      Lerdorf in 1994. The PHP reference implementation is now produced by The PHP
      Group. PHP originally stood for Personal Home Page, but it now stands for the
      recursive initialism PHP: Hypertext Preprocessor.'
    :extract_html: "<p><b>PHP</b> is a general-purpose scripting language especially
      suited to web development. It was originally created by Danish-Canadian programmer
      Rasmus Lerdorf in 1994. The PHP reference implementation is now produced by
      The PHP Group. PHP originally stood for <i>Personal Home Page</i>, but it now
      stands for the recursive initialism <i>PHP: Hypertext Preprocessor</i>.</p>"
  record/4acfc80a-a267-4d61-a9ee-639678d1c5a5:
    :type: standard
    :title: C*
    :displaytitle: C*
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5005842
    :titles:
      :canonical: C*
      :normalized: C*
      :display: C*
    :pageid: 1064175
    :lang: en
    :dir: ltr
    :revision: '966958330'
    :tid: f2fa7ab0-1d46-11eb-b6a4-0f0f90d62e81
    :timestamp: '2020-07-10T08:11:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C*
        :revisions: https://en.wikipedia.org/wiki/C*?action=history
        :edit: https://en.wikipedia.org/wiki/C*?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C*
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C*
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C*
        :edit: https://en.m.wikipedia.org/wiki/C*?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C*
    :extract: C* is an object-oriented, data-parallel superset of ANSI C with synchronous
      semantics.
    :extract_html: "<p><b>C*</b> is an object-oriented, data-parallel superset of
      ANSI C with synchronous semantics.</p>"
  record/190dcfcd-2e58-42a8-98da-38558ea0a04e:
    :type: standard
    :title: Nix package manager
    :displaytitle: Nix package manager
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7041957
    :titles:
      :canonical: Nix_package_manager
      :normalized: Nix package manager
      :display: Nix package manager
    :pageid: 16796173
    :lang: en
    :dir: ltr
    :revision: '989554524'
    :tid: 22f49f80-2d2c-11eb-b8fc-5510ce99f0fc
    :timestamp: '2020-11-19T17:39:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nix_package_manager
        :revisions: https://en.wikipedia.org/wiki/Nix_package_manager?action=history
        :edit: https://en.wikipedia.org/wiki/Nix_package_manager?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nix_package_manager
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nix_package_manager
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nix_package_manager
        :edit: https://en.m.wikipedia.org/wiki/Nix_package_manager?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nix_package_manager
    :extract: Nix is a cross-platform package manager that utilizes a purely functional
      deployment model where software is installed into unique directories generated
      through cryptographic hashes, it is also the name of the programming language.
      A package's hash takes into account the dependencies, which is claimed to eliminate
      dependency hell. This package management model advertises more reliable, reproducible,
      and portable packages.
    :extract_html: "<p><b>Nix</b> is a cross-platform package manager that utilizes
      a purely functional deployment model where software is installed into unique
      directories generated through cryptographic hashes, it is also the name of the
      programming language. A package's hash takes into account the dependencies,
      which is claimed to eliminate dependency hell. This package management model
      advertises more reliable, reproducible, and portable packages.</p>"
  record/6f773f37-62a8-4153-9d7c-38232d29ad6c:
    :type: standard
    :title: Formula language
    :displaytitle: Formula language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5470342
    :titles:
      :canonical: Formula_language
      :normalized: Formula language
      :display: Formula language
    :pageid: 343386
    :lang: en
    :dir: ltr
    :revision: '974246895'
    :tid: ce68d940-1ab6-11eb-83cf-ff8fcd059462
    :timestamp: '2020-08-21T22:33:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Formula_language
        :revisions: https://en.wikipedia.org/wiki/Formula_language?action=history
        :edit: https://en.wikipedia.org/wiki/Formula_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Formula_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Formula_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Formula_language
        :edit: https://en.m.wikipedia.org/wiki/Formula_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Formula_language
    :extract: |
      The Formula language is a scripting language used by Lotus Notes.
      It is often referred to as @Formula language because many language elements start with the @-character. Here is an example of a selection formula:SELECT @NoteId = "NT0050D26"
    :extract_html: |-
      <p>The <b>Formula language</b> is a scripting language used by Lotus Notes.
      It is often referred to as <b>@Formula</b> language because many language elements start with the @-character. Here is an example of a selection formula:</p><pre>SELECT @NoteId = "NT0050D26"
      </pre>
  record/26af647f-44d9-4b0b-9780-465b757502f5:
    :type: standard
    :title: Language Integrated Query
    :displaytitle: Language Integrated Query
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q595637
    :titles:
      :canonical: Language_Integrated_Query
      :normalized: Language Integrated Query
      :display: Language Integrated Query
    :pageid: 13706337
    :lang: en
    :dir: ltr
    :revision: '992165033'
    :tid: 8710ff90-35ab-11eb-b677-617fe4f894ce
    :timestamp: '2020-12-03T21:07:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Language_Integrated_Query
        :revisions: https://en.wikipedia.org/wiki/Language_Integrated_Query?action=history
        :edit: https://en.wikipedia.org/wiki/Language_Integrated_Query?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Language_Integrated_Query
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Language_Integrated_Query
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Language_Integrated_Query
        :edit: https://en.m.wikipedia.org/wiki/Language_Integrated_Query?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Language_Integrated_Query
    :extract: Language Integrated Query is a Microsoft .NET Framework component that
      adds native data querying capabilities to .NET languages, originally released
      as a major part of .NET Framework 3.5 in 2007.
    :extract_html: "<p><b>Language Integrated Query</b> is a Microsoft .NET Framework
      component that adds native data querying capabilities to .NET languages, originally
      released as a major part of .NET Framework 3.5 in 2007.</p>"
  record/e71715d0-ba1e-4759-9367-2fee7263a17c:
    :type: standard
    :title: Lingo (programming language)
    :displaytitle: Lingo (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q664867
    :titles:
      :canonical: Lingo_(programming_language)
      :normalized: Lingo (programming language)
      :display: Lingo (programming language)
    :pageid: 493076
    :lang: en
    :dir: ltr
    :revision: '956137774'
    :tid: 25b380d0-1af6-11eb-b4ee-e37e12832800
    :timestamp: '2020-05-11T18:04:32Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lingo_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lingo_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lingo_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lingo_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lingo_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lingo_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lingo_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lingo_(programming_language)
    :extract: Lingo is a verbose object-oriented (OO) scripting language developed
      by John H. Thompson for use in Adobe Director. Lingo is used to develop desktop
      application software, interactive kiosks, CD-ROMs and Adobe Shockwave content.
    :extract_html: "<p><b>Lingo</b> is a verbose object-oriented (OO) scripting language
      developed by John H. Thompson for use in Adobe Director. Lingo is used to develop
      desktop application software, interactive kiosks, CD-ROMs and Adobe Shockwave
      content.</p>"
  record/683a10d6-503d-4da6-b11b-defd7d972a8f:
    :type: standard
    :title: R++
    :displaytitle: R++
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7273242
    :titles:
      :canonical: R++
      :normalized: R++
      :display: R++
    :pageid: 8387439
    :lang: en
    :dir: ltr
    :revision: '825570569'
    :tid: 3a850ed0-203b-11eb-b2ce-977ad10374dd
    :timestamp: '2018-02-14T04:16:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/R%2B%2B
        :revisions: https://en.wikipedia.org/wiki/R%2B%2B?action=history
        :edit: https://en.wikipedia.org/wiki/R%2B%2B?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:R%2B%2B
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/R%2B%2B
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/R%2B%2B
        :edit: https://en.m.wikipedia.org/wiki/R%2B%2B?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:R%2B%2B
    :extract: R++ is a rule-based programming language based on C++. The United States
      patent describes R++ as follows:The R++ extension permits rules to be defined
      as members of C++ classes. The programming system of the invention takes the
      classes with rules defined using R++ and generates C++ code from them in which
      the machinery required for the rules is implemented completely as C++ data members
      and functions of the classes involved in the rules.
    :extract_html: "<p><b>R++</b> is a rule-based programming language based on C++.
      The United States patent describes R++ as follows:</p><blockquote><p>The R++
      extension permits rules to be defined as members of C++ classes. The programming
      system of the invention takes the classes with rules defined using R++ and generates
      C++ code from them in which the machinery required for the rules is implemented
      completely as C++ data members and functions of the classes involved in the
      rules.</p></blockquote>"
  record/2c64bdb0-b136-454a-a84d-2b5e2419a97d:
    :type: standard
    :title: PEARL (programming language)
    :displaytitle: PEARL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2043979
    :titles:
      :canonical: PEARL_(programming_language)
      :normalized: PEARL (programming language)
      :display: PEARL (programming language)
    :pageid: 2603123
    :lang: en
    :dir: ltr
    :revision: '977757274'
    :tid: 0d0527a0-f3a0-11ea-8bb2-f79cb4ba0b4b
    :timestamp: '2020-09-10T19:58:49Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PEARL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/PEARL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/PEARL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PEARL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PEARL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PEARL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/PEARL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PEARL_(programming_language)
    :extract: PEARL, or Process and experiment automation realtime language, is a
      computer programming language designed for multitasking and real-time programming.
      Being a high-level language, it is fairly cross-platform. Since 1977, the language
      has been going under several standardization steps by the Deutsches Institut
      für Normung. The current version is PEARL-90, which was standardized in 1998
      as DIN 66253-2.
    :extract_html: "<p><b>PEARL</b>, or <b>Process and experiment automation realtime
      language</b>, is a computer programming language designed for multitasking and
      real-time programming. Being a high-level language, it is fairly cross-platform.
      Since 1977, the language has been going under several standardization steps
      by the Deutsches Institut für Normung. The current version is PEARL-90, which
      was standardized in 1998 as DIN 66253-2.</p>"
  record/ca60b081-b670-42b5-8107-ee73e43a1201:
    :type: standard
    :title: Babbage (programming language)
    :displaytitle: Babbage (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4837581
    :titles:
      :canonical: Babbage_(programming_language)
      :normalized: Babbage (programming language)
      :display: Babbage (programming language)
    :pageid: 22848897
    :lang: en
    :dir: ltr
    :revision: '960083103'
    :tid: bb5f1b20-2b37-11eb-b3cc-f724fb8738fe
    :timestamp: '2020-06-01T01:42:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Babbage_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Babbage_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Babbage_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Babbage_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Babbage_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Babbage_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Babbage_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Babbage_(programming_language)
    :extract: Babbage is the high level assembly language for the GEC 4000 series
      minicomputers. It was named after Charles Babbage, an English computing pioneer.
    :extract_html: "<p><b>Babbage</b> is the high level assembly language for the
      GEC 4000 series minicomputers. It was named after Charles Babbage, an English
      computing pioneer.</p>"
  record/e1865a2b-6458-4adf-baf9-9b8d0fcc5d06:
    :type: standard
    :title: Ch (computer programming)
    :displaytitle: Ch (computer programming)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5065901
    :titles:
      :canonical: Ch_(computer_programming)
      :normalized: Ch (computer programming)
      :display: Ch (computer programming)
    :pageid: 31643142
    :lang: en
    :dir: ltr
    :revision: '949166894'
    :tid: aa42c460-2d2e-11eb-b871-4d9026ffcc1e
    :timestamp: '2020-04-05T00:44:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ch_(computer_programming)
        :revisions: https://en.wikipedia.org/wiki/Ch_(computer_programming)?action=history
        :edit: https://en.wikipedia.org/wiki/Ch_(computer_programming)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ch_(computer_programming)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ch_(computer_programming)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ch_(computer_programming)
        :edit: https://en.m.wikipedia.org/wiki/Ch_(computer_programming)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ch_(computer_programming)
    :extract: Ch is a proprietary cross-platform C and C++ interpreter and scripting
      language environment, originally designed by Harry H. Cheng as a scripting language
      for beginners to learn mathematics, computing, numerical analysis, and programming
      in C/C++. Ch is now developed and marketed by SoftIntegration, Inc. A student
      edition is freely available. Ch Professional Edition for Raspberry Pi is free
      for non-commercial use.
    :extract_html: "<p><b>Ch</b> is a proprietary cross-platform C and C++ interpreter
      and scripting language environment, originally designed by Harry H. Cheng as
      a scripting language for beginners to learn mathematics, computing, numerical
      analysis, and programming in C/C++. Ch is now developed and marketed by SoftIntegration,
      Inc. A student edition is freely available. Ch Professional Edition for Raspberry
      Pi is free for non-commercial use.</p>"
  record/c0771f58-b591-49d9-b90b-4272bd4c870b:
    :type: standard
    :title: Klerer–May System
    :displaytitle: Klerer–May System
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6420637
    :titles:
      :canonical: Klerer–May_System
      :normalized: Klerer–May System
      :display: Klerer–May System
    :pageid: 17186
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/b/b9/Example_of_a_statement_in_the_Klerer-May_programming_system.png/320px-Example_of_a_statement_in_the_Klerer-May_programming_system.png
      :width: 320
      :height: 118
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/b/b9/Example_of_a_statement_in_the_Klerer-May_programming_system.png
      :width: 519
      :height: 192
    :lang: en
    :dir: ltr
    :revision: '951858596'
    :tid: 375b81d0-1a28-11eb-aec6-99ca4e657b30
    :timestamp: '2020-04-19T08:07:00Z'
    :description: Programming language oriented to numerical scientific programming
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Klerer%E2%80%93May_System
        :revisions: https://en.wikipedia.org/wiki/Klerer%E2%80%93May_System?action=history
        :edit: https://en.wikipedia.org/wiki/Klerer%E2%80%93May_System?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Klerer%E2%80%93May_System
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Klerer%E2%80%93May_System
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Klerer%E2%80%93May_System
        :edit: https://en.m.wikipedia.org/wiki/Klerer%E2%80%93May_System?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Klerer%E2%80%93May_System
    :extract: The Klerer–May System is a programming language developed in the mid-1960s,
      oriented to numerical scientific programming, whose most notable feature is
      its two-dimensional syntax based on traditional mathematical notation.
    :extract_html: "<p>The <b>Klerer–May System</b> is a programming language developed
      in the mid-1960s, oriented to numerical scientific programming, whose most notable
      feature is its two-dimensional syntax based on traditional mathematical notation.</p>"
  record/c82d8771-4666-45a3-976b-cfd293240589:
    :type: standard
    :title: CobolScript
    :displaytitle: CobolScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3681874
    :titles:
      :canonical: CobolScript
      :normalized: CobolScript
      :display: CobolScript
    :pageid: 50155661
    :lang: en
    :dir: ltr
    :revision: '829519962'
    :tid: bf6d4b10-1e2b-11eb-9976-a9aa9c873650
    :timestamp: '2018-03-09T03:35:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CobolScript
        :revisions: https://en.wikipedia.org/wiki/CobolScript?action=history
        :edit: https://en.wikipedia.org/wiki/CobolScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CobolScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CobolScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CobolScript
        :edit: https://en.m.wikipedia.org/wiki/CobolScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CobolScript
    :extract: 'CobolScript is a programming language created by Matthew Dean and Charles
      Schereda of Deskware in 1999. The language was intended to provide web-enabled
      COBOL, and was targeted at businesses using legacy software written in that
      language.

      '
    :extract_html: |-
      <p><b>CobolScript</b> is a programming language created by Matthew Dean and Charles Schereda of Deskware in 1999. The language was intended to provide web-enabled COBOL, and was targeted at businesses using legacy software written in that language.
      </p>
  record/539fde69-3936-4136-897d-a80c2b02bf59:
    :type: standard
    :title: M Sharp
    :displaytitle: M Sharp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17067973
    :titles:
      :canonical: M_Sharp
      :normalized: M Sharp
      :display: M Sharp
    :pageid: 39420392
    :lang: en
    :dir: ltr
    :revision: '989045218'
    :tid: b267f460-283f-11eb-becf-21fada8c7f91
    :timestamp: '2020-11-16T19:12:37Z'
    :description: Code generation tool and a domain-specific language that can be
      used to create websites and web applications.
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/M_Sharp
        :revisions: https://en.wikipedia.org/wiki/M_Sharp?action=history
        :edit: https://en.wikipedia.org/wiki/M_Sharp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:M_Sharp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/M_Sharp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/M_Sharp
        :edit: https://en.m.wikipedia.org/wiki/M_Sharp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:M_Sharp
    :extract: M# is a code generation tool and a domain-specific language that can
      be used to create websites and web applications. It can translate entities and
      page definitions to ASP.NET Web Forms and MVC and C# code which in turn form
      the user interface and business logic layer of the application. Its main goals
      are to reduce time of development, increase code quality, and reduce human errors.
    :extract_html: "<p><b>M#</b> is a code generation tool and a domain-specific language
      that can be used to create websites and web applications. It can translate entities
      and page definitions to ASP.NET Web Forms and MVC and C# code which in turn
      form the user interface and business logic layer of the application. Its main
      goals are to reduce time of development, increase code quality, and reduce human
      errors.</p>"
  record/edb4345e-979c-4827-a111-accb67302265:
    :type: standard
    :title: ZOPL
    :displaytitle: ZOPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475348
    :titles:
      :canonical: ZOPL
      :normalized: ZOPL
      :display: ZOPL
    :pageid: 4426247
    :lang: en
    :dir: ltr
    :revision: '966925177'
    :tid: c6ec8130-237b-11eb-8abb-cfdcd079ce70
    :timestamp: '2020-07-10T01:48:41Z'
    :description: Programming language for use on mainframe computer systems used
      in libraries and banking institutions
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ZOPL
        :revisions: https://en.wikipedia.org/wiki/ZOPL?action=history
        :edit: https://en.wikipedia.org/wiki/ZOPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ZOPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ZOPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ZOPL
        :edit: https://en.m.wikipedia.org/wiki/ZOPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ZOPL
    :extract: ZOPL is a programming language created by Geac Computer Corporation
      in the early 1970s for use on their mainframe computer systems used in libraries
      and banking institutions. It had similarities to C and Pascal.
    :extract_html: "<p><b>ZOPL</b> is a programming language created by Geac Computer
      Corporation in the early 1970s for use on their mainframe computer systems used
      in libraries and banking institutions. It had similarities to C and Pascal.</p>"
  record/56987931-418d-4afb-ba61-32dd2ed580ef:
    :type: standard
    :title: Data analysis expressions
    :displaytitle: Data analysis expressions
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5227236
    :titles:
      :canonical: Data_analysis_expressions
      :normalized: Data analysis expressions
      :display: Data analysis expressions
    :pageid: 37774833
    :lang: en
    :dir: ltr
    :revision: '989899198'
    :tid: 589f1b90-2c20-11eb-8141-63e67eabb6db
    :timestamp: '2020-11-21T17:38:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Data_analysis_expressions
        :revisions: https://en.wikipedia.org/wiki/Data_analysis_expressions?action=history
        :edit: https://en.wikipedia.org/wiki/Data_analysis_expressions?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Data_analysis_expressions
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Data_analysis_expressions
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Data_analysis_expressions
        :edit: https://en.m.wikipedia.org/wiki/Data_analysis_expressions?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Data_analysis_expressions
    :extract: Data Analysis Expressions (DAX) is the native formula and query language
      for Microsoft PowerPivot, Power BI Desktop and SQL Server Analysis Services
      (SSAS) Tabular models. DAX includes some of the functions that are used in Excel
      formulas with additional functions that are designed to work with relational
      data and perform dynamic aggregation. It is, in part, an evolution of the Multidimensional
      Expression (MDX) language developed by Microsoft for Analysis Services multidimensional
      models combined with Excel formula functions. It is designed to be simple and
      easy to learn, while exposing the power and flexibility of PowerPivot and SSAS
      tabular models.
    :extract_html: "<p><b>Data Analysis Expressions</b> (<b>DAX</b>) is the native
      formula and query language for Microsoft PowerPivot, Power BI Desktop and SQL
      Server Analysis Services (SSAS) Tabular models. DAX includes some of the functions
      that are used in Excel formulas with additional functions that are designed
      to work with relational data and perform dynamic aggregation. It is, in part,
      an evolution of the Multidimensional Expression (MDX) language developed by
      Microsoft for Analysis Services multidimensional models combined with Excel
      formula functions. It is designed to be simple and easy to learn, while exposing
      the power and flexibility of PowerPivot and SSAS tabular models.</p>"
  record/2ee5814d-e58f-4bce-82e1-9369d6fff25d:
    :type: standard
    :title: XSB
    :displaytitle: XSB
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q8042469
    :titles:
      :canonical: XSB
      :normalized: XSB
      :display: XSB
    :pageid: 4723102
    :lang: en
    :dir: ltr
    :revision: '987131861'
    :tid: ec959740-2304-11eb-ad3c-13db57775d3e
    :timestamp: '2020-11-05T03:12:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XSB
        :revisions: https://en.wikipedia.org/wiki/XSB?action=history
        :edit: https://en.wikipedia.org/wiki/XSB?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XSB
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XSB
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XSB
        :edit: https://en.m.wikipedia.org/wiki/XSB?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XSB
    :extract: XSB is the name of a dialect of the Prolog programming language and
      its implementation developed at Stony Brook University in collaboration with
      the Katholieke Universiteit Leuven, the New University of Lisbon, Uppsala University
      and software vendor XSB, Inc.
    :extract_html: "<p><b>XSB</b> is the name of a dialect of the Prolog programming
      language and its implementation developed at Stony Brook University in collaboration
      with the Katholieke Universiteit Leuven, the New University of Lisbon, Uppsala
      University and software vendor XSB, Inc.</p>"
  record/95a04d7f-86ee-44b1-938e-57d58dd3ebe0:
    :type: standard
    :title: Icon (programming language)
    :displaytitle: Icon (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1156474
    :titles:
      :canonical: Icon_(programming_language)
      :normalized: Icon (programming language)
      :display: Icon (programming language)
    :pageid: 14801
    :lang: en
    :dir: ltr
    :revision: '973836128'
    :tid: 5c6c5560-1fd9-11eb-bbd5-7932f052e200
    :timestamp: '2020-08-19T14:07:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Icon_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Icon_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Icon_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Icon_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Icon_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Icon_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Icon_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Icon_(programming_language)
    :extract: Icon is a very high-level programming language featuring goal-directed
      execution and many facilities for managing strings and textual patterns. It
      is related to SNOBOL and SL5, string processing languages. Icon is not object-oriented,
      but an object-oriented extension called Idol was developed in 1996 which eventually
      became Unicon.
    :extract_html: "<p><b>Icon</b> is a very high-level programming language featuring
      goal-directed execution and many facilities for managing strings and textual
      patterns. It is related to SNOBOL and SL5, string processing languages. Icon
      is not object-oriented, but an object-oriented extension called Idol was developed
      in 1996 which eventually became Unicon.</p>"
  record/651b23b8-6ecd-4a7d-a1d9-2f4ce9bf5b72:
    :type: standard
    :title: POP-2
    :displaytitle: POP-2
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7120003
    :titles:
      :canonical: POP-2
      :normalized: POP-2
      :display: POP-2
    :pageid: 981616
    :lang: en
    :dir: ltr
    :revision: '976366986'
    :tid: 43d66b80-1b88-11eb-b169-5ff9c1e503a3
    :timestamp: '2020-09-02T15:13:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/POP-2
        :revisions: https://en.wikipedia.org/wiki/POP-2?action=history
        :edit: https://en.wikipedia.org/wiki/POP-2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:POP-2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/POP-2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/POP-2
        :edit: https://en.m.wikipedia.org/wiki/POP-2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:POP-2
    :extract: 'POP-2 is a programming language developed around 1970 from the earlier
      language POP-1 by Robin Popplestone and Rod Burstall at the University of Edinburgh.
      It drew roots from many sources: the languages LISP and ALGOL 60, and theoretical
      ideas from Peter J. Landin. It used an incremental compiler, which gave it some
      of the flexibility of an interpreted language, including allowing new function
      definitions at run time and modification of function definitions while a program
      was running, without the overhead of an interpreted language.'
    :extract_html: "<p><b>POP-2</b> is a programming language developed around 1970
      from the earlier language POP-1 by Robin Popplestone and Rod Burstall at the
      University of Edinburgh. It drew roots from many sources: the languages LISP
      and ALGOL 60, and theoretical ideas from Peter J. Landin. It used an incremental
      compiler, which gave it some of the flexibility of an interpreted language,
      including allowing new function definitions at run time and modification of
      function definitions while a program was running, without the overhead of an
      interpreted language.</p>"
  record/24ef4e38-1cad-4bee-a92c-9ac6dfae30bf:
    :type: standard
    :title: XHarbour
    :displaytitle: xHarbour
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2293187
    :titles:
      :canonical: XHarbour
      :normalized: XHarbour
      :display: xHarbour
    :pageid: 1615369
    :lang: en
    :dir: ltr
    :revision: '985164409'
    :tid: 4835dde0-34ca-11eb-ad72-1dc8635f1b40
    :timestamp: '2020-10-24T10:23:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XHarbour
        :revisions: https://en.wikipedia.org/wiki/XHarbour?action=history
        :edit: https://en.wikipedia.org/wiki/XHarbour?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XHarbour
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XHarbour
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XHarbour
        :edit: https://en.m.wikipedia.org/wiki/XHarbour?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XHarbour
    :extract: xHarbour is a free multi-platform extended Clipper compiler, offering
      multiple graphic terminals (GTs), including console drivers, GUIs, and hybrid
      console/GUIs. xHarbour is backward-compatible with Clipper and supports many
      language syntax extensions, greatly extended run-time libraries, and extensive
      third party support.
    :extract_html: "<p><b>xHarbour</b> is a free multi-platform extended Clipper compiler,
      offering multiple graphic terminals (GTs), including console drivers, GUIs,
      and hybrid console/GUIs. xHarbour is backward-compatible with Clipper and supports
      many language syntax extensions, greatly extended run-time libraries, and extensive
      third party support.</p>"
  record/7a027060-c110-4949-b001-ea2ea685b5b8:
    :type: standard
    :title: Maude system
    :displaytitle: Maude system
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3558930
    :titles:
      :canonical: Maude_system
      :normalized: Maude system
      :display: Maude system
    :pageid: 1251423
    :lang: en
    :dir: ltr
    :revision: '954491310'
    :tid: 152c1bd0-35bf-11eb-92f4-63ac987e4bf3
    :timestamp: '2020-05-02T18:05:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Maude_system
        :revisions: https://en.wikipedia.org/wiki/Maude_system?action=history
        :edit: https://en.wikipedia.org/wiki/Maude_system?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Maude_system
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Maude_system
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Maude_system
        :edit: https://en.m.wikipedia.org/wiki/Maude_system?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Maude_system
    :extract: The Maude system is an implementation of rewriting logic developed at
      SRI International. It is similar in its general approach to Joseph Goguen's
      OBJ3 implementation of equational logic, but based on rewriting logic rather
      than order-sorted equational logic, and with a heavy emphasis on powerful metaprogramming
      based on reflection.
    :extract_html: "<p>The <b>Maude system</b> is an implementation of rewriting logic
      developed at SRI International. It is similar in its general approach to Joseph
      Goguen's OBJ3 implementation of equational logic, but based on rewriting logic
      rather than order-sorted equational logic, and with a heavy emphasis on powerful
      metaprogramming based on reflection.</p>"
  record/b69c8c77-af89-47ea-8ccf-409fe659c68f:
    :type: standard
    :title: IntelliCorp (software)
    :displaytitle: IntelliCorp (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6043771
    :titles:
      :canonical: IntelliCorp_(software)
      :normalized: IntelliCorp (software)
      :display: IntelliCorp (software)
    :pageid: 4510386
    :lang: en
    :dir: ltr
    :revision: '952430859'
    :tid: 9b4feb40-31c0-11eb-82a3-95fde0f8b2d3
    :timestamp: '2020-04-22T05:38:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IntelliCorp_(software)
        :revisions: https://en.wikipedia.org/wiki/IntelliCorp_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/IntelliCorp_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IntelliCorp_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IntelliCorp_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IntelliCorp_(software)
        :edit: https://en.m.wikipedia.org/wiki/IntelliCorp_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IntelliCorp_(software)
    :extract: IntelliCorp (IC) sold its assets including LiveCompare, LiveModel and
      LiveInterface to Tricentis in May 2019.
    :extract_html: "<p><b>IntelliCorp</b> (IC) sold its assets including LiveCompare,
      LiveModel and LiveInterface to Tricentis in May 2019.</p>"
  record/9cd087de-13bc-4792-8a35-8b3f866721ea:
    :type: standard
    :title: Qalb (programming language)
    :displaytitle: Qalb (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7265978
    :titles:
      :canonical: Qalb_(programming_language)
      :normalized: Qalb (programming language)
      :display: Qalb (programming language)
    :pageid: 38441485
    :lang: en
    :dir: ltr
    :revision: '963403735'
    :tid: 9a6e8e10-28cf-11eb-bea8-1d14a6c46056
    :timestamp: '2020-06-19T16:53:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Qalb_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Qalb_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Qalb_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Qalb_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Qalb_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Qalb_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Qalb_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Qalb_(programming_language)
    :extract: 'قلب, transliterated Qalb, Qlb and Alb, is a functional programming
      language allowing a programmer to write programs completely in Arabic. Its name
      means heart and is a recursive acronym in Arabic meaning Qlb: a programming
      language. It was developed in 2012 by Ramsey Nasser, a computer scientist at
      the Eyebeam Art + Technology Center in New York City, as both an artistic endeavor
      and as a response to the Anglophone bias in the vast majority of programming
      languages, which express their fundamental concepts using English words.'
    :extract_html: "<p><b>قلب</b>, transliterated <i><b>Qalb</b></i>, <i><b>Qlb</b></i>
      and <i><b>Alb</b></i>, is a functional programming language allowing a programmer
      to write programs completely in Arabic. Its name means <i>heart</i> and is a
      recursive acronym in Arabic meaning <i>Qlb: a programming language</i>. It was
      developed in 2012 by Ramsey Nasser, a computer scientist at the Eyebeam Art
      + Technology Center in New York City, as both an artistic endeavor and as a
      response to the Anglophone bias in the vast majority of programming languages,
      which express their fundamental concepts using English words.</p>"
  record/30178bdc-3a45-45bc-b8c5-769b2281f856:
    :type: standard
    :title: Mercury (programming language)
    :displaytitle: Mercury (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q206040
    :titles:
      :canonical: Mercury_(programming_language)
      :normalized: Mercury (programming language)
      :display: Mercury (programming language)
    :pageid: 19726
    :lang: en
    :dir: ltr
    :revision: '991496485'
    :tid: e935e140-32f9-11eb-91fd-51b1642a1f78
    :timestamp: '2020-11-30T10:50:47Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mercury_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Mercury_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Mercury_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mercury_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mercury_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mercury_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Mercury_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mercury_(programming_language)
    :extract: Mercury is a functional logic programming language made for real-world
      uses. The first version was developed at the University of Melbourne, Computer
      Science department, by Fergus Henderson, Thomas Conway, and Zoltan Somogyi,
      under Somogyi's supervision, and released on April 8, 1995.
    :extract_html: "<p><b>Mercury</b> is a functional logic programming language made
      for real-world uses. The first version was developed at the University of Melbourne,
      Computer Science department, by Fergus Henderson, Thomas Conway, and Zoltan
      Somogyi, under Somogyi's supervision, and released on April 8, 1995.</p>"
  record/b7e1def2-a882-4bec-86b3-93a70c23948f:
    :type: standard
    :title: ALGOL 60
    :displaytitle: ALGOL 60
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1209759
    :titles:
      :canonical: ALGOL_60
      :normalized: ALGOL 60
      :display: ALGOL 60
    :pageid: 692878
    :lang: en
    :dir: ltr
    :revision: '981942113'
    :tid: f7f676d0-2ca6-11eb-8bd0-6de4d016b836
    :timestamp: '2020-10-05T08:48:57Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ALGOL_60
        :revisions: https://en.wikipedia.org/wiki/ALGOL_60?action=history
        :edit: https://en.wikipedia.org/wiki/ALGOL_60?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ALGOL_60
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ALGOL_60
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ALGOL_60
        :edit: https://en.m.wikipedia.org/wiki/ALGOL_60?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ALGOL_60
    :extract: ALGOL 60 is a member of the ALGOL family of computer programming languages.
      It followed on from ALGOL 58 which had introduced code blocks and the begin
      and end pairs for delimiting them, representing a key advance in the rise of
      structured programming. ALGOL 60 was the first language implementing nested
      function definitions with lexical scope. It gave rise to many other programming
      languages, including CPL, Simula, BCPL, B, Pascal, and C. Practically every
      computer of the era had a systems programming language based on ALGOL 60 concepts.
    :extract_html: "<p><b>ALGOL 60</b> is a member of the ALGOL family of computer
      programming languages. It followed on from ALGOL 58 which had introduced code
      blocks and the <code>begin</code> and <code>end</code> pairs for delimiting
      them, representing a key advance in the rise of structured programming. ALGOL
      60 was the first language implementing nested function definitions with lexical
      scope. It gave rise to many other programming languages, including CPL, Simula,
      BCPL, B, Pascal, and C. Practically every computer of the era had a systems
      programming language based on ALGOL 60 concepts.</p>"
  record/c9619a25-bd80-45de-9599-8416319c9060:
    :type: standard
    :title: Cryptol
    :displaytitle: Cryptol
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5190950
    :titles:
      :canonical: Cryptol
      :normalized: Cryptol
      :display: Cryptol
    :pageid: 20921449
    :lang: en
    :dir: ltr
    :revision: '970437236'
    :tid: 67b38070-3194-11eb-8532-8b0e00359a3b
    :timestamp: '2020-07-31T08:33:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cryptol
        :revisions: https://en.wikipedia.org/wiki/Cryptol?action=history
        :edit: https://en.wikipedia.org/wiki/Cryptol?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cryptol
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cryptol
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cryptol
        :edit: https://en.m.wikipedia.org/wiki/Cryptol?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cryptol
    :extract: |-
      Cryptol is a domain specific programming language for cryptography developed by the Portland, Oregon based software development firm, Galois, Inc..
      The language was originally developed for use by the United States National Security Agency. The language is also used by private firms that provide information technology systems, such as the American company Rockwell Collins provides to aerospace and defense contractors in the United States.
    :extract_html: |-
      <p><b>Cryptol</b> is a domain specific programming language for cryptography developed by the Portland, Oregon based software development firm, Galois, Inc..
      The language was originally developed for use by the United States National Security Agency. The language is also used by private firms that provide information technology systems, such as the American company Rockwell Collins provides to aerospace and defense contractors in the United States.</p>
  record/59c49954-5b44-4420-8734-b83dbd259619:
    :type: standard
    :title: Lynx (programming language)
    :displaytitle: Lynx (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6709560
    :titles:
      :canonical: Lynx_(programming_language)
      :normalized: Lynx (programming language)
      :display: Lynx (programming language)
    :pageid: 18530
    :lang: en
    :dir: ltr
    :revision: '974246800'
    :tid: 54b34a40-eb18-11ea-962d-f38891a9e033
    :timestamp: '2020-08-21T22:32:25Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lynx_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lynx_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lynx_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lynx_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lynx_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lynx_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lynx_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lynx_(programming_language)
    :extract: Lynx is a programming language for large distributed networks, using
      remote procedure calls. It was developed by the University of Wisconsin–Madison
      in 1984 for the Charlotte multicomputer operating system.
    :extract_html: "<p><b>Lynx</b> is a programming language for large distributed
      networks, using remote procedure calls. It was developed by the University of
      Wisconsin–Madison in 1984 for the Charlotte multicomputer operating system.</p>"
  record/73f81674-fff3-47fa-ae78-19bbf2072102:
    :type: standard
    :title: Game Oriented Assembly Lisp
    :displaytitle: Game Oriented Assembly Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5519874
    :titles:
      :canonical: Game_Oriented_Assembly_Lisp
      :normalized: Game Oriented Assembly Lisp
      :display: Game Oriented Assembly Lisp
    :pageid: 4993415
    :lang: en
    :dir: ltr
    :revision: '979630022'
    :tid: 5c6c3b40-3396-11eb-920a-f7f0fabaa803
    :timestamp: '2020-09-21T20:45:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp
        :revisions: https://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Game_Oriented_Assembly_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Game_Oriented_Assembly_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Game_Oriented_Assembly_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Game_Oriented_Assembly_Lisp
    :extract: Game Oriented Assembly Lisp (GOAL) is a programming language, a dialect
      of the language Lisp, made for video games developed by Andy Gavin and the Jak
      and Daxter team at the company Naughty Dog.
    :extract_html: "<p><b>Game Oriented Assembly Lisp</b> (<b>GOAL</b>) is a programming
      language, a dialect of the language Lisp, made for video games developed by
      Andy Gavin and the <i>Jak and Daxter</i> team at the company Naughty Dog.</p>"
  record/22d59b07-ce3c-4e02-9f56-06321e40aa77:
    :type: standard
    :title: Haystack (MIT project)
    :displaytitle: Haystack (MIT project)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5687237
    :titles:
      :canonical: Haystack_(MIT_project)
      :normalized: Haystack (MIT project)
      :display: Haystack (MIT project)
    :pageid: 5033679
    :lang: en
    :dir: ltr
    :revision: '844144594'
    :tid: 57072530-35de-11eb-a543-6b64549f6380
    :timestamp: '2018-06-02T22:35:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Haystack_(MIT_project)
        :revisions: https://en.wikipedia.org/wiki/Haystack_(MIT_project)?action=history
        :edit: https://en.wikipedia.org/wiki/Haystack_(MIT_project)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Haystack_(MIT_project)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Haystack_(MIT_project)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Haystack_(MIT_project)
        :edit: https://en.m.wikipedia.org/wiki/Haystack_(MIT_project)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Haystack_(MIT_project)
    :extract: Haystack was a project at the Massachusetts Institute of Technology
      to research and develop several applications around personal information management
      and the Semantic Web. The most notable of those applications is the Haystack
      client, a research personal information manager (PIM) and one of the first to
      be based on semantic desktop technologies. The Haystack client is published
      as open source software under the BSD license.
    :extract_html: "<p><b>Haystack</b> was a project at the Massachusetts Institute
      of Technology to research and develop several applications around personal information
      management and the Semantic Web. The most notable of those applications is the
      Haystack client, a research personal information manager (PIM) and one of the
      first to be based on semantic desktop technologies. The Haystack client is published
      as open source software under the BSD license.</p>"
  record/ec0ca239-b6d6-45f0-9a8b-39e0647a30b3:
    :type: standard
    :title: Darwin (programming language)
    :displaytitle: Darwin (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q48987595
    :titles:
      :canonical: Darwin_(programming_language)
      :normalized: Darwin (programming language)
      :display: Darwin (programming language)
    :pageid: 12794721
    :lang: en
    :dir: ltr
    :revision: '984812869'
    :tid: 0af36140-2198-11eb-86cd-b50652c0d06e
    :timestamp: '2020-10-22T07:33:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Darwin_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Darwin_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Darwin_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Darwin_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Darwin_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Darwin_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Darwin_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Darwin_(programming_language)
    :extract: Darwin is a closed source programming language developed by Gaston Gonnet
      and colleagues at ETH Zurich. It is used to develop the OMA orthology inference
      software, which was also initially developed by Gonnet. The language backend
      consists of the kernel, responsible for performing simple mathematical calculations,
      for transporting and storing data and for interpreting the user's commands,
      and the library, a set of programs which can perform more complicated calculations.
      The target audience for the language is the biosciences, so the library consisted
      of routines such as those to compute pairwise alignments, phylogenetic trees,
      multiple sequence alignments, and to make secondary structure predictions.
    :extract_html: "<p><b>Darwin</b> is a closed source programming language developed
      by Gaston Gonnet and colleagues at ETH Zurich. It is used to develop the OMA
      orthology inference software, which was also initially developed by Gonnet.
      The language backend consists of the kernel, responsible for performing simple
      mathematical calculations, for transporting and storing data and for interpreting
      the user's commands, and the library, a set of programs which can perform more
      complicated calculations. The target audience for the language is the biosciences,
      so the library consisted of routines such as those to compute pairwise alignments,
      phylogenetic trees, multiple sequence alignments, and to make secondary structure
      predictions.</p>"
  record/2b9a6bc0-e356-42b1-8787-9cb58bae2449:
    :type: standard
    :title: Clean (programming language)
    :displaytitle: Clean (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q377986
    :titles:
      :canonical: Clean_(programming_language)
      :normalized: Clean (programming language)
      :display: Clean (programming language)
    :pageid: 161878
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/4/4b/Clean_3.0_%28programming_language%29_logo.svg/320px-Clean_3.0_%28programming_language%29_logo.svg.png
      :width: 320
      :height: 160
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/4/4b/Clean_3.0_%28programming_language%29_logo.svg/356px-Clean_3.0_%28programming_language%29_logo.svg.png
      :width: 356
      :height: 178
    :lang: en
    :dir: ltr
    :revision: '982994958'
    :tid: d3d882d0-1a80-11eb-9865-5306c880b0d8
    :timestamp: '2020-10-11T16:41:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Clean_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Clean_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Clean_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Clean_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Clean_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Clean_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Clean_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Clean_(programming_language)
    :extract: Clean is a general-purpose purely functional computer programming language.
      For much of the language's active development history it was called Concurrent
      Clean, but this was dropped at some point. Clean is being developed by a group
      of researchers from the Radboud University in Nijmegen since 1987.
    :extract_html: "<p><b>Clean</b> is a general-purpose purely functional computer
      programming language. For much of the language's active development history
      it was called <b>Concurrent Clean</b>, but this was dropped at some point. Clean
      is being developed by a group of researchers from the Radboud University in
      Nijmegen since 1987.</p>"
  record/188e451d-b835-4a73-b991-a38073b23021:
    :type: standard
    :title: XPL0
    :displaytitle: XPL0
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475390
    :titles:
      :canonical: XPL0
      :normalized: XPL0
      :display: XPL0
    :pageid: 18528411
    :lang: en
    :dir: ltr
    :revision: '598050661'
    :tid: 3d1ffb00-5395-11ea-95f1-db7a72434437
    :timestamp: '2014-03-04T02:57:06Z'
    :description: computer programming language that is essentially a cross between
      Pascal and C
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XPL0
        :revisions: https://en.wikipedia.org/wiki/XPL0?action=history
        :edit: https://en.wikipedia.org/wiki/XPL0?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XPL0
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XPL0
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XPL0
        :edit: https://en.m.wikipedia.org/wiki/XPL0?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XPL0
    :extract: |-
      XPL0 is a computer programming language that is essentially a cross
      between Pascal and C. It was created in 1976 by Peter J. R. Boyle who wanted a high-level language for his microcomputer and wanted something more sophisticated than BASIC, which was the dominant language for personal computers at the time.
    :extract_html: |-
      <p><b>XPL0</b> is a computer programming language that is essentially a cross
      between Pascal and C. It was created in 1976 by Peter J. R. Boyle who wanted a high-level language for his microcomputer and wanted something more sophisticated than BASIC, which was the dominant language for personal computers at the time.</p>
  record/6fce4dd1-89cf-453c-9400-b0817a8d0adc:
    :type: standard
    :title: Python (programming language)
    :displaytitle: Python (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28865
    :titles:
      :canonical: Python_(programming_language)
      :normalized: Python (programming language)
      :display: Python (programming language)
    :pageid: 23862
    :lang: en
    :dir: ltr
    :revision: '992249639'
    :tid: 3ec629d0-3606-11eb-bd7a-0ded71bc1251
    :timestamp: '2020-12-04T07:56:29Z'
    :description: General-purpose, high-level programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Python_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Python_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Python_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Python_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Python_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Python_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Python_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Python_(programming_language)
    :extract: Python is an interpreted, high-level and general-purpose programming
      language. Python's design philosophy emphasizes code readability with its notable
      use of significant whitespace. Its language constructs and object-oriented approach
      aim to help programmers write clear, logical code for small and large-scale
      projects.
    :extract_html: "<p><b>Python</b> is an interpreted, high-level and general-purpose
      programming language. Python's design philosophy emphasizes code readability
      with its notable use of significant whitespace. Its language constructs and
      object-oriented approach aim to help programmers write clear, logical code for
      small and large-scale projects.</p>"
  record/89a817bd-9dcd-4149-b8a2-926baef7cf3c:
    :type: standard
    :title: Curl (programming language)
    :displaytitle: Curl (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1144631
    :titles:
      :canonical: Curl_(programming_language)
      :normalized: Curl (programming language)
      :display: Curl (programming language)
    :pageid: 42537
    :lang: en
    :dir: ltr
    :revision: '984387535'
    :tid: a28a65a0-35af-11eb-adca-21872c2db217
    :timestamp: '2020-10-19T21:01:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Curl_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Curl_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Curl_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Curl_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Curl_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Curl_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Curl_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Curl_(programming_language)
    :extract: Curl is a reflective object-oriented programming language for interactive
      web applications whose goal is to provide a smoother transition between formatting
      and programming. It makes it possible to embed complex objects in simple documents
      without needing to switch between programming languages or development platforms.
      The Curl implementation initially consisted of just an interpreter, but a compiler
      was added later.
    :extract_html: "<p><b>Curl</b> is a reflective object-oriented programming language
      for interactive web applications whose goal is to provide a smoother transition
      between formatting and programming. It makes it possible to embed complex objects
      in simple documents without needing to switch between programming languages
      or development platforms. The Curl implementation initially consisted of just
      an interpreter, but a compiler was added later.</p>"
  record/d94a69f5-231e-4127-9f00-9affb46bb5a8:
    :type: standard
    :title: Assembly language
    :displaytitle: Assembly language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q165436
    :titles:
      :canonical: Assembly_language
      :normalized: Assembly language
      :display: Assembly language
    :pageid: 1368
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Motorola_6800_Assembly_Language.png/201px-Motorola_6800_Assembly_Language.png
      :width: 201
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f3/Motorola_6800_Assembly_Language.png
      :width: 1013
      :height: 1613
    :lang: en
    :dir: ltr
    :revision: '992154634'
    :tid: e31bb4f0-35a2-11eb-ae32-cfb1cf3a90b4
    :timestamp: '2020-12-03T20:05:20Z'
    :description: Low level programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Assembly_language
        :revisions: https://en.wikipedia.org/wiki/Assembly_language?action=history
        :edit: https://en.wikipedia.org/wiki/Assembly_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Assembly_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Assembly_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Assembly_language
        :edit: https://en.m.wikipedia.org/wiki/Assembly_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Assembly_language
    :extract: In computer programming, assembly language, often abbreviated asm, is
      any low-level programming language in which there is a very strong correspondence
      between the instructions in the language and the architecture's machine code
      instructions. Because assembly depends on the machine code instructions, every
      assembly language is designed for exactly one specific computer architecture.
      Assembly language may also be called symbolic machine code.
    :extract_html: "<p>In computer programming, <b>assembly language</b>, often abbreviated
      <b>asm</b>, is any low-level programming language in which there is a very strong
      correspondence between the instructions in the language and the architecture's
      machine code instructions. Because assembly depends on the machine code instructions,
      every assembly language is designed for exactly one specific computer architecture.
      Assembly language may also be called <i>symbolic machine code</i>.</p>"
  record/84d99224-9921-4208-936e-78222a7041c2:
    :type: standard
    :title: Chapel (programming language)
    :displaytitle: Chapel (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4036051
    :titles:
      :canonical: Chapel_(programming_language)
      :normalized: Chapel (programming language)
      :display: Chapel (programming language)
    :pageid: 6776794
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c0/Cray_Chapel_Logo.png
      :width: 200
      :height: 132
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c0/Cray_Chapel_Logo.png
      :width: 200
      :height: 132
    :lang: en
    :dir: ltr
    :revision: '965271287'
    :tid: '09252030-2de9-11eb-94ec-ddab1dee5dd7'
    :timestamp: '2020-06-30T11:06:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Chapel_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Chapel_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Chapel_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Chapel_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Chapel_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Chapel_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Chapel_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Chapel_(programming_language)
    :extract: Chapel, the Cascade High Productivity Language, is a parallel programming
      language developed by Cray. It is being developed as part of the Cray Cascade
      project, a participant in DARPA's High Productivity Computing Systems (HPCS)
      program, which had the goal of increasing supercomputer productivity by the
      year 2010. It is being developed as an open source project, under version 2
      of the Apache license.
    :extract_html: "<p><b>Chapel</b>, the <b>Cascade High Productivity Language</b>,
      is a parallel programming language developed by Cray. It is being developed
      as part of the Cray Cascade project, a participant in DARPA's High Productivity
      Computing Systems (HPCS) program, which had the goal of increasing supercomputer
      productivity by the year 2010. It is being developed as an open source project,
      under version 2 of the Apache license.</p>"
  record/ff0849e5-5e3b-4a09-a3b5-6597118b81ed:
    :type: standard
    :title: Lean (proof assistant)
    :displaytitle: Lean (proof assistant)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6509476
    :titles:
      :canonical: Lean_(proof_assistant)
      :normalized: Lean (proof assistant)
      :display: Lean (proof assistant)
    :pageid: 62889984
    :lang: en
    :dir: ltr
    :revision: '982127075'
    :tid: '048dac70-34e9-11eb-bb97-cb450aee8928'
    :timestamp: '2020-10-06T09:36:27Z'
    :description: Proof assistant
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lean_(proof_assistant)
        :revisions: https://en.wikipedia.org/wiki/Lean_(proof_assistant)?action=history
        :edit: https://en.wikipedia.org/wiki/Lean_(proof_assistant)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lean_(proof_assistant)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lean_(proof_assistant)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lean_(proof_assistant)
        :edit: https://en.m.wikipedia.org/wiki/Lean_(proof_assistant)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lean_(proof_assistant)
    :extract: Lean is a theorem prover and programming language. It is based on the
      Calculus of Constructions with inductive types.
    :extract_html: "<p><b>Lean</b> is a theorem prover and programming language. It
      is based on the Calculus of Constructions with inductive types.</p>"
  record/8d167b05-87f0-41e1-ba86-47391a3454b2:
    :type: standard
    :title: Subtext (programming language)
    :displaytitle: Subtext (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475887
    :titles:
      :canonical: Subtext_(programming_language)
      :normalized: Subtext (programming language)
      :display: Subtext (programming language)
    :pageid: 2199610
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e8/Subtext_vista.png/320px-Subtext_vista.png
      :width: 320
      :height: 201
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/e8/Subtext_vista.png
      :width: 642
      :height: 403
    :lang: en
    :dir: ltr
    :revision: '775746358'
    :tid: 695d78d0-3145-11eb-a25f-e7a282ff814a
    :timestamp: '2017-04-16T20:58:17Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Subtext_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Subtext_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Subtext_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Subtext_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Subtext_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Subtext_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Subtext_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Subtext_(programming_language)
    :extract: Subtext is a moderately visual programming language and environment,
      for writing application software. It is an experimental, research attempt to
      develop a new programming model, called Example Centric Programming, by treating
      copied blocks as first class prototypes, for program structure. It uses live
      text, similar to what occurs in spreadsheets as users update cells, for frequent
      feedback. It is intended to eventually be developed enough to become a practical
      language for daily use. It is planned to be open software; the license is not
      yet determined.
    :extract_html: "<p><b>Subtext</b> is a moderately visual programming language
      and environment, for writing application software. It is an experimental, research
      attempt to develop a new programming model, called Example Centric Programming,
      by treating copied blocks as first class prototypes, for program structure.
      It uses live text, similar to what occurs in spreadsheets as users update cells,
      for frequent feedback. It is intended to eventually be developed enough to become
      a practical language for daily use. It is planned to be open software; the license
      is not yet determined.</p>"
  record/e389c2ff-61bc-4378-9301-f12488c23e4d:
    :type: standard
    :title: Napier88
    :displaytitle: Napier88
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6964898
    :titles:
      :canonical: Napier88
      :normalized: Napier88
      :display: Napier88
    :pageid: 5748470
    :lang: en
    :dir: ltr
    :revision: '987705029'
    :tid: f7131bb0-2ca6-11eb-a2c4-61ff5667767b
    :timestamp: '2020-11-08T18:59:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Napier88
        :revisions: https://en.wikipedia.org/wiki/Napier88?action=history
        :edit: https://en.wikipedia.org/wiki/Napier88?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Napier88
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Napier88
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Napier88
        :edit: https://en.m.wikipedia.org/wiki/Napier88?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Napier88
    :extract: Napier88 is an orthogonally persistent programming language that was
      designed and implemented at the University of St Andrews, Scotland. The primary
      designer was Ron Morrison, whose initial designs were extended and implemented
      by Fred Brown, Richard Connor, and Al Dearle. Napier88 was ahead of its time
      in many ways, and was the first robustly implemented language to combine a polymorphic
      type system with orthogonal persistence. The language was robustly implemented
      and released to users from both industry and academia; up to 1,000 registered
      users were recorded in due course. The language, however, was only intended
      to provide a proof of concept for an experiment in persistent programming; some
      time after 1989 the group's interests moved on and the language was no longer
      maintained.
    :extract_html: "<p><b>Napier88</b> is an orthogonally persistent programming language
      that was designed and implemented at the University of St Andrews, Scotland.
      The primary designer was Ron Morrison, whose initial designs were extended and
      implemented by Fred Brown, Richard Connor, and Al Dearle. Napier88 was ahead
      of its time in many ways, and was the first robustly implemented language to
      combine a polymorphic type system with orthogonal persistence. The language
      was robustly implemented and released to users from both industry and academia;
      up to 1,000 registered users were recorded in due course. The language, however,
      was only intended to provide a proof of concept for an experiment in persistent
      programming; some time after 1989 the group's interests moved on and the language
      was no longer maintained.</p>"
  record/e8d631ff-b3fa-4f8f-a0d5-3dcad91d3903:
    :type: standard
    :title: LIS (programming language)
    :displaytitle: LIS (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6458817
    :titles:
      :canonical: LIS_(programming_language)
      :normalized: LIS (programming language)
      :display: LIS (programming language)
    :pageid: 12073324
    :lang: en
    :dir: ltr
    :revision: '862859059'
    :tid: 12c4f7e0-254d-11eb-9a5d-6bfc01e06af5
    :timestamp: '2018-10-07T05:07:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LIS_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/LIS_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/LIS_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LIS_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LIS_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LIS_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/LIS_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LIS_(programming_language)
    :extract: LIS was a system implementation programming language designed by Jean
      Ichbiah, who later designed Ada.
    :extract_html: "<p><b>LIS</b> was a system implementation programming language
      designed by Jean Ichbiah, who later designed Ada.</p>"
  record/cb700d29-8220-4cf8-bf43-1e4921ad1282:
    :type: standard
    :title: Toi (programming language)
    :displaytitle: Toi (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28457672
    :titles:
      :canonical: Toi_(programming_language)
      :normalized: Toi (programming language)
      :display: Toi (programming language)
    :pageid: 52078022
    :lang: en
    :dir: ltr
    :revision: '968305176'
    :tid: 38dd4970-1e52-11eb-892b-e7248245f6fc
    :timestamp: '2020-07-18T15:04:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Toi_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Toi_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Toi_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Toi_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Toi_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Toi_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Toi_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Toi_(programming_language)
    :extract: Toi is an imperative, type-sensitive language that provides the basic
      functionality of a programming language. The language was designed and developed
      from the ground-up by Paul Longtine. Written in C, Toi was created with the
      intent to be an educational experience and serves as a learning tool for those
      looking to familiarize themselves with the inner-workings of a programming language.
    :extract_html: "<p><b>Toi</b> is an imperative, type-sensitive language that provides
      the basic functionality of a programming language. The language was designed
      and developed from the ground-up by Paul Longtine. Written in C, Toi was created
      with the intent to be an educational experience and serves as a learning tool
      for those looking to familiarize themselves with the inner-workings of a programming
      language.</p>"
  record/afb2fbf9-0d0c-4c84-94f5-98705a4a4e78:
    :type: standard
    :title: Snap! (programming language)
    :displaytitle: Snap<i>!</i> (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1002996
    :titles:
      :canonical: Snap!_(programming_language)
      :normalized: Snap! (programming language)
      :display: Snap<i>!</i> (programming language)
    :pageid: 34236881
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Snap%21.png/320px-Snap%21.png
      :width: 320
      :height: 176
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/a/ab/Snap%21.png
      :width: 1187
      :height: 652
    :lang: en
    :dir: ltr
    :revision: '990597291'
    :tid: b30c3d60-2f13-11eb-933b-bf1ef92b5d43
    :timestamp: '2020-11-25T11:45:18Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Snap!_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Snap!_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Snap!_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Snap!_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Snap!_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Snap!_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Snap!_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Snap!_(programming_language)
    :extract: Snap! is a free, block-based educational graphical programming language
      and online community aimed at students to explore, create and re-mix interactive
      animations, games, stories, and more, while learning about mathematical and
      computational ideas. While inspired by Scratch, Snap! has many advanced features.
      The Snap! editor, and programs created in it, are web applications that run
      in the browser without requiring installation.
    :extract_html: "<p><b>Snap<i>!</i></b> is a free, block-based educational graphical
      programming language and online community aimed at students to explore, create
      and re-mix interactive animations, games, stories, and more, while learning
      about mathematical and computational ideas. While inspired by Scratch, Snap<i>!</i>
      has many advanced features. The Snap<i>!</i> editor, and programs created in
      it, are web applications that run in the browser without requiring installation.</p>"
  record/111bcda3-7a3d-4aac-b56f-5a8f841ddc06:
    :type: standard
    :title: Sed
    :displaytitle: sed
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q305876
    :titles:
      :canonical: Sed
      :normalized: Sed
      :display: sed
    :pageid: 27163
    :lang: en
    :dir: ltr
    :revision: '991725519'
    :tid: c8a52890-33e0-11eb-a11c-73029cf9327d
    :timestamp: '2020-12-01T14:23:24Z'
    :description: Standard UNIX utility for editing streams of data
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Sed
        :revisions: https://en.wikipedia.org/wiki/Sed?action=history
        :edit: https://en.wikipedia.org/wiki/Sed?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Sed
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Sed
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Sed
        :edit: https://en.m.wikipedia.org/wiki/Sed?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Sed
    :extract: |-
      sed is a Unix utility that parses and transforms text, using a simple, compact programming language. sed was developed from 1973 to 1974 by Lee E. McMahon of Bell Labs,
      and is available today for most operating systems. sed was based on the scripting features of the interactive editor ed and the earlier qed. sed was one of the earliest tools to support regular expressions, and remains in use for text processing, most notably with the substitution command. Popular alternative tools for plaintext string manipulation and "stream editing" include AWK and Perl.
    :extract_html: |-
      <p><b>sed</b> is a Unix utility that parses and transforms text, using a simple, compact programming language. sed was developed from 1973 to 1974 by Lee E. McMahon of Bell Labs,
      and is available today for most operating systems. sed was based on the scripting features of the interactive editor ed and the earlier qed. sed was one of the earliest tools to support regular expressions, and remains in use for text processing, most notably with the substitution command. Popular alternative tools for plaintext string manipulation and "stream editing" include AWK and Perl.</p>
  record/20733e6e-f00b-4a1a-8a7d-2d9aa39e10fd:
    :type: standard
    :title: Amiga E
    :displaytitle: Amiga E
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q471181
    :titles:
      :canonical: Amiga_E
      :normalized: Amiga E
      :display: Amiga E
    :pageid: 114313
    :lang: en
    :dir: ltr
    :revision: '991618197'
    :tid: e8a8a080-3369-11eb-bb66-3790b15802b9
    :timestamp: '2020-12-01T00:12:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Amiga_E
        :revisions: https://en.wikipedia.org/wiki/Amiga_E?action=history
        :edit: https://en.wikipedia.org/wiki/Amiga_E?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Amiga_E
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Amiga_E
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Amiga_E
        :edit: https://en.m.wikipedia.org/wiki/Amiga_E?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Amiga_E
    :extract: Amiga E, or very often simply E, is a programming language created by
      Wouter van Oortmerssen on the Amiga. He has since moved on to develop the SHEEP
      programming language for the new AmigaDE platform and the CryScript language
      used during the development of the video game Far Cry.
    :extract_html: "<p><b>Amiga E</b>, or very often simply <b>E</b>, is a programming
      language created by Wouter van Oortmerssen on the Amiga. He has since moved
      on to develop the SHEEP programming language for the new AmigaDE platform and
      the CryScript language used during the development of the video game Far Cry.</p>"
  record/329343ff-45db-4d3f-9089-f4a683a580ac:
    :type: standard
    :title: LabVIEW
    :displaytitle: LabVIEW
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q746261
    :titles:
      :canonical: LabVIEW
      :normalized: LabVIEW
      :display: LabVIEW
    :pageid: 544733
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/6/60/LabVIEW_Logo.jpg/320px-LabVIEW_Logo.jpg
      :width: 320
      :height: 118
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/6/60/LabVIEW_Logo.jpg
      :width: 519
      :height: 192
    :lang: en
    :dir: ltr
    :revision: '991883567'
    :tid: 351ef300-3479-11eb-b9c5-0949217d1d4e
    :timestamp: '2020-12-02T08:34:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LabVIEW
        :revisions: https://en.wikipedia.org/wiki/LabVIEW?action=history
        :edit: https://en.wikipedia.org/wiki/LabVIEW?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LabVIEW
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LabVIEW
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LabVIEW
        :edit: https://en.m.wikipedia.org/wiki/LabVIEW?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LabVIEW
    :extract: Laboratory Virtual Instrument Engineering Workbench (LabVIEW) is a system-design
      platform and development environment for a visual programming language from
      National Instruments.
    :extract_html: "<p><b>Laboratory Virtual Instrument Engineering Workbench</b>
      (<b>LabVIEW</b>) is a system-design platform and development environment for
      a visual programming language from National Instruments.</p>"
  record/c59ddff2-8273-4db3-8171-481ba8e8ed04:
    :type: standard
    :title: CDuce
    :displaytitle: CDuce
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2931220
    :titles:
      :canonical: CDuce
      :normalized: CDuce
      :display: CDuce
    :pageid: 5763798
    :lang: en
    :dir: ltr
    :revision: '929355813'
    :tid: d76709e0-35e1-11eb-be86-65c9113b2cb8
    :timestamp: '2019-12-05T08:15:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CDuce
        :revisions: https://en.wikipedia.org/wiki/CDuce?action=history
        :edit: https://en.wikipedia.org/wiki/CDuce?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CDuce
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CDuce
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CDuce
        :edit: https://en.m.wikipedia.org/wiki/CDuce?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CDuce
    :extract: |-
      CDuce is an XML-oriented functional language, which extends XDuce in a few directions.
      It features XML regular expression types, XML regular expression patterns,
      XML iterators. CDuce is not strictly speaking an XML transformation language since
      it can be used for general-purpose programming.
    :extract_html: |-
      <p><b>CDuce</b> is an XML-oriented functional language, which extends XDuce in a few directions.
      It features XML regular expression types, XML regular expression patterns,
      XML iterators. CDuce is not strictly speaking an XML transformation language since
      it can be used for general-purpose programming.</p>
  record/177420ad-f79b-4684-9491-d98023b32a07:
    :type: standard
    :title: SequenceL
    :displaytitle: SequenceL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7452449
    :titles:
      :canonical: SequenceL
      :normalized: SequenceL
      :display: SequenceL
    :pageid: 37895661
    :lang: en
    :dir: ltr
    :revision: '929395718'
    :tid: 1bcff670-2e74-11eb-8a64-5756501abf7a
    :timestamp: '2019-12-05T15:32:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SequenceL
        :revisions: https://en.wikipedia.org/wiki/SequenceL?action=history
        :edit: https://en.wikipedia.org/wiki/SequenceL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SequenceL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SequenceL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SequenceL
        :edit: https://en.m.wikipedia.org/wiki/SequenceL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SequenceL
    :extract: SequenceL is a general purpose functional programming language and auto-parallelizing
      compiler and tool set, whose primary design objectives are performance on multi-core
      processor hardware, ease of programming, platform portability/optimization,
      and code clarity and readability. Its main advantage is that it can be used
      to write straightforward code that automatically takes full advantage of all
      the processing power available, without programmers needing to be concerned
      with identifying parallelisms, specifying vectorization, avoiding race conditions,
      and other challenges of manual directive-based programming approaches such as
      OpenMP.
    :extract_html: "<p><b>SequenceL</b> is a general purpose functional programming
      language and auto-parallelizing compiler and tool set, whose primary design
      objectives are performance on multi-core processor hardware, ease of programming,
      platform portability/optimization, and code clarity and readability. Its main
      advantage is that it can be used to write straightforward code that automatically
      takes full advantage of all the processing power available, without programmers
      needing to be concerned with identifying parallelisms, specifying vectorization,
      avoiding race conditions, and other challenges of manual directive-based programming
      approaches such as OpenMP.</p>"
  record/316b2475-5259-4333-9a2d-734a56c02f24:
    :type: standard
    :title: JOVIAL
    :displaytitle: JOVIAL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1277803
    :titles:
      :canonical: JOVIAL
      :normalized: JOVIAL
      :display: JOVIAL
    :pageid: 224748
    :lang: en
    :dir: ltr
    :revision: '981756152'
    :tid: f7873a40-2ca6-11eb-83bc-1985732d6fb4
    :timestamp: '2020-10-04T07:55:55Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JOVIAL
        :revisions: https://en.wikipedia.org/wiki/JOVIAL?action=history
        :edit: https://en.wikipedia.org/wiki/JOVIAL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JOVIAL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JOVIAL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JOVIAL
        :edit: https://en.m.wikipedia.org/wiki/JOVIAL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JOVIAL
    :extract: JOVIAL is a high-level programming language similar to ALGOL, specialized
      for developing embedded systems. It was a major system programming language
      through the 1960s and 70s.
    :extract_html: "<p><b>JOVIAL</b> is a high-level programming language similar
      to ALGOL, specialized for developing embedded systems. It was a major system
      programming language through the 1960s and 70s.</p>"
  record/24d4dffd-86fd-49f5-904b-b37332b7f582:
    :type: standard
    :title: High Level Assembly
    :displaytitle: High Level Assembly
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2630324
    :titles:
      :canonical: High_Level_Assembly
      :normalized: High Level Assembly
      :display: High Level Assembly
    :pageid: 723581
    :lang: en
    :dir: ltr
    :revision: '940361044'
    :tid: ad1214b0-35b8-11eb-a6e6-87e703515b33
    :timestamp: '2020-02-12T02:49:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/High_Level_Assembly
        :revisions: https://en.wikipedia.org/wiki/High_Level_Assembly?action=history
        :edit: https://en.wikipedia.org/wiki/High_Level_Assembly?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:High_Level_Assembly
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/High_Level_Assembly
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/High_Level_Assembly
        :edit: https://en.m.wikipedia.org/wiki/High_Level_Assembly?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:High_Level_Assembly
    :extract: High Level Assembly (HLA) is a high-level assembly language developed
      by Randall Hyde. It allows the use of higher-level language constructs to aid
      both beginners and advanced assembly developers. It fully supports advanced
      data types and object-oriented programming. It uses a syntax loosely based on
      several high-level programming languages (HLLs), such as Pascal, Ada, Modula-2,
      and C++, to allow creating readable assembly language programs, and to allow
      HLL programmers to learn HLA as fast as possible.
    :extract_html: "<p><b>High Level Assembly</b> (<b>HLA</b>) is a high-level assembly
      language developed by Randall Hyde. It allows the use of higher-level language
      constructs to aid both beginners and advanced assembly developers. It fully
      supports advanced data types and object-oriented programming. It uses a syntax
      loosely based on several high-level programming languages (HLLs), such as Pascal,
      Ada, Modula-2, and C++, to allow creating readable assembly language programs,
      and to allow HLL programmers to learn HLA as fast as possible.</p>"
  record/796deda3-af50-4413-a83f-3c0b5cd7709f:
    :type: standard
    :title: Microsoft Dynamics AX
    :displaytitle: Microsoft Dynamics AX
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q675860
    :titles:
      :canonical: Microsoft_Dynamics_AX
      :normalized: Microsoft Dynamics AX
      :display: Microsoft Dynamics AX
    :pageid: 1597852
    :lang: en
    :dir: ltr
    :revision: '987774713'
    :tid: 439995e0-2d29-11eb-87e2-f52a228df387
    :timestamp: '2020-11-09T04:37:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Microsoft_Dynamics_AX
        :revisions: https://en.wikipedia.org/wiki/Microsoft_Dynamics_AX?action=history
        :edit: https://en.wikipedia.org/wiki/Microsoft_Dynamics_AX?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Microsoft_Dynamics_AX
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Microsoft_Dynamics_AX
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Microsoft_Dynamics_AX
        :edit: https://en.m.wikipedia.org/wiki/Microsoft_Dynamics_AX?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Microsoft_Dynamics_AX
    :extract: Microsoft Dynamics AX was one of Microsoft's enterprise resource planning
      software products. It is part of the Microsoft Dynamics family. In 2018, its
      thick-client interface was removed and the web product was rebranded as Microsoft
      Dynamics 365 for Finance and Operations as a part of Microsoft's Dynamics 365
      suite.
    :extract_html: "<p><b>Microsoft Dynamics AX</b> was one of Microsoft's enterprise
      resource planning software products. It is part of the Microsoft Dynamics family.
      In 2018, its thick-client interface was removed and the web product was rebranded
      as Microsoft Dynamics 365 for Finance and Operations as a part of Microsoft's
      Dynamics 365 suite.</p>"
  record/da7a6827-b22a-4709-9140-eb701f8e31f9:
    :type: standard
    :title: SystemVerilog
    :displaytitle: SystemVerilog
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1387402
    :titles:
      :canonical: SystemVerilog
      :normalized: SystemVerilog
      :display: SystemVerilog
    :pageid: 2540686
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/e/ef/SystemVerilog_logo.png
      :width: 294
      :height: 103
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/e/ef/SystemVerilog_logo.png
      :width: 294
      :height: 103
    :lang: en
    :dir: ltr
    :revision: '982808479'
    :tid: 3edd4bb0-2acb-11eb-897c-bf43a82dc2c0
    :timestamp: '2020-10-10T13:41:31Z'
    :description: hardware description and hardware verification language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SystemVerilog
        :revisions: https://en.wikipedia.org/wiki/SystemVerilog?action=history
        :edit: https://en.wikipedia.org/wiki/SystemVerilog?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SystemVerilog
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SystemVerilog
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SystemVerilog
        :edit: https://en.m.wikipedia.org/wiki/SystemVerilog?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SystemVerilog
    :extract: SystemVerilog, standardized as IEEE 1800, is a hardware description
      and hardware verification language used to model, design, simulate, test and
      implement electronic systems. SystemVerilog is based on Verilog and some extensions,
      and since 2008 Verilog is now part of the same IEEE standard. It is commonly
      used in the semiconductor and electronic design industry as an evolution of
      Verilog.
    :extract_html: "<p><b>SystemVerilog</b>, standardized as <b>IEEE 1800</b>, is
      a hardware description and hardware verification language used to model, design,
      simulate, test and implement electronic systems. SystemVerilog is based on Verilog
      and some extensions, and since 2008 Verilog is now part of the same IEEE standard.
      It is commonly used in the semiconductor and electronic design industry as an
      evolution of Verilog.</p>"
  record/08a960d3-f618-4d97-b6a5-2f055de33881:
    :type: standard
    :title: Stateflow
    :displaytitle: Stateflow
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1266659
    :titles:
      :canonical: Stateflow
      :normalized: Stateflow
      :display: Stateflow
    :pageid: 562713
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/4/4e/Automatic_Transmission_Logic.png/320px-Automatic_Transmission_Logic.png
      :width: 320
      :height: 247
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/4/4e/Automatic_Transmission_Logic.png
      :width: 359
      :height: 277
    :lang: en
    :dir: ltr
    :revision: '875967363'
    :tid: 712edb10-2d28-11eb-ba1a-8de8db884f01
    :timestamp: '2018-12-30T07:02:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Stateflow
        :revisions: https://en.wikipedia.org/wiki/Stateflow?action=history
        :edit: https://en.wikipedia.org/wiki/Stateflow?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Stateflow
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Stateflow
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Stateflow
        :edit: https://en.m.wikipedia.org/wiki/Stateflow?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Stateflow
    :extract: Stateflow is a control logic tool used to model reactive systems via
      state machines and flow charts within a Simulink model. Stateflow uses a variant
      of the finite-state machine notation established by David Harel, enabling the
      representation of hierarchy, parallelism and history within a state chart. Stateflow
      also provides state transition tables and truth tables.
    :extract_html: "<p><b>Stateflow</b> is a control logic tool used to model reactive
      systems via state machines and flow charts within a Simulink model. Stateflow
      uses a variant of the finite-state machine notation established by David Harel,
      enabling the representation of hierarchy, parallelism and history within a state
      chart. Stateflow also provides state transition tables and truth tables.</p>"
  record/96e1ec60-541d-4662-b21b-780a076a6bf9:
    :type: standard
    :title: Hope (programming language)
    :displaytitle: Hope (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4040754
    :titles:
      :canonical: Hope_(programming_language)
      :normalized: Hope (programming language)
      :display: Hope (programming language)
    :pageid: 933188
    :lang: en
    :dir: ltr
    :revision: '989070659'
    :tid: 82a51ed0-2856-11eb-8757-33dae8f0daa5
    :timestamp: '2020-11-16T21:55:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hope_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hope_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hope_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hope_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hope_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hope_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hope_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hope_(programming_language)
    :extract: |-
      Hope is a small functional programming language developed in the 1970s at the University of Edinburgh.
      It predates Miranda and Haskell and is contemporaneous with ML, also developed at the University. Hope was derived from NPL, a simple functional language developed by Rod Burstall and John Darlington in their work on program transformation. NPL and Hope are notable for being the first languages with call-by-pattern evaluation and algebraic data types.
    :extract_html: |-
      <p><b>Hope</b> is a small functional programming language developed in the 1970s at the University of Edinburgh.
      It predates Miranda and Haskell and is contemporaneous with ML, also developed at the University. Hope was derived from NPL, a simple functional language developed by Rod Burstall and John Darlington in their work on program transformation. NPL and Hope are notable for being the first languages with call-by-pattern evaluation and algebraic data types.</p>
  record/542d4139-730b-4099-889d-64916553257c:
    :type: standard
    :title: CHIP-8
    :displaytitle: CHIP-8
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1023623
    :titles:
      :canonical: CHIP-8
      :normalized: CHIP-8
      :display: CHIP-8
    :pageid: 1119698
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/9/9e/PONG_CHIP8.png
      :width: 256
      :height: 128
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/9/9e/PONG_CHIP8.png
      :width: 256
      :height: 128
    :lang: en
    :dir: ltr
    :revision: '990174933'
    :tid: 1a92b5d0-2d53-11eb-b2b2-19170a2639b5
    :timestamp: '2020-11-23T06:14:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CHIP-8
        :revisions: https://en.wikipedia.org/wiki/CHIP-8?action=history
        :edit: https://en.wikipedia.org/wiki/CHIP-8?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CHIP-8
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CHIP-8
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CHIP-8
        :edit: https://en.m.wikipedia.org/wiki/CHIP-8?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CHIP-8
    :extract: CHIP-8 is an interpreted programming language, developed by Joseph Weisbecker.
      It was initially used on the COSMAC VIP and Telmac 1800 8-bit microcomputers
      in the mid-1970s. CHIP-8 programs are run on a CHIP-8 virtual machine. It was
      made to allow video games to be more easily programmed for these computers.
    :extract_html: "<p><b>CHIP-8</b> is an interpreted programming language, developed
      by Joseph Weisbecker. It was initially used on the COSMAC VIP and Telmac 1800
      8-bit microcomputers in the mid-1970s. CHIP-8 programs are run on a CHIP-8 virtual
      machine. It was made to allow video games to be more easily programmed for these
      computers.</p>"
  record/4e0e7e61-2b82-41ac-882e-990dd5792d02:
    :type: standard
    :title: ABC ALGOL
    :displaytitle: ABC ALGOL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q605801
    :titles:
      :canonical: ABC_ALGOL
      :normalized: ABC ALGOL
      :display: ABC ALGOL
    :pageid: 60450
    :lang: en
    :dir: ltr
    :revision: '974417860'
    :tid: f6e3ce50-2ca6-11eb-9930-33684c850002
    :timestamp: '2020-08-22T22:33:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ABC_ALGOL
        :revisions: https://en.wikipedia.org/wiki/ABC_ALGOL?action=history
        :edit: https://en.wikipedia.org/wiki/ABC_ALGOL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ABC_ALGOL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ABC_ALGOL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ABC_ALGOL
        :edit: https://en.m.wikipedia.org/wiki/ABC_ALGOL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ABC_ALGOL
    :extract: ABC ALGOL is an extension of the programming language ALGOL 60 with
      arbitrary data structures and user-defined operators, intended for computer
      algebra. Despite its advances, it was never used as widely as Algol proper.
    :extract_html: "<p><b>ABC ALGOL</b> is an extension of the programming language
      ALGOL 60 with arbitrary data structures and user-defined operators, intended
      for computer algebra. Despite its advances, it was never used as widely as Algol
      proper.</p>"
  record/65d0fd8f-1da6-4b6c-a95c-fb3fca6c466e:
    :type: standard
    :title: Promela
    :displaytitle: Promela
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q948666
    :titles:
      :canonical: Promela
      :normalized: Promela
      :display: Promela
    :pageid: 9733137
    :lang: en
    :dir: ltr
    :revision: '967605570'
    :tid: db907ad0-0998-11eb-b143-f1449067585e
    :timestamp: '2020-07-14T07:17:45Z'
    :description: verification modeling language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Promela
        :revisions: https://en.wikipedia.org/wiki/Promela?action=history
        :edit: https://en.wikipedia.org/wiki/Promela?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Promela
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Promela
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Promela
        :edit: https://en.m.wikipedia.org/wiki/Promela?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Promela
    :extract: PROMELA is a verification modeling language introduced by Gerard J.
      Holzmann. The language allows for the dynamic creation of concurrent processes
      to model, for example, distributed systems. In PROMELA models, communication
      via message channels can be defined to be synchronous, or asynchronous. PROMELA
      models can be analyzed with the SPIN model checker, to verify that the modeled
      system produces the desired behavior. An implementation verified with Isabelle/HOL
      is also available, as part of the Computer Aided Verification of Automata project.
      Files written in Promela traditionally have a .pml file extension.
    :extract_html: "<p><b>PROMELA</b> is a verification modeling language introduced
      by Gerard J. Holzmann. The language allows for the dynamic creation of concurrent
      processes to model, for example, distributed systems. In PROMELA models, communication
      via message channels can be defined to be synchronous, or asynchronous. PROMELA
      models can be analyzed with the SPIN model checker, to verify that the modeled
      system produces the desired behavior. An implementation verified with Isabelle/HOL
      is also available, as part of the Computer Aided Verification of Automata project.
      Files written in Promela traditionally have a <code>.pml</code> file extension.</p>"
  record/fa2a5312-0092-46e1-bcd6-35b6e31d998a:
    :type: standard
    :title: Netwide Assembler
    :displaytitle: Netwide Assembler
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1571077
    :titles:
      :canonical: Netwide_Assembler
      :normalized: Netwide Assembler
      :display: Netwide Assembler
    :pageid: 60647
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Netwide_Assembler.svg/320px-Netwide_Assembler.svg.png
      :width: 320
      :height: 188
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Netwide_Assembler.svg/252px-Netwide_Assembler.svg.png
      :width: 252
      :height: 148
    :lang: en
    :dir: ltr
    :revision: '977456500'
    :tid: ffba5c70-2d27-11eb-ad2d-2de5ab79cc66
    :timestamp: '2020-09-08T23:30:48Z'
    :description: Assembler for the Intel x86 architecture
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Netwide_Assembler
        :revisions: https://en.wikipedia.org/wiki/Netwide_Assembler?action=history
        :edit: https://en.wikipedia.org/wiki/Netwide_Assembler?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Netwide_Assembler
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Netwide_Assembler
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Netwide_Assembler
        :edit: https://en.m.wikipedia.org/wiki/Netwide_Assembler?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Netwide_Assembler
    :extract: The Netwide Assembler (NASM) is an assembler and disassembler for the
      Intel x86 architecture. It can be used to write 16-bit, 32-bit (IA-32) and 64-bit
      (x86-64) programs. NASM is considered to be one of the most popular assemblers
      for Linux.
    :extract_html: "<p>The <b>Netwide Assembler</b> (<b>NASM</b>) is an assembler
      and disassembler for the Intel x86 architecture. It can be used to write 16-bit,
      32-bit (IA-32) and 64-bit (x86-64) programs. NASM is considered to be one of
      the most popular assemblers for Linux.</p>"
  record/b1350835-9204-4083-ae07-7b241bd4598c:
    :type: standard
    :title: ZPL (programming language)
    :displaytitle: ZPL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3332038
    :titles:
      :canonical: ZPL_(programming_language)
      :normalized: ZPL (programming language)
      :display: ZPL (programming language)
    :pageid: 890761
    :lang: en
    :dir: ltr
    :revision: '982810424'
    :tid: 2edb8b50-1b6c-11eb-8b0b-d3c84169e8c1
    :timestamp: '2020-10-10T13:58:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ZPL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ZPL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ZPL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ZPL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ZPL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ZPL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ZPL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ZPL_(programming_language)
    :extract: ZPL is an array programming language designed to replace C and C++ programming
      languages in engineering and scientific applications. Because its design goal
      was to obtain cross-platform high performance, ZPL programs run fast on both
      sequential and parallel computers. Highly-parallel ZPL programs are simple and
      easy to write because it exclusively uses implicit parallelism.
    :extract_html: "<p><b>ZPL</b> is an array programming language designed to replace
      C and C++ programming languages in engineering and scientific applications.
      Because its design goal was to obtain cross-platform high performance, ZPL programs
      run fast on both sequential and parallel computers. Highly-parallel ZPL programs
      are simple and easy to write because it exclusively uses implicit parallelism.</p>"
  record/0c275594-1941-49db-b1ba-0c22d5e90a1c:
    :type: standard
    :title: Eltron Programming Language
    :displaytitle: Eltron Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5367900
    :titles:
      :canonical: Eltron_Programming_Language
      :normalized: Eltron Programming Language
      :display: Eltron Programming Language
    :pageid: 8664562
    :lang: en
    :dir: ltr
    :revision: '947545033'
    :tid: 9c123830-2059-11eb-be9b-6dc4438d5f71
    :timestamp: '2020-03-26T23:27:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Eltron_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Eltron_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Eltron_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Eltron_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Eltron_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Eltron_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Eltron_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Eltron_Programming_Language
    :extract: Eltron Programming Language (EPL) is a printer control language used
      to produce printed labels for various Eltron model printers.
    :extract_html: "<p><b>Eltron Programming Language</b> (<b>EPL</b>) is a printer
      control language used to produce printed labels for various Eltron model printers.</p>"
  record/67ba8f68-6562-43a6-b644-a34af0c8fe09:
    :type: standard
    :title: BASIC
    :displaytitle: BASIC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q42979
    :titles:
      :canonical: BASIC
      :normalized: BASIC
      :display: BASIC
    :pageid: 4015
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/AtariBasic.png/320px-AtariBasic.png
      :width: 320
      :height: 192
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/c/c9/AtariBasic.png
      :width: 642
      :height: 385
    :lang: en
    :dir: ltr
    :revision: '991793007'
    :tid: 52baa5d0-341a-11eb-af2e-8f75607bfaec
    :timestamp: '2020-12-01T21:15:16Z'
    :description: Family of programming languages
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BASIC
        :revisions: https://en.wikipedia.org/wiki/BASIC?action=history
        :edit: https://en.wikipedia.org/wiki/BASIC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BASIC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BASIC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BASIC
        :edit: https://en.m.wikipedia.org/wiki/BASIC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BASIC
    :extract: BASIC is a family of general-purpose, high-level programming languages
      whose design philosophy emphasizes ease of use. The original version was designed
      by John G. Kemeny and Thomas E. Kurtz and released at Dartmouth College in 1964.
      They wanted to enable students in fields other than science and mathematics
      to use computers. At the time, nearly all use of computers required writing
      custom software, which was something only scientists and mathematicians tended
      to learn.
    :extract_html: "<p><b>BASIC</b> is a family of general-purpose, high-level programming
      languages whose design philosophy emphasizes ease of use. The original version
      was designed by John G. Kemeny and Thomas E. Kurtz and released at Dartmouth
      College in 1964. They wanted to enable students in fields other than science
      and mathematics to use computers. At the time, nearly all use of computers required
      writing custom software, which was something only scientists and mathematicians
      tended to learn.</p>"
  record/a2ffbae3-507d-44a2-8ec4-ebecc2ecce49:
    :type: standard
    :title: Object REXX
    :displaytitle: Object REXX
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2437099
    :titles:
      :canonical: Object_REXX
      :normalized: Object REXX
      :display: Object REXX
    :pageid: 1353817
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/18/Rexx3_orig_size_transparent.gif
      :width: 150
      :height: 98
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/18/Rexx3_orig_size_transparent.gif
      :width: 150
      :height: 98
    :lang: en
    :dir: ltr
    :revision: '976527511'
    :tid: e4832770-220a-11eb-86be-95c06f151ba0
    :timestamp: '2020-09-03T12:53:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Object_REXX
        :revisions: https://en.wikipedia.org/wiki/Object_REXX?action=history
        :edit: https://en.wikipedia.org/wiki/Object_REXX?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Object_REXX
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Object_REXX
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Object_REXX
        :edit: https://en.m.wikipedia.org/wiki/Object_REXX?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Object_REXX
    :extract: The Object REXX programming language is an object-oriented scripting
      language initially produced by IBM for the operating system OS/2 and later for
      Microsoft Windows. It is a follow-on to and a significant extension of the "Classic
      Rexx" language originally created for the Conversational Monitor System (CMS)
      component of the operating system VM/SP and later ported to Multiple Virtual
      Storage (MVS), OS/2 and PC DOS.
    :extract_html: <p>The <b>Object REXX</b> programming language is an object-oriented
      scripting language initially produced by IBM for the operating system OS/2 and
      later for Microsoft Windows. It is a follow-on to and a significant extension
      of the "Classic Rexx" language originally created for the Conversational Monitor
      System (CMS) component of the operating system VM/SP and later ported to Multiple
      Virtual Storage (MVS), OS/2 and PC DOS.</p>
  record/7785190c-138c-41f5-9874-c5a0f493899d:
    :type: standard
    :title: Batch file
    :displaytitle: Batch file
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q479833
    :titles:
      :canonical: Batch_file
      :normalized: Batch file
      :display: Batch file
    :pageid: 15264030
    :lang: en
    :dir: ltr
    :revision: '990696556'
    :tid: c9d2e070-2f7d-11eb-ad6c-25e4a1494484
    :timestamp: '2020-11-26T00:24:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Batch_file
        :revisions: https://en.wikipedia.org/wiki/Batch_file?action=history
        :edit: https://en.wikipedia.org/wiki/Batch_file?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Batch_file
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Batch_file
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Batch_file
        :edit: https://en.m.wikipedia.org/wiki/Batch_file?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Batch_file
    :extract: A batch file is a script file in DOS, OS/2 and Microsoft Windows. It
      consists of a series of commands to be executed by the command-line interpreter,
      stored in a plain text file. A batch file may contain any command the interpreter
      accepts interactively and use constructs that enable conditional branching and
      looping within the batch file, such as IF, FOR, and GOTO labels. The term "batch"
      is from batch processing, meaning "non-interactive execution", though a batch
      file may not process a batch of multiple data.
    :extract_html: <p>A <b>batch file</b> is a script file in DOS, OS/2 and Microsoft
      Windows. It consists of a series of commands to be executed by the command-line
      interpreter, stored in a plain text file. A batch file may contain any command
      the interpreter accepts interactively and use constructs that enable conditional
      branching and looping within the batch file, such as <code>IF</code>, <code>FOR</code>,
      and <code>GOTO</code> labels. The term "batch" is from batch processing, meaning
      "non-interactive execution", though a batch file may not process a <i>batch</i>
      of multiple data.</p>
  record/31105c2e-3257-4b56-8b4a-4732c527325b:
    :type: standard
    :title: Orwell (programming language)
    :displaytitle: Orwell (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7105278
    :titles:
      :canonical: Orwell_(programming_language)
      :normalized: Orwell (programming language)
      :display: Orwell (programming language)
    :pageid: 15127684
    :lang: en
    :dir: ltr
    :revision: '922253121'
    :tid: 01265270-289c-11eb-b0b0-910a029cee4c
    :timestamp: '2019-10-20T23:31:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Orwell_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Orwell_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Orwell_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Orwell_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Orwell_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Orwell_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Orwell_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Orwell_(programming_language)
    :extract: Orwell is a small, lazy-evaluation functional programming language implemented
      principally by Martin Raskovsky and first released in 1984 by Philip Wadler
      during his time as a Research Fellow in the Programming Research Group, part
      of the Oxford University Computing Laboratory. Developed as a free alternative
      to Miranda, it was a forerunner of Haskell and was one of the first programming
      languages to support list comprehensions and pattern matching.
    :extract_html: "<p><b>Orwell</b> is a small, lazy-evaluation functional programming
      language implemented principally by Martin Raskovsky and first released in 1984
      by Philip Wadler during his time as a Research Fellow in the Programming Research
      Group, part of the Oxford University Computing Laboratory. Developed as a free
      alternative to Miranda, it was a forerunner of Haskell and was one of the first
      programming languages to support list comprehensions and pattern matching.</p>"
  record/331ef092-4e1d-483b-a2bd-b53c0e49d473:
    :type: standard
    :title: TypeScript
    :displaytitle: TypeScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q978185
    :titles:
      :canonical: TypeScript
      :normalized: TypeScript
      :display: TypeScript
    :pageid: 8157205
    :lang: en
    :dir: ltr
    :revision: '989661716'
    :tid: 05166470-34e9-11eb-a903-111f16c8a7f9
    :timestamp: '2020-11-20T08:25:13Z'
    :description: Programming language, superset of JavaScript that compiles to JavaScript
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TypeScript
        :revisions: https://en.wikipedia.org/wiki/TypeScript?action=history
        :edit: https://en.wikipedia.org/wiki/TypeScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TypeScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TypeScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TypeScript
        :edit: https://en.m.wikipedia.org/wiki/TypeScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TypeScript
    :extract: TypeScript is a programming language developed and maintained by Microsoft.
      It is a strict syntactical superset of JavaScript and adds optional static typing
      to the language. TypeScript is designed for development of large applications
      and transcompiles to JavaScript. As TypeScript is a superset of JavaScript,
      existing JavaScript programs are also valid TypeScript programs.
    :extract_html: "<p><b>TypeScript</b> is a programming language developed and maintained
      by Microsoft. It is a strict syntactical superset of JavaScript and adds optional
      static typing to the language. TypeScript is designed for development of large
      applications and transcompiles to JavaScript. As TypeScript is a superset of
      JavaScript, existing JavaScript programs are also valid TypeScript programs.</p>"
  record/44e8e8f1-6d3a-4f27-b082-6b91fd5c1898:
    :type: standard
    :title: Mortran
    :displaytitle: Mortran
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6914983
    :titles:
      :canonical: Mortran
      :normalized: Mortran
      :display: Mortran
    :pageid: 1979848
    :lang: en
    :dir: ltr
    :revision: '956138745'
    :tid: 2007fa60-07de-11eb-b84d-3f17e22432d9
    :timestamp: '2020-05-11T18:10:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mortran
        :revisions: https://en.wikipedia.org/wiki/Mortran?action=history
        :edit: https://en.wikipedia.org/wiki/Mortran?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mortran
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mortran
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mortran
        :edit: https://en.m.wikipedia.org/wiki/Mortran?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mortran
    :extract: Mortran is an extension of the Fortran programming language used for
      scientific computation. It introduces syntax changes, including the use of semicolons
      to end statements, in order to improve readability and flexibility. Mortran
      code is macro-processed into Fortran code for compilation.
    :extract_html: "<p><b>Mortran</b> is an extension of the Fortran programming language
      used for scientific computation. It introduces syntax changes, including the
      use of semicolons to end statements, in order to improve readability and flexibility.
      Mortran code is macro-processed into Fortran code for compilation.</p>"
  record/fba99c9f-0697-4c28-b413-6534119949a7:
    :type: standard
    :title: Processing.js
    :displaytitle: Processing.js
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3406362
    :titles:
      :canonical: Processing.js
      :normalized: Processing.js
      :display: Processing.js
    :pageid: 28051408
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/Processing_Logo_Clipped.svg/320px-Processing_Logo_Clipped.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/59/Processing_Logo_Clipped.svg/256px-Processing_Logo_Clipped.svg.png
      :width: 256
      :height: 256
    :lang: en
    :dir: ltr
    :revision: '918331559'
    :tid: 274db520-2c97-11eb-8658-6d9eb1b9f21b
    :timestamp: '2019-09-28T04:19:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Processing.js
        :revisions: https://en.wikipedia.org/wiki/Processing.js?action=history
        :edit: https://en.wikipedia.org/wiki/Processing.js?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Processing.js
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Processing.js
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Processing.js
        :edit: https://en.m.wikipedia.org/wiki/Processing.js?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Processing.js
    :extract: Processing.js is a JavaScript port of Processing, a programming language
      designed to write visualisations, images, and interactive content. It allows
      web browsers to display animations, visual applications, games and other graphical
      rich content without the need for a Java applet or Flash plugin.
    :extract_html: "<p><b>Processing.js</b> is a JavaScript port of Processing, a
      programming language designed to write visualisations, images, and interactive
      content. It allows web browsers to display animations, visual applications,
      games and other graphical rich content without the need for a Java applet or
      Flash plugin.</p>"
  record/464cb0ba-f0cd-4c00-aef0-13521faf94d6:
    :type: standard
    :title: Jython
    :displaytitle: Jython
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1053999
    :titles:
      :canonical: Jython
      :normalized: Jython
      :display: Jython
    :pageid: 390263
    :lang: en
    :dir: ltr
    :revision: '980383645'
    :tid: 7090c650-2d28-11eb-a0b6-5fe87bbeba32
    :timestamp: '2020-09-26T07:18:57Z'
    :description: Java implementation of Python
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Jython
        :revisions: https://en.wikipedia.org/wiki/Jython?action=history
        :edit: https://en.wikipedia.org/wiki/Jython?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Jython
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Jython
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Jython
        :edit: https://en.m.wikipedia.org/wiki/Jython?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Jython
    :extract: Jython is an implementation of the Python programming language designed
      to run on the Java platform. The implementation was formerly known as JPython
      until 1999.
    :extract_html: "<p><b>Jython</b> is an implementation of the Python programming
      language designed to run on the Java platform. The implementation was formerly
      known as <b>JPython</b> until 1999.</p>"
  record/1a5c4da2-16e6-432c-9368-bd53890ad9bc:
    :type: standard
    :title: Go! (programming language)
    :displaytitle: Go! (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3109515
    :titles:
      :canonical: Go!_(programming_language)
      :normalized: Go! (programming language)
      :display: Go! (programming language)
    :pageid: 25045328
    :lang: en
    :dir: ltr
    :revision: '970065862'
    :tid: 5d88e790-2bcf-11eb-9b99-cd364362542b
    :timestamp: '2020-07-29T01:29:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Go!_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Go!_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Go!_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Go!_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Go!_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Go!_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Go!_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Go!_(programming_language)
    :extract: Go! is an agent-based programming language in the tradition of logic-based
      programming languages like Prolog. It was introduced in a 2003 paper by Francis
      McCabe and Keith Clark.
    :extract_html: "<p><b>Go!</b> is an agent-based programming language in the tradition
      of logic-based programming languages like Prolog. It was introduced in a 2003
      paper by Francis McCabe and Keith Clark.</p>"
  record/fb0dfcb6-b0d9-4219-80d8-67af66132bb5:
    :type: standard
    :title: AutoLISP
    :displaytitle: AutoLISP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q782397
    :titles:
      :canonical: AutoLISP
      :normalized: AutoLISP
      :display: AutoLISP
    :pageid: 51458
    :lang: en
    :dir: ltr
    :revision: '975826072'
    :tid: 81c3a730-2fa3-11eb-81a8-2598ad418372
    :timestamp: '2020-08-30T16:42:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AutoLISP
        :revisions: https://en.wikipedia.org/wiki/AutoLISP?action=history
        :edit: https://en.wikipedia.org/wiki/AutoLISP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AutoLISP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AutoLISP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AutoLISP
        :edit: https://en.m.wikipedia.org/wiki/AutoLISP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AutoLISP
    :extract: AutoLISP is a dialect of the programming language Lisp built specifically
      for use with the full version of AutoCAD and its derivatives, which include
      AutoCAD Map 3D, AutoCAD Architecture and AutoCAD Mechanical. Neither the application
      programming interface (API) nor the interpreter to execute AutoLISP code are
      included in the AutoCAD LT product line.
    :extract_html: "<p><b>AutoLISP</b> is a dialect of the programming language Lisp
      built specifically for use with the full version of AutoCAD and its derivatives,
      which include <i>AutoCAD Map 3D</i>, <i>AutoCAD Architecture</i> and <i>AutoCAD
      Mechanical</i>. Neither the application programming interface (API) nor the
      interpreter to execute AutoLISP code are included in the AutoCAD LT product
      line.</p>"
  record/7a8b7e46-0b05-406d-b183-666ac3c8c1da:
    :type: standard
    :title: Unicon (programming language)
    :displaytitle: Unicon (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3279945
    :titles:
      :canonical: Unicon_(programming_language)
      :normalized: Unicon (programming language)
      :display: Unicon (programming language)
    :pageid: 902180
    :lang: en
    :dir: ltr
    :revision: '973480280'
    :tid: c72f4cd0-20d9-11eb-ae31-3d5997764e26
    :timestamp: '2020-08-17T12:56:57Z'
    :description: Programming language descended from Icon
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Unicon_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Unicon_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Unicon_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Unicon_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Unicon_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Unicon_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Unicon_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Unicon_(programming_language)
    :extract: 'Unicon is a programming language designed by American computer scientist
      Clint Jeffery with collaborators including Shamim Mohamed, Jafar Al Gharaibeh,
      Robert Parlett and others. Unicon descended from Icon and a preprocessor for
      Icon called IDOL. Compared with Icon, Unicon offers better access to the operating
      system as well as support for object-oriented programming. Unicon began life
      as a merger of three popular Icon extensions: an OO preprocessor named Idol,
      a POSIX filesystem and networking interface, and an ODBC facility. The name
      is shorthand for "Unified Extended Dialect of Icon."'
    :extract_html: '<p><b>Unicon</b> is a programming language designed by American
      computer scientist Clint Jeffery with collaborators including Shamim Mohamed,
      Jafar Al Gharaibeh, Robert Parlett and others. Unicon descended from Icon and
      a preprocessor for Icon called IDOL. Compared with Icon, Unicon offers better
      access to the operating system as well as support for object-oriented programming.
      Unicon began life as a merger of three popular Icon extensions: an OO preprocessor
      named Idol, a POSIX filesystem and networking interface, and an ODBC facility.
      The name is shorthand for "Unified Extended Dialect of Icon."</p>'
  record/9fae694b-d553-4b3b-8ab7-09e9ba49f43b:
    :type: standard
    :title: Simulink
    :displaytitle: Simulink
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q606550
    :titles:
      :canonical: Simulink
      :normalized: Simulink
      :display: Simulink
    :pageid: 562695
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/Simulink_model_of_a_wind_turbine.tif/lossy-page1-320px-Simulink_model_of_a_wind_turbine.tif.jpg
      :width: 320
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/Simulink_model_of_a_wind_turbine.tif/lossy-page1-1482px-Simulink_model_of_a_wind_turbine.tif.jpg
      :width: 1482
      :height: 1110
    :lang: en
    :dir: ltr
    :revision: '988283635'
    :tid: 718c3d50-2d28-11eb-98a7-5508e082d367
    :timestamp: '2020-11-12T06:27:58Z'
    :description: Programming environment
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Simulink
        :revisions: https://en.wikipedia.org/wiki/Simulink?action=history
        :edit: https://en.wikipedia.org/wiki/Simulink?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Simulink
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Simulink
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Simulink
        :edit: https://en.m.wikipedia.org/wiki/Simulink?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Simulink
    :extract: Simulink is a MATLAB-based graphical programming environment for modeling,
      simulating and analyzing multidomain dynamical systems. Its primary interface
      is a graphical block diagramming tool and a customizable set of block libraries.
      It offers tight integration with the rest of the MATLAB environment and can
      either drive MATLAB or be scripted from it. Simulink is widely used in automatic
      control and digital signal processing for multidomain simulation and model-based
      design.
    :extract_html: "<p><b>Simulink</b> is a MATLAB-based graphical programming environment
      for modeling, simulating and analyzing multidomain dynamical systems. Its primary
      interface is a graphical block diagramming tool and a customizable set of block
      libraries. It offers tight integration with the rest of the MATLAB environment
      and can either drive MATLAB or be scripted from it. Simulink is widely used
      in automatic control and digital signal processing for multidomain simulation
      and model-based design.</p>"
  record/c959f724-d10a-40e5-96a1-155302cbecaa:
    :type: standard
    :title: O:XML
    :displaytitle: o:XML
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7072276
    :titles:
      :canonical: O:XML
      :normalized: O:XML
      :display: o:XML
    :pageid: 851815
    :lang: en
    :dir: ltr
    :revision: '636365108'
    :tid: c02345a0-34c9-11eb-b8fc-5510ce99f0fc
    :timestamp: '2014-12-02T20:44:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/O%3AXML
        :revisions: https://en.wikipedia.org/wiki/O%3AXML?action=history
        :edit: https://en.wikipedia.org/wiki/O%3AXML?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:O%3AXML
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/O%3AXML
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/O%3AXML
        :edit: https://en.m.wikipedia.org/wiki/O%3AXML?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:O%3AXML
    :extract: o:XML is an open source, dynamically typed, general-purpose object-oriented
      programming language based on XML-syntax. It has threads, exception handling,
      regular expressions and namespaces. Additionally o:XML has an expression language
      very similar to XPath that allows functions to be invoked on nodes and node
      sets.
    :extract_html: "<p><b>o:XML</b> is an open source, dynamically typed, general-purpose
      object-oriented programming language based on XML-syntax. It has threads, exception
      handling, regular expressions and namespaces. Additionally o:XML has an expression
      language very similar to XPath that allows functions to be invoked on nodes
      and node sets.</p>"
  record/c7fe7476-7fc6-4905-bf9a-ab8558559f33:
    :type: standard
    :title: Gödel (programming language)
    :displaytitle: Gödel (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3294091
    :titles:
      :canonical: Gödel_(programming_language)
      :normalized: Gödel (programming language)
      :display: Gödel (programming language)
    :pageid: 936719
    :lang: en
    :dir: ltr
    :revision: '914706812'
    :tid: 3da96580-1f18-11eb-9f1d-658369675d18
    :timestamp: '2019-09-08T22:54:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/G%C3%B6del_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/G%C3%B6del_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/G%C3%B6del_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:G%C3%B6del_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/G%C3%B6del_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/G%C3%B6del_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/G%C3%B6del_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:G%C3%B6del_(programming_language)
    :extract: Gödel is a declarative, general-purpose programming language that adheres
      to the logic programming paradigm. It is a strongly typed language, the type
      system being based on many-sorted logic with parametric polymorphism. It is
      named after logician Kurt Gödel.
    :extract_html: "<p><b>Gödel</b> is a declarative, general-purpose programming
      language that adheres to the logic programming paradigm. It is a strongly typed
      language, the type system being based on many-sorted logic with parametric polymorphism.
      It is named after logician Kurt Gödel.</p>"
  record/69f7c6dc-1f8e-45ba-aab2-492493e79784:
    :type: standard
    :title: Quantum Computation Language
    :displaytitle: Quantum Computation Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q48998905
    :titles:
      :canonical: Quantum_Computation_Language
      :normalized: Quantum Computation Language
      :display: Quantum Computation Language
    :pageid: 55836939
    :lang: en
    :dir: ltr
    :revision: '929685562'
    :tid: cbfea330-1eec-11eb-8fb6-d942d3c9716b
    :timestamp: '2019-12-07T14:40:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Quantum_Computation_Language
        :revisions: https://en.wikipedia.org/wiki/Quantum_Computation_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Quantum_Computation_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Quantum_Computation_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Quantum_Computation_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Quantum_Computation_Language
        :edit: https://en.m.wikipedia.org/wiki/Quantum_Computation_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Quantum_Computation_Language
    :extract: Quantum Computation Language (QCL) is one of the first implemented quantum
      programming languages. The most important feature of QCL is the support for
      user-defined operators and functions. Its syntax resembles the syntax of the
      C programming language and its classical data types are similar to primitive
      data types in C. One can combine classical code and quantum code in the same
      program.
    :extract_html: "<p><b>Quantum Computation Language</b> (<b>QCL</b>) is one of
      the first implemented quantum programming languages. The most important feature
      of QCL is the support for user-defined operators and functions. Its syntax resembles
      the syntax of the C programming language and its classical data types are similar
      to primitive data types in C. One can combine classical code and quantum code
      in the same program.</p>"
  record/435ee237-dece-45b8-bed2-b549053f6640:
    :type: standard
    :title: Superbase (database)
    :displaytitle: Superbase (database)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2367280
    :titles:
      :canonical: Superbase_(database)
      :normalized: Superbase (database)
      :display: Superbase (database)
    :pageid: 8387791
    :lang: en
    :dir: ltr
    :revision: '982495681'
    :tid: 51f1c340-2542-11eb-9b27-b3c61cf3e2e6
    :timestamp: '2020-10-08T14:21:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Superbase_(database)
        :revisions: https://en.wikipedia.org/wiki/Superbase_(database)?action=history
        :edit: https://en.wikipedia.org/wiki/Superbase_(database)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Superbase_(database)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Superbase_(database)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Superbase_(database)
        :edit: https://en.m.wikipedia.org/wiki/Superbase_(database)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Superbase_(database)
    :extract: Superbase is an end-user desktop database program that started on the
      Commodore 64 and was ported from that to various operating systems over the
      course of more than 20 years. It also has generally included a programming language
      to automate database-oriented tasks, and with later versions included WYSIWYG
      form and report designers as well as more sophisticated programming capabilities.
    :extract_html: "<p><b>Superbase</b> is an end-user desktop database program that
      started on the Commodore 64 and was ported from that to various operating systems
      over the course of more than 20 years. It also has generally included a programming
      language to automate database-oriented tasks, and with later versions included
      WYSIWYG form and report designers as well as more sophisticated programming
      capabilities.</p>"
  record/3a3f587a-e2aa-44ad-9f9d-61bf4b5945df:
    :type: standard
    :title: Q Sharp
    :displaytitle: Q Sharp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q45322975
    :titles:
      :canonical: Q_Sharp
      :normalized: Q Sharp
      :display: Q Sharp
    :pageid: 56025620
    :lang: en
    :dir: ltr
    :revision: '991357422'
    :tid: 04b7a2a0-34e9-11eb-871b-67f4bbc61313
    :timestamp: '2020-11-29T17:08:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Q_Sharp
        :revisions: https://en.wikipedia.org/wiki/Q_Sharp?action=history
        :edit: https://en.wikipedia.org/wiki/Q_Sharp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Q_Sharp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Q_Sharp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Q_Sharp
        :edit: https://en.m.wikipedia.org/wiki/Q_Sharp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Q_Sharp
    :extract: Q# is a domain-specific programming language used for expressing quantum
      algorithms. It was initially released to the public by Microsoft as part of
      the Quantum Development Kit.
    :extract_html: "<p><b>Q#</b> is a domain-specific programming language used for
      expressing quantum algorithms. It was initially released to the public by Microsoft
      as part of the Quantum Development Kit.</p>"
  record/84d34280-5b88-4ef3-b1ab-f38ca04bc309:
    :type: standard
    :title: PLEXIL
    :displaytitle: PLEXIL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7119633
    :titles:
      :canonical: PLEXIL
      :normalized: PLEXIL
      :display: PLEXIL
    :pageid: 19189627
    :lang: en
    :dir: ltr
    :revision: '991504093'
    :tid: 0b06cc20-3305-11eb-ae16-d54b3309d9e3
    :timestamp: '2020-11-30T12:10:24Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PLEXIL
        :revisions: https://en.wikipedia.org/wiki/PLEXIL?action=history
        :edit: https://en.wikipedia.org/wiki/PLEXIL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PLEXIL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PLEXIL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PLEXIL
        :edit: https://en.m.wikipedia.org/wiki/PLEXIL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PLEXIL
    :extract: PLEXIL is an open source technology for automation, created and currently
      in development by NASA.
    :extract_html: "<p>PLEXIL is an open source technology for automation, created
      and currently in development by NASA.</p>"
  record/f227b5f3-6fc4-4a01-add4-992938eec9d3:
    :type: standard
    :title: Dc (computer program)
    :displaytitle: dc (computer program)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q344670
    :titles:
      :canonical: Dc_(computer_program)
      :normalized: Dc (computer program)
      :display: dc (computer program)
    :pageid: 562904
    :lang: en
    :dir: ltr
    :revision: '986261007'
    :tid: c7e7f330-34c9-11eb-be88-ef0349c8fbb9
    :timestamp: '2020-10-30T19:27:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Dc_(computer_program)
        :revisions: https://en.wikipedia.org/wiki/Dc_(computer_program)?action=history
        :edit: https://en.wikipedia.org/wiki/Dc_(computer_program)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Dc_(computer_program)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Dc_(computer_program)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Dc_(computer_program)
        :edit: https://en.m.wikipedia.org/wiki/Dc_(computer_program)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Dc_(computer_program)
    :extract: |-
      dc is a cross-platform reverse-polish calculator which supports arbitrary-precision arithmetic. Written by Robert Morris while at Bell Labs, it is one of the oldest Unix utilities, preceding even the invention of the C programming language. Like other utilities of that vintage, it has a powerful set of features but terse syntax.
      Traditionally, the bc calculator program was implemented on top of dc.
    :extract_html: |-
      <p><b>dc</b> is a cross-platform reverse-polish calculator which supports arbitrary-precision arithmetic. Written by Robert Morris while at Bell Labs, it is one of the oldest Unix utilities, preceding even the invention of the C programming language. Like other utilities of that vintage, it has a powerful set of features but terse syntax.
      Traditionally, the bc calculator program was implemented on top of dc.</p>
  record/87376e6d-7028-4d21-9421-fdec9d1658d8:
    :type: standard
    :title: Java (programming language)
    :displaytitle: Java (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q251
    :titles:
      :canonical: Java_(programming_language)
      :normalized: Java (programming language)
      :display: Java (programming language)
    :pageid: 15881
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/3/30/Java_programming_language_logo.svg/175px-Java_programming_language_logo.svg.png
      :width: 175
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/3/30/Java_programming_language_logo.svg/234px-Java_programming_language_logo.svg.png
      :width: 234
      :height: 428
    :lang: en
    :dir: ltr
    :revision: '991899959'
    :tid: 0d0b4a60-3494-11eb-beea-e3923a8849d0
    :timestamp: '2020-12-02T11:46:32Z'
    :description: Object-oriented programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Java_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Java_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Java_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Java_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Java_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Java_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Java_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Java_(programming_language)
    :extract: Java is a class-based, object-oriented programming language that is
      designed to have as few implementation dependencies as possible. It is a general-purpose
      programming language intended to let application developers write once, run
      anywhere (WORA), meaning that compiled Java code can run on all platforms that
      support Java without the need for recompilation. Java applications are typically
      compiled to bytecode that can run on any Java virtual machine (JVM) regardless
      of the underlying computer architecture. The syntax of Java is similar to C
      and C++, but has fewer low-level facilities than either of them. The Java runtime
      provides dynamic capabilities that are typically not available in traditional
      compiled languages. As of 2019, Java was one of the most popular programming
      languages in use according to GitHub, particularly for client-server web applications,
      with a reported 9 million developers.
    :extract_html: "<p><b>Java</b> is a class-based, object-oriented programming language
      that is designed to have as few implementation dependencies as possible. It
      is a general-purpose programming language intended to let application developers
      <i>write once, run anywhere</i> (WORA), meaning that compiled Java code can
      run on all platforms that support Java without the need for recompilation. Java
      applications are typically compiled to bytecode that can run on any Java virtual
      machine (JVM) regardless of the underlying computer architecture. The syntax
      of Java is similar to C and C++, but has fewer low-level facilities than either
      of them. The Java runtime provides dynamic capabilities that are typically not
      available in traditional compiled languages. As of 2019, Java was one of the
      most popular programming languages in use according to GitHub, particularly
      for client-server web applications, with a reported 9 million developers.</p>"
  record/7b2569cd-c535-4ef7-bef5-167558e5568b:
    :type: standard
    :title: Macsyma
    :displaytitle: Macsyma
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1883071
    :titles:
      :canonical: Macsyma
      :normalized: Macsyma
      :display: Macsyma
    :pageid: 303734
    :lang: en
    :dir: ltr
    :revision: '988187959'
    :tid: 94e8a1c0-2441-11eb-8973-3f50742b6cec
    :timestamp: '2020-11-11T17:16:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Macsyma
        :revisions: https://en.wikipedia.org/wiki/Macsyma?action=history
        :edit: https://en.wikipedia.org/wiki/Macsyma?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Macsyma
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Macsyma
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Macsyma
        :edit: https://en.m.wikipedia.org/wiki/Macsyma?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Macsyma
    :extract: Macsyma is one of the oldest general-purpose computer algebra systems
      still in wide use. It was originally developed from 1968 to 1982 at MIT's Project
      MAC.
    :extract_html: "<p><b>Macsyma</b> is one of the oldest general-purpose computer
      algebra systems still in wide use. It was originally developed from 1968 to
      1982 at MIT's Project MAC.</p>"
  record/f0e1100c-9b97-43d6-8b1e-f3494de7c16b:
    :type: standard
    :title: P′′
    :displaytitle: P′′
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2072087
    :titles:
      :canonical: P′′
      :normalized: P′′
      :display: P′′
    :pageid: 2242844
    :lang: en
    :dir: ltr
    :revision: '976461363'
    :tid: 5524fd20-21a5-11eb-892b-11b90aa7ee5b
    :timestamp: '2020-09-03T02:08:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2
        :revisions: https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2?action=history
        :edit: https://en.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:P%E2%80%B2%E2%80%B2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/P%E2%80%B2%E2%80%B2
        :edit: https://en.m.wikipedia.org/wiki/P%E2%80%B2%E2%80%B2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:P%E2%80%B2%E2%80%B2
    :extract: P′′ is a primitive computer programming language created by Corrado
      Böhm in 1964 to describe a family of Turing machines.
    :extract_html: "<p><b>P′′</b> is a primitive computer programming language created
      by Corrado Böhm in 1964 to describe a family of Turing machines.</p>"
  record/18df3c11-e429-4c03-97b7-e7f6f284645b:
    :type: standard
    :title: Winbatch
    :displaytitle: Winbatch
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q8023687
    :titles:
      :canonical: Winbatch
      :normalized: Winbatch
      :display: Winbatch
    :pageid: 2343156
    :lang: en
    :dir: ltr
    :revision: '956147675'
    :tid: 032b7a50-2504-11eb-be96-47a9e273e4f1
    :timestamp: '2020-05-11T19:01:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Winbatch
        :revisions: https://en.wikipedia.org/wiki/Winbatch?action=history
        :edit: https://en.wikipedia.org/wiki/Winbatch?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Winbatch
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Winbatch
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Winbatch
        :edit: https://en.m.wikipedia.org/wiki/Winbatch?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Winbatch
    :extract: Winbatch is a Microsoft Windows scripting language originally developed
      by Wilson WindowWare and currently supported, maintained and enhanced by Island
      Lake Consulting LLC. Its environment includes an interpreter and a code editor
      along with a dialog designer and optional compiler to create self-contained
      executables.
    :extract_html: "<p><b>Winbatch</b> is a Microsoft Windows scripting language originally
      developed by Wilson WindowWare and currently supported, maintained and enhanced
      by Island Lake Consulting LLC. Its environment includes an interpreter and a
      code editor along with a dialog designer and optional compiler to create self-contained
      executables.</p>"
  record/b823340d-ae4b-4bd6-9dcb-e3f16957dbf9:
    :type: standard
    :title: APT (programming language)
    :displaytitle: APT (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q787227
    :titles:
      :canonical: APT_(programming_language)
      :normalized: APT (programming language)
      :display: APT (programming language)
    :pageid: 3673047
    :lang: en
    :dir: ltr
    :revision: '976780354'
    :tid: 548aba00-1e65-11eb-b58e-15e0716f0a2e
    :timestamp: '2020-09-04T23:46:36Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/APT_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/APT_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/APT_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:APT_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/APT_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/APT_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/APT_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:APT_(programming_language)
    :extract: 'APT is a high-level computer programming language most commonly used
      to generate instructions for numerically controlled machine (CNC) tools. Douglas
      T. Ross is considered by many to be the father of APT: as head of the newly
      created Computer Applications Group of the Servomechanisms Laboratory at MIT
      in 1956, he led its technical effort. APT is a language and system that makes
      numerically controlled manufacturing possible. This early language was used
      widely through the 1970s and is still a standard internationally. Derivatives
      of APT were later developed.'
    :extract_html: "<p><b>APT</b> is a high-level computer programming language most
      commonly used to generate instructions for numerically controlled machine (CNC)
      tools. Douglas T. Ross is considered by many to be the father of APT: as head
      of the newly created Computer Applications Group of the Servomechanisms Laboratory
      at MIT in 1956, he led its technical effort. APT is a language and system that
      makes numerically controlled manufacturing possible. This early language was
      used widely through the 1970s and is still a standard internationally. Derivatives
      of APT were later developed.</p>"
  record/af0c772b-f794-4c2e-9527-6702a67709db:
    :type: standard
    :title: XL (programming language)
    :displaytitle: XL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1859276
    :titles:
      :canonical: XL_(programming_language)
      :normalized: XL (programming language)
      :display: XL (programming language)
    :pageid: 2855241
    :lang: en
    :dir: ltr
    :revision: '956147940'
    :tid: 651269a0-35cf-11eb-8ab6-87da076b81f2
    :timestamp: '2020-05-11T19:02:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/XL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/XL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/XL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XL_(programming_language)
    :extract: XL is the first and so far the only computer programming language designed
      to support concept programming.
    :extract_html: "<p><b>XL</b> is the first and so far the only computer programming
      language designed to support concept programming.</p>"
  record/fa43b2be-ab8d-4b81-a9f9-642948b204f4:
    :type: standard
    :title: Second Life
    :displaytitle: "<i>Second Life</i>"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q106827
    :titles:
      :canonical: Second_Life
      :normalized: Second Life
      :display: "<i>Second Life</i>"
    :pageid: 589192
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Second_Life_Logo.svg/320px-Second_Life_Logo.svg.png
      :width: 320
      :height: 158
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Second_Life_Logo.svg/512px-Second_Life_Logo.svg.png
      :width: 512
      :height: 252
    :lang: en
    :dir: ltr
    :revision: '991231225'
    :tid: e53ea630-31d7-11eb-b03e-bd15a78f0e73
    :timestamp: '2020-11-29T00:14:35Z'
    :description: 2003 video game
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Second_Life
        :revisions: https://en.wikipedia.org/wiki/Second_Life?action=history
        :edit: https://en.wikipedia.org/wiki/Second_Life?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Second_Life
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Second_Life
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Second_Life
        :edit: https://en.m.wikipedia.org/wiki/Second_Life?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Second_Life
    :extract: 'Second Life is an online virtual world, developed and owned by the
      San Francisco-based firm Linden Lab and launched on June 23, 2003. It saw rapid
      growth for some years and in 2013 it had approximately one million regular users;
      growth stabilized and by the end of 2017 active user count had declined to "between
      800,000 and 900,000". In many ways, Second Life is similar to massively multiplayer
      online role-playing games; nevertheless, Linden Lab is emphatic that their creation
      is not a game: "There is no manufactured conflict, no set objective".'
    :extract_html: '<p><i><b>Second Life</b></i> is an online virtual world, developed
      and owned by the San Francisco-based firm Linden Lab and launched on June 23,
      2003. It saw rapid growth for some years and in 2013 it had approximately one
      million regular users; growth stabilized and by the end of 2017 active user
      count had declined to "between 800,000 and 900,000". In many ways, <i>Second
      Life</i> is similar to massively multiplayer online role-playing games; nevertheless,
      Linden Lab is emphatic that their creation is not a game: "There is no manufactured
      conflict, no set objective".</p>'
  record/63f560c6-6740-4edd-a259-53b81486f166:
    :type: standard
    :title: Futhark (programming language)
    :displaytitle: Futhark (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q51159967
    :titles:
      :canonical: Futhark_(programming_language)
      :normalized: Futhark (programming language)
      :display: Futhark (programming language)
    :pageid: 62334821
    :lang: en
    :dir: ltr
    :revision: '987541212'
    :tid: f708ead0-2127-11eb-833a-2545dc61f38a
    :timestamp: '2020-11-07T18:35:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Futhark_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Futhark_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Futhark_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Futhark_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Futhark_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Futhark_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Futhark_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Futhark_(programming_language)
    :extract: Futhark is a functional data parallel array programming language originally
      developed at DIKU as part of the HIPERFIT project. It focuses on enabling data
      parallel programs written in a functional style to be executed with high performance
      on massively parallel hardware, in particular on GPUs. Futhark is strongly inspired
      by NESL, but imposes constraints on how parallelism can be expressed in order
      to enable more aggressive compiler optimisations. In particular, irregular nested
      data parallelism is not supported.
    :extract_html: "<p><b>Futhark</b> is a functional data parallel array programming
      language originally developed at DIKU as part of the HIPERFIT project. It focuses
      on enabling data parallel programs written in a functional style to be executed
      with high performance on massively parallel hardware, in particular on GPUs.
      Futhark is strongly inspired by NESL, but imposes constraints on how parallelism
      can be expressed in order to enable more aggressive compiler optimisations.
      In particular, irregular nested data parallelism is not supported.</p>"
  record/2d9c52cc-974d-4f54-92f4-5236cedccde3:
    :type: standard
    :title: Erlang (programming language)
    :displaytitle: Erlang (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q334879
    :titles:
      :canonical: Erlang_(programming_language)
      :normalized: Erlang (programming language)
      :display: Erlang (programming language)
    :pageid: 9646
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Erlang_logo.svg/320px-Erlang_logo.svg.png
      :width: 320
      :height: 280
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/04/Erlang_logo.svg/243px-Erlang_logo.svg.png
      :width: 243
      :height: 213
    :lang: en
    :dir: ltr
    :revision: '991607043'
    :tid: 0d2d2f20-3374-11eb-8027-6395e6d7f0d4
    :timestamp: '2020-11-30T23:00:40Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Erlang_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Erlang_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Erlang_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Erlang_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Erlang_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Erlang_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Erlang_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Erlang_(programming_language)
    :extract: Erlang is a general-purpose, concurrent, functional programming language,
      and a garbage-collected runtime system. The term Erlang is used interchangeably
      with Erlang/OTP, or Open Telecom Platform (OTP), which consists of the Erlang
      runtime system, several ready-to-use components (OTP) mainly written in Erlang,
      and a set of design principles for Erlang programs.
    :extract_html: "<p><b>Erlang</b> is a general-purpose, concurrent, functional
      programming language, and a garbage-collected runtime system. The term Erlang
      is used interchangeably with Erlang/OTP, or Open Telecom Platform (OTP), which
      consists of the Erlang runtime system, several ready-to-use components (OTP)
      mainly written in Erlang, and a set of design principles for Erlang programs.</p>"
  record/a1f10d8c-4f52-4f67-9f4c-8d3a1ef8b2a5:
    :type: standard
    :title: OBJ2
    :displaytitle: OBJ2
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7072318
    :titles:
      :canonical: OBJ2
      :normalized: OBJ2
      :display: OBJ2
    :pageid: 1063980
    :lang: en
    :dir: ltr
    :revision: '954489573'
    :tid: 31db5b90-eb4d-11ea-a586-fd5c6764c824
    :timestamp: '2020-05-02T17:55:35Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OBJ2
        :revisions: https://en.wikipedia.org/wiki/OBJ2?action=history
        :edit: https://en.wikipedia.org/wiki/OBJ2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OBJ2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OBJ2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OBJ2
        :edit: https://en.m.wikipedia.org/wiki/OBJ2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OBJ2
    :extract: OBJ2 is a programming language with Clear-like parametrised modules
      and a functional system based on equations. It is a member of the OBJ family
      of languages.
    :extract_html: "<p><b>OBJ2</b> is a programming language with Clear-like parametrised
      modules and a functional system based on equations. It is a member of the OBJ
      family of languages.</p>"
  record/ab3d807a-af79-452e-bfed-5a4bb0ceb6e2:
    :type: standard
    :title: NetRexx
    :displaytitle: NetRexx
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6998311
    :titles:
      :canonical: NetRexx
      :normalized: NetRexx
      :display: NetRexx
    :pageid: 11690683
    :lang: en
    :dir: ltr
    :revision: '973503618'
    :tid: e498ab40-220a-11eb-a2c6-5ddcb1d71220
    :timestamp: '2020-08-17T15:53:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NetRexx
        :revisions: https://en.wikipedia.org/wiki/NetRexx?action=history
        :edit: https://en.wikipedia.org/wiki/NetRexx?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NetRexx
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NetRexx
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NetRexx
        :edit: https://en.m.wikipedia.org/wiki/NetRexx?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NetRexx
    :extract: NetRexx is an open source, originally IBM's, variant of the REXX programming
      language to run on the Java virtual machine. It supports a classic REXX syntax,
      with no reserved keywords, along with considerable additions to support object-oriented
      programming in a manner compatible with Java's object model, yet can be used
      as both a compiled and an interpreted language, with an option of using only
      data types native to the JVM or the NetRexx runtime package. The latter offers
      the standard Rexx data type that combines string processing with unlimited precision
      decimal arithmetic.
    :extract_html: "<p><b>NetRexx</b> is an open source, originally IBM's, variant
      of the REXX programming language to run on the Java virtual machine. It supports
      a classic REXX syntax, with no reserved keywords, along with considerable additions
      to support object-oriented programming in a manner compatible with Java's object
      model, yet can be used as both a compiled and an interpreted language, with
      an option of using only data types native to the JVM or the NetRexx runtime
      package. The latter offers the standard Rexx data type that combines string
      processing with unlimited precision decimal arithmetic.</p>"
  record/cdf384e5-8303-4512-90b8-31387fd32108:
    :type: standard
    :title: ELAN (programming language)
    :displaytitle: ELAN (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1275046
    :titles:
      :canonical: ELAN_(programming_language)
      :normalized: ELAN (programming language)
      :display: ELAN (programming language)
    :pageid: 1179492
    :lang: en
    :dir: ltr
    :revision: '968530921'
    :tid: 2487ab80-210b-11eb-9460-bb34843d4281
    :timestamp: '2020-07-19T23:29:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ELAN_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ELAN_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ELAN_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ELAN_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ELAN_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ELAN_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ELAN_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ELAN_(programming_language)
    :extract: ELAN is an educational programming language for learning and teaching
      systematic programming.
    :extract_html: "<p><b>ELAN</b> is an educational programming language for learning
      and teaching systematic programming.</p>"
  record/41bcc679-8fb1-4f38-adbc-ae7efcdedd5e:
    :type: standard
    :title: NEWP
    :displaytitle: NEWP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6953629
    :titles:
      :canonical: NEWP
      :normalized: NEWP
      :display: NEWP
    :pageid: 6433017
    :lang: en
    :dir: ltr
    :revision: '913369428'
    :tid: 0fe5bf10-1fa2-11eb-b9b6-8b32da1a7cd9
    :timestamp: '2019-08-31T17:45:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NEWP
        :revisions: https://en.wikipedia.org/wiki/NEWP?action=history
        :edit: https://en.wikipedia.org/wiki/NEWP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NEWP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NEWP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NEWP
        :edit: https://en.m.wikipedia.org/wiki/NEWP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NEWP
    :extract: NEWP, short for New Executive Programming Language, is a high-level
      programming language used on the Unisys MCP systems. The language is used to
      write the operating system and other system utilities, although it can also
      be used to write user software as well. Several constructs separate it from
      extended ALGOL on which it is based. Language operators such as MEMORY which
      allows direct memory access are strictly used by programs running as the MCP.
    :extract_html: "<p><b>NEWP</b>, short for <b>New Executive Programming Language</b>,
      is a high-level programming language used on the Unisys MCP systems. The language
      is used to write the operating system and other system utilities, although it
      can also be used to write user software as well. Several constructs separate
      it from extended ALGOL on which it is based. Language operators such as <code>MEMORY</code>
      which allows direct memory access are strictly used by programs running as the
      MCP.</p>"
  record/609f9d4d-02d2-4c1a-8e4a-1030e60512f7:
    :type: standard
    :title: Lego Mindstorms NXT
    :displaytitle: Lego Mindstorms NXT
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q926094
    :titles:
      :canonical: Lego_Mindstorms_NXT
      :normalized: Lego Mindstorms NXT
      :display: Lego Mindstorms NXT
    :pageid: 5994421
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/8c/Lego_Mindstorms_Nxt-FLL.jpg/320px-Lego_Mindstorms_Nxt-FLL.jpg
      :width: 320
      :height: 213
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/8c/Lego_Mindstorms_Nxt-FLL.jpg
      :width: 3456
      :height: 2304
    :lang: en
    :dir: ltr
    :revision: '985771658'
    :tid: '069feb10-346f-11eb-9235-f9fc7a7e0f90'
    :timestamp: '2020-10-27T21:22:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lego_Mindstorms_NXT
        :revisions: https://en.wikipedia.org/wiki/Lego_Mindstorms_NXT?action=history
        :edit: https://en.wikipedia.org/wiki/Lego_Mindstorms_NXT?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lego_Mindstorms_NXT
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lego_Mindstorms_NXT
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lego_Mindstorms_NXT
        :edit: https://en.m.wikipedia.org/wiki/Lego_Mindstorms_NXT?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lego_Mindstorms_NXT
    :extract: |-
      LEGO Mindstorms NXT is a programmable robotics kit released by Lego in late July 2006.
      It replaced the first-generation Lego Mindstorms kit, which was called the Robotics Invention System. The base kit ships in two versions: the Retail Version and the Education Base Set. It comes with the NXT-G programming software, or optionally LabVIEW for Lego Mindstorms. A variety of unofficial languages exist, such as NXC, NBC, leJOS NXJ, and RobotC. The second generation of the set, the Lego Mindstorms NXT 2.0, was released on August 1, 2009, featuring a color sensor and other upgraded capabilities. The third generation, the EV3, was released in September 2013.
    :extract_html: |-
      <p><b>LEGO Mindstorms NXT</b> is a programmable robotics kit released by Lego in late July 2006.
      It replaced the first-generation Lego Mindstorms kit, which was called the Robotics Invention System. The base kit ships in two versions: the Retail Version and the Education Base Set. It comes with the NXT-G programming software, or optionally LabVIEW for Lego Mindstorms. A variety of unofficial languages exist, such as NXC, NBC, leJOS NXJ, and RobotC. The second generation of the set, the Lego Mindstorms NXT 2.0, was released on August 1, 2009, featuring a color sensor and other upgraded capabilities. The third generation, the EV3, was released in September 2013.</p>
  record/3e4ce535-751e-49d0-ab3f-8d9dd5597190:
    :type: standard
    :title: CMS EXEC
    :displaytitle: CMS EXEC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5013011
    :titles:
      :canonical: CMS_EXEC
      :normalized: CMS EXEC
      :display: CMS EXEC
    :pageid: 9424740
    :lang: en
    :dir: ltr
    :revision: '963859635'
    :tid: f8291760-20a4-11eb-b8f7-cfe9e8ed95b5
    :timestamp: '2020-06-22T06:22:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CMS_EXEC
        :revisions: https://en.wikipedia.org/wiki/CMS_EXEC?action=history
        :edit: https://en.wikipedia.org/wiki/CMS_EXEC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CMS_EXEC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CMS_EXEC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CMS_EXEC
        :edit: https://en.m.wikipedia.org/wiki/CMS_EXEC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CMS_EXEC
    :extract: CMS EXEC, or EXEC, is an interpreted, command procedure control, computer
      scripting language used by the CMS EXEC Processor supplied with the IBM Virtual
      Machine/Conversational Monitor System (VM/CMS) operating system.
    :extract_html: "<p><b>CMS EXEC</b>, or <b>EXEC</b>, is an interpreted, command
      procedure control, computer scripting language used by the CMS EXEC Processor
      supplied with the IBM Virtual Machine/Conversational Monitor System (VM/CMS)
      operating system.</p>"
  record/625ac9f0-8894-43fa-99bd-26240a6b938a:
    :type: standard
    :title: SMALL
    :displaytitle: SMALL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7391044
    :titles:
      :canonical: SMALL
      :normalized: SMALL
      :display: SMALL
    :pageid: 1808130
    :lang: en
    :dir: ltr
    :revision: '935570104'
    :tid: f6de9e30-2ca6-11eb-a531-dd4fde81bb3c
    :timestamp: '2020-01-13T11:09:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SMALL
        :revisions: https://en.wikipedia.org/wiki/SMALL?action=history
        :edit: https://en.wikipedia.org/wiki/SMALL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SMALL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SMALL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SMALL
        :edit: https://en.m.wikipedia.org/wiki/SMALL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SMALL
    :extract: Small Machine Algol Like Language (SMALL), is a computer programming
      language developed by Dr. Nevil Brownlee of the University of Auckland.
    :extract_html: "<p><b>Small Machine Algol Like Language</b> (<b>SMALL</b>), is
      a computer programming language developed by Dr. Nevil Brownlee of the University
      of Auckland.</p>"
  record/15bc7f7f-c887-4b7b-86cb-564e4499898b:
    :type: standard
    :title: Lego Mindstorms
    :displaytitle: Lego Mindstorms
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q10853917
    :titles:
      :canonical: Lego_Mindstorms
      :normalized: Lego Mindstorms
      :display: Lego Mindstorms
    :pageid: 198856
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/be/Lego_Mindstorms_Sound_Finder.jpg/213px-Lego_Mindstorms_Sound_Finder.jpg
      :width: 213
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/b/be/Lego_Mindstorms_Sound_Finder.jpg
      :width: 2000
      :height: 3008
    :lang: en
    :dir: ltr
    :revision: '990732280'
    :tid: 071e42d0-346f-11eb-9f47-4320c9d5f4a7
    :timestamp: '2020-11-26T05:33:15Z'
    :description: Hardware and software platform by Lego
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lego_Mindstorms
        :revisions: https://en.wikipedia.org/wiki/Lego_Mindstorms?action=history
        :edit: https://en.wikipedia.org/wiki/Lego_Mindstorms?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lego_Mindstorms
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lego_Mindstorms
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lego_Mindstorms
        :edit: https://en.m.wikipedia.org/wiki/Lego_Mindstorms?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lego_Mindstorms
    :extract: Lego Mindstorms is a hardware and software structure which is produced
      by Lego for the development of programmable robots based on Lego building blocks.
      Each version of the system includes a computer Lego brick that controls the
      system, a set of modular sensors and motors, and Lego parts from the Technic
      line to create the mechanical systems.
    :extract_html: "<p><b>Lego Mindstorms</b> is a hardware and software structure
      which is produced by Lego for the development of programmable robots based on
      Lego building blocks. Each version of the system includes a computer Lego brick
      that controls the system, a set of modular sensors and motors, and Lego parts
      from the Technic line to create the mechanical systems.</p>"
  record/f31c5c7c-03c5-4ea5-a5cc-d30b982b0318:
    :type: standard
    :title: COMIT
    :displaytitle: COMIT
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1024000
    :titles:
      :canonical: COMIT
      :normalized: COMIT
      :display: COMIT
    :pageid: 1012894
    :lang: en
    :dir: ltr
    :revision: '973680826'
    :tid: fb70a970-1b8f-11eb-9915-fd15944e2507
    :timestamp: '2020-08-18T16:20:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COMIT
        :revisions: https://en.wikipedia.org/wiki/COMIT?action=history
        :edit: https://en.wikipedia.org/wiki/COMIT?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COMIT
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COMIT
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COMIT
        :edit: https://en.m.wikipedia.org/wiki/COMIT?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COMIT
    :extract: COMIT was the first string processing language, developed on the IBM
      700/7000 series computers by Dr. Victor Yngve and collaborators at MIT from
      1957 to 1965. Yngve created the language for supporting computerized research
      in the field of linguistics, and more specifically, the area of machine translation
      for natural language processing. The creation of COMIT led to the creation of
      SNOBOL.
    :extract_html: "<p><b>COMIT</b> was the first string processing language, developed
      on the IBM 700/7000 series computers by Dr. Victor Yngve and collaborators at
      MIT from 1957 to 1965. Yngve created the language for supporting computerized
      research in the field of linguistics, and more specifically, the area of machine
      translation for natural language processing. The creation of COMIT led to the
      creation of SNOBOL.</p>"
  record/b543498c-0969-422d-931d-f3dbb1e63bea:
    :type: standard
    :title: Bosque (programming language)
    :displaytitle: Bosque (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q63243349
    :titles:
      :canonical: Bosque_(programming_language)
      :normalized: Bosque (programming language)
      :display: Bosque (programming language)
    :pageid: 60532073
    :lang: en
    :dir: ltr
    :revision: '973778000'
    :tid: '0438aea0-34e9-11eb-ad2d-2de5ab79cc66'
    :timestamp: '2020-08-19T04:32:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Bosque_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Bosque_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Bosque_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Bosque_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Bosque_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Bosque_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Bosque_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Bosque_(programming_language)
    :extract: Bosque is a free and open-source programming language developed by Microsoft
      that was inspired by the syntax and types of TypeScript and the semantics of
      ML and Node/JavaScript. Design goals for the language include better software
      quality and improved developer productivity.
    :extract_html: "<p><b>Bosque</b> is a free and open-source programming language
      developed by Microsoft that was inspired by the syntax and types of TypeScript
      and the semantics of ML and Node/JavaScript. Design goals for the language include
      better software quality and improved developer productivity.</p>"
  record/1586f4cb-bc30-42ff-8d7f-c4706618c876:
    :type: standard
    :title: Tcl
    :displaytitle: Tcl
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5288
    :titles:
      :canonical: Tcl
      :normalized: Tcl
      :display: Tcl
    :pageid: 39880682
    :lang: en
    :dir: ltr
    :revision: '986926595'
    :tid: '03029720-340e-11eb-a87b-cba7ad691fc2'
    :timestamp: '2020-11-03T20:13:44Z'
    :description: High-level programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Tcl
        :revisions: https://en.wikipedia.org/wiki/Tcl?action=history
        :edit: https://en.wikipedia.org/wiki/Tcl?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Tcl
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Tcl
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Tcl
        :edit: https://en.m.wikipedia.org/wiki/Tcl?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Tcl
    :extract: Tcl is a high-level, general-purpose, interpreted, dynamic programming
      language. It was designed with the goal of being very simple but powerful. Tcl
      casts everything into the mold of a command, even programming constructs like
      variable assignment and procedure definition. Tcl supports multiple programming
      paradigms, including object-oriented, imperative and functional programming
      or procedural styles.
    :extract_html: "<p><b>Tcl</b> is a high-level, general-purpose, interpreted, dynamic
      programming language. It was designed with the goal of being very simple but
      powerful. Tcl casts everything into the mold of a command, even programming
      constructs like variable assignment and procedure definition. Tcl supports multiple
      programming paradigms, including object-oriented, imperative and functional
      programming or procedural styles.</p>"
  record/65a0f8d0-10f0-4f03-874e-ade62617f722:
    :type: standard
    :title: J (programming language)
    :displaytitle: J (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q383994
    :titles:
      :canonical: J_(programming_language)
      :normalized: J (programming language)
      :display: J (programming language)
    :pageid: 73227
    :lang: en
    :dir: ltr
    :revision: '957320756'
    :tid: d9ba7a50-1fe9-11eb-bc76-75677f43c159
    :timestamp: '2020-05-18T07:35:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/J_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/J_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/J_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:J_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/J_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/J_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/J_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:J_(programming_language)
    :extract: The J programming language, developed in the early 1990s by Kenneth
      E. Iverson and Roger Hui, is an array programming language based primarily on
      APL.
    :extract_html: "<p>The <b>J</b> programming language, developed in the early 1990s
      by Kenneth E. Iverson and Roger Hui, is an array programming language based
      primarily on APL.</p>"
  record/87fd714b-e804-4653-a155-7b76d3fc4518:
    :type: standard
    :title: C Sharp (programming language)
    :displaytitle: C Sharp (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2370
    :titles:
      :canonical: C_Sharp_(programming_language)
      :normalized: C Sharp (programming language)
      :display: C Sharp (programming language)
    :pageid: 2356196
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/C_Sharp_wordmark.svg/320px-C_Sharp_wordmark.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/0d/C_Sharp_wordmark.svg/512px-C_Sharp_wordmark.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '992115927'
    :tid: 69608a80-3581-11eb-9da2-05d972c0b940
    :timestamp: '2020-12-03T16:05:40Z'
    :description: Multi-paradigm (object-oriented) programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C_Sharp_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/C_Sharp_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/C_Sharp_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C_Sharp_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C_Sharp_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C_Sharp_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/C_Sharp_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C_Sharp_(programming_language)
    :extract: C# is a general-purpose, multi-paradigm programming language encompassing
      static typing, strong typing, lexically scoped, imperative, declarative, functional,
      generic, object-oriented (class-based), and component-oriented programming disciplines.
    :extract_html: "<p><b>C#</b> is a general-purpose, multi-paradigm programming
      language encompassing static typing, strong typing, lexically scoped, imperative,
      declarative, functional, generic, object-oriented (class-based), and component-oriented
      programming disciplines.</p>"
  record/8c9bc591-a685-4560-8f5e-b1be569aaba2:
    :type: standard
    :title: AppleScript
    :displaytitle: AppleScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q129137
    :titles:
      :canonical: AppleScript
      :normalized: AppleScript
      :display: AppleScript
    :pageid: 88392
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/9/9e/AppleScript_Editor_Logo.png
      :width: 256
      :height: 256
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/9/9e/AppleScript_Editor_Logo.png
      :width: 256
      :height: 256
    :lang: en
    :dir: ltr
    :revision: '989631272'
    :tid: c3218ea0-35d3-11eb-a733-f3a9da248b60
    :timestamp: '2020-11-20T03:03:21Z'
    :description: Scripting language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AppleScript
        :revisions: https://en.wikipedia.org/wiki/AppleScript?action=history
        :edit: https://en.wikipedia.org/wiki/AppleScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AppleScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AppleScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AppleScript
        :edit: https://en.m.wikipedia.org/wiki/AppleScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AppleScript
    :extract: AppleScript is a scripting language created by Apple Inc. that facilitates
      automated control over scriptable Mac applications. First introduced in System
      7, it is currently included in all versions of macOS as part of a package of
      system automation tools. The term "AppleScript" may refer to the language itself,
      to an individual script written in the language, or, informally, to the macOS
      Open Scripting Architecture that underlies the language.
    :extract_html: <p><b>AppleScript</b> is a scripting language created by Apple
      Inc. that facilitates automated control over scriptable Mac applications. First
      introduced in System 7, it is currently included in all versions of macOS as
      part of a package of system automation tools. The term "AppleScript" may refer
      to the language itself, to an individual script written in the language, or,
      informally, to the macOS Open Scripting Architecture that underlies the language.</p>
  record/31557c37-9a2f-40ca-b500-403912b17e04:
    :type: standard
    :title: Epigram (programming language)
    :displaytitle: Epigram (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5382927
    :titles:
      :canonical: Epigram_(programming_language)
      :normalized: Epigram (programming language)
      :display: Epigram (programming language)
    :pageid: 1933143
    :lang: en
    :dir: ltr
    :revision: '986527122'
    :tid: 3f03ea30-35c6-11eb-a191-37cc93aa2c7f
    :timestamp: '2020-11-01T12:04:01Z'
    :description: Functional programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Epigram_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Epigram_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Epigram_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Epigram_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Epigram_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Epigram_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Epigram_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Epigram_(programming_language)
    :extract: Epigram is a functional programming language with dependent types, and
      the integrated development environment (IDE) usually packaged with the language.
      Epigram's type system is strong enough to express program specifications. The
      goal is to support a smooth transition from ordinary programming to integrated
      programs and proofs which correctness can be checked and certified by the compiler.
      Epigram exploits the Curry–Howard correspondence, also termed the propositions
      as types principle, and is based on intuitionistic type theory.
    :extract_html: "<p><b>Epigram</b> is a functional programming language with dependent
      types, and the integrated development environment (IDE) usually packaged with
      the language. Epigram's type system is strong enough to express program specifications.
      The goal is to support a smooth transition from ordinary programming to integrated
      programs and proofs which correctness can be checked and certified by the compiler.
      Epigram exploits the <i>Curry–Howard correspondence</i>, also termed the <i>propositions
      as types principle</i>, and is based on intuitionistic type theory.</p>"
  record/4f9e1f9e-cc76-49f7-b9bf-45ee0a7da5c6:
    :type: standard
    :title: SISAL
    :displaytitle: SISAL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7390483
    :titles:
      :canonical: SISAL
      :normalized: SISAL
      :display: SISAL
    :pageid: 57406
    :lang: en
    :dir: ltr
    :revision: '974416458'
    :tid: a3749e90-35af-11eb-99b5-71f7115f7649
    :timestamp: '2020-08-22T22:23:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SISAL
        :revisions: https://en.wikipedia.org/wiki/SISAL?action=history
        :edit: https://en.wikipedia.org/wiki/SISAL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SISAL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SISAL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SISAL
        :edit: https://en.m.wikipedia.org/wiki/SISAL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SISAL
    :extract: "SISAL is a general-purpose single assignment functional programming
      language with strict semantics, implicit parallelism, and efficient array handling.
      \nSISAL outputs a dataflow graph in Intermediary Form 1 (IF1). It was derived
      from VAL, and adds recursion and finite streams. It has a Pascal-like syntax
      and was designed to be a common high-level language for numerical programs on
      a variety of multiprocessors."
    :extract_html: "<p><b>SISAL</b> is a general-purpose single assignment functional
      programming language with strict semantics, implicit parallelism, and efficient
      array handling. \nSISAL outputs a dataflow graph in Intermediary Form 1 (IF1).
      It was derived from VAL, and adds recursion and finite streams. It has a Pascal-like
      syntax and was designed to be a common high-level language for numerical programs
      on a variety of multiprocessors.</p>"
  record/3440a651-5f79-4c78-b5a5-4b167fa3b6fb:
    :type: standard
    :title: GEORGE (programming language)
    :displaytitle: GEORGE (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5513190
    :titles:
      :canonical: GEORGE_(programming_language)
      :normalized: GEORGE (programming language)
      :display: GEORGE (programming language)
    :pageid: 36133392
    :lang: en
    :dir: ltr
    :revision: '991723416'
    :tid: a49f9450-33de-11eb-a465-898ccc4b0525
    :timestamp: '2020-12-01T14:08:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GEORGE_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/GEORGE_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/GEORGE_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GEORGE_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GEORGE_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GEORGE_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/GEORGE_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GEORGE_(programming_language)
    :extract: |2-

      GEORGE is a programming language invented by Charles Leonard Hamblin in 1957.
    :extract_html: |-
      <p>
      <b>GEORGE</b> is a programming language invented by Charles Leonard Hamblin in 1957.</p>
  record/47850040-b77a-4927-833f-b033fe2e8937:
    :type: standard
    :title: Interactive fiction
    :displaytitle: Interactive fiction
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1143118
    :titles:
      :canonical: Interactive_fiction
      :normalized: Interactive fiction
      :display: Interactive fiction
    :pageid: 14789
    :lang: en
    :dir: ltr
    :revision: '990951427'
    :tid: b9deff20-341c-11eb-a65a-77c905327078
    :timestamp: '2020-11-27T13:09:14Z'
    :description: Nonlinear narratives set by audience decisions
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Interactive_fiction
        :revisions: https://en.wikipedia.org/wiki/Interactive_fiction?action=history
        :edit: https://en.wikipedia.org/wiki/Interactive_fiction?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Interactive_fiction
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Interactive_fiction
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Interactive_fiction
        :edit: https://en.m.wikipedia.org/wiki/Interactive_fiction?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Interactive_fiction
    :extract: |2-

      Interactive fiction, often abbreviated IF, is software simulating environments in which players use text commands to control characters and influence the environment. Works in this form can be understood as literary narratives, either in the form of interactive narratives or interactive narrations. These works can also be understood as a form of video game, either in the form of an adventure game or role-playing game. In common usage, the term refers to text adventures, a type of adventure game where the entire interface can be "text-only", however, graphical text adventures still fall under the text adventure category if the main way to interact with the game is by typing text. Some users of the term distinguish between interactive fiction, known as "Puzzle-free", that focuses on narrative, and "text adventures" that focus on puzzles.
    :extract_html: |-
      <p>
      <b>Interactive fiction</b>, often abbreviated <b>IF</b>, is software simulating environments in which players use text commands to control characters and influence the environment. Works in this form can be understood as literary narratives, either in the form of interactive narratives or interactive narrations. These works can also be understood as a form of video game, either in the form of an adventure game or role-playing game. In common usage, the term refers to <b>text adventures</b>, a type of adventure game where the entire interface can be "text-only", however, graphical text adventures still fall under the text adventure category if the main way to interact with the game is by typing text. Some users of the term distinguish between interactive fiction, known as "Puzzle-free", that focuses on narrative, and "text adventures" that focus on puzzles.</p>
  record/fd43d36b-5437-4410-ae05-2c03c7d142a9:
    :type: standard
    :title: SPARK (programming language)
    :displaytitle: SPARK (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3493345
    :titles:
      :canonical: SPARK_(programming_language)
      :normalized: SPARK (programming language)
      :display: SPARK (programming language)
    :pageid: 291874
    :lang: en
    :dir: ltr
    :revision: '986482980'
    :tid: '08600260-35b3-11eb-9466-b176b0074891'
    :timestamp: '2020-11-01T04:00:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SPARK_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SPARK_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SPARK_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SPARK_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SPARK_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SPARK_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SPARK_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SPARK_(programming_language)
    :extract: SPARK is a formally defined computer programming language based on the
      Ada programming language, intended for the development of high integrity software
      used in systems where predictable and highly reliable operation is essential.
      It facilitates the development of applications that demand safety, security,
      or business integrity.
    :extract_html: "<p><b>SPARK</b> is a formally defined computer programming language
      based on the Ada programming language, intended for the development of high
      integrity software used in systems where predictable and highly reliable operation
      is essential. It facilitates the development of applications that demand safety,
      security, or business integrity.</p>"
  record/39bc7d6f-57fc-479b-b0de-9faec594caa2:
    :type: standard
    :title: Strongtalk
    :displaytitle: Strongtalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2357042
    :titles:
      :canonical: Strongtalk
      :normalized: Strongtalk
      :display: Strongtalk
    :pageid: 1569550
    :lang: en
    :dir: ltr
    :revision: '968745333'
    :tid: b65b2cf0-1c1d-11eb-8fd1-694349b0d82b
    :timestamp: '2020-07-21T07:40:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Strongtalk
        :revisions: https://en.wikipedia.org/wiki/Strongtalk?action=history
        :edit: https://en.wikipedia.org/wiki/Strongtalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Strongtalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Strongtalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Strongtalk
        :edit: https://en.m.wikipedia.org/wiki/Strongtalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Strongtalk
    :extract: Strongtalk is a Smalltalk environment with optional static typing support.
      Strongtalk can make some compile time checks, and offer stronger type safety
      guarantees; this is the source of its name. It is non-commercial, though it
      was originally a commercial project developed by a small startup company named
      LongView Technologies.
    :extract_html: "<p><b>Strongtalk</b> is a Smalltalk environment with optional
      static typing support. Strongtalk can make some compile time checks, and offer
      <i>stronger</i> type safety guarantees; this is the source of its name. It is
      non-commercial, though it was originally a commercial project developed by a
      small startup company named <i>LongView Technologies</i>.</p>"
  record/7e476f57-3dee-4dfb-9a11-657dfa93aa3e:
    :type: standard
    :title: LANSA (development environment)
    :displaytitle: LANSA (development environment)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6457039
    :titles:
      :canonical: LANSA_(development_environment)
      :normalized: LANSA (development environment)
      :display: LANSA (development environment)
    :pageid: 6761437
    :lang: en
    :dir: ltr
    :revision: '950674922'
    :tid: 5fb1f360-35e6-11eb-a4c1-47ab9be12959
    :timestamp: '2020-04-13T08:37:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LANSA_(development_environment)
        :revisions: https://en.wikipedia.org/wiki/LANSA_(development_environment)?action=history
        :edit: https://en.wikipedia.org/wiki/LANSA_(development_environment)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LANSA_(development_environment)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LANSA_(development_environment)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LANSA_(development_environment)
        :edit: https://en.m.wikipedia.org/wiki/LANSA_(development_environment)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LANSA_(development_environment)
    :extract: LANSA is an integrated development environment (IDE) for building desktop,
      web and mobile software applications that can be deployed to Cloud, Windows,
      Linux and IBM i server platforms.
    :extract_html: "<p><b>LANSA</b> is an integrated development environment (IDE)
      for building desktop, web and mobile software applications that can be deployed
      to Cloud, Windows, Linux and IBM i server platforms.</p>"
  record/bf4ff22c-b8ba-4267-bf53-fffb1d0e38ef:
    :type: standard
    :title: Curry (programming language)
    :displaytitle: Curry (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2368856
    :titles:
      :canonical: Curry_(programming_language)
      :normalized: Curry (programming language)
      :display: Curry (programming language)
    :pageid: 302187
    :lang: en
    :dir: ltr
    :revision: '983462149'
    :tid: be694ca0-1859-11eb-9db4-7178f20560f9
    :timestamp: '2020-10-14T10:49:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Curry_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Curry_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Curry_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Curry_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Curry_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Curry_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Curry_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Curry_(programming_language)
    :extract: Curry is an experimental functional logic programming language, based
      on the Haskell language. It merges elements of functional and logic programming,
      including constraint programming integration.
    :extract_html: "<p><b>Curry</b> is an experimental functional logic programming
      language, based on the Haskell language. It merges elements of functional and
      logic programming, including constraint programming integration.</p>"
  record/b58d6bbf-b46f-424a-a6b5-497ee36193e0:
    :type: standard
    :title: Sepandar Kamvar
    :displaytitle: Sepandar Kamvar
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7451753
    :titles:
      :canonical: Sepandar_Kamvar
      :normalized: Sepandar Kamvar
      :display: Sepandar Kamvar
    :pageid: 7303319
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f0/Sep_Kamvar.jpg/320px-Sep_Kamvar.jpg
      :width: 320
      :height: 213
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f0/Sep_Kamvar.jpg
      :width: 4506
      :height: 3004
    :lang: en
    :dir: ltr
    :revision: '888126040'
    :tid: 629d8bd0-321b-11eb-9ccb-65199b4bee94
    :timestamp: '2019-03-17T02:28:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Sepandar_Kamvar
        :revisions: https://en.wikipedia.org/wiki/Sepandar_Kamvar?action=history
        :edit: https://en.wikipedia.org/wiki/Sepandar_Kamvar?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Sepandar_Kamvar
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Sepandar_Kamvar
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Sepandar_Kamvar
        :edit: https://en.m.wikipedia.org/wiki/Sepandar_Kamvar?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Sepandar_Kamvar
    :extract: Sepandar David Kamvar, also known as Sep Kamvar, is a computer scientist,
      artist, and entrepreneur. He is currently the LG Career Development Professor
      of Media Arts and Sciences at MIT, and he was director of the Social Computing
      group at the MIT Media Lab.
    :extract_html: "<p><b>Sepandar David Kamvar</b>, also known as <b>Sep Kamvar</b>,
      is a computer scientist, artist, and entrepreneur. He is currently the LG Career
      Development Professor of Media Arts and Sciences at MIT, and he was director
      of the Social Computing group at the MIT Media Lab.</p>"
  record/a5736c9c-6fb2-4233-81c1-540bb70d5297:
    :type: standard
    :title: Rapira
    :displaytitle: Rapira
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4117140
    :titles:
      :canonical: Rapira
      :normalized: Rapira
      :display: Rapira
    :pageid: 146951
    :lang: en
    :dir: ltr
    :revision: '849997417'
    :tid: f468d540-3493-11eb-8631-cbe1bcb8437b
    :timestamp: '2018-07-12T21:24:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rapira
        :revisions: https://en.wikipedia.org/wiki/Rapira?action=history
        :edit: https://en.wikipedia.org/wiki/Rapira?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rapira
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rapira
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rapira
        :edit: https://en.m.wikipedia.org/wiki/Rapira?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rapira
    :extract: Rapira is an educational procedural programming language developed in
      the Soviet Union and implemented on Agat computer, PDP-11 clones and Intel-8080/Z80
      clones (Korvet). It was an interpreted language with dynamic type system and
      high level constructions. The language originally had a Russian-based set of
      keywords, but English and Moldovan were added later. Also, it was more elegant
      and easier to use than existing Pascal implementations of the time.
    :extract_html: "<p><b>Rapira</b> is an educational procedural programming language
      developed in the Soviet Union and implemented on Agat computer, PDP-11 clones
      and Intel-8080/Z80 clones (Korvet). It was an interpreted language with dynamic
      type system and high level constructions. The language originally had a Russian-based
      set of keywords, but English and Moldovan were added later. Also, it was more
      elegant and easier to use than existing Pascal implementations of the time.</p>"
  record/38f80e1a-2b14-48c1-9a89-35d7fb987308:
    :type: standard
    :title: Karel (programming language)
    :displaytitle: Karel (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q204693
    :titles:
      :canonical: Karel_(programming_language)
      :normalized: Karel (programming language)
      :display: Karel (programming language)
    :pageid: 1433925
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/a1/NikiExample.jpg/320px-NikiExample.jpg
      :width: 320
      :height: 234
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/a/a1/NikiExample.jpg
      :width: 439
      :height: 321
    :lang: en
    :dir: ltr
    :revision: '989164820'
    :tid: 627adda0-28d0-11eb-8192-297c97c476f1
    :timestamp: '2020-11-17T12:28:20Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Karel_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Karel_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Karel_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Karel_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Karel_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Karel_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Karel_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Karel_(programming_language)
    :extract: 'Karel is an educational programming language for beginners, created
      by Richard E. Pattis in his book Karel The Robot: A Gentle Introduction to the
      Art of Programming. Pattis used the language in his courses at Stanford University,
      California. The language is named after Karel Čapek, a Czech writer who introduced
      the word robot in his play R.U.R.'
    :extract_html: "<p><b>Karel</b> is an educational programming language for beginners,
      created by Richard E. Pattis in his book <i>Karel The Robot: A Gentle Introduction
      to the Art of Programming</i>. Pattis used the language in his courses at Stanford
      University, California. The language is named after Karel Čapek, a Czech writer
      who introduced the word <i>robot</i> in his play R.U.R.</p>"
  record/3ce7bb96-8ff7-44e3-87d4-b861a327540a:
    :type: standard
    :title: ABC (programming language)
    :displaytitle: ABC (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1057802
    :titles:
      :canonical: ABC_(programming_language)
      :normalized: ABC (programming language)
      :display: ABC (programming language)
    :pageid: 147585
    :lang: en
    :dir: ltr
    :revision: '986715002'
    :tid: eb9db680-1d21-11eb-862d-adf380f46d56
    :timestamp: '2020-11-02T15:41:46Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ABC_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ABC_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ABC_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ABC_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ABC_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ABC_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ABC_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ABC_(programming_language)
    :extract: ABC is an imperative general-purpose programming language and integrated
      development environment (IDE) developed at Centrum Wiskunde & Informatica (CWI),
      Netherlands by Leo Geurts, Lambert Meertens, and Steven Pemberton. It is interactive,
      structured, high-level, and intended to be used instead of BASIC, Pascal, or
      AWK. It is intended for teaching or prototyping, but not as a systems-programming
      language.
    :extract_html: "<p><b>ABC</b> is an imperative general-purpose programming language
      and integrated development environment (IDE) developed at Centrum Wiskunde &amp;
      Informatica (CWI), Netherlands by Leo Geurts, Lambert Meertens, and Steven Pemberton.
      It is interactive, structured, high-level, and intended to be used instead of
      BASIC, Pascal, or AWK. It is intended for teaching or prototyping, but not as
      a systems-programming language.</p>"
  record/89b35777-f83c-4ca9-8473-8091e34d38d8:
    :type: standard
    :title: SIGNAL (programming language)
    :displaytitle: SIGNAL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7390335
    :titles:
      :canonical: SIGNAL_(programming_language)
      :normalized: SIGNAL (programming language)
      :display: SIGNAL (programming language)
    :pageid: 32475185
    :lang: en
    :dir: ltr
    :revision: '871912668'
    :tid: 4ae0eac0-1c8e-11eb-9f8c-39bc14278054
    :timestamp: '2018-12-04T04:46:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SIGNAL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SIGNAL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SIGNAL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SIGNAL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SIGNAL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SIGNAL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SIGNAL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SIGNAL_(programming_language)
    :extract: 'SIGNAL is a programming language based on synchronized data-flow :
      a process is a set of equations on elementary flows describing both data and
      control.'
    :extract_html: "<p><b>SIGNAL</b> is a programming language based on synchronized
      data-flow : a process is a set of equations on elementary flows describing both
      data and control.</p>"
  record/d327d9f5-e395-4e65-990a-84270c409667:
    :type: standard
    :title: Cool (programming language)
    :displaytitle: Cool (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2904782
    :titles:
      :canonical: Cool_(programming_language)
      :normalized: Cool (programming language)
      :display: Cool (programming language)
    :pageid: 14782123
    :lang: en
    :dir: ltr
    :revision: '948919931'
    :tid: 7d47aa40-2877-11eb-bdf6-6f4292116cf2
    :timestamp: '2020-04-03T19:03:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cool_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cool_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cool_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cool_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cool_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cool_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cool_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cool_(programming_language)
    :extract: Cool, an acronym for Classroom Object Oriented Language, is a computer
      programming language designed by Alexander Aiken for use in an undergraduate
      compiler course project. While small enough for a one term project, Cool still
      has many of the features of modern programming languages, including objects,
      automatic memory management, strong static typing and simple reflection.
    :extract_html: "<p><b>Cool</b>, an acronym for <b>Classroom Object Oriented Language</b>,
      is a computer programming language designed by Alexander Aiken for use in an
      undergraduate compiler course project. While small enough for a one term project,
      Cool still has many of the features of modern programming languages, including
      objects, automatic memory management, strong static typing and simple reflection.</p>"
  record/fde2b62d-94bb-4b66-ad11-5686aa1124ae:
    :type: standard
    :title: K (programming language)
    :displaytitle: K (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4042031
    :titles:
      :canonical: K_(programming_language)
      :normalized: K (programming language)
      :display: K (programming language)
    :pageid: 890956
    :lang: en
    :dir: ltr
    :revision: '984365522'
    :tid: 2f17a9f0-1b6c-11eb-bdc4-5df49bf0bdb2
    :timestamp: '2020-10-19T18:52:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/K_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/K_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/K_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:K_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/K_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/K_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/K_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:K_(programming_language)
    :extract: K is a proprietary array processing programming language developed by
      Arthur Whitney and commercialized by Kx Systems. The language serves as the
      foundation for kdb+, an in-memory, column-based database, and other related
      financial products. The language, originally developed in 1993, is a variant
      of APL and contains elements of Scheme. Advocates of the language emphasize
      its speed, facility in handling arrays, and expressive syntax.
    :extract_html: "<p><b>K</b> is a proprietary array processing programming language
      developed by Arthur Whitney and commercialized by Kx Systems. The language serves
      as the foundation for kdb+, an in-memory, column-based database, and other related
      financial products. The language, originally developed in 1993, is a variant
      of APL and contains elements of Scheme. Advocates of the language emphasize
      its speed, facility in handling arrays, and expressive syntax.</p>"
  record/936955d7-465a-47fb-be5d-92731299108e:
    :type: standard
    :title: Job Control Language
    :displaytitle: Job Control Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1505372
    :titles:
      :canonical: Job_Control_Language
      :normalized: Job Control Language
      :display: Job Control Language
    :pageid: 391487
    :lang: en
    :dir: ltr
    :revision: '980331096'
    :tid: 7ce8a400-1ac6-11eb-8ca9-fbe4e43c022c
    :timestamp: '2020-09-25T22:25:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Job_Control_Language
        :revisions: https://en.wikipedia.org/wiki/Job_Control_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Job_Control_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Job_Control_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Job_Control_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Job_Control_Language
        :edit: https://en.m.wikipedia.org/wiki/Job_Control_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Job_Control_Language
    :extract: Job Control Language (JCL) is a name for scripting languages used on
      IBM mainframe operating systems to instruct the system on how to run a batch
      job or start a subsystem.
    :extract_html: "<p><b>Job Control Language</b> (<b>JCL</b>) is a name for scripting
      languages used on IBM mainframe operating systems to instruct the system on
      how to run a batch job or start a subsystem.</p>"
  record/d1fba884-8192-44e4-8b03-cbeb98164f4b:
    :type: standard
    :title: Oberon (programming language)
    :displaytitle: Oberon (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1323362
    :titles:
      :canonical: Oberon_(programming_language)
      :normalized: Oberon (programming language)
      :display: Oberon (programming language)
    :pageid: 22496
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/OberonLogo.svg/320px-OberonLogo.svg.png
      :width: 320
      :height: 126
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/OberonLogo.svg/325px-OberonLogo.svg.png
      :width: 325
      :height: 128
    :lang: en
    :dir: ltr
    :revision: '990468143'
    :tid: 1f154a50-35af-11eb-92f0-c9d14d02bf75
    :timestamp: '2020-11-24T17:12:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Oberon_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Oberon_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Oberon_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Oberon_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Oberon_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Oberon_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Oberon_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Oberon_(programming_language)
    :extract: 'Oberon is a general-purpose programming language first published in
      1987 by Niklaus Wirth and the latest member of the Wirthian family of ALGOL-like
      languages. Oberon was the result of a concentrated effort to increase the power
      of Modula-2, the direct successor of Pascal, and simultaneously to reduce its
      complexity. Its principal new feature is the concept of type extension of record
      types: It permits the construction of new data types on the basis of existing
      ones and to relate them, deviating from the dogma of strictly static data typing.
      Type extension is Wirth''s way of inheritance reflecting the viewpoint of the
      parent site. Oberon was developed as part of the implementation of the Oberon
      operating system at ETH Zurich in Switzerland. The name is from the moon of
      Uranus, Oberon.'
    :extract_html: "<p><b>Oberon</b> is a general-purpose programming language first
      published in 1987 by Niklaus Wirth and the latest member of the Wirthian family
      of ALGOL-like languages. Oberon was the result of a concentrated effort to increase
      the power of Modula-2, the direct successor of Pascal, and simultaneously to
      reduce its complexity. Its principal new feature is the concept of type extension
      of record types: It permits the construction of new data types on the basis
      of existing ones and to relate them, deviating from the dogma of strictly static
      data typing. Type extension is Wirth's way of inheritance reflecting the viewpoint
      of the parent site. Oberon was developed as part of the implementation of the
      Oberon operating system at ETH Zurich in Switzerland. The name is from the moon
      of Uranus, Oberon.</p>"
  record/dab9deba-5ff9-4058-a93b-9b71741c124f:
    :type: standard
    :title: Executive Systems Problem Oriented Language
    :displaytitle: Executive Systems Problem Oriented Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1275955
    :titles:
      :canonical: Executive_Systems_Problem_Oriented_Language
      :normalized: Executive Systems Problem Oriented Language
      :display: Executive Systems Problem Oriented Language
    :pageid: 949062
    :lang: en
    :dir: ltr
    :revision: '956480407'
    :tid: f6bc4920-2ca6-11eb-ad72-1dc8635f1b40
    :timestamp: '2020-05-13T16:03:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language
        :revisions: https://en.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Executive_Systems_Problem_Oriented_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Executive_Systems_Problem_Oriented_Language
        :edit: https://en.m.wikipedia.org/wiki/Executive_Systems_Problem_Oriented_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Executive_Systems_Problem_Oriented_Language
    :extract: The Executive Systems Problem Oriented Language (ESPOL) is a programming
      language, a superset of ALGOL 60, that provides abilities of what would later
      be termed a system programming language or machine oriented high order language
      (mohol), such as interrupting a processor on a multiprocessing system. ESPOL
      was used to write the Master Control Program (MCP) on Burroughs computer systems
      from the B5000 to the B6700. The single-pass compiler for ESPOL could compile
      over 250 lines per second.
    :extract_html: "<p>The <b>Executive Systems Problem Oriented Language</b> (<b>ESPOL</b>)
      is a programming language, a superset of ALGOL 60, that provides abilities of
      what would later be termed a <i>system programming language</i> or <i>machine
      oriented high order language</i> (mohol), such as interrupting a processor on
      a multiprocessing system. ESPOL was used to write the <i>Master Control Program</i>
      (MCP) on Burroughs computer systems from the B5000 to the B6700. The single-pass
      compiler for ESPOL could compile over 250 lines per second.</p>"
  record/61da44ec-31e2-45ac-9f89-7973f5887c8c:
    :type: standard
    :title: Strand (programming language)
    :displaytitle: Strand (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7621223
    :titles:
      :canonical: Strand_(programming_language)
      :normalized: Strand (programming language)
      :display: Strand (programming language)
    :pageid: 7837169
    :lang: en
    :dir: ltr
    :revision: '951267351'
    :tid: 4b2c3d40-0956-11eb-80e9-b55dd88e9425
    :timestamp: '2020-04-16T09:30:16Z'
    :description: symbolic language for parallel computing
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Strand_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Strand_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Strand_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Strand_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Strand_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Strand_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Strand_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Strand_(programming_language)
    :extract: Strand is a high-level symbolic language for parallel computing, similar
      in syntax to Prolog.
    :extract_html: "<p><b>Strand</b> is a high-level symbolic language for parallel
      computing, similar in syntax to Prolog.</p>"
  record/f4a5bf3c-32b9-4a23-bf9b-6da7e0f7e743:
    :type: standard
    :title: Ezhil (programming language)
    :displaytitle: Ezhil (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q12975625
    :titles:
      :canonical: Ezhil_(programming_language)
      :normalized: Ezhil (programming language)
      :display: Ezhil (programming language)
    :pageid: 39845825
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/88/Ezhil_-_A_Tamil_Programming_Language_Logo.png
      :width: 128
      :height: 128
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/88/Ezhil_-_A_Tamil_Programming_Language_Logo.png
      :width: 128
      :height: 128
    :lang: en
    :dir: ltr
    :revision: '978041191'
    :tid: a0fcbfb0-340d-11eb-86a8-5bf84553c588
    :timestamp: '2020-09-12T15:06:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ezhil_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ezhil_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ezhil_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ezhil_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ezhil_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ezhil_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ezhil_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ezhil_(programming_language)
    :extract: Ezhil, in Tamil language script, is a compact, open source, interpreted,
      programming language, originally designed to enable native-Tamil speaking students,
      K-12 age-group to learn computer programming, and enable learning numeracy and
      computing, outside of linguistic expertise in predominately English language-based
      computer systems.
    :extract_html: "<p><b>Ezhil</b>, in Tamil language script, is a compact, open
      source, interpreted, programming language, originally designed to enable native-Tamil
      speaking students, K-12 age-group to learn computer programming, and enable
      learning numeracy and computing, outside of linguistic expertise in predominately
      English language-based computer systems.</p>"
  record/48a3d20a-bd66-4d69-9834-ea5a6f414c76:
    :type: standard
    :title: Hollywood (programming language)
    :displaytitle: Hollywood (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1571870
    :titles:
      :canonical: Hollywood_(programming_language)
      :normalized: Hollywood (programming language)
      :display: Hollywood (programming language)
    :pageid: 27421416
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Hollywood-ide3.jpg/320px-Hollywood-ide3.jpg
      :width: 320
      :height: 256
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/87/Hollywood-ide3.jpg
      :width: 1280
      :height: 1024
    :lang: en
    :dir: ltr
    :revision: '992144583'
    :tid: 7a6a13a0-359a-11eb-a52b-fbecfe3d1710
    :timestamp: '2020-12-03T19:05:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hollywood_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hollywood_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hollywood_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hollywood_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hollywood_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hollywood_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hollywood_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hollywood_(programming_language)
    :extract: Hollywood is a commercially distributed programming language developed
      by Andreas Falkenhahn which mainly focuses on the creation of multimedia-oriented
      applications. Hollywood is available for AmigaOS, MorphOS, WarpOS, AROS, Windows,
      macOS, Linux, Android, and iOS. Hollywood has an inbuilt cross compiler that
      can automatically save executables for all platforms supported by the software.
      The generated executables are completely stand-alone and do not have any external
      dependencies, so they can also be started from a USB flash drive. An optional
      add-on also allows users to compile projects into APK files.
    :extract_html: "<p><b>Hollywood</b> is a commercially distributed programming
      language developed by Andreas Falkenhahn which mainly focuses on the creation
      of multimedia-oriented applications. Hollywood is available for AmigaOS, MorphOS,
      WarpOS, AROS, Windows, macOS, Linux, Android, and iOS. Hollywood has an inbuilt
      cross compiler that can automatically save executables for all platforms supported
      by the software. The generated executables are completely stand-alone and do
      not have any external dependencies, so they can also be started from a USB flash
      drive. An optional add-on also allows users to compile projects into APK files.</p>"
  record/78270b3b-6866-4414-ac53-157b4d89627c:
    :type: standard
    :title: Vala (programming language)
    :displaytitle: Vala (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1138939
    :titles:
      :canonical: Vala_(programming_language)
      :normalized: Vala (programming language)
      :display: Vala (programming language)
    :pageid: 12655903
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Vala_Logo.svg/320px-Vala_Logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/92/Vala_Logo.svg/64px-Vala_Logo.svg.png
      :width: 64
      :height: 64
    :lang: en
    :dir: ltr
    :revision: '990495129'
    :tid: 848726d0-327e-11eb-9c6c-676a1c1b5962
    :timestamp: '2020-11-24T20:16:13Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Vala_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Vala_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Vala_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Vala_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Vala_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Vala_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Vala_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Vala_(programming_language)
    :extract: Vala is an object-oriented programming language with a self-hosting
      compiler that generates C code and uses the GObject system.
    :extract_html: "<p><b>Vala</b> is an object-oriented programming language with
      a self-hosting compiler that generates C code and uses the GObject system.</p>"
  record/dbe50347-9b8e-4f05-92b9-62ab16d5e578:
    :type: standard
    :title: Tynker
    :displaytitle: Tynker
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q22909519
    :titles:
      :canonical: Tynker
      :normalized: Tynker
      :display: Tynker
    :pageid: 45530923
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/6/63/Tynker_-_Sample_-_Ghost_hunter.png/320px-Tynker_-_Sample_-_Ghost_hunter.png
      :width: 320
      :height: 126
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/6/63/Tynker_-_Sample_-_Ghost_hunter.png
      :width: 502
      :height: 198
    :lang: en
    :dir: ltr
    :revision: '989548326'
    :tid: 2eb9a7d0-2a88-11eb-be1d-1f2204b9e0a0
    :timestamp: '2020-11-19T16:56:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Tynker
        :revisions: https://en.wikipedia.org/wiki/Tynker?action=history
        :edit: https://en.wikipedia.org/wiki/Tynker?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Tynker
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Tynker
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Tynker
        :edit: https://en.m.wikipedia.org/wiki/Tynker?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Tynker
    :extract: Tynker is an educational programming platform aimed at teaching children
      how to make games and programs. Instead of typing the source code, you visually
      drag blocks of code and snap them together. The visual design and principles
      are based on the free Scratch, just like Hopscotch and Snap!. Tynker is based
      on HTML5 and JavaScript, and can be used in the browser without plugins, as
      well as on tablets and smartphones. Another difference is that Scratch is a
      free open source project, while Tynker is a commercial product, aimed at selling
      courses. Tynker offers self-paced online courses for children to learn coding
      at home, as well as an engaging programming curriculum for schools and camps.
      It makes it easier for kids to learn coding as it teaches kids coding through
      creating games like Minecraft, Hour of Code etc.
    :extract_html: "<p><b>Tynker</b> is an educational programming platform aimed
      at teaching children how to make games and programs. Instead of typing the source
      code, you visually drag blocks of code and snap them together. The visual design
      and principles are based on the free Scratch, just like Hopscotch and Snap!.
      Tynker is based on HTML5 and JavaScript, and can be used in the browser without
      plugins, as well as on tablets and smartphones. Another difference is that Scratch
      is a free open source project, while Tynker is a commercial product, aimed at
      selling courses. Tynker offers self-paced online courses for children to learn
      coding at home, as well as an engaging programming curriculum for schools and
      camps. It makes it easier for kids to learn coding as it teaches kids coding
      through creating games like Minecraft, Hour of Code etc.</p>"
  record/5aa486a3-f29e-4214-b6a3-003754ffe7f8:
    :type: standard
    :title: TMG (language)
    :displaytitle: TMG (language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1754079
    :titles:
      :canonical: TMG_(language)
      :normalized: TMG (language)
      :display: TMG (language)
    :pageid: 38020020
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/7/77/Brainfuck_to_C_translator_in_Unix_TMG.png/320px-Brainfuck_to_C_translator_in_Unix_TMG.png
      :width: 320
      :height: 289
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/7/77/Brainfuck_to_C_translator_in_Unix_TMG.png
      :width: 1388
      :height: 1252
    :lang: en
    :dir: ltr
    :revision: '990726239'
    :tid: 69d80650-2fa0-11eb-9d28-97dd5b9e236e
    :timestamp: '2020-11-26T04:32:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TMG_(language)
        :revisions: https://en.wikipedia.org/wiki/TMG_(language)?action=history
        :edit: https://en.wikipedia.org/wiki/TMG_(language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TMG_(language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TMG_(language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TMG_(language)
        :edit: https://en.m.wikipedia.org/wiki/TMG_(language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TMG_(language)
    :extract: TMG (TransMoGrifier) is a recursive descent compiler-compiler created
      by Robert M. McClure and presented in 1965. TMG ran on systems like OS/360 and
      early Unix. It was used to build EPL, an early version of PL/I.
    :extract_html: <p><b>TMG</b> (TransMoGrifier) is a recursive descent compiler-compiler
      created by <span class="nowrap">Robert M. McClure</span> and presented in 1965.
      TMG ran on systems like OS/360 and early Unix. It was used to build EPL, an
      early version of PL/I.</p>
  record/9365bf35-cc9c-4c53-a0c9-a8543af77375:
    :type: standard
    :title: Etoys (programming language)
    :displaytitle: Etoys (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1044290
    :titles:
      :canonical: Etoys_(programming_language)
      :normalized: Etoys (programming language)
      :display: Etoys (programming language)
    :pageid: 4052771
    :lang: en
    :dir: ltr
    :revision: '929268935'
    :tid: 44a48c80-1e9f-11eb-b2d9-615c7b0ec85e
    :timestamp: '2019-12-04T18:37:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Etoys_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Etoys_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Etoys_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Etoys_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Etoys_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Etoys_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Etoys_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Etoys_(programming_language)
    :extract: Etoys is a child-friendly computer environment and object-oriented prototype-based
      programming language for use in education.
    :extract_html: "<p><b>Etoys</b> is a child-friendly computer environment and object-oriented
      prototype-based programming language for use in education.</p>"
  record/8c182516-87ae-4915-9710-7f3f6f3d48d3:
    :type: standard
    :title: D (programming language)
    :displaytitle: D (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q319268
    :titles:
      :canonical: D_(programming_language)
      :normalized: D (programming language)
      :display: D (programming language)
    :pageid: 243881
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/D_Programming_Language_logo.svg/320px-D_Programming_Language_logo.svg.png
      :width: 320
      :height: 243
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/24/D_Programming_Language_logo.svg/124px-D_Programming_Language_logo.svg.png
      :width: 124
      :height: 94
    :lang: en
    :dir: ltr
    :revision: '990146394'
    :tid: a55c6a00-35b2-11eb-a868-ff5f358e3ac5
    :timestamp: '2020-11-23T01:56:57Z'
    :description: Multi-paradigm system programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/D_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/D_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/D_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:D_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/D_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/D_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/D_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:D_(programming_language)
    :extract: D, also known as Dlang, is a multi-paradigm system programming language
      created by Walter Bright at Digital Mars and released in 2001. Andrei Alexandrescu
      joined the design and development effort in 2007. Though it originated as a
      re-engineering of C++, D is a distinct language. It has redesigned some core
      C++ features, while also sharing characteristics of other languages, notably
      Java, Python, Ruby, C#, and Eiffel.
    :extract_html: "<p><b>D</b>, also known as <b>Dlang</b>, is a multi-paradigm system
      programming language created by Walter Bright at Digital Mars and released in
      2001. Andrei Alexandrescu joined the design and development effort in 2007.
      Though it originated as a re-engineering of C++, D is a distinct language. It
      has redesigned some core C++ features, while also sharing characteristics of
      other languages, notably Java, Python, Ruby, C#, and Eiffel.</p>"
  record/33dcca6e-6b4b-4478-bf8b-064a3fa22f75:
    :type: standard
    :title: MATLAB
    :displaytitle: MATLAB
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q169478
    :titles:
      :canonical: MATLAB
      :normalized: MATLAB
      :display: MATLAB
    :pageid: 20412
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/MATLAB_R2015b.png/320px-MATLAB_R2015b.png
      :width: 320
      :height: 194
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/e9/MATLAB_R2015b.png
      :width: 1353
      :height: 819
    :lang: en
    :dir: ltr
    :revision: '992092506'
    :tid: e05bcc10-356a-11eb-97e2-73ffe8d9a0fb
    :timestamp: '2020-12-03T13:24:24Z'
    :description: Numerical computing environment and programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MATLAB
        :revisions: https://en.wikipedia.org/wiki/MATLAB?action=history
        :edit: https://en.wikipedia.org/wiki/MATLAB?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MATLAB
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MATLAB
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MATLAB
        :edit: https://en.m.wikipedia.org/wiki/MATLAB?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MATLAB
    :extract: MATLAB is a proprietary multi-paradigm programming language and numerical
      computing environment developed by MathWorks. MATLAB allows matrix manipulations,
      plotting of functions and data, implementation of algorithms, creation of user
      interfaces, and interfacing with programs written in other languages.
    :extract_html: "<p><b>MATLAB</b> is a proprietary multi-paradigm programming language
      and numerical computing environment developed by MathWorks. MATLAB allows matrix
      manipulations, plotting of functions and data, implementation of algorithms,
      creation of user interfaces, and interfacing with programs written in other
      languages.</p>"
  record/0d22818e-47d2-4438-8257-116a337eb2ca:
    :type: standard
    :title: ROOP (programming language)
    :displaytitle: ROOP (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7277404
    :titles:
      :canonical: ROOP_(programming_language)
      :normalized: ROOP (programming language)
      :display: ROOP (programming language)
    :pageid: 931356
    :lang: en
    :dir: ltr
    :revision: '759049322'
    :tid: 00b5f5d0-075d-11eb-8483-83ba3ae18873
    :timestamp: '2017-01-09T00:14:25Z'
    :description: multiparadigm programming language targeted at AI applications
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ROOP_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ROOP_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ROOP_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ROOP_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ROOP_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ROOP_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ROOP_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ROOP_(programming_language)
    :extract: ROOP is a multiparadigm programming language targeted at AI applications
      created at the Chengdu University of China. It combines rule-based, procedural,
      logical and object-oriented programming techniques.
    :extract_html: "<p><b>ROOP</b> is a multiparadigm programming language targeted
      at AI applications created at the Chengdu University of China. It combines rule-based,
      procedural, logical and object-oriented programming techniques.</p>"
  record/a7b1fee4-4ded-403d-89b5-9c19663024ce:
    :type: standard
    :title: PL-11
    :displaytitle: PL-11
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7119550
    :titles:
      :canonical: PL-11
      :normalized: PL-11
      :display: PL-11
    :pageid: 507366
    :lang: en
    :dir: ltr
    :revision: '833976529'
    :tid: 63a0b790-1afc-11eb-8509-21c3234fb446
    :timestamp: '2018-04-03T08:35:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PL-11
        :revisions: https://en.wikipedia.org/wiki/PL-11?action=history
        :edit: https://en.wikipedia.org/wiki/PL-11?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PL-11
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PL-11
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PL-11
        :edit: https://en.m.wikipedia.org/wiki/PL-11?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PL-11
    :extract: PL-11 is a high-level machine-oriented programming language for the
      PDP-11, developed by R.D. Russell of CERN in 1971. Written in Fortran IV, it
      is similar to PL360 and is cross-compiled on other machines.
    :extract_html: "<p><b>PL-11</b> is a high-level machine-oriented programming language
      for the PDP-11, developed by R.D. Russell of CERN in 1971. Written in Fortran
      IV, it is similar to PL360 and is cross-compiled on other machines.</p>"
  record/3c8dee7b-f55f-46a7-b011-2cabbc7e6c17:
    :type: standard
    :title: Vim (text editor)
    :displaytitle: Vim (text editor)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q131382
    :titles:
      :canonical: Vim_(text_editor)
      :normalized: Vim (text editor)
      :display: Vim (text editor)
    :pageid: 32478
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/319px-Vimlogo.svg.png
      :width: 319
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/9f/Vimlogo.svg/544px-Vimlogo.svg.png
      :width: 544
      :height: 545
    :lang: en
    :dir: ltr
    :revision: '990621353'
    :tid: b00b84e0-2f31-11eb-a543-6b64549f6380
    :timestamp: '2020-11-25T15:19:53Z'
    :description: Improved version of the Vi keyboard-oriented text editor
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Vim_(text_editor)
        :revisions: https://en.wikipedia.org/wiki/Vim_(text_editor)?action=history
        :edit: https://en.wikipedia.org/wiki/Vim_(text_editor)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Vim_(text_editor)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Vim_(text_editor)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Vim_(text_editor)
        :edit: https://en.m.wikipedia.org/wiki/Vim_(text_editor)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Vim_(text_editor)
    :extract: Vim is a clone, with additions, of Bill Joy's vi text editor program
      for Unix. Vim's author, Bram Moolenaar, based it on the source code for a port
      of the Stevie editor to the Amiga and released a version to the public in 1991.
      Vim is designed for use both from a command-line interface and as a standalone
      application in a graphical user interface. Vim is free and open-source software
      and is released under a license that includes some charityware clauses, encouraging
      users who enjoy the software to consider donating to children in Uganda. The
      license is compatible with the GNU General Public License through a special
      clause allowing distribution of modified copies "under the GNU GPL version 2
      or any later version".
    :extract_html: <p><b>Vim</b> is a clone, with additions, of Bill Joy's vi text
      editor program for Unix. Vim's author, Bram Moolenaar, based it on the source
      code for a port of the Stevie editor to the Amiga and released a version to
      the public in 1991. Vim is designed for use both from a command-line interface
      and as a standalone application in a graphical user interface. Vim is free and
      open-source software and is released under a license that includes some charityware
      clauses, encouraging users who enjoy the software to consider donating to children
      in Uganda. The license is compatible with the GNU General Public License through
      a special clause allowing distribution of modified copies "under the GNU GPL
      version 2 or any later version".</p>
  record/8c26ee18-28ed-4648-a0e9-7a72712b2c73:
    :type: standard
    :title: Dink Smallwood
    :displaytitle: "<i>Dink Smallwood</i>"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q594880
    :titles:
      :canonical: Dink_Smallwood
      :normalized: Dink Smallwood
      :display: "<i>Dink Smallwood</i>"
    :pageid: 1320860
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/06/Dinksmallwoodlogo.png/320px-Dinksmallwoodlogo.png
      :width: 320
      :height: 179
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/06/Dinksmallwoodlogo.png
      :width: 698
      :height: 390
    :lang: en
    :dir: ltr
    :revision: '990570372'
    :tid: 4af30720-2eed-11eb-b9c7-f5984fe27eb8
    :timestamp: '2020-11-25T07:10:23Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Dink_Smallwood
        :revisions: https://en.wikipedia.org/wiki/Dink_Smallwood?action=history
        :edit: https://en.wikipedia.org/wiki/Dink_Smallwood?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Dink_Smallwood
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Dink_Smallwood
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Dink_Smallwood
        :edit: https://en.m.wikipedia.org/wiki/Dink_Smallwood?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Dink_Smallwood
    :extract: Dink Smallwood is an action role-playing video game, developed by Robinson
      Technologies, at the time consisting of Seth Robinson, Justin Martin, and Greg
      Smith. It was first released in 1998 before being released as freeware on October
      17, 1999. Mitch Brink composed several of the game's music tracks, while others
      are MIDI forms of classical music, such as Debussy's "Reverie". The game has
      a small but constant fan following that continues to develop add-ons for the
      game more than a decade after its release. The game is also notable for its
      humorous dialogue and surrealistic themes in various scenes between the gameplay.
    :extract_html: <p><i><b>Dink Smallwood</b></i> is an action role-playing video
      game, developed by Robinson Technologies, at the time consisting of Seth Robinson,
      Justin Martin, and Greg Smith. It was first released in 1998 before being released
      as freeware on October 17, 1999. Mitch Brink composed several of the game's
      music tracks, while others are MIDI forms of classical music, such as Debussy's
      "Reverie". The game has a small but constant fan following that continues to
      develop add-ons for the game more than a decade after its release. The game
      is also notable for its humorous dialogue and surrealistic themes in various
      scenes between the gameplay.</p>
  record/41c81f67-a88c-46c0-b4fd-334bc3e7abe8:
    :type: standard
    :title: MDL (programming language)
    :displaytitle: MDL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6715155
    :titles:
      :canonical: MDL_(programming_language)
      :normalized: MDL (programming language)
      :display: MDL (programming language)
    :pageid: 586499
    :lang: en
    :dir: ltr
    :revision: '983298154'
    :tid: e79c56d0-2ca9-11eb-abdb-779d9d3ac37d
    :timestamp: '2020-10-13T12:51:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MDL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/MDL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/MDL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MDL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MDL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MDL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/MDL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MDL_(programming_language)
    :extract: MDL is a programming language, a descendant of the language Lisp. Its
      initial purpose was to provide high level language support for the Dynamic Modeling
      Group at Massachusetts Institute of Technology's (MIT) Project MAC. It was initially
      developed in 1971 on a PDP-10 computer on a time-sharing operating system named
      Incompatible Timesharing System (ITS). It later ran on TENEX, TOPS-20, BSD,
      and AEGIS.
    :extract_html: "<p><b>MDL</b> is a programming language, a descendant of the language
      Lisp. Its initial purpose was to provide high level language support for the
      Dynamic Modeling Group at Massachusetts Institute of Technology's (MIT) Project
      MAC. It was initially developed in 1971 on a PDP-10 computer on a time-sharing
      operating system named Incompatible Timesharing System (ITS). It later ran on
      TENEX, TOPS-20, BSD, and AEGIS.</p>"
  record/46c5aa4e-aa6a-4438-83c2-8360e3d9a6b7:
    :type: standard
    :title: Ubercode
    :displaytitle: Ubercode
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7876482
    :titles:
      :canonical: Ubercode
      :normalized: Ubercode
      :display: Ubercode
    :pageid: 4269756
    :lang: en
    :dir: ltr
    :revision: '948945002'
    :tid: e0afebe0-093e-11eb-8336-bb1796de961c
    :timestamp: '2020-04-03T21:27:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ubercode
        :revisions: https://en.wikipedia.org/wiki/Ubercode?action=history
        :edit: https://en.wikipedia.org/wiki/Ubercode?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ubercode
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ubercode
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ubercode
        :edit: https://en.m.wikipedia.org/wiki/Ubercode?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ubercode
    :extract: |-
      Ubercode is a high level programming language designed by Ubercode Software and released in 2005 for Microsoft Windows. Ubercode is influenced by Eiffel and BASIC. It is proprietary software and can be tried out for free for 30 days. Ubercode has the following design goals:Compilable language—compiled into Windows EXE files.
      Automatic memory management—memory is allocated / freed automatically, and the language has no memory management primitives.
      Pre and post conditions—these are run-time assertions which are attached to function declarations, as in Eiffel.
      High-level data types—resizable arrays, lists and tables may contain arbitrary components.
      Integrated file handling—primitives for transparent handling of text, binary, CSV, XML and dBase files.
      Ease of use—language structure is relatively simple, making the language accessible to beginners.
    :extract_html: |-
      <p><b>Ubercode</b> is a high level programming language designed by <span class="external text">Ubercode Software</span> and released in 2005 for Microsoft Windows. Ubercode is influenced by Eiffel and BASIC. It is proprietary software and can be tried out for free for 30 days. Ubercode has the following design goals:</p><ol><li><i>Compilable language</i>—compiled into Windows EXE files.</li>
      <li><i>Automatic memory management</i>—memory is allocated / freed automatically, and the language has no memory management primitives.</li>
      <li><i>Pre and post conditions</i>—these are run-time assertions which are attached to function declarations, as in Eiffel.</li>
      <li><i>High-level data types</i>—resizable arrays, lists and tables may contain arbitrary components.</li>
      <li><i>Integrated file handling</i>—primitives for transparent handling of text, binary, CSV, XML and dBase files.</li>
      <li><i>Ease of use</i>—language structure is relatively simple, making the language accessible to beginners.</li></ol>
  record/4fa2f92d-97ec-4bc8-bb07-2dca6b95d394:
    :type: standard
    :title: BlooP and FlooP
    :displaytitle: BlooP and FlooP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4927494
    :titles:
      :canonical: BlooP_and_FlooP
      :normalized: BlooP and FlooP
      :display: BlooP and FlooP
    :pageid: 436718
    :lang: en
    :dir: ltr
    :revision: '918893547'
    :tid: e6a89980-fdad-11ea-9ae0-09001aa509a7
    :timestamp: '2019-09-30T19:30:25Z'
    :description: simple programming languages
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BlooP_and_FlooP
        :revisions: https://en.wikipedia.org/wiki/BlooP_and_FlooP?action=history
        :edit: https://en.wikipedia.org/wiki/BlooP_and_FlooP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BlooP_and_FlooP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BlooP_and_FlooP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BlooP_and_FlooP
        :edit: https://en.m.wikipedia.org/wiki/BlooP_and_FlooP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BlooP_and_FlooP
    :extract: BlooP and FlooP are simple programming languages designed by Douglas
      Hofstadter to illustrate a point in his book Gödel, Escher, Bach. BlooP is a
      non-Turing-complete programming language whose main control flow structure is
      a bounded loop. All programs in the language must terminate, and this language
      can only express primitive recursive functions.
    :extract_html: "<p><abbr><b>BlooP</b></abbr> and <abbr><b>FlooP</b></abbr> are
      simple programming languages designed by Douglas Hofstadter to illustrate a
      point in his book <i>Gödel, Escher, Bach</i>. BlooP is a non-Turing-complete
      programming language whose main control flow structure is a bounded loop. All
      programs in the language must terminate, and this language can only express
      primitive recursive functions.</p>"
  record/56ad8907-296a-40f7-aee0-cbffb7a63d95:
    :type: standard
    :title: GameMaker
    :displaytitle: GameMaker
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16195922
    :titles:
      :canonical: GameMaker
      :normalized: GameMaker
      :display: GameMaker
    :pageid: 555154
    :lang: en
    :dir: ltr
    :revision: '991118795'
    :tid: 898ecd60-3164-11eb-b5e4-71e06f3c4897
    :timestamp: '2020-11-28T10:28:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GameMaker
        :revisions: https://en.wikipedia.org/wiki/GameMaker?action=history
        :edit: https://en.wikipedia.org/wiki/GameMaker?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GameMaker
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GameMaker
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GameMaker
        :edit: https://en.m.wikipedia.org/wiki/GameMaker?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GameMaker
    :extract: GameMaker is a series of cross-platform game engines created by Mark
      Overmars in 1999 and developed by YoYo Games since 2007. The latest iteration
      is GameMaker Studio 2, first released in 2017.
    :extract_html: "<p><b>GameMaker</b> is a series of cross-platform game engines
      created by Mark Overmars in 1999 and developed by YoYo Games since 2007. The
      latest iteration is GameMaker Studio 2, first released in 2017.</p>"
  record/a27c0477-a19b-4165-bd72-2acbd6c66af2:
    :type: standard
    :title: M4 (computer language)
    :displaytitle: m4 (computer language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q292068
    :titles:
      :canonical: M4_(computer_language)
      :normalized: M4 (computer language)
      :display: m4 (computer language)
    :pageid: 625653
    :lang: en
    :dir: ltr
    :revision: '979542448'
    :tid: bfeea110-34c9-11eb-b878-ebfd485caf07
    :timestamp: '2020-09-21T10:07:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/M4_(computer_language)
        :revisions: https://en.wikipedia.org/wiki/M4_(computer_language)?action=history
        :edit: https://en.wikipedia.org/wiki/M4_(computer_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:M4_(computer_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/M4_(computer_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/M4_(computer_language)
        :edit: https://en.m.wikipedia.org/wiki/M4_(computer_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:M4_(computer_language)
    :extract: m4 is a general-purpose macro processor included in most Unix-like operating
      systems, and is a component of the POSIX standard.
    :extract_html: "<p><b>m4</b> is a general-purpose macro processor included in
      most Unix-like operating systems, and is a component of the POSIX standard.</p>"
  record/13da0ebc-b39e-4ea5-9aa1-83e97c41ea25:
    :type: standard
    :title: Janus (time-reversible computing programming language)
    :displaytitle: Janus (time-reversible computing programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q25345964
    :titles:
      :canonical: Janus_(time-reversible_computing_programming_language)
      :normalized: Janus (time-reversible computing programming language)
      :display: Janus (time-reversible computing programming language)
    :pageid: 50304039
    :lang: en
    :dir: ltr
    :revision: '971773665'
    :tid: c66121a0-3193-11eb-a52b-fbecfe3d1710
    :timestamp: '2020-08-08T04:09:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)
        :revisions: https://en.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Janus_(time-reversible_computing_programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Janus_(time-reversible_computing_programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Janus_(time-reversible_computing_programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Janus_(time-reversible_computing_programming_language)
    :extract: Janus is a time-reversible programming language written at Caltech in
      1982. The operational semantics of the language were formally specified, together
      with a program inverter and an invertible self-interpreter, in 2007 by Tetsuo
      Yokoyama and Robert Glück. A Janus inverter and interpreter is made freely available
      by the TOPPS research group at DIKU. Another Janus interpreter was implemented
      in Prolog in 2009. The below summarises the language presented in the 2007 paper.
    :extract_html: "<p><b>Janus</b> is a time-reversible programming language written
      at Caltech in 1982. The operational semantics of the language were formally
      specified, together with a program inverter and an invertible self-interpreter,
      in 2007 by Tetsuo Yokoyama and Robert Glück. A Janus inverter and interpreter
      is made freely available by the TOPPS research group at DIKU. Another Janus
      interpreter was implemented in Prolog in 2009. The below summarises the language
      presented in the 2007 paper.</p>"
  record/a03202b6-8cf6-4e07-8471-205d93435187:
    :type: standard
    :title: Yorick (programming language)
    :displaytitle: Yorick (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3174329
    :titles:
      :canonical: Yorick_(programming_language)
      :normalized: Yorick (programming language)
      :display: Yorick (programming language)
    :pageid: 175271
    :lang: en
    :dir: ltr
    :revision: '956148263'
    :tid: 6fb098a0-35b1-11eb-91b1-133e7f124f6f
    :timestamp: '2020-05-11T19:04:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Yorick_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Yorick_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Yorick_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Yorick_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Yorick_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Yorick_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Yorick_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Yorick_(programming_language)
    :extract: Yorick is an interpreted programming language designed for numerics,
      graph plotting, and steering large scientific simulation codes. It is quite
      fast due to array syntax, and extensible via C or Fortran routines. It was created
      in 1996 by David H. Munro of Lawrence Livermore National Laboratory.
    :extract_html: "<p><b>Yorick</b> is an interpreted programming language designed
      for numerics, graph plotting, and steering large scientific simulation codes.
      It is quite fast due to array syntax, and extensible via C or Fortran routines.
      It was created in 1996 by David H. Munro of Lawrence Livermore National Laboratory.</p>"
  record/22075013-7047-4f37-bc7f-60dbfb766331:
    :type: standard
    :title: MARK IV (software)
    :displaytitle: MARK IV (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6714477
    :titles:
      :canonical: MARK_IV_(software)
      :normalized: MARK IV (software)
      :display: MARK IV (software)
    :pageid: 7918764
    :lang: en
    :dir: ltr
    :revision: '958519033'
    :tid: 49ce7530-ecbe-11ea-a824-abe7bcdfefe8
    :timestamp: '2020-05-24T07:50:55Z'
    :description: fourth-generation programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MARK_IV_(software)
        :revisions: https://en.wikipedia.org/wiki/MARK_IV_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/MARK_IV_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MARK_IV_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MARK_IV_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MARK_IV_(software)
        :edit: https://en.m.wikipedia.org/wiki/MARK_IV_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MARK_IV_(software)
    :extract: MARK IV is a fourth-generation programming language that was created
      by Informatics, Inc. in the 1960s. Informatics took advantage of IBM's decision
      to unbundle their software; MARK IV was the first "software product to have
      cumulative sales of $10 million".
    :extract_html: <p><b>MARK IV</b> is a fourth-generation programming language that
      was created by Informatics, Inc. in the 1960s. Informatics took advantage of
      IBM's decision to unbundle their software; MARK IV was the first "software product
      to have cumulative sales of $10 million".</p>
  record/a425a7a3-6ac2-4b58-b586-0fc083283bda:
    :type: standard
    :title: Open Programming Language
    :displaytitle: Open Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1700602
    :titles:
      :canonical: Open_Programming_Language
      :normalized: Open Programming Language
      :display: Open Programming Language
    :pageid: 832032
    :lang: en
    :dir: ltr
    :revision: '983075026'
    :tid: 2c587310-1ae1-11eb-ba79-515347b5fe35
    :timestamp: '2020-10-12T02:46:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Open_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Open_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Open_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Open_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Open_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Open_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Open_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Open_Programming_Language
    :extract: Open Programming Language (OPL) is an embedded programming language
      for portable devices that run the Symbian Operating System.
    :extract_html: "<p><b>Open Programming Language</b> (<b>OPL</b>) is an embedded
      programming language for portable devices that run the Symbian Operating System.</p>"
  record/d6c83056-632b-4657-b89f-540c81ae6869:
    :type: standard
    :title: Cython
    :displaytitle: Cython
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q975594
    :titles:
      :canonical: Cython
      :normalized: Cython
      :display: Cython
    :pageid: 18384111
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/c/ce/Cython-logo.svg/320px-Cython-logo.svg.png
      :width: 320
      :height: 143
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/c/ce/Cython-logo.svg/440px-Cython-logo.svg.png
      :width: 440
      :height: 196
    :lang: en
    :dir: ltr
    :revision: '988242928'
    :tid: 5d2a8d30-2477-11eb-a77b-6d7a57e37ccc
    :timestamp: '2020-11-11T23:40:57Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cython
        :revisions: https://en.wikipedia.org/wiki/Cython?action=history
        :edit: https://en.wikipedia.org/wiki/Cython?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cython
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cython
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cython
        :edit: https://en.m.wikipedia.org/wiki/Cython?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cython
    :extract: Cython is a programming language that aims to be a superset of the Python
      programming language, designed to give C-like performance with code that is
      written mostly in Python with optional additional C-inspired syntax.
    :extract_html: "<p><b>Cython</b> is a programming language that aims to be a superset
      of the Python programming language, designed to give C-like performance with
      code that is written mostly in Python with optional additional C-inspired syntax.</p>"
  record/79ab8f73-a88c-40ed-9bba-79bb3459614c:
    :type: standard
    :title: Escher (programming language)
    :displaytitle: Escher (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5397186
    :titles:
      :canonical: Escher_(programming_language)
      :normalized: Escher (programming language)
      :display: Escher (programming language)
    :pageid: 15127666
    :lang: en
    :dir: ltr
    :revision: '747115086'
    :tid: 0142b410-289c-11eb-b29e-b997fce903fd
    :timestamp: '2016-10-31T14:47:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Escher_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Escher_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Escher_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Escher_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Escher_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Escher_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Escher_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Escher_(programming_language)
    :extract: Escher is a declarative programming language that supports both functional
      programming and logic programming models, developed by J.W. Lloyd in the mid-1990s.
      It was designed mostly as a research and teaching vehicle. The basic view of
      programming exhibited by Escher and related languages is that a program is a
      representation of a theory in some logic framework, and the program's execution
      (computation) is a deduction from the theory. The logic framework for Escher
      is Alonzo Church's simple theory of types.
    :extract_html: "<p><b>Escher</b> is a declarative programming language that supports
      both functional programming and logic programming models, developed by J.W.
      Lloyd in the mid-1990s. It was designed mostly as a research and teaching vehicle.
      The basic view of programming exhibited by Escher and related languages is that
      a program is a representation of a theory in some logic framework, and the program's
      execution (computation) is a deduction from the theory. The logic framework
      for Escher is Alonzo Church's simple theory of types.</p>"
  record/03938981-1854-4ce3-9ce1-1cdac3d56306:
    :type: standard
    :title: X10 (programming language)
    :displaytitle: X10 (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1852616
    :titles:
      :canonical: X10_(programming_language)
      :normalized: X10 (programming language)
      :display: X10 (programming language)
    :pageid: 1932246
    :lang: en
    :dir: ltr
    :revision: '989825292'
    :tid: 93a093c0-2bc8-11eb-b6ad-f9a2fec81566
    :timestamp: '2020-11-21T07:10:00Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/X10_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/X10_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/X10_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:X10_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/X10_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/X10_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/X10_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:X10_(programming_language)
    :extract: X10 is a programming language being developed by IBM at the Thomas J.
      Watson Research Center as part of the Productive, Easy-to-use, Reliable Computing
      System (PERCS) project funded by DARPA's High Productivity Computing Systems
      (HPCS) program. Its primary authors are Saravanan Arumugam (Aswath), Kemal Ebcioğlu,
      Vijay Saraswat, and Vivek Sarkar.
    :extract_html: "<p><b>X10</b> is a programming language being developed by IBM
      at the Thomas J. Watson Research Center as part of the Productive, Easy-to-use,
      Reliable Computing System (PERCS) project funded by DARPA's High Productivity
      Computing Systems (HPCS) program. Its primary authors are Saravanan Arumugam
      (Aswath), Kemal Ebcioğlu, Vijay Saraswat, and Vivek Sarkar.</p>"
  record/d6d3e6d0-d415-4286-a6bb-7bbde9acea8e:
    :type: standard
    :title: TRON project
    :displaytitle: TRON project
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17056255
    :titles:
      :canonical: TRON_project
      :normalized: TRON project
      :display: TRON project
    :pageid: 519483
    :lang: en
    :dir: ltr
    :revision: '991709401'
    :tid: dd082f00-33cf-11eb-b155-f55bb3136e01
    :timestamp: '2020-12-01T12:22:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TRON_project
        :revisions: https://en.wikipedia.org/wiki/TRON_project?action=history
        :edit: https://en.wikipedia.org/wiki/TRON_project?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TRON_project
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TRON_project
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TRON_project
        :edit: https://en.m.wikipedia.org/wiki/TRON_project?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TRON_project
    :extract: TRON is an open architecture real-time operating system kernel design.
      The project was started by Prof. Dr. Ken Sakamura of the University of Tokyo
      in 1984. The project's goal is to create an ideal computer architecture and
      network, to provide for all of society's needs.
    :extract_html: "<p><b>TRON</b> is an open architecture real-time operating system
      kernel design. The project was started by Prof. Dr. Ken Sakamura of the University
      of Tokyo in 1984. The project's goal is to create an ideal computer architecture
      and network, to provide for all of society's needs.</p>"
  record/3a3e01f5-f5a1-439f-9c77-135ad0be5cbe:
    :type: standard
    :title: Fjölnir (programming language)
    :displaytitle: Fjölnir (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3481158
    :titles:
      :canonical: Fjölnir_(programming_language)
      :normalized: Fjölnir (programming language)
      :display: Fjölnir (programming language)
    :pageid: 3236625
    :lang: en
    :dir: ltr
    :revision: '963959859'
    :tid: e69fca40-2228-11eb-9c15-1dd1043a43df
    :timestamp: '2020-06-22T19:46:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Fj%C3%B6lnir_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Fj%C3%B6lnir_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Fj%C3%B6lnir_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Fj%C3%B6lnir_(programming_language)
    :extract: Fjölnir is a programming language developed by professor Snorri Agnarsson
      of computer science at Háskóli Íslands that was mostly used in the 1980s. The
      source files usually have the extension fjo or sma.
    :extract_html: "<p><b>Fjölnir</b> is a programming language developed by professor
      Snorri Agnarsson of computer science at Háskóli Íslands that was mostly used
      in the 1980s. The source files usually have the extension <code>fjo</code> or
      <code>sma</code>.</p>"
  record/fa9328a8-c647-4f21-b843-48edc43586c2:
    :type: standard
    :title: Autodesk 3ds Max
    :displaytitle: Autodesk 3ds Max
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q212324
    :titles:
      :canonical: Autodesk_3ds_Max
      :normalized: Autodesk 3ds Max
      :display: Autodesk 3ds Max
    :pageid: 313216
    :lang: en
    :dir: ltr
    :revision: '990819692'
    :tid: f96fb630-3010-11eb-8780-fb88c7a11d51
    :timestamp: '2020-11-26T17:58:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Autodesk_3ds_Max
        :revisions: https://en.wikipedia.org/wiki/Autodesk_3ds_Max?action=history
        :edit: https://en.wikipedia.org/wiki/Autodesk_3ds_Max?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Autodesk_3ds_Max
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Autodesk_3ds_Max
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Autodesk_3ds_Max
        :edit: https://en.m.wikipedia.org/wiki/Autodesk_3ds_Max?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Autodesk_3ds_Max
    :extract: Autodesk 3ds Max, formerly 3D Studio and 3D Studio Max, is a professional
      3D computer graphics program for making 3D animations, models, games and images.
      It is developed and produced by Autodesk Media and Entertainment. It has modeling
      capabilities and a flexible plugin architecture and must be used on the Microsoft
      Windows platform. It is frequently used by video game developers, many TV commercial
      studios, and architectural visualization studios. It is also used for movie
      effects and movie pre-visualization. For its modeling and animation tools, the
      latest version of 3ds Max also features shaders, dynamic simulation, particle
      systems, radiosity, normal map creation and rendering, global illumination,
      a customizable user interface, new icons, and its own scripting language.
    :extract_html: "<p><b>Autodesk 3ds Max</b>, formerly <b>3D Studio</b> and <b>3D
      Studio Max</b>, is a professional 3D computer graphics program for making 3D
      animations, models, games and images. It is developed and produced by Autodesk
      Media and Entertainment. It has modeling capabilities and a flexible plugin
      architecture and must be used on the Microsoft Windows platform. It is frequently
      used by video game developers, many TV commercial studios, and architectural
      visualization studios. It is also used for movie effects and movie pre-visualization.
      For its modeling and animation tools, the latest version of 3ds Max also features
      shaders, dynamic simulation, particle systems, radiosity, normal map creation
      and rendering, global illumination, a customizable user interface, new icons,
      and its own scripting language.</p>"
  record/36f3808c-04ae-49eb-be62-cead3d9e8069:
    :type: standard
    :title: Little Computer 3
    :displaytitle: Little Computer 3
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6457333
    :titles:
      :canonical: Little_Computer_3
      :normalized: Little Computer 3
      :display: Little Computer 3
    :pageid: 9193341
    :lang: en
    :dir: ltr
    :revision: '921758266'
    :tid: 3777e350-2092-11eb-9476-53538e54ce2d
    :timestamp: '2019-10-17T18:22:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Little_Computer_3
        :revisions: https://en.wikipedia.org/wiki/Little_Computer_3?action=history
        :edit: https://en.wikipedia.org/wiki/Little_Computer_3?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Little_Computer_3
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Little_Computer_3
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Little_Computer_3
        :edit: https://en.m.wikipedia.org/wiki/Little_Computer_3?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Little_Computer_3
    :extract: Little Computer 3, or LC-3, is a type of computer educational programming
      language, an assembly language, which is a type of low-level programming language.
    :extract_html: "<p><b>Little Computer 3</b>, or <b>LC-3</b>, is a type of computer
      educational programming language, an assembly language, which is a type of low-level
      programming language.</p>"
  record/d22bf7a2-75aa-4bcd-acb3-e2827ab024de:
    :type: standard
    :title: Processing (programming language)
    :displaytitle: Processing (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1053535
    :titles:
      :canonical: Processing_(programming_language)
      :normalized: Processing (programming language)
      :display: Processing (programming language)
    :pageid: 546083
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Processing_3_logo.png/320px-Processing_3_logo.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/2/2e/Processing_3_logo.png
      :width: 1024
      :height: 1024
    :lang: en
    :dir: ltr
    :revision: '992233065'
    :tid: 45b33e10-35f0-11eb-adca-21872c2db217
    :timestamp: '2020-12-04T05:19:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Processing_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Processing_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Processing_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Processing_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Processing_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Processing_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Processing_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Processing_(programming_language)
    :extract: Processing is an open-source graphical library and integrated development
      environment (IDE) built for the electronic arts, new media art, and visual design
      communities with the purpose of teaching non-programmers the fundamentals of
      computer programming in a visual context.
    :extract_html: "<p><b>Processing</b> is an open-source graphical library and integrated
      development environment (IDE) built for the electronic arts, new media art,
      and visual design communities with the purpose of teaching non-programmers the
      fundamentals of computer programming in a visual context.</p>"
  record/46ccc3f4-507a-4472-b566-53f48d937b6a:
    :type: standard
    :title: S (programming language)
    :displaytitle: S (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1283865
    :titles:
      :canonical: S_(programming_language)
      :normalized: S (programming language)
      :display: S (programming language)
    :pageid: 919313
    :lang: en
    :dir: ltr
    :revision: '982810571'
    :tid: 209bb110-1b75-11eb-9ca7-4f68a10b93b1
    :timestamp: '2020-10-10T13:59:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/S_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/S_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/S_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:S_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/S_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/S_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/S_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:S_(programming_language)
    :extract: S is a statistical programming language developed primarily by John
      Chambers and Rick Becker and Allan Wilks of Bell Laboratories. The aim of the
      language, as expressed by John Chambers, is "to turn ideas into software, quickly
      and faithfully".
    :extract_html: <p><b>S</b> is a statistical programming language developed primarily
      by John Chambers and Rick Becker and Allan Wilks of Bell Laboratories. The aim
      of the language, as expressed by John Chambers, is "to turn ideas into software,
      quickly and faithfully".</p>
  record/f6ac65b0-c51a-4374-ba8c-20b852df08c5:
    :type: standard
    :title: Gosu (programming language)
    :displaytitle: Gosu (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5587589
    :titles:
      :canonical: Gosu_(programming_language)
      :normalized: Gosu (programming language)
      :display: Gosu (programming language)
    :pageid: 29539307
    :lang: en
    :dir: ltr
    :revision: '985500238'
    :tid: b82df830-29b2-11eb-b33b-4d29675a212e
    :timestamp: '2020-10-26T09:06:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Gosu_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Gosu_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Gosu_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Gosu_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Gosu_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Gosu_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Gosu_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Gosu_(programming_language)
    :extract: Gosu is a statically-typed general-purpose programming language that
      runs on the Java Virtual Machine. Its influences include Java, C#, and ECMAScript.
      Development of Gosu began in 2002 internally for Guidewire Software, and the
      language saw its first community release in 2010 under the Apache 2 license.
    :extract_html: "<p><b>Gosu</b> is a statically-typed general-purpose programming
      language that runs on the Java Virtual Machine. Its influences include Java,
      C#, and ECMAScript. Development of Gosu began in 2002 internally for Guidewire
      Software, and the language saw its first community release in 2010 under the
      Apache 2 license.</p>"
  record/0d82254a-3452-4f32-b664-b00d0405315d:
    :type: standard
    :title: AutoHotkey
    :displaytitle: AutoHotkey
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q784816
    :titles:
      :canonical: AutoHotkey
      :normalized: AutoHotkey
      :display: AutoHotkey
    :pageid: 1485612
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/3/36/AutoHotkey_logo.png
      :width: 241
      :height: 78
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/3/36/AutoHotkey_logo.png
      :width: 241
      :height: 78
    :lang: en
    :dir: ltr
    :revision: '981745000'
    :tid: 43684cb0-2d29-11eb-aa86-e197378eab26
    :timestamp: '2020-10-04T05:46:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AutoHotkey
        :revisions: https://en.wikipedia.org/wiki/AutoHotkey?action=history
        :edit: https://en.wikipedia.org/wiki/AutoHotkey?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AutoHotkey
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AutoHotkey
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AutoHotkey
        :edit: https://en.m.wikipedia.org/wiki/AutoHotkey?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AutoHotkey
    :extract: AutoHotkey is a free, open-source custom scripting language for Microsoft
      Windows, initially aimed at providing easy keyboard shortcuts or hotkeys, fast
      macro-creation and software automation that allows users of most levels of computer
      skill to automate repetitive tasks in any Windows application. User interfaces
      can easily be extended or modified by AutoHotkey. The AutoHotkey installation
      includes its own extensive help file, and web-based documentation is also available.
    :extract_html: "<p><b>AutoHotkey</b> is a free, open-source custom scripting language
      for Microsoft Windows, initially aimed at providing easy keyboard shortcuts
      or hotkeys, fast macro-creation and software automation that allows users of
      most levels of computer skill to automate repetitive tasks in any Windows application.
      User interfaces can easily be extended or modified by AutoHotkey. The AutoHotkey
      installation includes its own extensive help file, and web-based documentation
      is also available.</p>"
  record/25ef6c4b-c8a1-46de-a64e-9b3b481fd4d3:
    :type: standard
    :title: AngelScript
    :displaytitle: AngelScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2366
    :titles:
      :canonical: AngelScript
      :normalized: AngelScript
      :display: AngelScript
    :pageid: 39538319
    :lang: en
    :dir: ltr
    :revision: '978670740'
    :tid: d481f170-2cc4-11eb-91b1-133e7f124f6f
    :timestamp: '2020-09-16T08:19:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AngelScript
        :revisions: https://en.wikipedia.org/wiki/AngelScript?action=history
        :edit: https://en.wikipedia.org/wiki/AngelScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AngelScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AngelScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AngelScript
        :edit: https://en.m.wikipedia.org/wiki/AngelScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AngelScript
    :extract: AngelScript is a game-oriented compiled scripting language.
    :extract_html: "<p><b>AngelScript</b> is a game-oriented compiled scripting language.</p>"
  record/22d84d6b-2685-498b-a462-9193046cefed:
    :type: standard
    :title: Pro*C
    :displaytitle: Pro*C
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2111340
    :titles:
      :canonical: Pro*C
      :normalized: Pro*C
      :display: Pro*C
    :pageid: 13142178
    :lang: en
    :dir: ltr
    :revision: '947160692'
    :tid: 703db290-f046-11ea-800f-c55df2a30449
    :timestamp: '2020-03-24T17:37:40Z'
    :description: embedded SQL programming language used by Oracle Database management
      systems
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pro*C
        :revisions: https://en.wikipedia.org/wiki/Pro*C?action=history
        :edit: https://en.wikipedia.org/wiki/Pro*C?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pro*C
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pro*C
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pro*C
        :edit: https://en.m.wikipedia.org/wiki/Pro*C?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pro*C
    :extract: Pro*C is an embedded SQL programming language used by Oracle Database
      DBMSes. Pro*C uses either C or C++ as its host language. During compilation,
      the embedded SQL statements are interpreted by a precompiler and replaced by
      C or C++ function calls to their respective SQL library. The output from the
      Pro*C precompiler is standard C or C++ code that is then compiled by any one
      of several C or C++ compilers into an executable.
    :extract_html: "<p><b>Pro*C</b> is an embedded SQL programming language used by
      Oracle Database DBMSes. Pro*C uses either C or C++ as its host language. During
      compilation, the embedded SQL statements are interpreted by a precompiler and
      replaced by C or C++ function calls to their respective SQL library. The output
      from the Pro*C precompiler is standard C or C++ code that is then compiled by
      any one of several C or C++ compilers into an executable.</p>"
  record/1a730dbf-afd4-49ae-b6d9-482be16c9bd0:
    :type: standard
    :title: Magma (computer algebra system)
    :displaytitle: Magma (computer algebra system)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3032255
    :titles:
      :canonical: Magma_(computer_algebra_system)
      :normalized: Magma (computer algebra system)
      :display: Magma (computer algebra system)
    :pageid: 98628
    :lang: en
    :dir: ltr
    :revision: '954031449'
    :tid: fffe6a50-2d27-11eb-aef1-036b9ed9e53f
    :timestamp: '2020-04-30T09:18:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Magma_(computer_algebra_system)
        :revisions: https://en.wikipedia.org/wiki/Magma_(computer_algebra_system)?action=history
        :edit: https://en.wikipedia.org/wiki/Magma_(computer_algebra_system)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Magma_(computer_algebra_system)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Magma_(computer_algebra_system)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Magma_(computer_algebra_system)
        :edit: https://en.m.wikipedia.org/wiki/Magma_(computer_algebra_system)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Magma_(computer_algebra_system)
    :extract: Magma is a computer algebra system designed to solve problems in algebra,
      number theory, geometry and combinatorics. It is named after the algebraic structure
      magma. It runs on Unix-like operating systems, as well as Windows.
    :extract_html: "<p><b>Magma</b> is a computer algebra system designed to solve
      problems in algebra, number theory, geometry and combinatorics. It is named
      after the algebraic structure magma. It runs on Unix-like operating systems,
      as well as Windows.</p>"
  record/ed71cd15-fee7-412e-8440-eef12fbc41e3:
    :type: standard
    :title: EXEC 2
    :displaytitle: EXEC 2
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5324679
    :titles:
      :canonical: EXEC_2
      :normalized: EXEC 2
      :display: EXEC 2
    :pageid: 9424829
    :lang: en
    :dir: ltr
    :revision: '987064889'
    :tid: 8993f640-1ec8-11eb-8775-7db4f45d9038
    :timestamp: '2020-11-04T18:06:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/EXEC_2
        :revisions: https://en.wikipedia.org/wiki/EXEC_2?action=history
        :edit: https://en.wikipedia.org/wiki/EXEC_2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:EXEC_2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/EXEC_2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/EXEC_2
        :edit: https://en.m.wikipedia.org/wiki/EXEC_2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:EXEC_2
    :extract: EXEC 2 is an interpreted, command procedure control, computer scripting
      language used by the EXEC 2 Processor supplied with the IBM Virtual Machine/System
      Product (VM/SP) operating system.
    :extract_html: "<p><b>EXEC 2</b> is an interpreted, command procedure control,
      computer scripting language used by the EXEC 2 Processor supplied with the IBM
      Virtual Machine/System Product (VM/SP) operating system.</p>"
  record/7cffec61-1d1b-401f-b22b-d9f1f6833917:
    :type: standard
    :title: Euphoria (programming language)
    :displaytitle: Euphoria (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1374139
    :titles:
      :canonical: Euphoria_(programming_language)
      :normalized: Euphoria (programming language)
      :display: Euphoria (programming language)
    :pageid: 9647
    :lang: en
    :dir: ltr
    :revision: '985389165'
    :tid: 69be4710-3040-11eb-8546-b35add938b50
    :timestamp: '2020-10-25T17:50:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Euphoria_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Euphoria_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Euphoria_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Euphoria_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Euphoria_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Euphoria_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Euphoria_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Euphoria_(programming_language)
    :extract: Euphoria is a programming language created by Robert Craig of Rapid
      Deployment Software in Toronto, Ontario, Canada. Initially developed on the
      Atari ST, the first commercial release was for the 16-bit DOS platform and was
      proprietary. In 2006, with the release of version 3, Euphoria became open-source
      software. The openEuphoria Group continues to administer and develop the project.
      In December 2010, the openEuphoria Group released version 4 of openEuphoria
      along with a new identity and mascot for the project. OpenEuphoria is currently
      available for Windows, Linux, macOS and three flavors of *BSD.
    :extract_html: "<p><b>Euphoria</b> is a programming language created by Robert
      Craig of Rapid Deployment Software in Toronto, Ontario, Canada. Initially developed
      on the Atari ST, the first commercial release was for the 16-bit DOS platform
      and was proprietary. In 2006, with the release of version 3, Euphoria became
      open-source software. The openEuphoria Group continues to administer and develop
      the project. In December 2010, the openEuphoria Group released version 4 of
      openEuphoria along with a new identity and mascot for the project. OpenEuphoria
      is currently available for Windows, Linux, macOS and three flavors of *BSD.</p>"
  record/b8c3dc04-d651-4565-9705-e7c8619608b7:
    :type: standard
    :title: Pascal Script
    :displaytitle: Pascal Script
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16616746
    :titles:
      :canonical: Pascal_Script
      :normalized: Pascal Script
      :display: Pascal Script
    :pageid: 31788384
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/17/Pascal_Script_3_Lazarus_IDE.png/320px-Pascal_Script_3_Lazarus_IDE.png
      :width: 320
      :height: 180
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/17/Pascal_Script_3_Lazarus_IDE.png
      :width: 1920
      :height: 1080
    :lang: en
    :dir: ltr
    :revision: '950224197'
    :tid: f17f53e0-2a61-11eb-82a3-95fde0f8b2d3
    :timestamp: '2020-04-10T21:51:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pascal_Script
        :revisions: https://en.wikipedia.org/wiki/Pascal_Script?action=history
        :edit: https://en.wikipedia.org/wiki/Pascal_Script?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pascal_Script
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pascal_Script
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pascal_Script
        :edit: https://en.m.wikipedia.org/wiki/Pascal_Script?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pascal_Script
    :extract: Pascal Script is a scripting language based on the programming language
      Pascal that facilitates automated runtime control over scriptable applications
      and server software. It is implemented by a free scripting engine that includes
      a compiler and an interpreter for byte code.
    :extract_html: "<p><b>Pascal Script</b> is a scripting language based on the programming
      language Pascal that facilitates automated runtime control over scriptable applications
      and server software. It is implemented by a free scripting engine that includes
      a compiler and an interpreter for byte code.</p>"
  record/035f8407-878b-44de-be8d-946b1e093abf:
    :type: standard
    :title: R (programming language)
    :displaytitle: R (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q206904
    :titles:
      :canonical: R_(programming_language)
      :normalized: R (programming language)
      :display: R (programming language)
    :pageid: 376707
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/0/01/R_terminal.jpg/320px-R_terminal.jpg
      :width: 320
      :height: 221
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/01/R_terminal.jpg
      :width: 683
      :height: 472
    :lang: en
    :dir: ltr
    :revision: '991678630'
    :tid: 2ceff680-33ab-11eb-b507-61594fc963c8
    :timestamp: '2020-12-01T07:59:36Z'
    :description: Language and environment for statistical computing and graphics
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/R_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/R_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/R_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:R_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/R_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/R_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/R_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:R_(programming_language)
    :extract: R is a programming language and free software environment for statistical
      computing and graphics supported by the R Foundation for Statistical Computing.
      The R language is widely used among statisticians and data miners for developing
      statistical software and data analysis. Polls, data mining surveys, and studies
      of scholarly literature databases show substantial increases in popularity;
      as of September 2020, R ranks 9th in the TIOBE index, a measure of popularity
      of programming languages.
    :extract_html: "<p><b>R</b> is a programming language and free software environment
      for statistical computing and graphics supported by the R Foundation for Statistical
      Computing. The R language is widely used among statisticians and data miners
      for developing statistical software and data analysis. Polls, data mining surveys,
      and studies of scholarly literature databases show substantial increases in
      popularity; as of September 2020, R ranks 9th in the TIOBE index, a measure
      of popularity of programming languages.</p>"
  record/9e03389c-f3f6-4457-a2c6-e4dbaef25c69:
    :type: standard
    :title: ALGOL 58
    :displaytitle: ALGOL 58
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1094499
    :titles:
      :canonical: ALGOL_58
      :normalized: ALGOL 58
      :display: ALGOL 58
    :pageid: 944870
    :lang: en
    :dir: ltr
    :revision: '989940315'
    :tid: f7053900-2ca6-11eb-a2e0-9575b3f9100b
    :timestamp: '2020-11-21T21:42:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ALGOL_58
        :revisions: https://en.wikipedia.org/wiki/ALGOL_58?action=history
        :edit: https://en.wikipedia.org/wiki/ALGOL_58?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ALGOL_58
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ALGOL_58
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ALGOL_58
        :edit: https://en.m.wikipedia.org/wiki/ALGOL_58?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ALGOL_58
    :extract: |
      ALGOL 58, originally named IAL, is one of the family of ALGOL computer programming languages. It was an early compromise design soon superseded by ALGOL 60. According to John Backus
      "The Zurich ACM-GAMM Conference had two principal motives in proposing the IAL: (a) To provide a means of communicating numerical methods and other procedures between people, and (b) To provide a means of realizing a stated process on a variety of machines..."
    :extract_html: |-
      <p><b>ALGOL 58</b>, originally named <b>IAL</b>, is one of the family of ALGOL computer programming languages. It was an early compromise design soon superseded by ALGOL 60. According to John Backus</p><blockquote>
      <p>"The Zurich ACM-GAMM Conference had two principal motives in proposing the IAL: (a) To provide a means of communicating numerical methods and other procedures between people, and (b) To provide a means of realizing a stated process on a variety of machines..."</p>
      </blockquote>
  record/e86268df-a5b7-4858-9cc8-3b9debedb40b:
    :type: standard
    :title: GAP (computer algebra system)
    :displaytitle: GAP (computer algebra system)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q677161
    :titles:
      :canonical: GAP_(computer_algebra_system)
      :normalized: GAP (computer algebra system)
      :display: GAP (computer algebra system)
    :pageid: 262144
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/63/GAP_computer_algebra_system_icon.png
      :width: 256
      :height: 256
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/63/GAP_computer_algebra_system_icon.png
      :width: 256
      :height: 256
    :lang: en
    :dir: ltr
    :revision: '985048217'
    :tid: '01489d90-2d28-11eb-a025-db93e267e233'
    :timestamp: '2020-10-23T17:09:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GAP_(computer_algebra_system)
        :revisions: https://en.wikipedia.org/wiki/GAP_(computer_algebra_system)?action=history
        :edit: https://en.wikipedia.org/wiki/GAP_(computer_algebra_system)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GAP_(computer_algebra_system)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GAP_(computer_algebra_system)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GAP_(computer_algebra_system)
        :edit: https://en.m.wikipedia.org/wiki/GAP_(computer_algebra_system)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GAP_(computer_algebra_system)
    :extract: GAP is a computer algebra system for computational discrete algebra
      with particular emphasis on computational group theory.
    :extract_html: "<p><b>GAP</b> is a computer algebra system for computational discrete
      algebra with particular emphasis on computational group theory.</p>"
  record/d3b25633-e238-4145-b8e1-56e9516ac789:
    :type: standard
    :title: Janus (concurrent constraint programming language)
    :displaytitle: Janus (concurrent constraint programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6155940
    :titles:
      :canonical: Janus_(concurrent_constraint_programming_language)
      :normalized: Janus (concurrent constraint programming language)
      :display: Janus (concurrent constraint programming language)
    :pageid: 50304023
    :lang: en
    :dir: ltr
    :revision: '933242889'
    :tid: c40e5800-3193-11eb-af2f-b75b66042be1
    :timestamp: '2019-12-30T19:46:38Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)
        :revisions: https://en.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Janus_(concurrent_constraint_programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Janus_(concurrent_constraint_programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Janus_(concurrent_constraint_programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Janus_(concurrent_constraint_programming_language)
    :extract: Janus is a computer programming language partially described by K. Kahn
      and Vijay A. Saraswat in the paper "Actors as a special case of concurrent constraint
      (logic) programming" in 1990. It is a concurrent constraint language without
      backtracking.
    :extract_html: <p><b>Janus</b> is a computer programming language partially described
      by K. Kahn and Vijay A. Saraswat in the paper "Actors as a special case of concurrent
      constraint (logic) programming" in 1990. It is a concurrent constraint language
      without backtracking.</p>
  record/c0b978a8-0beb-4075-a917-4a70da712418:
    :type: standard
    :title: Not Quite C
    :displaytitle: Not Quite C
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1783709
    :titles:
      :canonical: Not_Quite_C
      :normalized: Not Quite C
      :display: Not Quite C
    :pageid: 969174
    :lang: en
    :dir: ltr
    :revision: '965176599'
    :tid: 060de440-346f-11eb-8c11-e3bbed0ea2d4
    :timestamp: '2020-06-29T20:43:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Not_Quite_C
        :revisions: https://en.wikipedia.org/wiki/Not_Quite_C?action=history
        :edit: https://en.wikipedia.org/wiki/Not_Quite_C?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Not_Quite_C
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Not_Quite_C
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Not_Quite_C
        :edit: https://en.m.wikipedia.org/wiki/Not_Quite_C?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Not_Quite_C
    :extract: Not Quite C (NQC) is a programming language, application programming
      interface (API), and native bytecode compiler toolkit for the Lego Mindstorms,
      Cybermaster and LEGO Spybotics systems. It is based primarily on the C language
      but has specific limitations, such as the maximum number of subroutines and
      variables allowed, which differ depending on the version of firmware the RCX
      has. The language was invented by David Baum. He has released two books on the
      subject.
    :extract_html: "<p><b>Not Quite C</b> (<b>NQC</b>) is a programming language,
      application programming interface (API), and native bytecode compiler toolkit
      for the Lego Mindstorms, Cybermaster and LEGO Spybotics systems. It is based
      primarily on the C language but has specific limitations, such as the maximum
      number of subroutines and variables allowed, which differ depending on the version
      of firmware the RCX has. The language was invented by David Baum. He has released
      two books on the subject.</p>"
  record/e44e367a-f565-440c-b009-a54d88174293:
    :type: standard
    :title: TECO (text editor)
    :displaytitle: TECO (text editor)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1547448
    :titles:
      :canonical: TECO_(text_editor)
      :normalized: TECO (text editor)
      :display: TECO (text editor)
    :pageid: 30449
    :lang: en
    :dir: ltr
    :revision: '978264979'
    :tid: 26d5b7b0-3376-11eb-bd22-bf907eccf984
    :timestamp: '2020-09-13T21:49:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TECO_(text_editor)
        :revisions: https://en.wikipedia.org/wiki/TECO_(text_editor)?action=history
        :edit: https://en.wikipedia.org/wiki/TECO_(text_editor)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TECO_(text_editor)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TECO_(text_editor)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TECO_(text_editor)
        :edit: https://en.m.wikipedia.org/wiki/TECO_(text_editor)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TECO_(text_editor)
    :extract: TECO, Text Editor & Corrector is both a character-oriented text editor
      and a programming language, that was developed in 1962 for use on Digital Equipment
      Corporation computers, and has since become available on PCs and Unix. Dan Murphy
      developed TECO while a student at the Massachusetts Institute of Technology
      (MIT).
    :extract_html: "<p><b>TECO</b>, Text Editor &amp; Corrector is both a character-oriented
      text editor and a programming language, that was developed in 1962 for use on
      Digital Equipment Corporation computers, and has since become available on PCs
      and Unix. Dan Murphy developed TECO while a student at the Massachusetts Institute
      of Technology (MIT).</p>"
  record/5d0022d1-5898-45f6-aba1-a668cb36af79:
    :type: standard
    :title: Delphi (software)
    :displaytitle: Delphi (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q487378
    :titles:
      :canonical: Delphi_(software)
      :normalized: Delphi (software)
      :display: Delphi (software)
    :pageid: 349208
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/b/b2/Embarcadero_Delphi_10.4_Sydney_Product_Logo_and_Icon.svg/320px-Embarcadero_Delphi_10.4_Sydney_Product_Logo_and_Icon.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/b/b2/Embarcadero_Delphi_10.4_Sydney_Product_Logo_and_Icon.svg/512px-Embarcadero_Delphi_10.4_Sydney_Product_Logo_and_Icon.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '992259028'
    :tid: 8fac8280-3616-11eb-be00-3554307d4181
    :timestamp: '2020-12-04T09:53:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Delphi_(software)
        :revisions: https://en.wikipedia.org/wiki/Delphi_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/Delphi_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Delphi_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Delphi_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Delphi_(software)
        :edit: https://en.m.wikipedia.org/wiki/Delphi_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Delphi_(software)
    :extract: Delphi is a software product that uses the Delphi dialect of the Object
      Pascal programming language and provides an integrated development environment
      (IDE) for rapid application development of desktop, mobile, web, and console
      software, currently developed and maintained by Embarcadero Technologies.
    :extract_html: "<p><b>Delphi</b> is a software product that uses the Delphi dialect
      of the Object Pascal programming language and provides an integrated development
      environment (IDE) for rapid application development of desktop, mobile, web,
      and console software, currently developed and maintained by Embarcadero Technologies.</p>"
  record/6f177a86-68e7-4089-9eac-01c36eb09528:
    :type: standard
    :title: Common Lisp
    :displaytitle: Common Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q849146
    :titles:
      :canonical: Common_Lisp
      :normalized: Common Lisp
      :display: Common Lisp
    :pageid: 6068
    :lang: en
    :dir: ltr
    :revision: '992014266'
    :tid: 3dedc9e0-3503-11eb-aef1-036b9ed9e53f
    :timestamp: '2020-12-03T01:02:30Z'
    :description: ANSI-standardized dialect of Lisp
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Common_Lisp
        :revisions: https://en.wikipedia.org/wiki/Common_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Common_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Common_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Common_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Common_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Common_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Common_Lisp
    :extract: Common Lisp (CL) is a dialect of the Lisp programming language, published
      in ANSI standard document ANSI INCITS 226-1994 [S2008]. The Common Lisp HyperSpec,
      a hyperlinked HTML version, has been derived from the ANSI Common Lisp standard.
    :extract_html: "<p><b>Common Lisp</b> (<b>CL</b>) is a dialect of the Lisp programming
      language, published in ANSI standard document <i>ANSI INCITS 226-1994 [S2008]</i>.
      The Common Lisp HyperSpec, a hyperlinked HTML version, has been derived from
      the ANSI Common Lisp standard.</p>"
  record/8279d291-dab0-4a8b-b2bb-bb82c2693ac1:
    :type: standard
    :title: LotusScript
    :displaytitle: LotusScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3260092
    :titles:
      :canonical: LotusScript
      :normalized: LotusScript
      :display: LotusScript
    :pageid: 239268
    :lang: en
    :dir: ltr
    :revision: '973194912'
    :tid: 839ccad0-23ac-11eb-96d4-8946fc466132
    :timestamp: '2020-08-15T22:24:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LotusScript
        :revisions: https://en.wikipedia.org/wiki/LotusScript?action=history
        :edit: https://en.wikipedia.org/wiki/LotusScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LotusScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LotusScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LotusScript
        :edit: https://en.m.wikipedia.org/wiki/LotusScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LotusScript
    :extract: LotusScript is an object oriented programming language used by Lotus
      Notes and other IBM Lotus Software products.
    :extract_html: "<p><b>LotusScript</b> is an object oriented programming language
      used by Lotus Notes and other IBM Lotus Software products.</p>"
  record/37fe3571-9440-4910-9f40-3291a4953592:
    :type: standard
    :title: Opa (programming language)
    :displaytitle: Opa (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3353033
    :titles:
      :canonical: Opa_(programming_language)
      :normalized: Opa (programming language)
      :display: Opa (programming language)
    :pageid: 32976878
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/6/64/Opa_logo_cloud.png
      :width: 66
      :height: 43
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/6/64/Opa_logo_cloud.png
      :width: 66
      :height: 43
    :lang: en
    :dir: ltr
    :revision: '956139582'
    :tid: 52537350-2dea-11eb-bfab-4fe1a5485e9b
    :timestamp: '2020-05-11T18:15:25Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Opa_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Opa_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Opa_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Opa_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Opa_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Opa_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Opa_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Opa_(programming_language)
    :extract: Opa is an open-source programming language for developing scalable web
      applications.
    :extract_html: "<p><b>Opa</b> is an open-source programming language for developing
      scalable web applications.</p>"
  record/7fbcca1f-68cf-4757-b365-171ba82fc07a:
    :type: standard
    :title: Maple (software)
    :displaytitle: Maple (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q139380
    :titles:
      :canonical: Maple_(software)
      :normalized: Maple (software)
      :display: Maple (software)
    :pageid: 79099
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/7/7c/Maple_2016_Core_Screenshots.jpg/320px-Maple_2016_Core_Screenshots.jpg
      :width: 320
      :height: 286
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/7/7c/Maple_2016_Core_Screenshots.jpg
      :width: 1955
      :height: 1750
    :lang: en
    :dir: ltr
    :revision: '979631119'
    :tid: 86c57b40-3053-11eb-a750-7373480aaaa3
    :timestamp: '2020-09-21T20:51:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Maple_(software)
        :revisions: https://en.wikipedia.org/wiki/Maple_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/Maple_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Maple_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Maple_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Maple_(software)
        :edit: https://en.m.wikipedia.org/wiki/Maple_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Maple_(software)
    :extract: Maple is a symbolic and numeric computing environment as well as a multi-paradigm
      programming language. It covers several areas of technical computing, such as
      symbolic mathematics, numerical analysis, data processing, visualization, and
      others. A toolbox, MapleSim, adds functionality for multidomain physical modeling
      and code generation.
    :extract_html: "<p><b>Maple</b> is a symbolic and numeric computing environment
      as well as a multi-paradigm programming language. It covers several areas of
      technical computing, such as symbolic mathematics, numerical analysis, data
      processing, visualization, and others. A toolbox, MapleSim, adds functionality
      for multidomain physical modeling and code generation.</p>"
  record/9276f68e-0691-46a0-abbd-fee957b66ebd:
    :type: standard
    :title: Hop (software)
    :displaytitle: Hop (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3140351
    :titles:
      :canonical: Hop_(software)
      :normalized: Hop (software)
      :display: Hop (software)
    :pageid: 13433106
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Hop_logo.svg/320px-Hop_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Hop_logo.svg/150px-Hop_logo.svg.png
      :width: 150
      :height: 150
    :lang: en
    :dir: ltr
    :revision: '986868800'
    :tid: e78c6a80-2133-11eb-87fe-83c3e570bde9
    :timestamp: '2020-11-03T13:41:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hop_(software)
        :revisions: https://en.wikipedia.org/wiki/Hop_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/Hop_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hop_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hop_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hop_(software)
        :edit: https://en.m.wikipedia.org/wiki/Hop_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hop_(software)
    :extract: Hop is a Lisp-like programming language by Manuel Serrano for web 2.0
      and also the name of the web broker that implements this language. It is written
      in Bigloo Scheme. It is a project funded by INRIA.
    :extract_html: "<p><b>Hop</b> is a Lisp-like programming language by Manuel Serrano
      for web 2.0 and also the name of the web broker that implements this language.
      It is written in Bigloo Scheme. It is a project funded by INRIA.</p>"
  record/1d885e31-c30a-4775-85bd-7d44cc86ab72:
    :type: standard
    :title: Modula-2
    :displaytitle: Modula-2
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q777358
    :titles:
      :canonical: Modula-2
      :normalized: Modula-2
      :display: Modula-2
    :pageid: 24102707
    :lang: en
    :dir: ltr
    :revision: '991552742'
    :tid: c473b1f0-3332-11eb-b55b-7f121f09ac43
    :timestamp: '2020-11-30T17:37:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Modula-2
        :revisions: https://en.wikipedia.org/wiki/Modula-2?action=history
        :edit: https://en.wikipedia.org/wiki/Modula-2?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Modula-2
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Modula-2
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Modula-2
        :edit: https://en.m.wikipedia.org/wiki/Modula-2?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Modula-2
    :extract: Modula-2 is a structured, procedural programming language developed
      between 1977 and 1985 by Niklaus Wirth at ETH Zurich. It was created as the
      language for the operating system (OS) and application software of the Lilith
      personal workstation. It was later used for programming outside the context
      of the Lilith.
    :extract_html: "<p><b>Modula-2</b> is a structured, procedural programming language
      developed between 1977 and 1985 by Niklaus Wirth at ETH Zurich. It was created
      as the language for the operating system (OS) and application software of the
      Lilith personal workstation. It was later used for programming outside the context
      of the Lilith.</p>"
  record/1de0c411-603a-4a4c-b23e-7f707c10f0ac:
    :type: standard
    :title: Yoix
    :displaytitle: Yoix
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7475378
    :titles:
      :canonical: Yoix
      :normalized: Yoix
      :display: Yoix
    :pageid: 2248859
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f4/Yoixlogo.png
      :width: 188
      :height: 119
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/f4/Yoixlogo.png
      :width: 188
      :height: 119
    :lang: en
    :dir: ltr
    :revision: '956148257'
    :tid: 51152150-35c9-11eb-8408-65851acc951c
    :timestamp: '2020-05-11T19:04:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Yoix
        :revisions: https://en.wikipedia.org/wiki/Yoix?action=history
        :edit: https://en.wikipedia.org/wiki/Yoix?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Yoix
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Yoix
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Yoix
        :edit: https://en.m.wikipedia.org/wiki/Yoix?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Yoix
    :extract: In computer programming, Yoix is a high-level, general-purpose, interpreted,
      dynamic programming language. The Yoix interpreter is implemented using standard
      Java technology without any add-on packages and requires only a Sun-compliant
      JVM to operate. Initially developed by AT&T Labs researchers for internal use,
      it has been available as free and open source software since late 2000.
    :extract_html: "<p>In computer programming, <b>Yoix</b> is a high-level, general-purpose,
      interpreted, dynamic programming language. The Yoix interpreter is implemented
      using standard Java technology without any add-on packages and requires only
      a Sun-compliant JVM to operate. Initially developed by AT&amp;T Labs researchers
      for internal use, it has been available as free and open source software since
      late 2000.</p>"
  record/845edf9f-3087-498f-8933-901bca94243a:
    :type: standard
    :title: Solidity
    :displaytitle: Solidity
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q24909565
    :titles:
      :canonical: Solidity
      :normalized: Solidity
      :display: Solidity
    :pageid: 6817996
    :lang: en
    :dir: ltr
    :revision: '991898655'
    :tid: 9827b7b0-34ca-11eb-9eaf-e583d4b23627
    :timestamp: '2020-12-02T11:30:35Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Solidity
        :revisions: https://en.wikipedia.org/wiki/Solidity?action=history
        :edit: https://en.wikipedia.org/wiki/Solidity?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Solidity
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Solidity
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Solidity
        :edit: https://en.m.wikipedia.org/wiki/Solidity?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Solidity
    :extract: Solidity is an object-oriented programming language for writing smart
      contracts. It is used for implementing smart contracts on various blockchain
      platforms, most notably, Ethereum. It was developed by Christian Reitwiessner,
      Alex Beregszaszi, and several former Ethereum core contributors to enable writing
      smart contracts on blockchain platforms such as Ethereum.
    :extract_html: "<p><b>Solidity</b> is an object-oriented programming language
      for writing smart contracts. It is used for implementing smart contracts on
      various blockchain platforms, most notably, Ethereum. It was developed by Christian
      Reitwiessner, Alex Beregszaszi, and several former Ethereum core contributors
      to enable writing smart contracts on blockchain platforms such as Ethereum.</p>"
  record/2a5c7d3d-33f1-4a94-8053-3fb7be22ce98:
    :type: standard
    :title: F* (programming language)
    :displaytitle: F* (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5423569
    :titles:
      :canonical: F*_(programming_language)
      :normalized: F* (programming language)
      :display: F* (programming language)
    :pageid: 38420593
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b1/Fstar-official-logo-2015.png/320px-Fstar-official-logo-2015.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/b/b1/Fstar-official-logo-2015.png
      :width: 1000
      :height: 1000
    :lang: en
    :dir: ltr
    :revision: '974053226'
    :tid: 04224070-34e9-11eb-a7d3-818c58fd3729
    :timestamp: '2020-08-20T20:34:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/F*_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/F*_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/F*_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:F*_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/F*_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/F*_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/F*_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:F*_(programming_language)
    :extract: |-
      F* is a functional programming language inspired by ML and aimed at program verification. Its type system includes dependent types, monadic effects, and refinement types. This allows expressing precise specifications for programs, including functional correctness and security properties. The F* type-checker aims to prove that programs meet their specifications using a combination of SMT solving and manual proofs.
      Programs written in F* can be translated to OCaml, F#, and C for execution. Previous versions of F* could also be translated to JavaScript.
    :extract_html: |-
      <p><b>F*</b> is a functional programming language inspired by ML and aimed at program verification. Its type system includes dependent types, monadic effects, and refinement types. This allows expressing precise specifications for programs, including functional correctness and security properties. The F* type-checker aims to prove that programs meet their specifications using a combination of SMT solving and manual proofs.
      Programs written in F* can be translated to OCaml, F#, and C for execution. Previous versions of F* could also be translated to JavaScript.</p>
  record/1cdda95d-a6fc-4837-9cb6-351cb8d1b774:
    :type: standard
    :title: COMTRAN
    :displaytitle: COMTRAN
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5013384
    :titles:
      :canonical: COMTRAN
      :normalized: COMTRAN
      :display: COMTRAN
    :pageid: 4292196
    :lang: en
    :dir: ltr
    :revision: '956131488'
    :tid: c514e020-17f8-11eb-b510-db0ccc59eb01
    :timestamp: '2020-05-11T17:30:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COMTRAN
        :revisions: https://en.wikipedia.org/wiki/COMTRAN?action=history
        :edit: https://en.wikipedia.org/wiki/COMTRAN?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COMTRAN
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COMTRAN
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COMTRAN
        :edit: https://en.m.wikipedia.org/wiki/COMTRAN?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COMTRAN
    :extract: COMTRAN is an early programming language developed at IBM. It was intended
      as the business programming equivalent of the scientific programming language
      FORTRAN. It served as one of the forerunners to the COBOL language. Developed
      by Bob Bemer, in 1957, the language was the first to feature the programming
      language element known as a picture clause.
    :extract_html: "<p><b>COMTRAN</b> is an early programming language developed at
      IBM. It was intended as the business programming equivalent of the scientific
      programming language FORTRAN. It served as one of the forerunners to the COBOL
      language. Developed by Bob Bemer, in 1957, the language was the first to feature
      the programming language element known as a picture clause.</p>"
  record/9aee88ab-4900-4650-ba2a-9cdb72ebed76:
    :type: standard
    :title: CMS Pipelines
    :displaytitle: CMS Pipelines
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5675045
    :titles:
      :canonical: CMS_Pipelines
      :normalized: CMS Pipelines
      :display: CMS Pipelines
    :pageid: 692211
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0c/Pipjarg1.jpeg
      :width: 188
      :height: 126
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/0/0c/Pipjarg1.jpeg
      :width: 188
      :height: 126
    :lang: en
    :dir: ltr
    :revision: '969336004'
    :tid: f436e5e0-20b5-11eb-a76e-2fe5f0ccb7f5
    :timestamp: '2020-07-24T20:02:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CMS_Pipelines
        :revisions: https://en.wikipedia.org/wiki/CMS_Pipelines?action=history
        :edit: https://en.wikipedia.org/wiki/CMS_Pipelines?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CMS_Pipelines
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CMS_Pipelines
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CMS_Pipelines
        :edit: https://en.m.wikipedia.org/wiki/CMS_Pipelines?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CMS_Pipelines
    :extract: CMS Pipelines implements the pipeline concept under the VM/CMS operating
      system. The programs in a pipeline operate on a sequential stream of records.
      A program writes records that are read by the next program in the pipeline.
      Any program can be combined with any other because reading and writing is done
      through a device independent interface.
    :extract_html: "<p><b>CMS Pipelines</b> implements the pipeline concept under
      the VM/CMS operating system. The programs in a pipeline operate on a sequential
      stream of records. A program writes records that are read by the next program
      in the pipeline. Any program can be combined with any other because reading
      and writing is done through a device independent interface.</p>"
  record/ba9492d3-7f68-49f9-89db-601c1e667280:
    :type: standard
    :title: COWSEL
    :displaytitle: COWSEL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5013542
    :titles:
      :canonical: COWSEL
      :normalized: COWSEL
      :display: COWSEL
    :pageid: 94451
    :lang: en
    :dir: ltr
    :revision: '973681407'
    :tid: 2c95fae0-1f0b-11eb-a5d3-9b584abc1b36
    :timestamp: '2020-08-18T16:25:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COWSEL
        :revisions: https://en.wikipedia.org/wiki/COWSEL?action=history
        :edit: https://en.wikipedia.org/wiki/COWSEL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COWSEL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COWSEL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COWSEL
        :edit: https://en.m.wikipedia.org/wiki/COWSEL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COWSEL
    :extract: COWSEL is a programming language designed between 1964 and 1966 by Robin
      Popplestone. It was based on an RPN form of Lisp combined with some ideas from
      CPL.
    :extract_html: "<p><b>COWSEL</b> is a programming language designed between 1964
      and 1966 by Robin Popplestone. It was based on an RPN form of Lisp combined
      with some ideas from CPL.</p>"
  record/dd8554b9-4cf2-412a-9272-da3408379560:
    :type: standard
    :title: APL (programming language)
    :displaytitle: APL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q296187
    :titles:
      :canonical: APL_(programming_language)
      :normalized: APL (programming language)
      :display: APL (programming language)
    :pageid: 1451
    :lang: en
    :dir: ltr
    :revision: '991418181'
    :tid: 89802b10-329b-11eb-8edf-4fa065bcbad2
    :timestamp: '2020-11-29T23:34:54Z'
    :description: Functional, symbolic programming language for operating on multidimensional
      arrays
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/APL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/APL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/APL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:APL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/APL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/APL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/APL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:APL_(programming_language)
    :extract: APL is a programming language developed in the 1960s by Kenneth E. Iverson.
      Its central datatype is the multidimensional array. It uses a large range of
      special graphic symbols to represent most functions and operators, leading to
      very concise code. It has been an important influence on the development of
      concept modeling, spreadsheets, functional programming, and computer math packages.
      It has also inspired several other programming languages.
    :extract_html: "<p><b>APL</b> is a programming language developed in the 1960s
      by Kenneth E. Iverson. Its central datatype is the multidimensional array. It
      uses a large range of special graphic symbols to represent most functions and
      operators, leading to very concise code. It has been an important influence
      on the development of concept modeling, spreadsheets, functional programming,
      and computer math packages. It has also inspired several other programming languages.</p>"
  record/b7408a67-27f7-4fab-8f5c-b9b841db560b:
    :type: standard
    :title: WebDNA
    :displaytitle: WebDNA
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7978443
    :titles:
      :canonical: WebDNA
      :normalized: WebDNA
      :display: WebDNA
    :pageid: 24964854
    :lang: en
    :dir: ltr
    :revision: '990964872'
    :tid: 3b5ec4e0-30c1-11eb-bee9-85363bfd4f6a
    :timestamp: '2020-11-27T15:00:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/WebDNA
        :revisions: https://en.wikipedia.org/wiki/WebDNA?action=history
        :edit: https://en.wikipedia.org/wiki/WebDNA?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:WebDNA
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/WebDNA
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/WebDNA
        :edit: https://en.m.wikipedia.org/wiki/WebDNA?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:WebDNA
    :extract: WebDNA is a server-side scripting, interpreted language with an embedded
      database system, specifically designed for the World Wide Web. Its primary use
      is in creating database-driven dynamic web page applications. Released in 1995,
      the name was registered as a trademark in 1998. WebDNA is currently maintained
      by WebDNA Software Corporation.
    :extract_html: "<p><b>WebDNA</b> is a server-side scripting, interpreted language
      with an embedded database system, specifically designed for the World Wide Web.
      Its primary use is in creating database-driven dynamic web page applications.
      Released in 1995, the name was registered as a trademark in 1998. WebDNA is
      currently maintained by WebDNA Software Corporation.</p>"
  record/c061733d-50c4-4397-971a-12d33dfdf8cc:
    :type: standard
    :title: OCaml
    :displaytitle: OCaml
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q212587
    :titles:
      :canonical: OCaml
      :normalized: OCaml
      :display: OCaml
    :pageid: 39652
    :lang: en
    :dir: ltr
    :revision: '991389070'
    :tid: 87a0a660-327f-11eb-a006-53198152cd8a
    :timestamp: '2020-11-29T20:14:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OCaml
        :revisions: https://en.wikipedia.org/wiki/OCaml?action=history
        :edit: https://en.wikipedia.org/wiki/OCaml?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OCaml
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OCaml
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OCaml
        :edit: https://en.m.wikipedia.org/wiki/OCaml?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OCaml
    :extract: OCaml is a general-purpose, multi-paradigm programming language which
      extends the Caml dialect of ML with object-oriented features. OCaml was created
      in 1996 by Xavier Leroy, Jérôme Vouillon, Damien Doligez, Didier Rémy, Ascánder
      Suárez, and others.
    :extract_html: "<p><b>OCaml</b> is a general-purpose, multi-paradigm programming
      language which extends the Caml dialect of ML with object-oriented features.
      OCaml was created in 1996 by Xavier Leroy, Jérôme Vouillon, Damien Doligez,
      Didier Rémy, Ascánder Suárez, and others.</p>"
  record/67d37d07-0289-4089-bd3f-7b6fde53c3b8:
    :type: standard
    :title: AutoIt
    :displaytitle: AutoIt
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q784845
    :titles:
      :canonical: AutoIt
      :normalized: AutoIt
      :display: AutoIt
    :pageid: 2281448
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/ec/AutoIT_example_script.png/320px-AutoIT_example_script.png
      :width: 320
      :height: 237
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/ec/AutoIT_example_script.png
      :width: 595
      :height: 440
    :lang: en
    :dir: ltr
    :revision: '987296023'
    :tid: f45a1630-2f17-11eb-af4b-775d9d95a0d3
    :timestamp: '2020-11-06T03:16:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AutoIt
        :revisions: https://en.wikipedia.org/wiki/AutoIt?action=history
        :edit: https://en.wikipedia.org/wiki/AutoIt?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AutoIt
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AutoIt
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AutoIt
        :edit: https://en.m.wikipedia.org/wiki/AutoIt?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AutoIt
    :extract: AutoIt is a freeware programming language for Microsoft Windows. In
      its earliest release, it was primarily intended to create automation scripts
      for Microsoft Windows programs but has since grown to include enhancements in
      both programming language design and overall functionality.
    :extract_html: "<p><b>AutoIt</b> is a freeware programming language for Microsoft
      Windows. In its earliest release, it was primarily intended to create automation
      scripts for Microsoft Windows programs but has since grown to include enhancements
      in both programming language design and overall functionality.</p>"
  record/9c2446c0-1d6b-43cf-bee0-340549bbef1e:
    :type: standard
    :title: Logo (programming language)
    :displaytitle: Logo (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q201436
    :titles:
      :canonical: Logo_(programming_language)
      :normalized: Logo (programming language)
      :display: Logo (programming language)
    :pageid: 18334
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/2c/Remi_turtlegrafik.png/320px-Remi_turtlegrafik.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/2/2c/Remi_turtlegrafik.png
      :width: 451
      :height: 451
    :lang: en
    :dir: ltr
    :revision: '989631606'
    :tid: d9121db0-3042-11eb-9ae4-d7bb24f9ead1
    :timestamp: '2020-11-20T03:06:30Z'
    :description: Computer programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Logo_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Logo_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Logo_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Logo_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Logo_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Logo_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Logo_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Logo_(programming_language)
    :extract: 'Logo is an educational programming language, designed in 1967 by Wally
      Feurzeig, Seymour Papert, and Cynthia Solomon. Logo is not an acronym: the name
      was coined by Feurzeig while he was at Bolt, Beranek and Newman, and derives
      from the Greek logos, meaning word or thought.'
    :extract_html: "<p><b>Logo</b> is an educational programming language, designed
      in 1967 by Wally Feurzeig, Seymour Papert, and Cynthia Solomon. <i>Logo</i>
      is not an acronym: the name was coined by Feurzeig while he was at Bolt, Beranek
      and Newman, and derives from the Greek <i>logos</i>, meaning <i>word</i> or
      <i>thought</i>.</p>"
  record/681dd02d-970a-424d-bcba-a066c6860521:
    :type: standard
    :title: Lisp Machine Lisp
    :displaytitle: Lisp Machine Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q730272
    :titles:
      :canonical: Lisp_Machine_Lisp
      :normalized: Lisp Machine Lisp
      :display: Lisp Machine Lisp
    :pageid: 47775
    :lang: en
    :dir: ltr
    :revision: '982810473'
    :tid: e7e17620-2ca9-11eb-bb32-8160c7866a4d
    :timestamp: '2020-10-10T13:58:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lisp_Machine_Lisp
        :revisions: https://en.wikipedia.org/wiki/Lisp_Machine_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Lisp_Machine_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lisp_Machine_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lisp_Machine_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lisp_Machine_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Lisp_Machine_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lisp_Machine_Lisp
    :extract: Lisp Machine Lisp is a programming language, a dialect of the language
      Lisp. A direct descendant of Maclisp, it was initially developed in the mid
      to late 1970s as the system programming language for the Massachusetts Institute
      of Technology (MIT) Lisp machines. Lisp Machine Lisp was also the Lisp dialect
      with the most influence on the design of Common Lisp.
    :extract_html: "<p><b>Lisp Machine Lisp</b> is a programming language, a dialect
      of the language Lisp. A direct descendant of Maclisp, it was initially developed
      in the mid to late 1970s as the system programming language for the Massachusetts
      Institute of Technology (MIT) Lisp machines. Lisp Machine Lisp was also the
      Lisp dialect with the most influence on the design of Common Lisp.</p>"
  record/b55d3ec3-d185-4541-93a1-31380a1a3c19:
    :type: standard
    :title: Nim (programming language)
    :displaytitle: Nim (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q20080327
    :titles:
      :canonical: Nim_(programming_language)
      :normalized: Nim (programming language)
      :display: Nim (programming language)
    :pageid: 45413679
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Nim-logo.png/320px-Nim-logo.png
      :width: 320
      :height: 243
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/1b/Nim-logo.png
      :width: 1187
      :height: 900
    :lang: en
    :dir: ltr
    :revision: '991823005'
    :tid: efd53310-3435-11eb-9d15-872500711633
    :timestamp: '2020-12-02T00:32:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nim_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Nim_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Nim_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nim_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nim_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nim_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Nim_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nim_(programming_language)
    :extract: Nim is an imperative, general-purpose, multi-paradigm, statically typed,
      systems, compiled programming language designed and developed by Andreas Rumpf.
      It is designed to be "efficient, expressive, and elegant", supporting metaprogramming,
      functional, message passing, procedural, and object-oriented programming styles
      by providing several features such as compile time code generation, algebraic
      data types, a foreign function interface (FFI) with C, C++, Objective-C, and
      JavaScript, as well as supporting compiling to C, C++, Objective-C, and JavaScript.
    :extract_html: <p><b>Nim</b> is an imperative, general-purpose, multi-paradigm,
      statically typed, systems, compiled programming language designed and developed
      by Andreas Rumpf. It is designed to be "efficient, expressive, and elegant",
      supporting metaprogramming, functional, message passing, procedural, and object-oriented
      programming styles by providing several features such as compile time code generation,
      algebraic data types, a foreign function interface (FFI) with C, C++, Objective-C,
      and JavaScript, as well as supporting compiling to C, C++, Objective-C, and
      JavaScript.</p>
  record/4342a397-d671-4449-80d2-a6b7227f858f:
    :type: standard
    :title: TACPOL (programming language)
    :displaytitle: TACPOL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7669188
    :titles:
      :canonical: TACPOL_(programming_language)
      :normalized: TACPOL (programming language)
      :display: TACPOL (programming language)
    :pageid: 1719114
    :lang: en
    :dir: ltr
    :revision: '881680481'
    :tid: 4f656ba0-1c45-11eb-a4d4-677cde0b36e1
    :timestamp: '2019-02-04T03:32:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TACPOL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/TACPOL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/TACPOL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TACPOL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TACPOL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TACPOL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/TACPOL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TACPOL_(programming_language)
    :extract: TACPOL is a block structured programming language developed by the United
      States Army for the TACFIRE Tactical Fire Direction command and control application.
      TACPOL is similar to PL/I.
    :extract_html: "<p><b>TACPOL</b> is a block structured programming language developed
      by the United States Army for the TACFIRE Tactical Fire Direction command and
      control application. TACPOL is similar to PL/I.</p>"
  record/428787a5-f87b-4b3b-b658-9c6e50822662:
    :type: standard
    :title: Esterel
    :displaytitle: Esterel
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q486926
    :titles:
      :canonical: Esterel
      :normalized: Esterel
      :display: Esterel
    :pageid: 1285078
    :lang: en
    :dir: ltr
    :revision: '973374119'
    :tid: 4fcc0510-1b26-11eb-a5e4-c19d1ee3371d
    :timestamp: '2020-08-16T21:38:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Esterel
        :revisions: https://en.wikipedia.org/wiki/Esterel?action=history
        :edit: https://en.wikipedia.org/wiki/Esterel?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Esterel
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Esterel
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Esterel
        :edit: https://en.m.wikipedia.org/wiki/Esterel?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Esterel
    :extract: Esterel is a synchronous programming language for the development of
      complex reactive systems. The imperative programming style of Esterel allows
      the simple expression of parallelism and preemption. As a consequence, it is
      well suited for control-dominated model designs.
    :extract_html: "<p><b>Esterel</b> is a synchronous programming language for the
      development of complex reactive systems. The imperative programming style of
      <b>Esterel</b> allows the simple expression of parallelism and preemption. As
      a consequence, it is well suited for control-dominated model designs.</p>"
  record/bce06dba-37fe-4175-9819-fc74846b3753:
    :type: standard
    :title: Scripting language
    :displaytitle: Scripting language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q187432
    :titles:
      :canonical: Scripting_language
      :normalized: Scripting language
      :display: Scripting language
    :pageid: 21490336
    :lang: en
    :dir: ltr
    :revision: '992221431'
    :tid: cf3af280-35e2-11eb-91e0-93ea397ac371
    :timestamp: '2020-12-04T03:42:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Scripting_language
        :revisions: https://en.wikipedia.org/wiki/Scripting_language?action=history
        :edit: https://en.wikipedia.org/wiki/Scripting_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Scripting_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Scripting_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Scripting_language
        :edit: https://en.m.wikipedia.org/wiki/Scripting_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Scripting_language
    :extract: A scripting or script language is a programming language for a special
      run-time environment that automates the execution of tasks; the tasks could
      alternatively be executed one-by-one by a human operator. Scripting languages
      are often interpreted, rather than compiled.
    :extract_html: "<p>A <b>scripting</b> or <b>script language</b> is a programming
      language for a special run-time environment that automates the execution of
      tasks; the tasks could alternatively be executed one-by-one by a human operator.
      Scripting languages are often interpreted, rather than compiled.</p>"
  record/00d66f96-b9c0-41b3-9a86-c9ad34222835:
    :type: standard
    :title: XSharp
    :displaytitle: XSharp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q25313488
    :titles:
      :canonical: XSharp
      :normalized: XSharp
      :display: XSharp
    :pageid: 50274716
    :lang: en
    :dir: ltr
    :revision: '986360061'
    :tid: adbdb450-23ac-11eb-a5ac-6b7a6267cad2
    :timestamp: '2020-10-31T10:44:52Z'
    :description: dBase/xBase compatible programming language for Microsoft .NET
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XSharp
        :revisions: https://en.wikipedia.org/wiki/XSharp?action=history
        :edit: https://en.wikipedia.org/wiki/XSharp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XSharp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XSharp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XSharp
        :edit: https://en.m.wikipedia.org/wiki/XSharp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XSharp
    :extract: X#, pronounced X sharp and often written XSharp, is an xBase-compatible
      programming language for the Microsoft .NET platform. X# has been built on top
      of Roslyn, the open source architecture behind the current Microsoft C# and
      Visual Basic .NET compilers.
    :extract_html: "<p><b>X#</b>, pronounced <b>X sharp</b> and often written <b>XSharp</b>,
      is an xBase-compatible programming language for the Microsoft .NET platform.
      X# has been built on top of Roslyn, the open source architecture behind the
      current Microsoft C# and Visual Basic .NET compilers.</p>"
  record/62aa6032-1c1e-4380-bef2-fc8cc898b027:
    :type: standard
    :title: Io (programming language)
    :displaytitle: Io (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q756175
    :titles:
      :canonical: Io_(programming_language)
      :normalized: Io (programming language)
      :display: Io (programming language)
    :pageid: 323340
    :lang: en
    :dir: ltr
    :revision: '973223803'
    :tid: f162e360-35b3-11eb-97e2-73ffe8d9a0fb
    :timestamp: '2020-08-16T02:01:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Io_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Io_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Io_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Io_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Io_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Io_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Io_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Io_(programming_language)
    :extract: Io is a pure object-oriented programming language inspired by Smalltalk,
      Self, Lua, Lisp, Act1, and NewtonScript. Io has a prototype-based object model
      similar to the ones in Self and NewtonScript, eliminating the distinction between
      instance and class. Like Smalltalk, everything is an object and it uses dynamic
      typing. Like Lisp, programs are just data trees. Io uses actors for concurrency.
    :extract_html: "<p><b>Io</b> is a pure object-oriented programming language inspired
      by Smalltalk, Self, Lua, Lisp, Act1, and NewtonScript. Io has a prototype-based
      object model similar to the ones in Self and NewtonScript, eliminating the distinction
      between instance and class. Like Smalltalk, everything is an object and it uses
      dynamic typing. Like Lisp, programs are just data trees. Io uses actors for
      concurrency.</p>"
  record/3af8edfc-ff02-4643-90a4-0cbf4081beea:
    :type: standard
    :title: Modula
    :displaytitle: Modula
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2428476
    :titles:
      :canonical: Modula
      :normalized: Modula
      :display: Modula
    :pageid: 20824
    :lang: en
    :dir: ltr
    :revision: '991552750'
    :tid: 1eb8d270-35af-11eb-b66f-2fe301dc8a8d
    :timestamp: '2020-11-30T17:37:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Modula
        :revisions: https://en.wikipedia.org/wiki/Modula?action=history
        :edit: https://en.wikipedia.org/wiki/Modula?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Modula
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Modula
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Modula
        :edit: https://en.m.wikipedia.org/wiki/Modula?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Modula
    :extract: The Modula programming language is a descendant of the Pascal language.
      It was developed in Switzerland, at ETH Zurich, in the mid-1970s by Niklaus
      Wirth, the same person who designed Pascal. The main innovation of Modula over
      Pascal is a module system, used for grouping sets of related declarations into
      program units; hence the name Modula. The language is defined in a report by
      Wirth called Modula. A language for modular multiprogramming published 1976.
    :extract_html: "<p>The <b>Modula</b> programming language is a descendant of the
      Pascal language. It was developed in Switzerland, at ETH Zurich, in the mid-1970s
      by Niklaus Wirth, the same person who designed Pascal. The main innovation of
      Modula over Pascal is a module system, used for grouping sets of related declarations
      into program units; hence the name <i>Modula</i>. The language is defined in
      a report by Wirth called <i>Modula. A language for modular multiprogramming</i>
      published 1976.</p>"
  record/decfeb40-d7bd-4b22-960d-6a1d5cfdf87c:
    :type: standard
    :title: Edinburgh IMP
    :displaytitle: Edinburgh IMP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5338206
    :titles:
      :canonical: Edinburgh_IMP
      :normalized: Edinburgh IMP
      :display: Edinburgh IMP
    :pageid: 953419
    :lang: en
    :dir: ltr
    :revision: '975631121'
    :tid: f717af90-2ca6-11eb-a465-898ccc4b0525
    :timestamp: '2020-08-29T16:02:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Edinburgh_IMP
        :revisions: https://en.wikipedia.org/wiki/Edinburgh_IMP?action=history
        :edit: https://en.wikipedia.org/wiki/Edinburgh_IMP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Edinburgh_IMP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Edinburgh_IMP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Edinburgh_IMP
        :edit: https://en.m.wikipedia.org/wiki/Edinburgh_IMP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Edinburgh_IMP
    :extract: Edinburgh IMP is a development of Atlas Autocode, initially developed
      around 1966-1969 at the University of Edinburgh, Scotland. It is a general-purpose
      programming language which was used heavily for systems programming.
    :extract_html: "<p><b>Edinburgh IMP</b> is a development of Atlas Autocode, initially
      developed around 1966-1969 at the University of Edinburgh, Scotland. It is a
      general-purpose programming language which was used heavily for systems programming.</p>"
  record/6383a9cd-a0f2-4f61-a9c7-712ec450c014:
    :type: standard
    :title: PLANC
    :displaytitle: PLANC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7119581
    :titles:
      :canonical: PLANC
      :normalized: PLANC
      :display: PLANC
    :pageid: 5081365
    :lang: en
    :dir: ltr
    :revision: '752464381'
    :tid: 1d5ecaa0-004f-11eb-83d2-f3b96d5ca74c
    :timestamp: '2016-12-01T11:30:39Z'
    :description: high level computer programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PLANC
        :revisions: https://en.wikipedia.org/wiki/PLANC?action=history
        :edit: https://en.wikipedia.org/wiki/PLANC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PLANC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PLANC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PLANC
        :edit: https://en.m.wikipedia.org/wiki/PLANC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PLANC
    :extract: PLANC is a high level computer programming language. The acronym stands
      for Programming LAnguage for Nd Computers.
    :extract_html: "<p><b>PLANC</b> is a high level computer programming language.
      The acronym stands for <i>Programming LAnguage for Nd Computers</i>.</p>"
  record/16fcc51b-fd4b-4d75-87bc-4dfde4459515:
    :type: standard
    :title: Swift (programming language)
    :displaytitle: Swift (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17118377
    :titles:
      :canonical: Swift_(programming_language)
      :normalized: Swift (programming language)
      :display: Swift (programming language)
    :pageid: 42946389
    :lang: en
    :dir: ltr
    :revision: '991424962'
    :tid: 6e75b270-32a2-11eb-8050-9f773d0304e3
    :timestamp: '2020-11-30T00:24:32Z'
    :description: Programming language initially developed by Apple Inc and now open-source
      software
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Swift_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Swift_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Swift_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Swift_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Swift_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Swift_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Swift_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Swift_(programming_language)
    :extract: Swift is a general-purpose, multi-paradigm, compiled programming language
      developed by Apple Inc. and the open-source community, first released in 2014.
      Swift was developed as a replacement for Apple's earlier programming language
      Objective-C, as Objective-C had been largely unchanged since the early 1980s
      and lacked modern language features. Swift works with Apple's Cocoa and Cocoa
      Touch frameworks, and a key aspect of Swift's design was the ability to interoperate
      with the huge body of existing Objective-C code developed for Apple products
      over the previous decades. It is built with the open source LLVM compiler framework
      and has been included in Xcode since version 6, released in 2014. On Apple platforms,
      it uses the Objective-C runtime library which allows C, Objective-C, C++ and
      Swift code to run within one program.
    :extract_html: "<p><b>Swift</b> is a general-purpose, multi-paradigm, compiled
      programming language developed by Apple Inc. and the open-source community,
      first released in 2014. Swift was developed as a replacement for Apple's earlier
      programming language Objective-C, as Objective-C had been largely unchanged
      since the early 1980s and lacked modern language features. Swift works with
      Apple's Cocoa and Cocoa Touch frameworks, and a key aspect of Swift's design
      was the ability to interoperate with the huge body of existing Objective-C code
      developed for Apple products over the previous decades. It is built with the
      open source LLVM compiler framework and has been included in Xcode since version
      6, released in 2014. On Apple platforms, it uses the Objective-C runtime library
      which allows C, Objective-C, C++ and Swift code to run within one program.</p>"
  record/0cebbd09-852b-4af7-bb71-6cc4c9e1c1fb:
    :type: standard
    :title: Opal (programming language)
    :displaytitle: Opal (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2024920
    :titles:
      :canonical: Opal_(programming_language)
      :normalized: Opal (programming language)
      :display: Opal (programming language)
    :pageid: 1936835
    :lang: en
    :dir: ltr
    :revision: '868660358'
    :tid: 9f255470-eb7b-11ea-86a7-eb191b1588d3
    :timestamp: '2018-11-13T17:00:22Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Opal_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Opal_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Opal_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Opal_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Opal_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Opal_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Opal_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Opal_(programming_language)
    :extract: OPAL is a functional programming language first developed at the Technical
      University of Berlin.
    :extract_html: "<p><b>OPAL</b> is a functional programming language first developed
      at the Technical University of Berlin.</p>"
  record/6297be67-c861-4977-9946-14c0c198f3d4:
    :type: standard
    :title: Limbo (programming language)
    :displaytitle: Limbo (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q544927
    :titles:
      :canonical: Limbo_(programming_language)
      :normalized: Limbo (programming language)
      :display: Limbo (programming language)
    :pageid: 236298
    :lang: en
    :dir: ltr
    :revision: '987140681'
    :tid: '082df1f0-1f22-11eb-93db-a3cfb25645b9'
    :timestamp: '2020-11-05T04:47:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Limbo_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Limbo_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Limbo_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Limbo_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Limbo_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Limbo_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Limbo_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Limbo_(programming_language)
    :extract: Limbo is a programming language for writing distributed systems and
      is the language used to write applications for the Inferno operating system.
      It was designed at Bell Labs by Sean Dorward, Phil Winterbottom, and Rob Pike.
    :extract_html: "<p><b>Limbo</b> is a programming language for writing distributed
      systems and is the language used to write applications for the Inferno operating
      system. It was designed at Bell Labs by Sean Dorward, Phil Winterbottom, and
      Rob Pike.</p>"
  record/2f220d65-4994-4ea0-942e-ddfa5211e217:
    :type: standard
    :title: Stata
    :displaytitle: Stata
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1204300
    :titles:
      :canonical: Stata
      :normalized: Stata
      :display: Stata
    :pageid: 1809002
    :lang: en
    :dir: ltr
    :revision: '983799700'
    :tid: bc20a410-35c4-11eb-aef4-5945b5496484
    :timestamp: '2020-10-16T09:12:38Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Stata
        :revisions: https://en.wikipedia.org/wiki/Stata?action=history
        :edit: https://en.wikipedia.org/wiki/Stata?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Stata
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Stata
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Stata
        :edit: https://en.m.wikipedia.org/wiki/Stata?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Stata
    :extract: Stata is a general-purpose statistical software package created in 1985
      by StataCorp. Most of its users work in research, especially in the fields of
      economics, sociology, political science, biomedicine, and epidemiology.
    :extract_html: "<p><b>Stata</b> is a general-purpose statistical software package
      created in 1985 by StataCorp. Most of its users work in research, especially
      in the fields of economics, sociology, political science, biomedicine, and epidemiology.</p>"
  record/56b91280-e7e3-43a9-8899-12df31f381ec:
    :type: standard
    :title: Averest
    :displaytitle: Averest
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2874223
    :titles:
      :canonical: Averest
      :normalized: Averest
      :display: Averest
    :pageid: 2211949
    :lang: en
    :dir: ltr
    :revision: '987947201'
    :tid: 1c7e72f0-2310-11eb-b82a-872ad939297b
    :timestamp: '2020-11-10T04:49:25Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Averest
        :revisions: https://en.wikipedia.org/wiki/Averest?action=history
        :edit: https://en.wikipedia.org/wiki/Averest?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Averest
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Averest
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Averest
        :edit: https://en.m.wikipedia.org/wiki/Averest?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Averest
    :extract: Averest is a synchronous programming language and set of tools to specify,
      verify, and implement reactive systems. It includes a compiler for synchronous
      programs, a symbolic model checker, and a tool for hardware/software synthesis.
    :extract_html: "<p><b>Averest</b> is a synchronous programming language and set
      of tools to specify, verify, and implement reactive systems. It includes a compiler
      for synchronous programs, a symbolic model checker, and a tool for hardware/software
      synthesis.</p>"
  record/a02ff438-617f-4741-9ea7-58ee4a6c4689:
    :type: standard
    :title: Julia (programming language)
    :displaytitle: Julia (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2613697
    :titles:
      :canonical: Julia_(programming_language)
      :normalized: Julia (programming language)
      :display: Julia (programming language)
    :pageid: 38455554
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Julia_Programming_Language_Logo.svg/320px-Julia_Programming_Language_Logo.svg.png
      :width: 320
      :height: 206
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Julia_Programming_Language_Logo.svg/512px-Julia_Programming_Language_Logo.svg.png
      :width: 512
      :height: 330
    :lang: en
    :dir: ltr
    :revision: '991382322'
    :tid: 915e2e60-354b-11eb-aef4-5945b5496484
    :timestamp: '2020-11-29T19:33:39Z'
    :description: High-performance dynamic programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Julia_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Julia_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Julia_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Julia_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Julia_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Julia_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Julia_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Julia_(programming_language)
    :extract: Julia is a high-level, high-performance, dynamic programming language.
      While it is a general-purpose language and can be used to write any application,
      many of its features are well suited for numerical analysis and computational
      science.
    :extract_html: "<p><b>Julia</b> is a high-level, high-performance, dynamic programming
      language. While it is a general-purpose language and can be used to write any
      application, many of its features are well suited for numerical analysis and
      computational science.</p>"
  record/f04f20eb-e5ce-4201-a09d-b1964f66b82f:
    :type: standard
    :title: COMAL
    :displaytitle: COMAL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1023991
    :titles:
      :canonical: COMAL
      :normalized: COMAL
      :display: COMAL
    :pageid: 197700
    :lang: en
    :dir: ltr
    :revision: '989632953'
    :tid: 0c6a0380-2adf-11eb-97d5-cd7bd2bcfbf9
    :timestamp: '2020-11-20T03:18:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COMAL
        :revisions: https://en.wikipedia.org/wiki/COMAL?action=history
        :edit: https://en.wikipedia.org/wiki/COMAL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COMAL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COMAL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COMAL
        :edit: https://en.m.wikipedia.org/wiki/COMAL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COMAL
    :extract: COMAL is a computer programming language developed in Denmark by Børge
      R. Christensen and Benedict Løfstedt and originally released in 1975. COMAL
      was one of the few structured programming languages that was available for and
      comfortably usable on 8-bit home computers. It was based on the seminal BASIC
      programming language, adding multi-line statements and well-defined subroutines
      among other additions.
    :extract_html: "<p><b>COMAL</b> is a computer programming language developed in
      Denmark by Børge R. Christensen and Benedict Løfstedt and originally released
      in 1975. COMAL was one of the few structured programming languages that was
      available for and comfortably usable on 8-bit home computers. It was based on
      the seminal BASIC programming language, adding multi-line statements and well-defined
      subroutines among other additions.</p>"
  record/1f1dc4eb-c3d7-46a2-83d9-59bcd531e7ee:
    :type: standard
    :title: Flex (programming language)
    :displaytitle: Flex (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q8563758
    :titles:
      :canonical: Flex_(programming_language)
      :normalized: Flex (programming language)
      :display: Flex (programming language)
    :pageid: 38916706
    :lang: en
    :dir: ltr
    :revision: '909927901'
    :tid: 8ba8fd60-efd2-11ea-a503-5fde58ec7de1
    :timestamp: '2019-08-08T14:53:31Z'
    :description: 1960s programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Flex_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Flex_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Flex_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Flex_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Flex_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Flex_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Flex_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Flex_(programming_language)
    :extract: In computing, the FLEX language was developed by Alan Kay in the late
      1960s while exploring ideas that would later evolve into the Smalltalk programming
      language.
    :extract_html: "<p>In computing, the <b>FLEX language</b> was developed by Alan
      Kay in the late 1960s while exploring ideas that would later evolve into the
      Smalltalk programming language.</p>"
  record/e97cf7d9-1bb9-432a-8b3a-b9565decc1b3:
    :type: standard
    :title: GNU Octave
    :displaytitle: GNU Octave
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q223679
    :titles:
      :canonical: GNU_Octave
      :normalized: GNU Octave
      :display: GNU Octave
    :pageid: 48707
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ad/GNUOctave430.png/320px-GNUOctave430.png
      :width: 320
      :height: 157
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/a/ad/GNUOctave430.png
      :width: 1920
      :height: 944
    :lang: en
    :dir: ltr
    :revision: '991589640'
    :tid: b331fcd0-3350-11eb-b8cc-c3c0c050e9a1
    :timestamp: '2020-11-30T21:11:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GNU_Octave
        :revisions: https://en.wikipedia.org/wiki/GNU_Octave?action=history
        :edit: https://en.wikipedia.org/wiki/GNU_Octave?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GNU_Octave
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GNU_Octave
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GNU_Octave
        :edit: https://en.m.wikipedia.org/wiki/GNU_Octave?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GNU_Octave
    :extract: |-
      GNU Octave is software featuring a high-level programming language, primarily intended for numerical computations. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. It may also be used as a batch-oriented language.
      Since it is part of the GNU Project, it is free software under the terms of the GNU General Public License.
    :extract_html: |-
      <p><b>GNU Octave</b> is software featuring a high-level programming language, primarily intended for numerical computations. Octave helps in solving linear and nonlinear problems numerically, and for performing other numerical experiments using a language that is mostly compatible with MATLAB. It may also be used as a batch-oriented language.
      Since it is part of the GNU Project, it is free software under the terms of the GNU General Public License.</p>
  record/29265158-b791-4033-9b97-a3e51abbcc21:
    :type: standard
    :title: SuperCollider
    :displaytitle: SuperCollider
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2299598
    :titles:
      :canonical: SuperCollider
      :normalized: SuperCollider
      :display: SuperCollider
    :pageid: 346978
    :lang: en
    :dir: ltr
    :revision: '991332145'
    :tid: bdc67570-324e-11eb-9775-df257b585545
    :timestamp: '2020-11-29T14:25:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SuperCollider
        :revisions: https://en.wikipedia.org/wiki/SuperCollider?action=history
        :edit: https://en.wikipedia.org/wiki/SuperCollider?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SuperCollider
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SuperCollider
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SuperCollider
        :edit: https://en.m.wikipedia.org/wiki/SuperCollider?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SuperCollider
    :extract: SuperCollider is an environment and programming language originally
      released in 1996 by James McCartney for real-time audio synthesis and algorithmic
      composition.
    :extract_html: "<p><b>SuperCollider</b> is an environment and programming language
      originally released in 1996 by James McCartney for real-time audio synthesis
      and algorithmic composition.</p>"
  record/00fd4a26-8ec7-410e-9924-7c16700aca7d:
    :type: standard
    :title: C--
    :displaytitle: C--
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q81348
    :titles:
      :canonical: C--
      :normalized: C--
      :display: C--
    :pageid: 1422467
    :lang: en
    :dir: ltr
    :revision: '987816128'
    :tid: 509d2940-2933-11eb-9bb7-c3b85520e731
    :timestamp: '2020-11-09T11:56:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/C--
        :revisions: https://en.wikipedia.org/wiki/C--?action=history
        :edit: https://en.wikipedia.org/wiki/C--?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:C--
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/C--
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/C--
        :edit: https://en.m.wikipedia.org/wiki/C--?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:C--
    :extract: C-- is a C-like programming language. Its creators, functional programming
      researchers Simon Peyton Jones and Norman Ramsey, designed it to be generated
      mainly by compilers for very high-level languages rather than written by human
      programmers. Unlike many other intermediate languages, its representation is
      plain ASCII text, not bytecode or another binary format.
    :extract_html: "<p><b>C--</b> is a C-like programming language. Its creators,
      functional programming researchers Simon Peyton Jones and Norman Ramsey, designed
      it to be generated mainly by compilers for very high-level languages rather
      than written by human programmers. Unlike many other intermediate languages,
      its representation is plain ASCII text, not bytecode or another binary format.</p>"
  record/614c94df-f682-4caa-8865-aca80923dd3f:
    :type: standard
    :title: TempleOS
    :displaytitle: TempleOS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q19961543
    :titles:
      :canonical: TempleOS
      :normalized: TempleOS
      :display: TempleOS
    :pageid: 46478098
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/81/TempleOS_logo.png/320px-TempleOS_logo.png
      :width: 320
      :height: 241
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/8/81/TempleOS_logo.png
      :width: 650
      :height: 490
    :lang: en
    :dir: ltr
    :revision: '992222022'
    :tid: 7d0a2fc0-35e3-11eb-95b9-8ddb4236a03b
    :timestamp: '2020-12-04T03:47:50Z'
    :description: Biblical-themed operating system created by Terry A. Davis
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TempleOS
        :revisions: https://en.wikipedia.org/wiki/TempleOS?action=history
        :edit: https://en.wikipedia.org/wiki/TempleOS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TempleOS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TempleOS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TempleOS
        :edit: https://en.m.wikipedia.org/wiki/TempleOS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TempleOS
    :extract: TempleOS is a biblical-themed lightweight operating system designed
      to be the Third Temple prophesied in the Bible. It was created by the late American
      programmer Terry A. Davis, who developed it alone over the course of a decade
      after a series of prophetic episodes that he later described as a revelation
      from God.
    :extract_html: "<p><b>TempleOS</b> is a biblical-themed lightweight operating
      system designed to be the Third Temple prophesied in the Bible. It was created
      by the late American programmer Terry A. Davis, who developed it alone over
      the course of a decade after a series of prophetic episodes that he later described
      as a revelation from God.</p>"
  record/4e68c9bf-e373-4577-96e0-821ae7ccc346:
    :type: standard
    :title: FLOW-MATIC
    :displaytitle: FLOW-MATIC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1389173
    :titles:
      :canonical: FLOW-MATIC
      :normalized: FLOW-MATIC
      :display: FLOW-MATIC
    :pageid: 82760
    :lang: en
    :dir: ltr
    :revision: '991294418'
    :tid: 6a9af870-3222-11eb-969d-ffc0c265cdab
    :timestamp: '2020-11-29T09:08:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FLOW-MATIC
        :revisions: https://en.wikipedia.org/wiki/FLOW-MATIC?action=history
        :edit: https://en.wikipedia.org/wiki/FLOW-MATIC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FLOW-MATIC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FLOW-MATIC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FLOW-MATIC
        :edit: https://en.m.wikipedia.org/wiki/FLOW-MATIC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FLOW-MATIC
    :extract: FLOW-MATIC, originally known as B-0, was the first English-like data
      processing language. It was developed for the UNIVAC I at Remington Rand under
      Grace Hopper from 1955 to 1959, and helped shape the development of COBOL.
    :extract_html: "<p><b>FLOW-MATIC</b>, originally known as <b>B-0</b>, was the
      first English-like data processing language. It was developed for the UNIVAC
      I at Remington Rand under Grace Hopper from 1955 to 1959, and helped shape the
      development of COBOL.</p>"
  record/da573156-4889-41f4-8a93-b942e509a933:
    :type: standard
    :title: AIMMS
    :displaytitle: AIMMS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4651947
    :titles:
      :canonical: AIMMS
      :normalized: AIMMS
      :display: AIMMS
    :pageid: 31460418
    :lang: en
    :dir: ltr
    :revision: '990277636'
    :tid: 772eb170-2dc8-11eb-9f2a-f3e6434df506
    :timestamp: '2020-11-23T20:14:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AIMMS
        :revisions: https://en.wikipedia.org/wiki/AIMMS?action=history
        :edit: https://en.wikipedia.org/wiki/AIMMS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AIMMS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AIMMS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AIMMS
        :edit: https://en.m.wikipedia.org/wiki/AIMMS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AIMMS
    :extract: AIMMS is a prescriptive analytics software company with offices in the
      Netherlands, United States, China and Singapore.
    :extract_html: "<p><b>AIMMS</b> is a prescriptive analytics software company with
      offices in the Netherlands, United States, China and Singapore.</p>"
  record/5b523e4d-a907-412b-b2b5-4340225e591c:
    :type: standard
    :title: OpenGL Shading Language
    :displaytitle: OpenGL Shading Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q779819
    :titles:
      :canonical: OpenGL_Shading_Language
      :normalized: OpenGL Shading Language
      :display: OpenGL Shading Language
    :pageid: 2152476
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Linux_kernel_and_OpenGL_video_games.svg/320px-Linux_kernel_and_OpenGL_video_games.svg.png
      :width: 320
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Linux_kernel_and_OpenGL_video_games.svg/960px-Linux_kernel_and_OpenGL_video_games.svg.png
      :width: 960
      :height: 720
    :lang: en
    :dir: ltr
    :revision: '990906680'
    :tid: 4ef208c0-306f-11eb-98a7-5508e082d367
    :timestamp: '2020-11-27T05:13:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OpenGL_Shading_Language
        :revisions: https://en.wikipedia.org/wiki/OpenGL_Shading_Language?action=history
        :edit: https://en.wikipedia.org/wiki/OpenGL_Shading_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OpenGL_Shading_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OpenGL_Shading_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OpenGL_Shading_Language
        :edit: https://en.m.wikipedia.org/wiki/OpenGL_Shading_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OpenGL_Shading_Language
    :extract: OpenGL Shading Language (GLSL) is a high-level shading language with
      a syntax based on the C programming language. It was created by the OpenGL ARB
      to give developers more direct control of the graphics pipeline without having
      to use ARB assembly language or hardware-specific languages.
    :extract_html: "<p><b>OpenGL Shading Language</b> (<b>GLSL</b>) is a high-level
      shading language with a syntax based on the C programming language. It was created
      by the OpenGL ARB to give developers more direct control of the graphics pipeline
      without having to use ARB assembly language or hardware-specific languages.</p>"
  record/a13b461a-787c-452f-b2a7-42c1dcf4307a:
    :type: standard
    :title: XSLT
    :displaytitle: XSLT
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q32110
    :titles:
      :canonical: XSLT
      :normalized: XSLT
      :display: XSLT
    :pageid: 34211
    :lang: en
    :dir: ltr
    :revision: '987681111'
    :tid: b122c7f0-3047-11eb-837e-21d850f2c50c
    :timestamp: '2020-11-08T16:19:53Z'
    :description: Language for transforming XML documents
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XSLT
        :revisions: https://en.wikipedia.org/wiki/XSLT?action=history
        :edit: https://en.wikipedia.org/wiki/XSLT?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XSLT
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XSLT
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XSLT
        :edit: https://en.m.wikipedia.org/wiki/XSLT?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XSLT
    :extract: XSLT is a language for transforming XML documents into other XML documents,
      or other formats such as HTML for web pages, plain text or XSL Formatting Objects,
      which may subsequently be converted to other formats, such as PDF, PostScript
      and PNG. XSLT 1.0 is widely supported in modern web browsers.
    :extract_html: "<p><b>XSLT</b> is a language for transforming XML documents into
      other XML documents, or other formats such as HTML for web pages, plain text
      or XSL Formatting Objects, which may subsequently be converted to other formats,
      such as PDF, PostScript and PNG. XSLT 1.0 is widely supported in modern web
      browsers.</p>"
  record/a76c223e-588a-4c11-9e75-1ab094e97742:
    :type: standard
    :title: Speakeasy (computational environment)
    :displaytitle: Speakeasy (computational environment)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7574230
    :titles:
      :canonical: Speakeasy_(computational_environment)
      :normalized: Speakeasy (computational environment)
      :display: Speakeasy (computational environment)
    :pageid: 24641580
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/d/d8/Speakeasy_Red_Logo.png
      :width: 127
      :height: 121
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/d/d8/Speakeasy_Red_Logo.png
      :width: 127
      :height: 121
    :lang: en
    :dir: ltr
    :revision: '906953585'
    :tid: 20864ad0-2bbc-11eb-8a64-5756501abf7a
    :timestamp: '2019-07-19T12:48:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Speakeasy_(computational_environment)
        :revisions: https://en.wikipedia.org/wiki/Speakeasy_(computational_environment)?action=history
        :edit: https://en.wikipedia.org/wiki/Speakeasy_(computational_environment)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Speakeasy_(computational_environment)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Speakeasy_(computational_environment)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Speakeasy_(computational_environment)
        :edit: https://en.m.wikipedia.org/wiki/Speakeasy_(computational_environment)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Speakeasy_(computational_environment)
    :extract: Speakeasy is a numerical computing interactive environment also featuring
      an interpreted programming language. It was initially developed for internal
      use at the Physics Division of Argonne National Laboratory by the theoretical
      physicist Stanley Cohen. He eventually founded Speakeasy Computing Corporation
      to make the program available commercially.
    :extract_html: "<p><b>Speakeasy</b> is a numerical computing interactive environment
      also featuring an interpreted programming language. It was initially developed
      for internal use at the Physics Division of Argonne National Laboratory by the
      theoretical physicist Stanley Cohen. He eventually founded Speakeasy Computing
      Corporation to make the program available commercially.</p>"
  record/05245509-f836-43b0-97a8-29f8138198eb:
    :type: standard
    :title: Protel
    :displaytitle: Protel
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7251525
    :titles:
      :canonical: Protel
      :normalized: Protel
      :display: Protel
    :pageid: 13134192
    :lang: en
    :dir: ltr
    :revision: '931355480'
    :tid: b0a5c020-18d7-11eb-9585-3948ed21123e
    :timestamp: '2019-12-18T12:18:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Protel
        :revisions: https://en.wikipedia.org/wiki/Protel?action=history
        :edit: https://en.wikipedia.org/wiki/Protel?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Protel
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Protel
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Protel
        :edit: https://en.m.wikipedia.org/wiki/Protel?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Protel
    :extract: Protel stands for "Procedure Oriented Type Enforcing Language". It is
      a programming language created by Nortel Networks and used on telecommunications
      switching systems such as the DMS-100. Protel-2 is the object-oriented version
      of Protel.
    :extract_html: <p><b>Protel</b> stands for "Procedure Oriented Type Enforcing
      Language". It is a programming language created by Nortel Networks and used
      on telecommunications switching systems such as the DMS-100. Protel-2 is the
      object-oriented version of Protel.</p>
  record/f3926e72-9527-41af-a555-2ed3a7e3f931:
    :type: standard
    :title: F-Script (programming language)
    :displaytitle: F-Script (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5423621
    :titles:
      :canonical: F-Script_(programming_language)
      :normalized: F-Script (programming language)
      :display: F-Script (programming language)
    :pageid: 899874
    :lang: en
    :dir: ltr
    :revision: '960182158'
    :tid: c90fcae0-1b6e-11eb-91f0-cf46d0b627f8
    :timestamp: '2020-06-01T15:14:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/F-Script_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/F-Script_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/F-Script_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:F-Script_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/F-Script_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/F-Script_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/F-Script_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:F-Script_(programming_language)
    :extract: F-Script is an object-oriented scripting programming language for Apple's
      macOS operating system developed by Philippe Mougin. F-Script is an interactive
      language based on Smalltalk, using macOS's native Cocoa API.
    :extract_html: "<p><b>F-Script</b> is an object-oriented scripting programming
      language for Apple's macOS operating system developed by Philippe Mougin. F-Script
      is an interactive language based on Smalltalk, using macOS's native Cocoa API.</p>"
  record/3518f1f0-151f-48aa-810a-d0f96a52e791:
    :type: standard
    :title: Mary (programming language)
    :displaytitle: Mary (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6778754
    :titles:
      :canonical: Mary_(programming_language)
      :normalized: Mary (programming language)
      :display: Mary (programming language)
    :pageid: 20340
    :lang: en
    :dir: ltr
    :revision: '931385402'
    :tid: f6d59d80-2ca6-11eb-90e8-095b73ef48aa
    :timestamp: '2019-12-18T16:21:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mary_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Mary_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Mary_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mary_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mary_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mary_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Mary_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mary_(programming_language)
    :extract: Mary is a programming language designed and implemented by RUNIT at
      Trondheim, Norway in the 1970s. It borrowed many features from ALGOL 68 but
      was designed for systems programming.
    :extract_html: "<p><b>Mary</b> is a programming language designed and implemented
      by RUNIT at Trondheim, Norway in the 1970s. It borrowed many features from ALGOL
      68 but was designed for systems programming.</p>"
  record/fc34dadd-d8eb-4e42-b680-c17ae7314867:
    :type: standard
    :title: Ethereum
    :displaytitle: Ethereum
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16783523
    :titles:
      :canonical: Ethereum
      :normalized: Ethereum
      :display: Ethereum
    :pageid: 41754003
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Ethereum-icon-purple.svg/320px-Ethereum-icon-purple.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/6f/Ethereum-icon-purple.svg/512px-Ethereum-icon-purple.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '992258498'
    :tid: a3598c20-3615-11eb-88e2-0f08519e02ac
    :timestamp: '2020-12-04T09:46:47Z'
    :description: Open source blockchain computing platform
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ethereum
        :revisions: https://en.wikipedia.org/wiki/Ethereum?action=history
        :edit: https://en.wikipedia.org/wiki/Ethereum?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ethereum
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ethereum
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ethereum
        :edit: https://en.m.wikipedia.org/wiki/Ethereum?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ethereum
    :extract: Ethereum is a decentralized open source blockchain featuring smart contract
      functionality. Ether (ETH) is the native cryptocurrency token of the Ethereum
      platform. It is the second-largest cryptocurrency by market capitalization,
      behind Bitcoin. Ethereum is the most actively used blockchain in the world.
    :extract_html: "<p><b>Ethereum</b> is a decentralized open source blockchain featuring
      smart contract functionality. <b>Ether (ETH)</b> is the native cryptocurrency
      token of the Ethereum platform. It is the second-largest cryptocurrency by market
      capitalization, behind Bitcoin. Ethereum is the most actively used blockchain
      in the world.</p>"
  record/df1b8f23-903f-45cd-8c7e-66fb32213ca7:
    :type: standard
    :title: JAL (compiler)
    :displaytitle: JAL (compiler)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2005972
    :titles:
      :canonical: JAL_(compiler)
      :normalized: JAL (compiler)
      :display: JAL (compiler)
    :pageid: 2410974
    :lang: en
    :dir: ltr
    :revision: '896490990'
    :tid: b1bbd0f0-1b7d-11eb-a08c-4de516404334
    :timestamp: '2019-05-10T20:48:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/JAL_(compiler)
        :revisions: https://en.wikipedia.org/wiki/JAL_(compiler)?action=history
        :edit: https://en.wikipedia.org/wiki/JAL_(compiler)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:JAL_(compiler)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/JAL_(compiler)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/JAL_(compiler)
        :edit: https://en.m.wikipedia.org/wiki/JAL_(compiler)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:JAL_(compiler)
    :extract: JAL  is a Pascal-like programming language and compiler that generates
      executable code for PIC microcontrollers. It is a free-format language with
      a compiler that runs on Linux, MS-Windows and MS-DOS. It is configurable and
      extendable through the use of libraries and can even be combined with PIC assembly
      language.
    :extract_html: "<p><b>JAL </b> is a Pascal-like programming language and compiler
      that generates executable code for PIC microcontrollers. It is a free-format
      language with a compiler that runs on Linux, MS-Windows and MS-DOS. It is configurable
      and extendable through the use of libraries and can even be combined with PIC
      assembly language.</p>"
  record/f206acd8-48ee-4015-9c17-69e5eea2484b:
    :type: standard
    :title: Hack (programming language)
    :displaytitle: Hack (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q15971618
    :titles:
      :canonical: Hack_(programming_language)
      :normalized: Hack (programming language)
      :display: Hack (programming language)
    :pageid: 42257880
    :lang: en
    :dir: ltr
    :revision: '976373305'
    :tid: f47a2c20-24b5-11eb-9d47-097fe938b7cf
    :timestamp: '2020-09-02T15:51:50Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hack_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hack_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hack_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hack_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hack_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hack_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hack_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hack_(programming_language)
    :extract: Hack is a programming language for the HipHop Virtual Machine (HHVM),
      created by Facebook as a dialect of PHP. The language implementation is open-source,
      licensed under the MIT License.
    :extract_html: "<p><b>Hack</b> is a programming language for the HipHop Virtual
      Machine (HHVM), created by Facebook as a dialect of PHP. The language implementation
      is open-source, licensed under the MIT License.</p>"
  record/5073371c-34a3-4172-8721-7696fd0723e4:
    :type: standard
    :title: LPMud
    :displaytitle: LPMud
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3502717
    :titles:
      :canonical: LPMud
      :normalized: LPMud
      :display: LPMud
    :pageid: 904526
    :lang: en
    :dir: ltr
    :revision: '987006999'
    :tid: e480eef0-2828-11eb-900a-47f5e7f60369
    :timestamp: '2020-11-04T08:17:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LPMud
        :revisions: https://en.wikipedia.org/wiki/LPMud?action=history
        :edit: https://en.wikipedia.org/wiki/LPMud?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LPMud
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LPMud
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LPMud
        :edit: https://en.m.wikipedia.org/wiki/LPMud?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LPMud
    :extract: LPMud, abbreviated LP, is a family of MUD server software. Its first
      instance, the original LPMud game driver, was developed in 1989 by Lars Pensjö.
      LPMud was innovative in its separation of the MUD infrastructure into a virtual
      machine and a development framework written in the LPC programming language.
    :extract_html: "<p><b>LPMud</b>, abbreviated <b>LP</b>, is a family of MUD server
      software. Its first instance, the original LPMud game driver, was developed
      in 1989 by <span><b>L</b>ars <b>P</b>ensjö</span>. LPMud was innovative in its
      separation of the MUD infrastructure into a virtual machine and a development
      framework written in the LPC programming language.</p>"
  record/3b22b2d4-d775-496b-946d-bdb18d8beefa:
    :type: standard
    :title: General Algebraic Modeling System
    :displaytitle: General Algebraic Modeling System
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q646446
    :titles:
      :canonical: General_Algebraic_Modeling_System
      :normalized: General Algebraic Modeling System
      :display: General Algebraic Modeling System
    :pageid: 1438314
    :lang: en
    :dir: ltr
    :revision: '986849365'
    :tid: 43206e40-2d29-11eb-b5d5-dffd8e34c827
    :timestamp: '2020-11-03T10:47:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/General_Algebraic_Modeling_System
        :revisions: https://en.wikipedia.org/wiki/General_Algebraic_Modeling_System?action=history
        :edit: https://en.wikipedia.org/wiki/General_Algebraic_Modeling_System?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:General_Algebraic_Modeling_System
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/General_Algebraic_Modeling_System
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/General_Algebraic_Modeling_System
        :edit: https://en.m.wikipedia.org/wiki/General_Algebraic_Modeling_System?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:General_Algebraic_Modeling_System
    :extract: The General Algebraic Modeling System (GAMS) is a high-level modeling
      system for mathematical optimization. GAMS is designed for modeling and solving
      linear, nonlinear, and mixed-integer optimization problems. The system is tailored
      for complex, large-scale modeling applications and allows the user to build
      large maintainable models that can be adapted to new situations. The system
      is available for use on various computer platforms. Models are portable from
      one platform to another.
    :extract_html: "<p>The <b>General Algebraic Modeling System</b> (<b>GAMS</b>)
      is a high-level modeling system for mathematical optimization. GAMS is designed
      for modeling and solving linear, nonlinear, and mixed-integer optimization problems.
      The system is tailored for complex, large-scale modeling applications and allows
      the user to build large maintainable models that can be adapted to new situations.
      The system is available for use on various computer platforms. Models are portable
      from one platform to another.</p>"
  record/f36e9d1c-c344-46ab-85d7-d7a4884990fa:
    :type: standard
    :title: B (programming language)
    :displaytitle: B (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q797302
    :titles:
      :canonical: B_(programming_language)
      :normalized: B (programming language)
      :display: B (programming language)
    :pageid: 4475
    :lang: en
    :dir: ltr
    :revision: '989004959'
    :tid: 1e4e6640-2819-11eb-b1d7-617358849730
    :timestamp: '2020-11-16T14:36:28Z'
    :description: Procedural programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/B_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/B_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/B_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:B_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/B_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/B_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/B_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:B_(programming_language)
    :extract: B is a programming language developed at Bell Labs circa 1969. It is
      the work of Ken Thompson with Dennis Ritchie.
    :extract_html: "<p><b>B</b> is a programming language developed at Bell Labs circa
      1969. It is the work of Ken Thompson with Dennis Ritchie.</p>"
  record/516974c1-7b5f-46cb-8b7d-8b95ef142aaf:
    :type: standard
    :title: OpenCL
    :displaytitle: OpenCL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q681360
    :titles:
      :canonical: OpenCL
      :normalized: OpenCL
      :display: OpenCL
    :pageid: 17861917
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/1/1c/OpenCL_Logo.svg/320px-OpenCL_Logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/1/1c/OpenCL_Logo.svg/227px-OpenCL_Logo.svg.png
      :width: 227
      :height: 227
    :lang: en
    :dir: ltr
    :revision: '992089987'
    :tid: f43d3e10-3567-11eb-8d7e-35b928ec63f7
    :timestamp: '2020-12-03T13:03:29Z'
    :description: Open standard for programming heterogenous computing systems, such
      as CPUs or GPUs
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OpenCL
        :revisions: https://en.wikipedia.org/wiki/OpenCL?action=history
        :edit: https://en.wikipedia.org/wiki/OpenCL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OpenCL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OpenCL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OpenCL
        :edit: https://en.m.wikipedia.org/wiki/OpenCL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OpenCL
    :extract: OpenCL is a framework for writing programs that execute across heterogeneous
      platforms consisting of central processing units (CPUs), graphics processing
      units (GPUs), digital signal processors (DSPs), field-programmable gate arrays
      (FPGAs) and other processors or hardware accelerators. OpenCL specifies programming
      languages for programming these devices and application programming interfaces
      (APIs) to control the platform and execute programs on the compute devices.
      OpenCL provides a standard interface for parallel computing using task- and
      data-based parallelism.
    :extract_html: "<p><b>OpenCL</b> is a framework for writing programs that execute
      across heterogeneous platforms consisting of central processing units (CPUs),
      graphics processing units (GPUs), digital signal processors (DSPs), field-programmable
      gate arrays (FPGAs) and other processors or hardware accelerators. OpenCL specifies
      programming languages for programming these devices and application programming
      interfaces (APIs) to control the platform and execute programs on the compute
      devices. OpenCL provides a standard interface for parallel computing using task-
      and data-based parallelism.</p>"
  record/b75f01fa-1388-4e62-9e35-9459e2f0ab62:
    :type: standard
    :title: ParaSail (programming language)
    :displaytitle: ParaSail (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7133637
    :titles:
      :canonical: ParaSail_(programming_language)
      :normalized: ParaSail (programming language)
      :display: ParaSail (programming language)
    :pageid: 36619168
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c1/Logo_for_ParaSail_Programming_Language.jpg
      :width: 96
      :height: 93
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/c/c1/Logo_for_ParaSail_Programming_Language.jpg
      :width: 96
      :height: 93
    :lang: en
    :dir: ltr
    :revision: '976327624'
    :tid: ff41e450-2e28-11eb-aa6e-1f580d04f4ba
    :timestamp: '2020-09-02T10:41:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ParaSail_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ParaSail_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ParaSail_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ParaSail_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ParaSail_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ParaSail_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ParaSail_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ParaSail_(programming_language)
    :extract: Parallel Specification and Implementation Language (ParaSail) is an
      object-oriented parallel programming language. Its design and ongoing implementation
      is described in a blog and on its official website.
    :extract_html: "<p><b>Parallel Specification and Implementation Language</b> (<b>ParaSail</b>)
      is an object-oriented parallel programming language. Its design and ongoing
      implementation is described in a blog and on its official website.</p>"
  record/80b5a6ed-1262-4f76-b444-8fc9a49b413d:
    :type: standard
    :title: Ruby (programming language)
    :displaytitle: Ruby (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q161053
    :titles:
      :canonical: Ruby_(programming_language)
      :normalized: Ruby (programming language)
      :display: Ruby (programming language)
    :pageid: 25768
    :lang: en
    :dir: ltr
    :revision: '985290621'
    :tid: b4d63720-3375-11eb-b267-d7ea9d070c2e
    :timestamp: '2020-10-25T03:22:03Z'
    :description: High-level programming language first released in 1995
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ruby_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ruby_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ruby_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ruby_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ruby_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ruby_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ruby_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ruby_(programming_language)
    :extract: Ruby is an interpreted, high-level, general-purpose programming language.
      It was designed and developed in the mid-1990s by Yukihiro "Matz" Matsumoto
      in Japan.
    :extract_html: <p><b>Ruby</b> is an interpreted, high-level, general-purpose programming
      language. It was designed and developed in the mid-1990s by Yukihiro "Matz"
      Matsumoto in Japan.</p>
  record/50ef6ca1-e4cf-415d-9637-7bf4e552f0e5:
    :type: standard
    :title: Lisp (programming language)
    :displaytitle: Lisp (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q132874
    :titles:
      :canonical: Lisp_(programming_language)
      :normalized: Lisp (programming language)
      :display: Lisp (programming language)
    :pageid: 18016
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Lisp_logo.svg/320px-Lisp_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/48/Lisp_logo.svg/512px-Lisp_logo.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '988500640'
    :tid: 83afe6d0-2fa3-11eb-837b-6985ce0d2ad1
    :timestamp: '2020-11-13T15:49:04Z'
    :description: Programming language family
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lisp_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lisp_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lisp_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lisp_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lisp_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lisp_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lisp_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lisp_(programming_language)
    :extract: |-
      Lisp is a family of programming languages with a long history and a distinctive, fully parenthesized prefix notation.
      Originally specified in 1958, Lisp is the second-oldest high-level programming language in widespread use today. Only Fortran is older, by one year. Lisp has changed since its early days, and many dialects have existed over its history. Today, the best-known general-purpose Lisp dialects are Racket, Common Lisp, Scheme and Clojure.
    :extract_html: |-
      <p><b>Lisp</b> is a family of programming languages with a long history and a distinctive, fully parenthesized prefix notation.
      Originally specified in 1958, Lisp is the second-oldest high-level programming language in widespread use today. Only Fortran is older, by one year. Lisp has changed since its early days, and many dialects have existed over its history. Today, the best-known general-purpose Lisp dialects are Racket, Common Lisp, Scheme and Clojure.</p>
  record/ba15cd3a-8f63-42f5-b761-f3efb01327ce:
    :type: standard
    :title: IBM HAScript
    :displaytitle: IBM HAScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5968837
    :titles:
      :canonical: IBM_HAScript
      :normalized: IBM HAScript
      :display: IBM HAScript
    :pageid: 1205430
    :lang: en
    :dir: ltr
    :revision: '944901770'
    :tid: 34ce6330-eb55-11ea-9bbf-916da31728f0
    :timestamp: '2020-03-10T16:30:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_HAScript
        :revisions: https://en.wikipedia.org/wiki/IBM_HAScript?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_HAScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_HAScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_HAScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_HAScript
        :edit: https://en.m.wikipedia.org/wiki/IBM_HAScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_HAScript
    :extract: HAScript, or Host Access Script, is an IBM-developed macro language
      with an XML syntax designed for programmatic interaction with terminal-based
      applications. HAScript is based on a state machine principle. The first commercial
      implementation appeared in IBM's Host On-Demand in the late 1990s.
    :extract_html: "<p><b>HAScript</b>, or Host Access Script, is an IBM-developed
      macro language with an XML syntax designed for programmatic interaction with
      terminal-based applications. HAScript is based on a state machine principle.
      The first commercial implementation appeared in IBM's Host On-Demand in the
      late 1990s.</p>"
  record/03f46bad-4655-403a-96fe-0474664b5d5c:
    :type: standard
    :title: Cg (programming language)
    :displaytitle: Cg (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1024657
    :titles:
      :canonical: Cg_(programming_language)
      :normalized: Cg (programming language)
      :display: Cg (programming language)
    :pageid: 390212
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/32/HLSL-Examples-1.PNG/320px-HLSL-Examples-1.PNG
      :width: 320
      :height: 240
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/3/32/HLSL-Examples-1.PNG
      :width: 640
      :height: 480
    :lang: en
    :dir: ltr
    :revision: '987157144'
    :tid: 953854c0-2dcb-11eb-a7d4-3b7e24c75e10
    :timestamp: '2020-11-05T08:01:37Z'
    :description: Shading language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cg_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cg_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cg_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cg_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cg_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cg_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cg_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cg_(programming_language)
    :extract: Cg and High-Level Shading Language (HLSL) are two names given to a high-level
      shading language developed by Nvidia and Microsoft for programming shaders.
      Cg/HLSL is based on the C programming language and although they share the same
      core syntax, some features of C were modified and new data types were added
      to make Cg/HLSL more suitable for programming graphics processing units.
    :extract_html: "<p><b>Cg</b> and <b>High-Level Shading Language</b> (<b>HLSL</b>)
      are two names given to a high-level shading language developed by Nvidia and
      Microsoft for programming shaders. Cg/HLSL is based on the C programming language
      and although they share the same core syntax, some features of C were modified
      and new data types were added to make Cg/HLSL more suitable for programming
      graphics processing units.</p>"
  record/5d425918-46b3-4abd-9055-e10b2c83134f:
    :type: standard
    :title: Apache Pig
    :displaytitle: Apache Pig
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7193204
    :titles:
      :canonical: Apache_Pig
      :normalized: Apache Pig
      :display: Apache Pig
    :pageid: 29417433
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/b/bc/Apache_Pig_Logo.svg/320px-Apache_Pig_Logo.svg.png
      :width: 320
      :height: 140
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/b/bc/Apache_Pig_Logo.svg/445px-Apache_Pig_Logo.svg.png
      :width: 445
      :height: 194
    :lang: en
    :dir: ltr
    :revision: '972221122'
    :tid: 2bff9e80-29a4-11eb-b35b-8deb63125339
    :timestamp: '2020-08-10T21:52:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Apache_Pig
        :revisions: https://en.wikipedia.org/wiki/Apache_Pig?action=history
        :edit: https://en.wikipedia.org/wiki/Apache_Pig?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Apache_Pig
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Apache_Pig
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Apache_Pig
        :edit: https://en.m.wikipedia.org/wiki/Apache_Pig?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Apache_Pig
    :extract: |-
      Apache Pig
      is a high-level platform for creating programs that run on Apache Hadoop. The language for this platform is called Pig Latin. Pig can execute its Hadoop jobs in MapReduce, Apache Tez, or Apache Spark. Pig Latin abstracts the programming from the Java MapReduce idiom into a notation which makes MapReduce programming high level, similar to that of SQL for relational database management systems. Pig Latin can be extended using user-defined functions (UDFs) which the user can write in Java, Python, JavaScript, Ruby or Groovy and then call directly from the language.
    :extract_html: |-
      <p><b>Apache Pig</b>
      is a high-level platform for creating programs that run on Apache Hadoop. The language for this platform is called <b>Pig Latin</b>. Pig can execute its Hadoop jobs in MapReduce, Apache Tez, or Apache Spark. Pig Latin abstracts the programming from the Java MapReduce idiom into a notation which makes MapReduce programming high level, similar to that of SQL for relational database management systems. Pig Latin can be extended using user-defined functions (UDFs) which the user can write in Java, Python, JavaScript, Ruby or Groovy and then call directly from the language.</p>
  record/e0972da5-0b54-4c5a-b08d-ca9d7893ce68:
    :type: standard
    :title: ECMAScript
    :displaytitle: ECMAScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q259138
    :titles:
      :canonical: ECMAScript
      :normalized: ECMAScript
      :display: ECMAScript
    :pageid: 188515
    :lang: en
    :dir: ltr
    :revision: '991765218'
    :tid: bafb9c10-3403-11eb-903d-119c2e6beec5
    :timestamp: '2020-12-01T18:33:29Z'
    :description: Official specification on which JavaScript and other languages are
      based
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ECMAScript
        :revisions: https://en.wikipedia.org/wiki/ECMAScript?action=history
        :edit: https://en.wikipedia.org/wiki/ECMAScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ECMAScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ECMAScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ECMAScript
        :edit: https://en.m.wikipedia.org/wiki/ECMAScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ECMAScript
    :extract: "ECMAScript \nis a general-purpose programming language, standardized
      by Ecma International according to the document ECMA-262. It is a JavaScript
      standard meant to ensure the interoperability of Web pages across different
      Web browsers. ECMAScript is commonly used for client-side scripting on the World
      Wide Web, and it is increasingly being used for writing server applications
      and services using Node.js."
    :extract_html: "<p><b>ECMAScript</b> \nis a general-purpose programming language,
      standardized by Ecma International according to the document <span class=\"external
      text\">ECMA-262.</span> It is a JavaScript standard meant to ensure the interoperability
      of Web pages across different Web browsers. ECMAScript is commonly used for
      client-side scripting on the World Wide Web, and it is increasingly being used
      for writing server applications and services using Node.js.</p>"
  record/99ad101e-62a1-49ef-aed5-0060ade54caf:
    :type: standard
    :title: Logtalk
    :displaytitle: Logtalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3258085
    :titles:
      :canonical: Logtalk
      :normalized: Logtalk
      :display: Logtalk
    :pageid: 7792164
    :lang: en
    :dir: ltr
    :revision: '981914475'
    :tid: 52de8e50-2e84-11eb-bb6e-ebd2c4e45437
    :timestamp: '2020-10-05T04:00:00Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Logtalk
        :revisions: https://en.wikipedia.org/wiki/Logtalk?action=history
        :edit: https://en.wikipedia.org/wiki/Logtalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Logtalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Logtalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Logtalk
        :edit: https://en.m.wikipedia.org/wiki/Logtalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Logtalk
    :extract: Logtalk is an object-oriented logic programming language that extends
      and leverages the Prolog language with a feature set suitable for programming
      in the large. It provides support for encapsulation and data hiding, separation
      of concerns and enhanced code reuse. Logtalk uses standard Prolog syntax with
      the addition of a few operators and directives.
    :extract_html: "<p><b>Logtalk</b> is an object-oriented logic programming language
      that extends and leverages the Prolog language with a feature set suitable for
      programming in the large. It provides support for encapsulation and data hiding,
      separation of concerns and enhanced code reuse. Logtalk uses standard Prolog
      syntax with the addition of a few operators and directives.</p>"
  record/9268ed60-e66b-449a-9c78-2ac68a740c9f:
    :type: standard
    :title: Script.NET
    :displaytitle: Script.NET
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q820978
    :titles:
      :canonical: Script.NET
      :normalized: Script.NET
      :display: Script.NET
    :pageid: 13819923
    :lang: en
    :dir: ltr
    :revision: '898410829'
    :tid: 23452bf0-2807-11eb-9705-5f7a6ff96150
    :timestamp: '2019-05-23T11:39:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Script.NET
        :revisions: https://en.wikipedia.org/wiki/Script.NET?action=history
        :edit: https://en.wikipedia.org/wiki/Script.NET?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Script.NET
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Script.NET
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Script.NET
        :edit: https://en.m.wikipedia.org/wiki/Script.NET?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Script.NET
    :extract: Script.NET or S# is a metaprogramming language that provides scripting
      functionality in Microsoft .NET applications, allowing runtime execution of
      custom functionality, similar to VBA in Microsoft Office applications. The syntax
      of Script.NET is similar to JavaScript. It is designed to be simple and efficient
      scripting language allowing to customize .NET applications. The language has
      a true runtime interpreter, and it is executed without generating additional
      in-memory assemblies.
    :extract_html: "<p><b>Script.NET</b> or <b>S#</b> is a metaprogramming language
      that provides scripting functionality in Microsoft .NET applications, allowing
      runtime execution of custom functionality, similar to VBA in Microsoft Office
      applications. The syntax of Script.NET is similar to JavaScript. It is designed
      to be simple and efficient scripting language allowing to customize .NET applications.
      The language has a true runtime interpreter, and it is executed without generating
      additional in-memory assemblies.</p>"
  record/f53fdc7a-fa68-49e5-b111-b94f5029d14a:
    :type: standard
    :title: Newspeak (programming language)
    :displaytitle: Newspeak (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7019813
    :titles:
      :canonical: Newspeak_(programming_language)
      :normalized: Newspeak (programming language)
      :display: Newspeak (programming language)
    :pageid: 24308364
    :lang: en
    :dir: ltr
    :revision: '991771060'
    :tid: 4152cbe0-3408-11eb-9b1b-e56960500449
    :timestamp: '2020-12-01T19:05:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Newspeak_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Newspeak_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Newspeak_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Newspeak_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Newspeak_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Newspeak_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Newspeak_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Newspeak_(programming_language)
    :extract: Newspeak is a programming language and platform in the tradition of
      Smalltalk and Self being developed by a team led by Gilad Bracha. The platform
      includes an IDE, a GUI library, and standard libraries. Starting in 2006, Cadence
      Design Systems funded its development and employed the main contributors, but
      ceased funding in January 2009.
    :extract_html: "<p><b>Newspeak</b> is a programming language and platform in the
      tradition of Smalltalk and Self being developed by a team led by Gilad Bracha.
      The platform includes an IDE, a GUI library, and standard libraries. Starting
      in 2006, Cadence Design Systems funded its development and employed the main
      contributors, but ceased funding in January 2009.</p>"
  record/59a6182f-0920-4ee5-a17d-b54eea798ecc:
    :type: standard
    :title: ARexx
    :displaytitle: ARexx
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q296959
    :titles:
      :canonical: ARexx
      :normalized: ARexx
      :display: ARexx
    :pageid: 1858505
    :lang: en
    :dir: ltr
    :revision: '983696017'
    :tid: db86ad80-1c75-11eb-8490-e34d58bf9e5d
    :timestamp: '2020-10-15T18:30:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ARexx
        :revisions: https://en.wikipedia.org/wiki/ARexx?action=history
        :edit: https://en.wikipedia.org/wiki/ARexx?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ARexx
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ARexx
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ARexx
        :edit: https://en.m.wikipedia.org/wiki/ARexx?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ARexx
    :extract: ARexx is an implementation of the Rexx language for the Amiga, written
      in 1987 by William S. Hawes, with a number of Amiga-specific features beyond
      standard REXX facilities. Like most REXX implementations, ARexx is an interpreted
      language. Programs written for ARexx are called "scripts", or "macros"; several
      programs offer the ability to run ARexx scripts in their main interface as macros.
    :extract_html: <p><b>ARexx</b> is an implementation of the Rexx language for the
      Amiga, written in 1987 by William S. Hawes, with a number of Amiga-specific
      features beyond standard REXX facilities. Like most REXX implementations, ARexx
      is an interpreted language. Programs written for ARexx are called "scripts",
      or "macros"; several programs offer the ability to run ARexx scripts in their
      main interface as macros.</p>
  record/e208e24f-2d0f-41d0-a5cb-77853b39ba0b:
    :type: standard
    :title: DATATRIEVE
    :displaytitle: DATATRIEVE
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5204332
    :titles:
      :canonical: DATATRIEVE
      :normalized: DATATRIEVE
      :display: DATATRIEVE
    :pageid: 2214310
    :lang: en
    :dir: ltr
    :revision: '970678223'
    :tid: a5641200-2d29-11eb-9046-5f557fbaccc4
    :timestamp: '2020-08-01T19:21:10Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DATATRIEVE
        :revisions: https://en.wikipedia.org/wiki/DATATRIEVE?action=history
        :edit: https://en.wikipedia.org/wiki/DATATRIEVE?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DATATRIEVE
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DATATRIEVE
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DATATRIEVE
        :edit: https://en.m.wikipedia.org/wiki/DATATRIEVE?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DATATRIEVE
    :extract: DATATRIEVE is a database query and report writer tool from Hewlett-Packard.
      It runs on the OpenVMS operating system, as well as several PDP-11 operating
      systems. DATATRIEVE's command structure is nearly plain English, and it is an
      early example of a Fourth Generation Language (4GL).
    :extract_html: "<p><b>DATATRIEVE</b> is a database query and report writer tool
      from Hewlett-Packard. It runs on the OpenVMS operating system, as well as several
      PDP-11 operating systems. DATATRIEVE's command structure is nearly plain English,
      and it is an early example of a Fourth Generation Language (4GL).</p>"
  record/d09b7930-a024-4c9c-97bb-a9a80955bef9:
    :type: standard
    :title: SLIP (programming language)
    :displaytitle: SLIP (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7390955
    :titles:
      :canonical: SLIP_(programming_language)
      :normalized: SLIP (programming language)
      :display: SLIP (programming language)
    :pageid: 4449554
    :lang: en
    :dir: ltr
    :revision: '931302693'
    :tid: b3d3bbf0-1ed4-11eb-b50d-cb636c9a4589
    :timestamp: '2019-12-18T04:29:19Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SLIP_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SLIP_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SLIP_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SLIP_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SLIP_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SLIP_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SLIP_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SLIP_(programming_language)
    :extract: SLIP is a list processing computer programming language, invented by
      Joseph Weizenbaum in the 1960s. The name SLIP stands for Symmetric LIst Processor.
      It was first implemented as an extension to the Fortran programming language,
      and later embedded into MAD and ALGOL. The best known program written in the
      language is ELIZA, an early natural language processing computer program created
      by Weizenbaum at the MIT Artificial Intelligence Laboratory.
    :extract_html: "<p><b>SLIP</b> is a list processing computer programming language,
      invented by Joseph Weizenbaum in the 1960s. The name <i>SLIP</i> stands for
      <b>S</b>ymmetric <b>LI</b>st <b>P</b>rocessor. It was first implemented as an
      extension to the Fortran programming language, and later embedded into MAD and
      ALGOL. The best known program written in the language is ELIZA, an early natural
      language processing computer program created by Weizenbaum at the MIT Artificial
      Intelligence Laboratory.</p>"
  record/8eebf03f-dd05-43aa-a124-ba5d91d213fb:
    :type: standard
    :title: Not eXactly C
    :displaytitle: Not eXactly C
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1785511
    :titles:
      :canonical: Not_eXactly_C
      :normalized: Not eXactly C
      :display: Not eXactly C
    :pageid: 16826148
    :lang: en
    :dir: ltr
    :revision: '991682830'
    :tid: 046d6c00-33b1-11eb-b267-d7ea9d070c2e
    :timestamp: '2020-12-01T08:41:31Z'
    :description: High-level programming language for the Lego Mindstorms NXT
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Not_eXactly_C
        :revisions: https://en.wikipedia.org/wiki/Not_eXactly_C?action=history
        :edit: https://en.wikipedia.org/wiki/Not_eXactly_C?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Not_eXactly_C
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Not_eXactly_C
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Not_eXactly_C
        :edit: https://en.m.wikipedia.org/wiki/Not_eXactly_C?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Not_eXactly_C
    :extract: Not eXactly C, or NXC, is a high-level programming language for the
      Lego Mindstorms NXT designed by John Hansen in 2006. NXC, which is short for
      Not eXactly C, is based on Next Byte Codes, an assembly language. NXC has a
      syntax like C. The IDE for NXC is the Bricx Command Center.
    :extract_html: "<p><b>Not eXactly C</b>, or <b>NXC</b>, is a high-level programming
      language for the Lego Mindstorms NXT designed by John Hansen in 2006. NXC, which
      is short for Not eXactly C, is based on Next Byte Codes, an assembly language.
      NXC has a syntax like C. The IDE for NXC is the Bricx Command Center.</p>"
  record/2067d7a8-37b7-41fa-b3b2-82fe24f31ff7:
    :type: standard
    :title: PowerBuilder
    :displaytitle: PowerBuilder
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q580882
    :titles:
      :canonical: PowerBuilder
      :normalized: PowerBuilder
      :display: PowerBuilder
    :pageid: 1611118
    :lang: en
    :dir: ltr
    :revision: '986060494'
    :tid: f7e26720-311b-11eb-bde1-53b432918135
    :timestamp: '2020-10-29T15:29:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PowerBuilder
        :revisions: https://en.wikipedia.org/wiki/PowerBuilder?action=history
        :edit: https://en.wikipedia.org/wiki/PowerBuilder?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PowerBuilder
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PowerBuilder
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PowerBuilder
        :edit: https://en.m.wikipedia.org/wiki/PowerBuilder?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PowerBuilder
    :extract: PowerBuilder is an integrated development environment owned by SAP since
      the acquisition of Sybase in 2010. On July 5, 2016, SAP and Appeon entered into
      an agreement whereby Appeon would be responsible for developing, selling, and
      supporting PowerBuilder.
    :extract_html: "<p><b>PowerBuilder</b> is an integrated development environment
      owned by SAP since the acquisition of Sybase in 2010. On July 5, 2016, SAP and
      Appeon entered into an agreement whereby Appeon would be responsible for developing,
      selling, and supporting PowerBuilder.</p>"
  record/91ae66c4-749c-48cf-8fd6-4385dce9317c:
    :type: standard
    :title: Planner (programming language)
    :displaytitle: Planner (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2349274
    :titles:
      :canonical: Planner_(programming_language)
      :normalized: Planner (programming language)
      :display: Planner (programming language)
    :pageid: 46143
    :lang: en
    :dir: ltr
    :revision: '975415123'
    :tid: 004f1ef0-2dc3-11eb-ad0a-0bb02ad555d2
    :timestamp: '2020-08-28T11:21:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Planner_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Planner_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Planner_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Planner_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Planner_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Planner_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Planner_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Planner_(programming_language)
    :extract: Planner is a programming language designed by Carl Hewitt at MIT, and
      first published in 1969. First, subsets such as Micro-Planner and Pico-Planner
      were implemented, and then essentially the whole language was implemented as
      Popler by Julian Davies at the University of Edinburgh in the POP-2 programming
      language. Derivations such as QA4, Conniver, QLISP and Ether were important
      tools in artificial intelligence research in the 1970s, which influenced commercial
      developments such as Knowledge Engineering Environment (KEE) and Automated Reasoning
      Tool (ART).
    :extract_html: "<p><b>Planner</b> is a programming language designed by Carl Hewitt
      at MIT, and first published in 1969. First, subsets such as Micro-Planner and
      Pico-Planner were implemented, and then essentially the whole language was implemented
      as <i>Popler</i> by Julian Davies at the University of Edinburgh in the POP-2
      programming language. Derivations such as QA4, Conniver, QLISP and Ether were
      important tools in artificial intelligence research in the 1970s, which influenced
      commercial developments such as Knowledge Engineering Environment (KEE) and
      Automated Reasoning Tool (ART).</p>"
  record/57c89c64-7fa9-499b-97a1-57477251918e:
    :type: standard
    :title: Ceylon (programming language)
    :displaytitle: Ceylon (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q93482
    :titles:
      :canonical: Ceylon_(programming_language)
      :normalized: Ceylon (programming language)
      :display: Ceylon (programming language)
    :pageid: 31483631
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/2/20/Ceylon_%28programming_language%29_logo.png
      :width: 200
      :height: 141
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/2/20/Ceylon_%28programming_language%29_logo.png
      :width: 200
      :height: 141
    :lang: en
    :dir: ltr
    :revision: '991808891'
    :tid: a2512d50-3427-11eb-af2e-8f75607bfaec
    :timestamp: '2020-12-01T22:50:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Ceylon_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Ceylon_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Ceylon_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Ceylon_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Ceylon_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Ceylon_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Ceylon_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Ceylon_(programming_language)
    :extract: |-
      Ceylon was an object-oriented, strongly statically typed programming language with an emphasis on immutability, created by Red Hat. Ceylon programs run on the Java virtual machine (JVM), and could be compiled to JavaScript.
      The language design focuses on source code readability, predictability, toolability, modularity, and metaprogrammability.
    :extract_html: |-
      <p><b>Ceylon</b> was an object-oriented, strongly statically typed programming language with an emphasis on immutability, created by Red Hat. Ceylon programs run on the Java virtual machine (JVM), and could be compiled to JavaScript.
      The language design focuses on source code readability, predictability, toolability, modularity, and metaprogrammability.</p>
  record/dace17fd-d4d1-4789-850b-a45c82957c5b:
    :type: standard
    :title: PicoLisp
    :displaytitle: PicoLisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7191049
    :titles:
      :canonical: PicoLisp
      :normalized: PicoLisp
      :display: PicoLisp
    :pageid: 25055375
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/40/PicoLisp_Logo.svg/320px-PicoLisp_Logo.svg.png
      :width: 320
      :height: 296
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/40/PicoLisp_Logo.svg/512px-PicoLisp_Logo.svg.png
      :width: 512
      :height: 474
    :lang: en
    :dir: ltr
    :revision: '982810662'
    :tid: 81fa95b0-2fa3-11eb-bb97-cb450aee8928
    :timestamp: '2020-10-10T14:00:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PicoLisp
        :revisions: https://en.wikipedia.org/wiki/PicoLisp?action=history
        :edit: https://en.wikipedia.org/wiki/PicoLisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PicoLisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PicoLisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PicoLisp
        :edit: https://en.m.wikipedia.org/wiki/PicoLisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PicoLisp
    :extract: 'PicoLisp is a programming language, a dialect of the language Lisp.
      It runs on operating systems including Linux and others that are Portable Operating
      System Interface (POSIX) compliant. Its most prominent features are simplicity
      and minimalism. It is built on one internal data type: a cell. On the language
      level, a programmer can use three different data types being represented by
      cells and differentiated by bits at the end of the cell. It is free and open-source
      software released under an MIT License (X11).'
    :extract_html: "<p><b>PicoLisp</b> is a programming language, a dialect of the
      language Lisp. It runs on operating systems including Linux and others that
      are <i>Portable Operating System Interface</i> (POSIX) compliant. Its most prominent
      features are simplicity and minimalism. It is built on one internal data type:
      a cell. On the language level, a programmer can use three different data types
      being represented by cells and differentiated by bits at the end of the cell.
      It is free and open-source software released under an MIT License (X11).</p>"
  record/3397a768-f5dc-44df-9cb5-81ec19b07b2d:
    :type: standard
    :title: Visual DialogScript
    :displaytitle: Visual DialogScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2715148
    :titles:
      :canonical: Visual_DialogScript
      :normalized: Visual DialogScript
      :display: Visual DialogScript
    :pageid: 45738
    :lang: en
    :dir: ltr
    :revision: '917631414'
    :tid: a0ae52a0-35af-11eb-acea-e3d3b3de6fd4
    :timestamp: '2019-09-24T18:33:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Visual_DialogScript
        :revisions: https://en.wikipedia.org/wiki/Visual_DialogScript?action=history
        :edit: https://en.wikipedia.org/wiki/Visual_DialogScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Visual_DialogScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Visual_DialogScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Visual_DialogScript
        :edit: https://en.m.wikipedia.org/wiki/Visual_DialogScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Visual_DialogScript
    :extract: Visual DialogScript (VDS) is an interpreted programming language for
      Microsoft Windows. It can be used to create small, fast programs. VDS has a
      large number of dialog and graphical elements available to create professional
      looking programs. VDS programs have access to the Windows API; therefore, it
      is possible to write applications that can perform the same advanced tasks as
      other programming languages such as Visual Basic, C++, or Delphi.
    :extract_html: "<p><b>Visual DialogScript</b> (VDS) is an interpreted programming
      language for Microsoft Windows. It can be used to create small, fast programs.
      VDS has a large number of dialog and graphical elements available to create
      professional looking programs. VDS programs have access to the Windows API;
      therefore, it is possible to write applications that can perform the same advanced
      tasks as other programming languages such as Visual Basic, C++, or Delphi.</p>"
  record/92d02e23-d8a5-4ec2-9226-715581cb3ee4:
    :type: standard
    :title: OpenVera
    :displaytitle: OpenVera
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3916732
    :titles:
      :canonical: OpenVera
      :normalized: OpenVera
      :display: OpenVera
    :pageid: 7841593
    :lang: en
    :dir: ltr
    :revision: '980168017'
    :tid: 658ad9b0-35ea-11eb-b556-ede256d0693c
    :timestamp: '2020-09-25T00:38:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OpenVera
        :revisions: https://en.wikipedia.org/wiki/OpenVera?action=history
        :edit: https://en.wikipedia.org/wiki/OpenVera?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OpenVera
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OpenVera
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OpenVera
        :edit: https://en.m.wikipedia.org/wiki/OpenVera?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OpenVera
    :extract: OpenVera was a hardware verification language developed by System Science
      and acquired by Synopsys. OpenVera was an interoperable, open hardware verification
      language for testbench creation. The OpenVera language was used as the basis
      for the advanced verification features in the IEEE Std. 1800 SystemVerilog standard,
      for the benefit of the entire verification community including companies in
      the semiconductor, systems, IP and EDA industries along with verification services.
    :extract_html: "<p><b>OpenVera</b> was a hardware verification language developed
      by System Science and acquired by Synopsys. OpenVera was an interoperable, open
      hardware verification language for testbench creation. The OpenVera language
      was used as the basis for the advanced verification features in the IEEE Std.
      1800 SystemVerilog standard, for the benefit of the entire verification community
      including companies in the semiconductor, systems, IP and EDA industries along
      with verification services.</p>"
  record/2dbb0fe1-6cf4-4dc1-a580-97262331688e:
    :type: standard
    :title: SPITBOL
    :displaytitle: SPITBOL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7392587
    :titles:
      :canonical: SPITBOL
      :normalized: SPITBOL
      :display: SPITBOL
    :pageid: 389674
    :lang: en
    :dir: ltr
    :revision: '989756773'
    :tid: 1ba7c580-2b75-11eb-8aba-bd290084e59a
    :timestamp: '2020-11-20T21:12:31Z'
    :description: Implementation of the SNOBOL4 programming language.
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SPITBOL
        :revisions: https://en.wikipedia.org/wiki/SPITBOL?action=history
        :edit: https://en.wikipedia.org/wiki/SPITBOL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SPITBOL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SPITBOL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SPITBOL
        :edit: https://en.m.wikipedia.org/wiki/SPITBOL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SPITBOL
    :extract: SPITBOL is a compiled implementation of the SNOBOL4 programming language.
      Originally targeted for the IBM System/360 and System/370 family of computers,
      it has now been ported to most major microprocessors including the SPARC. It
      was created by Robert Dewar and Ken Belcher, who were then at the Illinois Institute
      of Technology.
    :extract_html: "<p><b>SPITBOL</b> is a compiled implementation of the SNOBOL4
      programming language. Originally targeted for the IBM System/360 and System/370
      family of computers, it has now been ported to most major microprocessors including
      the SPARC. It was created by Robert Dewar and Ken Belcher, who were then at
      the Illinois Institute of Technology.</p>"
  record/169888f7-0abf-4dd6-b2a8-81b601143a3c:
    :type: standard
    :title: E (programming language)
    :displaytitle: E (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2658244
    :titles:
      :canonical: E_(programming_language)
      :normalized: E (programming language)
      :display: E (programming language)
    :pageid: 1377046
    :lang: en
    :dir: ltr
    :revision: '975892606'
    :tid: 4ee86c60-35c0-11eb-9787-2b25305db735
    :timestamp: '2020-08-31T00:40:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/E_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/E_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/E_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:E_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/E_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/E_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/E_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:E_(programming_language)
    :extract: E is an object-oriented programming language for secure distributed
      computing, created by Mark S. Miller, Dan Bornstein, and others at Electric
      Communities in 1997. E is mainly descended from the concurrent language Joule
      and from Original-E, a set of extensions to Java for secure distributed programming.
      E combines message-based computation with Java-like syntax. A concurrency model
      based on event loops and promises ensures that deadlock can never occur.
    :extract_html: "<p><b>E</b> is an object-oriented programming language for secure
      distributed computing, created by Mark S. Miller, Dan Bornstein, and others
      at Electric Communities in 1997. E is mainly descended from the concurrent language
      Joule and from Original-E, a set of extensions to Java for secure distributed
      programming. E combines message-based computation with Java-like syntax. A concurrency
      model based on event loops and promises ensures that deadlock can never occur.</p>"
  record/19a44260-7351-4359-a0cf-c6575feef5a4:
    :type: standard
    :title: Seed7
    :displaytitle: Seed7
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1186348
    :titles:
      :canonical: Seed7
      :normalized: Seed7
      :display: Seed7
    :pageid: 36346048
    :lang: en
    :dir: ltr
    :revision: '988812921'
    :tid: f4f1c250-2f17-11eb-aeb1-8d7df607976c
    :timestamp: '2020-11-15T11:39:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Seed7
        :revisions: https://en.wikipedia.org/wiki/Seed7?action=history
        :edit: https://en.wikipedia.org/wiki/Seed7?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Seed7
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Seed7
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Seed7
        :edit: https://en.m.wikipedia.org/wiki/Seed7?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Seed7
    :extract: Seed7 is an extensible general-purpose programming language designed
      by Thomas Mertes. It is syntactically similar to Pascal and Ada. Along with
      many other features, it provides an extension mechanism. Seed7 supports introducing
      new syntax elements and their semantics into the language, and allows new language
      constructs to be defined and written in Seed7. For example, programmers can
      introduce syntax and semantics of new statements and user defined operator symbols.
      The implementation of Seed7 differs significantly from that of languages with
      hard-coded syntax and semantics.
    :extract_html: "<p><b>Seed7</b> is an extensible general-purpose programming language
      designed by Thomas Mertes. It is syntactically similar to Pascal and Ada. Along
      with many other features, it provides an extension mechanism. Seed7 supports
      introducing new syntax elements and their semantics into the language, and allows
      new language constructs to be defined and written in Seed7. For example, programmers
      can introduce syntax and semantics of new statements and user defined operator
      symbols. The implementation of Seed7 differs significantly from that of languages
      with hard-coded syntax and semantics.</p>"
  record/fcc3de40-c51f-4489-8621-4df1f37c1064:
    :type: standard
    :title: GNU E
    :displaytitle: GNU E
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5514022
    :titles:
      :canonical: GNU_E
      :normalized: GNU E
      :display: GNU E
    :pageid: 30196706
    :lang: en
    :dir: ltr
    :revision: '575461666'
    :tid: 7d00e210-2cfd-11eb-9787-2b25305db735
    :timestamp: '2013-10-02T17:00:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GNU_E
        :revisions: https://en.wikipedia.org/wiki/GNU_E?action=history
        :edit: https://en.wikipedia.org/wiki/GNU_E?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GNU_E
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GNU_E
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GNU_E
        :edit: https://en.m.wikipedia.org/wiki/GNU_E?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GNU_E
    :extract: |-
      GNU E is an extension of C++ designed for writing software systems to
      support persistent applications. It was designed as part of the
      Exodus project.
    :extract_html: |-
      <p><b>GNU E</b> is an extension of C++ designed for writing software systems to
      support persistent applications. It was designed as part of the
      <span class="external text">Exodus project</span>.</p>
  record/96fed819-b7e9-41d3-8061-8f507cbd8618:
    :type: standard
    :title: Standard ML
    :displaytitle: Standard ML
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q597330
    :titles:
      :canonical: Standard_ML
      :normalized: Standard ML
      :display: Standard ML
    :pageid: 100337
    :lang: en
    :dir: ltr
    :revision: '976775459'
    :tid: d922d490-1ff1-11eb-8081-f9533023792d
    :timestamp: '2020-09-04T22:57:34Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Standard_ML
        :revisions: https://en.wikipedia.org/wiki/Standard_ML?action=history
        :edit: https://en.wikipedia.org/wiki/Standard_ML?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Standard_ML
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Standard_ML
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Standard_ML
        :edit: https://en.m.wikipedia.org/wiki/Standard_ML?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Standard_ML
    :extract: Standard ML (SML) is a general-purpose, modular, functional programming
      language with compile-time type checking and type inference. It is popular among
      compiler writers and programming language researchers, as well as in the development
      of theorem provers.
    :extract_html: "<p><b>Standard ML</b> (<b>SML</b>) is a general-purpose, modular,
      functional programming language with compile-time type checking and type inference.
      It is popular among compiler writers and programming language researchers, as
      well as in the development of theorem provers.</p>"
  record/327a7324-226d-42ce-862b-c4580424af7e:
    :type: standard
    :title: Robot Battle
    :displaytitle: "<i>Robot Battle</i>"
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5236137
    :titles:
      :canonical: Robot_Battle
      :normalized: Robot Battle
      :display: "<i>Robot Battle</i>"
    :pageid: 867311
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/5/56/Image-Robot_Battle_Logo.png
      :width: 220
      :height: 220
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/56/Image-Robot_Battle_Logo.png
      :width: 220
      :height: 220
    :lang: en
    :dir: ltr
    :revision: '967067082'
    :tid: 65c90220-306e-11eb-98e1-5bd4047b4843
    :timestamp: '2020-07-10T23:01:25Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Robot_Battle
        :revisions: https://en.wikipedia.org/wiki/Robot_Battle?action=history
        :edit: https://en.wikipedia.org/wiki/Robot_Battle?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Robot_Battle
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Robot_Battle
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Robot_Battle
        :edit: https://en.m.wikipedia.org/wiki/Robot_Battle?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Robot_Battle
    :extract: Robot Battle is a programming game for Microsoft Windows where players
      design and code adaptable battling robots. Robot Battle takes strategy rather
      than reflexes, accuracy, or timing to succeed. What differentiates one robot
      from the next is its programming, for which the player is responsible. The game
      is inspired by the similar game RobotWar.
    :extract_html: "<p><i><b>Robot Battle</b></i> is a programming game for Microsoft
      Windows where players design and code adaptable battling robots. Robot Battle
      takes strategy rather than reflexes, accuracy, or timing to succeed. What differentiates
      one robot from the next is its programming, for which the player is responsible.
      The game is inspired by the similar game <i>RobotWar</i>.</p>"
  record/b5852127-aa09-4c9d-b430-4b737cfa306d:
    :type: standard
    :title: IBM RPG
    :displaytitle: IBM RPG
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q840543
    :titles:
      :canonical: IBM_RPG
      :normalized: IBM RPG
      :display: IBM RPG
    :pageid: 632241
    :lang: en
    :dir: ltr
    :revision: '989182889'
    :tid: cc7be110-35b7-11eb-aa8e-e988e7ad32f7
    :timestamp: '2020-11-17T14:54:29Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_RPG
        :revisions: https://en.wikipedia.org/wiki/IBM_RPG?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_RPG?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_RPG
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_RPG
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_RPG
        :edit: https://en.m.wikipedia.org/wiki/IBM_RPG?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_RPG
    :extract: RPG is a modern proprietary high-level programming language (HLL) for
      business applications, popular on the IBM i operating system on IBM Power Systems
      hardware. The current version, RPG IV, a.k.a. ILE RPG, provides a modern programming
      environment. IBM has evolved the language, providing new capabilities, to take
      advantage of technologies that have grown up in the marketplace.
    :extract_html: "<p><b>RPG</b> is a modern proprietary high-level programming language
      (HLL) for business applications, popular on the IBM i operating system on IBM
      Power Systems hardware. The current version, <b>RPG IV</b>, a.k.a. ILE RPG,
      provides a modern programming environment. IBM has evolved the language, providing
      new capabilities, to take advantage of technologies that have grown up in the
      marketplace.</p>"
  record/e46ae6cc-8d26-4585-9aac-b58a47bc595a:
    :type: standard
    :title: TELCOMP
    :displaytitle: TELCOMP
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7669982
    :titles:
      :canonical: TELCOMP
      :normalized: TELCOMP
      :display: TELCOMP
    :pageid: 991259
    :lang: en
    :dir: ltr
    :revision: '918899378'
    :tid: 1a386640-1b8b-11eb-b08b-2546908c7314
    :timestamp: '2019-09-30T20:00:56Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TELCOMP
        :revisions: https://en.wikipedia.org/wiki/TELCOMP?action=history
        :edit: https://en.wikipedia.org/wiki/TELCOMP?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TELCOMP
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TELCOMP
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TELCOMP
        :edit: https://en.m.wikipedia.org/wiki/TELCOMP?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TELCOMP
    :extract: TELCOMP was a programming language developed at Bolt, Beranek and Newman
      (BBN) in about 1964 and in use until at least 1974. BBN offered TELCOMP as a
      paid service, with first revenue in October 1965. The service was sold to a
      company called On-Line Systems in 1972. In the United Kingdom, TELCOMP was offered
      by Time Sharing, Ltd, a partnership between BBN and an entrepreneur named Richard
      Evans.
    :extract_html: "<p><b>TELCOMP</b> was a programming language developed at Bolt,
      Beranek and Newman (BBN) in about 1964 and in use until at least 1974. BBN offered
      TELCOMP as a paid service, with first revenue in October 1965. The service was
      sold to a company called On-Line Systems in 1972. In the United Kingdom, TELCOMP
      was offered by Time Sharing, Ltd, a partnership between BBN and an entrepreneur
      named Richard Evans.</p>"
  record/e17c5fd5-e68f-4497-8fc7-a055800e2320:
    :type: standard
    :title: LiveScript
    :displaytitle: LiveScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16963446
    :titles:
      :canonical: LiveScript
      :normalized: LiveScript
      :display: LiveScript
    :pageid: 17731
    :lang: en
    :dir: ltr
    :revision: '984736240'
    :tid: 51e0b450-2dea-11eb-83c6-e196553147f3
    :timestamp: '2020-10-21T20:00:39Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/LiveScript
        :revisions: https://en.wikipedia.org/wiki/LiveScript?action=history
        :edit: https://en.wikipedia.org/wiki/LiveScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:LiveScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/LiveScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/LiveScript
        :edit: https://en.m.wikipedia.org/wiki/LiveScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:LiveScript
    :extract: LiveScript is a functional programming language that compiles to JavaScript.
      It was created by Jeremy Ashkenas—the creator of CoffeeScript—along with Satoshi
      Muramaki, George Zahariev, and many others. Not to be confused with JavaScript.
    :extract_html: "<p><b>LiveScript</b> is a functional programming language that
      compiles to JavaScript. It was created by Jeremy Ashkenas—the creator of CoffeeScript—along
      with Satoshi Muramaki, George Zahariev, and many others. Not to be confused
      with JavaScript.</p>"
  record/1e7780be-7bac-439f-9ede-2955843ee5e1:
    :type: standard
    :title: Kent Recursive Calculator
    :displaytitle: Kent Recursive Calculator
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q375533
    :titles:
      :canonical: Kent_Recursive_Calculator
      :normalized: Kent Recursive Calculator
      :display: Kent Recursive Calculator
    :pageid: 17224
    :lang: en
    :dir: ltr
    :revision: '984191156'
    :tid: 3770b780-1a28-11eb-a0a6-7b92f782d901
    :timestamp: '2020-10-18T18:49:58Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kent_Recursive_Calculator
        :revisions: https://en.wikipedia.org/wiki/Kent_Recursive_Calculator?action=history
        :edit: https://en.wikipedia.org/wiki/Kent_Recursive_Calculator?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kent_Recursive_Calculator
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kent_Recursive_Calculator
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kent_Recursive_Calculator
        :edit: https://en.m.wikipedia.org/wiki/Kent_Recursive_Calculator?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kent_Recursive_Calculator
    :extract: |-
      KRC is a lazy functional language developed by David Turner from November 1979 to October 1981 based on SASL, with pattern matching, guards and ZF expressions .
      Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon J. Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.
    :extract_html: |-
      <p><b>KRC</b> is a lazy functional language developed by David Turner from November 1979 to October 1981 based on SASL, with pattern matching, guards and ZF expressions .
      Two implementations of KRC were written: David Turner's original one in BCPL running on EMAS, and Simon J. Croft's later one in C under Unix, and KRC was the main language used for teaching functional programming at the University of Kent at Canterbury (UK) from 1982 to 1985.</p>
  record/e99c2e95-f63f-4623-b4ac-a203b6d30192:
    :type: standard
    :title: PCASTL
    :displaytitle: PCASTL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7118490
    :titles:
      :canonical: PCASTL
      :normalized: PCASTL
      :display: PCASTL
    :pageid: 17955097
    :lang: en
    :dir: ltr
    :revision: '958070234'
    :tid: f4c979d0-2f17-11eb-80dc-61b257802889
    :timestamp: '2020-05-21T21:15:49Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PCASTL
        :revisions: https://en.wikipedia.org/wiki/PCASTL?action=history
        :edit: https://en.wikipedia.org/wiki/PCASTL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PCASTL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PCASTL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PCASTL
        :edit: https://en.m.wikipedia.org/wiki/PCASTL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PCASTL
    :extract: The PCASTL is an interpreted high-level programming language. It was
      created in 2008 by Philippe Choquette. The PCASTL is designed to ease the writing
      of self-modifying code. The language has reserved words parent and childset
      to access the nodes of the syntax tree of the currently written code.
    :extract_html: "<p>The <b>PCASTL</b> is an interpreted high-level programming
      language. It was created in 2008 by Philippe Choquette. The PCASTL is designed
      to ease the writing of self-modifying code. The language has reserved words
      <b>parent</b> and <b>childset</b> to access the nodes of the syntax tree of
      the currently written code.</p>"
  record/efac3347-c65c-4749-a044-f7eb698fd894:
    :type: standard
    :title: Lite-C
    :displaytitle: Lite-C
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1865057
    :titles:
      :canonical: Lite-C
      :normalized: Lite-C
      :display: Lite-C
    :pageid: 10780425
    :lang: en
    :dir: ltr
    :revision: '956137856'
    :tid: 432b2490-2642-11eb-bc90-6f3e2c49f435
    :timestamp: '2020-05-11T18:05:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lite-C
        :revisions: https://en.wikipedia.org/wiki/Lite-C?action=history
        :edit: https://en.wikipedia.org/wiki/Lite-C?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lite-C
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lite-C
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lite-C
        :edit: https://en.m.wikipedia.org/wiki/Lite-C?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lite-C
    :extract: Lite-C is a programming language for multimedia applications and personal
      computer games, using a syntax subset of the C language with some elements of
      the C++ language. Its main difference to C is the native implementation of multimedia
      and computer game related objects like sounds, images, movies, GUI elements,
      2D and 3D models, collision detection and rigid body physics. Lite-C executables
      are compiled instead of interpreted. Lite-C runs on 32-bit and 64-bit Windows
      XP or Vista operating systems.
    :extract_html: "<p><b>Lite-C</b> is a programming language for multimedia applications
      and personal computer games, using a syntax subset of the C language with some
      elements of the C++ language. Its main difference to C is the native implementation
      of multimedia and computer game related objects like sounds, images, movies,
      GUI elements, 2D and 3D models, collision detection and rigid body physics.
      Lite-C executables are compiled instead of interpreted. Lite-C runs on 32-bit
      and 64-bit Windows XP or Vista operating systems.</p>"
  record/8c119748-d072-47a2-b618-b289fbb54a2f:
    :type: standard
    :title: BETA (programming language)
    :displaytitle: BETA (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q830842
    :titles:
      :canonical: BETA_(programming_language)
      :normalized: BETA (programming language)
      :display: BETA (programming language)
    :pageid: 135868
    :lang: en
    :dir: ltr
    :revision: '985765823'
    :tid: fc75d8f0-35b0-11eb-8894-7fb7db00c96a
    :timestamp: '2020-10-27T20:44:44Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BETA_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/BETA_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/BETA_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BETA_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BETA_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BETA_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/BETA_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BETA_(programming_language)
    :extract: BETA is a pure object-oriented language originating within the "Scandinavian
      School" in object-orientation where the first object-oriented language Simula
      was developed. Among its notable features, it introduced nested classes, and
      unified classes with procedures into so called patterns.
    :extract_html: <p><b>BETA</b> is a pure object-oriented language originating within
      the "Scandinavian School" in object-orientation where the first object-oriented
      language Simula was developed. Among its notable features, it introduced nested
      classes, and unified classes with procedures into so called patterns.</p>
  record/9041e3d7-7081-44fa-a0b3-ca27adc2ac88:
    :type: standard
    :title: Joy (programming language)
    :displaytitle: Joy (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1265107
    :titles:
      :canonical: Joy_(programming_language)
      :normalized: Joy (programming language)
      :display: Joy (programming language)
    :pageid: 696166
    :lang: en
    :dir: ltr
    :revision: '987776751'
    :tid: aabd7650-35b8-11eb-8b42-a77055a4ba33
    :timestamp: '2020-11-09T04:59:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Joy_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Joy_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Joy_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Joy_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Joy_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Joy_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Joy_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Joy_(programming_language)
    :extract: The Joy programming language in computer science is a purely functional
      programming language that was produced by Manfred von Thun of La Trobe University
      in Melbourne, Australia. Joy is based on composition of functions rather than
      lambda calculus. It has turned out to have many similarities to Forth, due not
      to design but to a sort of parallel evolution and convergence. It was also inspired
      by the function-level programming style of John Backus's FP.
    :extract_html: "<p>The <b>Joy programming language</b> in computer science is
      a purely functional programming language that was produced by Manfred von Thun
      of La Trobe University in Melbourne, Australia. Joy is based on composition
      of functions rather than lambda calculus. It has turned out to have many similarities
      to Forth, due not to design but to a sort of parallel evolution and convergence.
      It was also inspired by the function-level programming style of John Backus's
      FP.</p>"
  record/b2921619-cf33-464c-a195-c24f26bf5ce8:
    :type: standard
    :title: PLEX (programming language)
    :displaytitle: PLEX (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7119636
    :titles:
      :canonical: PLEX_(programming_language)
      :normalized: PLEX (programming language)
      :display: PLEX (programming language)
    :pageid: 21866469
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/7/73/Mobile_Switching_Centre-Ericsson_AXE.jpg/240px-Mobile_Switching_Centre-Ericsson_AXE.jpg
      :width: 240
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/7/73/Mobile_Switching_Centre-Ericsson_AXE.jpg
      :width: 1536
      :height: 2048
    :lang: en
    :dir: ltr
    :revision: '947433160'
    :tid: 35081430-2af8-11eb-83d0-372dc9b07320
    :timestamp: '2020-03-26T08:08:52Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PLEX_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/PLEX_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/PLEX_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PLEX_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PLEX_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PLEX_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/PLEX_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PLEX_(programming_language)
    :extract: PLEX is a special-purpose, concurrent, real-time programming language.
      The proprietary PLEX language is closely tied to the architecture of Ericsson's
      AXE telephone exchanges which it was designed to control. PLEX was developed
      by Göran Hemdahl at Ericsson in the 1970s, and it has been continuously evolving
      since then. PLEX was described in 2008 as "a cross between Fortran and a macro
      assembler."
    :extract_html: <p><b>PLEX</b> is a special-purpose, concurrent, real-time programming
      language. The proprietary PLEX language is closely tied to the architecture
      of Ericsson's AXE telephone exchanges which it was designed to control. PLEX
      was developed by Göran Hemdahl at Ericsson in the 1970s, and it has been continuously
      evolving since then. PLEX was described in 2008 as "a cross between Fortran
      and a macro assembler."</p>
  record/35730eb0-b791-49e6-b472-ba17ccc2dfb9:
    :type: standard
    :title: Arc (programming language)
    :displaytitle: Arc (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2438046
    :titles:
      :canonical: Arc_(programming_language)
      :normalized: Arc (programming language)
      :display: Arc (programming language)
    :pageid: 188190
    :lang: en
    :dir: ltr
    :revision: '975625462'
    :tid: 81ffc5d0-2fa3-11eb-94e5-45e250823f6c
    :timestamp: '2020-08-29T15:35:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Arc_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Arc_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Arc_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Arc_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Arc_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Arc_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Arc_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Arc_(programming_language)
    :extract: Arc is a programming language, a dialect of the language Lisp, developed
      by Paul Graham and Robert Morris. It is free and open-source software released
      under the Artistic License 2.0.
    :extract_html: "<p><b>Arc</b> is a programming language, a dialect of the language
      Lisp, developed by Paul Graham and Robert Morris. It is free and open-source
      software released under the Artistic License 2.0.</p>"
  record/519a85d0-96ce-4604-8a07-e6433ee911b1:
    :type: standard
    :title: Claire (programming language)
    :displaytitle: Claire (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5125133
    :titles:
      :canonical: Claire_(programming_language)
      :normalized: Claire (programming language)
      :display: Claire (programming language)
    :pageid: 930956
    :lang: en
    :dir: ltr
    :revision: '930527961'
    :tid: 2cd5aed0-35bb-11eb-9f35-ebd1070418b2
    :timestamp: '2019-12-13T03:04:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Claire_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Claire_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Claire_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Claire_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Claire_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Claire_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Claire_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Claire_(programming_language)
    :extract: Claire is a high-level functional and object-oriented programming language
      with rule processing abilities. It was designed by Yves Caseau at Bouygues'
      e-Lab research laboratory, and received its final definition in 2004.
    :extract_html: "<p><b>Claire</b> is a high-level functional and object-oriented
      programming language with rule processing abilities. It was designed by Yves
      Caseau at Bouygues' e-Lab research laboratory, and received its final definition
      in 2004.</p>"
  record/72921c40-de62-4f52-9ac4-c71a207789ff:
    :type: standard
    :title: F (programming language)
    :displaytitle: F (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5427464
    :titles:
      :canonical: F_(programming_language)
      :normalized: F (programming language)
      :display: F (programming language)
    :pageid: 1283488
    :lang: en
    :dir: ltr
    :revision: '973895247'
    :tid: 857de320-1be6-11eb-8ba3-3f450e81cecd
    :timestamp: '2020-08-19T21:12:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/F_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/F_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/F_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:F_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/F_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/F_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/F_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:F_(programming_language)
    :extract: F is a modular, compiled, numeric programming language, designed for
      scientific programming and scientific computation. F was developed as a modern
      Fortran, thus making it a subset of Fortran 95. It combines both numerical and
      data abstraction features from these languages. F is also backwards compatible
      with Fortran 77, allowing calls to Fortran 77 programs. F was first included
      in the g95 compiler.
    :extract_html: "<p><b>F</b> is a modular, compiled, numeric programming language,
      designed for scientific programming and scientific computation. F was developed
      as a modern Fortran, thus making it a subset of Fortran 95. It combines both
      numerical and data abstraction features from these languages. F is also backwards
      compatible with Fortran 77, allowing calls to Fortran 77 programs. F was first
      included in the g95 compiler.</p>"
  record/ea440343-faee-46c2-a6f7-8e04cbb2bcaf:
    :type: standard
    :title: IBM 1620
    :displaytitle: IBM 1620
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q955489
    :titles:
      :canonical: IBM_1620
      :normalized: IBM 1620
      :display: IBM 1620
    :pageid: 92577
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e9/IBM_1620_Model_1.jpg/320px-IBM_1620_Model_1.jpg
      :width: 320
      :height: 210
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/e9/IBM_1620_Model_1.jpg
      :width: 375
      :height: 246
    :lang: en
    :dir: ltr
    :revision: '990661576'
    :tid: 6d5a6e90-2f59-11eb-a6e0-39b0ae0d148b
    :timestamp: '2020-11-25T20:04:21Z'
    :description: IBM scientific computer released in 1959
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_1620
        :revisions: https://en.wikipedia.org/wiki/IBM_1620?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_1620?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_1620
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_1620
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_1620
        :edit: https://en.m.wikipedia.org/wiki/IBM_1620?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_1620
    :extract: The IBM 1620 was announced by IBM on October 21, 1959, and marketed
      as an inexpensive "scientific computer". After a total production of about two
      thousand machines, it was withdrawn on November 19, 1970. Modified versions
      of the 1620 were used as the CPU of the IBM 1710 and IBM 1720 Industrial Process
      Control Systems.
    :extract_html: <p>The <b>IBM 1620</b> was announced by IBM on October 21, 1959,
      and marketed as an inexpensive "scientific computer". After a total production
      of about two thousand machines, it was withdrawn on November 19, 1970. Modified
      versions of the 1620 were used as the CPU of the IBM 1710 and IBM 1720 Industrial
      Process Control Systems.</p>
  record/9f2be928-4bb1-47b4-bf5f-f56eec06c78c:
    :type: standard
    :title: Nord Programming Language
    :displaytitle: Nord Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7050550
    :titles:
      :canonical: Nord_Programming_Language
      :normalized: Nord Programming Language
      :display: Nord Programming Language
    :pageid: 8295240
    :lang: en
    :dir: ltr
    :revision: '711925924'
    :tid: 68554f60-0168-11eb-a2ce-3d778ddbbd8a
    :timestamp: '2016-03-25T19:25:18Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nord_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Nord_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Nord_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nord_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nord_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nord_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Nord_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nord_Programming_Language
    :extract: Nord Programming Language, commonly abbreviated NPL, was a programming
      language by the Norwegian minicomputer manufacturer Norsk Data. It shipped as
      a standard component of the operating system SINTRAN III.
    :extract_html: "<p><b>Nord Programming Language</b>, commonly abbreviated <b>NPL</b>,
      was a programming language by the Norwegian minicomputer manufacturer Norsk
      Data. It shipped as a standard component of the operating system SINTRAN III.</p>"
  record/45482b57-503b-4bcf-aa84-e1bb2c4360fa:
    :type: standard
    :title: SAIL (programming language)
    :displaytitle: SAIL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2204794
    :titles:
      :canonical: SAIL_(programming_language)
      :normalized: SAIL (programming language)
      :display: SAIL (programming language)
    :pageid: 481275
    :lang: en
    :dir: ltr
    :revision: '992205837'
    :tid: 1d99c380-35d3-11eb-92fb-17ab4b5c3953
    :timestamp: '2020-12-04T01:50:38Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SAIL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/SAIL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/SAIL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SAIL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SAIL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SAIL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/SAIL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SAIL_(programming_language)
    :extract: SAIL, the Stanford Artificial Intelligence Language, was developed by
      Dan Swinehart and Bob Sproull of the Stanford AI Lab in 1970. It was originally
      a large ALGOL 60-like language for the PDP-10 and DECSYSTEM-20.
    :extract_html: "<p><b>SAIL</b>, the <b>Stanford Artificial Intelligence Language</b>,
      was developed by Dan Swinehart and Bob Sproull of the Stanford AI Lab in 1970.
      It was originally a large ALGOL 60-like language for the PDP-10 and DECSYSTEM-20.</p>"
  record/8fb9c5db-5837-4b72-a282-9999af6d1fd2:
    :type: standard
    :title: Factor (programming language)
    :displaytitle: Factor (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1391724
    :titles:
      :canonical: Factor_(programming_language)
      :normalized: Factor (programming language)
      :display: Factor (programming language)
    :pageid: 891398
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/f/ff/NewFactorLogo.png
      :width: 295
      :height: 183
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/f/ff/NewFactorLogo.png
      :width: 295
      :height: 183
    :lang: en
    :dir: ltr
    :revision: '977148238'
    :tid: d9aa5100-20d6-11eb-bd24-0bfb733c8646
    :timestamp: '2020-09-07T05:34:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Factor_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Factor_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Factor_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Factor_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Factor_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Factor_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Factor_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Factor_(programming_language)
    :extract: Factor is a stack-oriented programming language created by Slava Pestov.
      Factor is dynamically typed and has automatic memory management, as well as
      powerful metaprogramming features. The language has a single implementation
      featuring a self-hosted optimizing compiler and an interactive development environment.
      The Factor distribution includes a large standard library.
    :extract_html: "<p><b>Factor</b> is a stack-oriented programming language created
      by Slava Pestov. Factor is dynamically typed and has automatic memory management,
      as well as powerful metaprogramming features. The language has a single implementation
      featuring a self-hosted optimizing compiler and an interactive development environment.
      The Factor distribution includes a large standard library.</p>"
  record/8bef4e1c-3a50-4fb0-a555-4b12845b28f4:
    :type: standard
    :title: Object Pascal
    :displaytitle: Object Pascal
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q633894
    :titles:
      :canonical: Object_Pascal
      :normalized: Object Pascal
      :display: Object Pascal
    :pageid: 630175
    :lang: en
    :dir: ltr
    :revision: '979675613'
    :tid: 8b416e20-1b65-11eb-acf8-cbfb87a60f8c
    :timestamp: '2020-09-22T03:32:17Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Object_Pascal
        :revisions: https://en.wikipedia.org/wiki/Object_Pascal?action=history
        :edit: https://en.wikipedia.org/wiki/Object_Pascal?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Object_Pascal
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Object_Pascal
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Object_Pascal
        :edit: https://en.m.wikipedia.org/wiki/Object_Pascal?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Object_Pascal
    :extract: Object Pascal is an extension to the programming language Pascal that
      provides object-oriented programming (OOP) features such as classes and methods.
    :extract_html: "<p><b>Object Pascal</b> is an extension to the programming language
      Pascal that provides object-oriented programming (OOP) features such as classes
      and methods.</p>"
  record/960d7601-adc0-43c8-8e5f-4cb734b59acc:
    :type: standard
    :title: YUI Library
    :displaytitle: YUI Library
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2300096
    :titles:
      :canonical: YUI_Library
      :normalized: YUI Library
      :display: YUI Library
    :pageid: 7528520
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/7/79/Yuilib.jpg
      :width: 246
      :height: 147
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/7/79/Yuilib.jpg
      :width: 246
      :height: 147
    :lang: en
    :dir: ltr
    :revision: '972000194'
    :tid: 0cc82040-32ba-11eb-861f-5f1ae19703f4
    :timestamp: '2020-08-09T16:09:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/YUI_Library
        :revisions: https://en.wikipedia.org/wiki/YUI_Library?action=history
        :edit: https://en.wikipedia.org/wiki/YUI_Library?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:YUI_Library
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/YUI_Library
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/YUI_Library
        :edit: https://en.m.wikipedia.org/wiki/YUI_Library?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:YUI_Library
    :extract: |-
      The Yahoo! User Interface Library (YUI) is a discontinued open-source JavaScript library for building richly interactive web applications using techniques such as Ajax, DHTML, and DOM scripting. YUI includes several core CSS resources. It is available under a BSD License.
      Development on YUI began in 2005 and Yahoo! properties such as My Yahoo! and the Yahoo! front page began using YUI in the summer of that year. YUI was released for public use in February 2006. It was actively developed by a core team of Yahoo! engineers.
    :extract_html: |-
      <p><b>The Yahoo! User Interface Library</b> (<b>YUI</b>) is a discontinued open-source JavaScript library for building richly interactive web applications using techniques such as Ajax, DHTML, and DOM scripting. YUI includes several core CSS resources. It is available under a BSD License.
      Development on YUI began in 2005 and Yahoo! properties such as My Yahoo! and the Yahoo! front page began using YUI in the summer of that year. YUI was released for public use in February 2006. It was actively developed by a core team of Yahoo! engineers.</p>
  record/1e36eed5-73cd-4e98-bf45-91734342cec1:
    :type: standard
    :title: Little b (programming language)
    :displaytitle: Little b (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6652643
    :titles:
      :canonical: Little_b_(programming_language)
      :normalized: Little b (programming language)
      :display: Little b (programming language)
    :pageid: 4740151
    :lang: en
    :dir: ltr
    :revision: '954693131'
    :tid: 96086d50-2307-11eb-8496-ab2dc62dd3bb
    :timestamp: '2020-05-03T20:00:41Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Little_b_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Little_b_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Little_b_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Little_b_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Little_b_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Little_b_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Little_b_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Little_b_(programming_language)
    :extract: Little b is a domain-specific programming language, more specifically,
      a modeling language, designed to build modular mathematical models of biological
      systems. It was designed and authored by Aneil Mallavarapu. Little b is being
      developed in the Virtual Cell Program at Harvard Medical School, headed by mathematician
      Jeremy Gunawardena.
    :extract_html: "<p><b>Little b</b> is a domain-specific programming language,
      more specifically, a modeling language, designed to build modular mathematical
      models of biological systems. It was designed and authored by Aneil Mallavarapu.
      Little b is being developed in the Virtual Cell Program at Harvard Medical School,
      headed by mathematician Jeremy Gunawardena.</p>"
  record/bafa404e-95f3-402b-adfb-e6d5006eb427:
    :type: standard
    :title: TeX
    :displaytitle: TeX
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5301
    :titles:
      :canonical: TeX
      :normalized: TeX
      :display: TeX
    :pageid: 30065
    :lang: en
    :dir: ltr
    :revision: '991303843'
    :tid: bd60e360-322e-11eb-9ef6-c7b78ba91118
    :timestamp: '2020-11-29T10:36:22Z'
    :description: typesetting system
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TeX
        :revisions: https://en.wikipedia.org/wiki/TeX?action=history
        :edit: https://en.wikipedia.org/wiki/TeX?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TeX
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TeX
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TeX
        :edit: https://en.m.wikipedia.org/wiki/TeX?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TeX
    :extract: TeX, stylized within the system as TeX, is a typesetting system which
      was designed and mostly written by Donald Knuth and released in 1978. TeX is
      a popular means of typesetting complex mathematical formulae; it has been noted
      as one of the most sophisticated digital typographical systems.
    :extract_html: <p><b>TeX</b>, stylized within the system as <span class="texhtml">T<span
      style="text-transform:uppercase;vertical-align:-0.5ex">e</span>X</span>, is
      a typesetting system which was designed and mostly written by Donald Knuth and
      released in 1978. TeX is a popular means of typesetting complex mathematical
      formulae; it has been noted as one of the most sophisticated digital typographical
      systems.</p>
  record/ae49fdde-9d0e-412a-8ba7-ce2fe84bf7d8:
    :type: standard
    :title: Joule (programming language)
    :displaytitle: Joule (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6294583
    :titles:
      :canonical: Joule_(programming_language)
      :normalized: Joule (programming language)
      :display: Joule (programming language)
    :pageid: 502786
    :lang: en
    :dir: ltr
    :revision: '975715389'
    :tid: 878af870-1afa-11eb-b2ff-03b3c6947ac8
    :timestamp: '2020-08-30T01:17:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Joule_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Joule_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Joule_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Joule_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Joule_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Joule_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Joule_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Joule_(programming_language)
    :extract: Joule is a concurrent dataflow programming language, designed for building
      distributed applications. It is so concurrent that the order of statements within
      a block is irrelevant to the operation of the block. Statements are executed
      whenever possible, based on their inputs. Everything in Joule happens by sending
      messages. There is no control flow. Instead, the programmer describes the flow
      of data, making it a dataflow programming language.
    :extract_html: "<p><b>Joule</b> is a concurrent dataflow programming language,
      designed for building distributed applications. It is so concurrent that the
      order of statements within a block is irrelevant to the operation of the block.
      Statements are executed whenever possible, based on their inputs. Everything
      in Joule happens by sending messages. There is no control flow. Instead, the
      programmer describes the flow of data, making it a dataflow programming language.</p>"
  record/a391aa53-3b76-4cf6-9931-00c82bfa99a1:
    :type: standard
    :title: DEC Text Processing Utility
    :displaytitle: DEC Text Processing Utility
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7708401
    :titles:
      :canonical: DEC_Text_Processing_Utility
      :normalized: DEC Text Processing Utility
      :display: DEC Text Processing Utility
    :pageid: 479903
    :lang: en
    :dir: ltr
    :revision: '934214254'
    :tid: c05f0ce0-1af0-11eb-a3ea-41645d73ef60
    :timestamp: '2020-01-05T09:40:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/DEC_Text_Processing_Utility
        :revisions: https://en.wikipedia.org/wiki/DEC_Text_Processing_Utility?action=history
        :edit: https://en.wikipedia.org/wiki/DEC_Text_Processing_Utility?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:DEC_Text_Processing_Utility
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/DEC_Text_Processing_Utility
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/DEC_Text_Processing_Utility
        :edit: https://en.m.wikipedia.org/wiki/DEC_Text_Processing_Utility?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:DEC_Text_Processing_Utility
    :extract: DEC Text Processing Utility was a language developed by Digital Equipment
      Corporation (DEC) for developing text editors.
    :extract_html: "<p><b>DEC Text Processing Utility</b> was a language developed
      by Digital Equipment Corporation (DEC) for developing text editors.</p>"
  record/e99b64e9-7500-4da1-bebd-460e3df9f857:
    :type: standard
    :title: CorVision
    :displaytitle: CorVision
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5169369
    :titles:
      :canonical: CorVision
      :normalized: CorVision
      :display: CorVision
    :pageid: 4891630
    :lang: en
    :dir: ltr
    :revision: '958518967'
    :tid: 3ac93590-2321-11eb-90b4-d1985141b7b1
    :timestamp: '2020-05-24T07:50:21Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CorVision
        :revisions: https://en.wikipedia.org/wiki/CorVision?action=history
        :edit: https://en.wikipedia.org/wiki/CorVision?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CorVision
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CorVision
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CorVision
        :edit: https://en.m.wikipedia.org/wiki/CorVision?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CorVision
    :extract: CorVision is a fourth generation programming tool (4GL) currently owned
      by Attunity, Inc. CorVision was developed by Cortex Corporation for the VAX/VMS
      ISAM environment. Although Cortex beta tested CorVision-10 which was generated
      for PCs but CorVision itself stayed anchored on VMS. CorVision-10 proved more
      difficult than hoped, and was never released.
    :extract_html: "<p><b>CorVision</b> is a fourth generation programming tool (4GL)
      currently owned by Attunity, Inc. CorVision was developed by Cortex Corporation
      for the VAX/VMS ISAM environment. Although Cortex beta tested CorVision-10 which
      was generated for PCs but CorVision itself stayed anchored on VMS. CorVision-10
      proved more difficult than hoped, and was never released.</p>"
  record/8aca2b5c-aefb-42d7-a9a5-1aafc05b055a:
    :type: standard
    :title: IBM 1401 Symbolic Programming System
    :displaytitle: IBM 1401 Symbolic Programming System
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q16927924
    :titles:
      :canonical: IBM_1401_Symbolic_Programming_System
      :normalized: IBM 1401 Symbolic Programming System
      :display: IBM 1401 Symbolic Programming System
    :pageid: 14654906
    :lang: en
    :dir: ltr
    :revision: '911920358'
    :tid: d6443d10-194b-11eb-944a-2f6fc043623e
    :timestamp: '2019-08-22T01:38:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System
        :revisions: https://en.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System?action=history
        :edit: https://en.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IBM_1401_Symbolic_Programming_System
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IBM_1401_Symbolic_Programming_System
        :edit: https://en.m.wikipedia.org/wiki/IBM_1401_Symbolic_Programming_System?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IBM_1401_Symbolic_Programming_System
    :extract: The IBM 1401 Symbolic Programming System (SPS) was an assembler that
      was developed by Gary Mokotoff, IBM Applied Programming Department, for the
      IBM 1401 computer, the first of the IBM 1400 series. One source indicates that
      "This programming system was announced by IBM with the machine."
    :extract_html: <p>The <b>IBM 1401 Symbolic Programming System</b> (<b>SPS</b>)
      was an assembler that was developed by Gary Mokotoff, IBM Applied Programming
      Department, for the IBM 1401 computer, the first of the IBM 1400 series. One
      source indicates that "This programming system was announced by IBM with the
      machine."</p>
  record/d4f4582e-00ab-4c36-97bd-a4fdfd39e17a:
    :type: standard
    :title: Cuneiform (programming language)
    :displaytitle: Cuneiform (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28452212
    :titles:
      :canonical: Cuneiform_(programming_language)
      :normalized: Cuneiform (programming language)
      :display: Cuneiform (programming language)
    :pageid: 51797637
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/3f/Cf_screenshot.jpg/320px-Cf_screenshot.jpg
      :width: 320
      :height: 184
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/3/3f/Cf_screenshot.jpg
      :width: 1570
      :height: 901
    :lang: en
    :dir: ltr
    :revision: '981925969'
    :tid: 0bac8040-300b-11eb-8148-cd2dc9f73ac7
    :timestamp: '2020-10-05T06:06:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cuneiform_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cuneiform_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cuneiform_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cuneiform_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cuneiform_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cuneiform_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cuneiform_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cuneiform_(programming_language)
    :extract: |-
      Cuneiform is an open-source workflow language
      for large-scale scientific data analysis.
      It is a statically typed functional programming language promoting parallel computing. It features a versatile foreign function interface allowing users to integrate software from many external programming languages. At the organizational level Cuneiform provides facilities like conditional branching and general recursion making it Turing-complete. In this, Cuneiform is the attempt to close the gap between scientific workflow systems like Taverna, KNIME, or Galaxy and large-scale data analysis programming models like MapReduce or Pig Latin while offering the generality of a functional programming language.
    :extract_html: |-
      <p><b>Cuneiform</b> is an open-source workflow language
      for large-scale scientific data analysis.
      It is a statically typed functional programming language promoting parallel computing. It features a versatile foreign function interface allowing users to integrate software from many external programming languages. At the organizational level Cuneiform provides facilities like conditional branching and general recursion making it Turing-complete. In this, Cuneiform is the attempt to close the gap between scientific workflow systems like Taverna, KNIME, or Galaxy and large-scale data analysis programming models like MapReduce or Pig Latin while offering the generality of a functional programming language.</p>
  record/b7f14a92-cc79-4185-9aec-c47ee8397731:
    :type: standard
    :title: A+ (programming language)
    :displaytitle: A+ (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q277710
    :titles:
      :canonical: A+_(programming_language)
      :normalized: A+ (programming language)
      :display: A+ (programming language)
    :pageid: 890931
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5c/Aplus_logo.jpg
      :width: 145
      :height: 145
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/5/5c/Aplus_logo.jpg
      :width: 145
      :height: 145
    :lang: en
    :dir: ltr
    :revision: '944523277'
    :tid: 2ef86220-1b6c-11eb-b94d-db83decd6ace
    :timestamp: '2020-03-08T10:24:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/A%2B_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/A%2B_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/A%2B_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:A%2B_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/A%2B_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/A%2B_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/A%2B_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:A%2B_(programming_language)
    :extract: A+ is an array programming language descended from the programming language
      A, which in turn was created to replace APL in 1988. Arthur Whitney developed
      the A portion of A+, while other developers at Morgan Stanley extended it, adding
      a graphical user interface and other language features. A+ is a high-level,
      interactive, interpreted language, designed for numerically intensive applications,
      especially those found in financial applications. A+ runs on many Unix variants,
      including Linux. It is free and open source software released under a GNU General
      Public License.
    :extract_html: "<p><b>A+</b> is an array programming language descended from the
      programming language A, which in turn was created to replace APL in 1988. Arthur
      Whitney developed the <i>A</i> portion of A+, while other developers at Morgan
      Stanley extended it, adding a graphical user interface and other language features.
      A+ is a high-level, interactive, interpreted language, designed for numerically
      intensive applications, especially those found in financial applications. A+
      runs on many Unix variants, including Linux. It is free and open source software
      released under a GNU General Public License.</p>"
  record/77383bc3-aabd-4c1a-bf81-6e322bb85101:
    :type: standard
    :title: NetLogo
    :displaytitle: NetLogo
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q672307
    :titles:
      :canonical: NetLogo
      :normalized: NetLogo
      :display: NetLogo
    :pageid: 593757
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/5c/Netlogo-ui.png/320px-Netlogo-ui.png
      :width: 320
      :height: 273
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/5/5c/Netlogo-ui.png
      :width: 967
      :height: 825
    :lang: en
    :dir: ltr
    :revision: '974341944'
    :tid: 8bd39590-321a-11eb-8e8d-4b1030f8b3c8
    :timestamp: '2020-08-22T12:44:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NetLogo
        :revisions: https://en.wikipedia.org/wiki/NetLogo?action=history
        :edit: https://en.wikipedia.org/wiki/NetLogo?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NetLogo
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NetLogo
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NetLogo
        :edit: https://en.m.wikipedia.org/wiki/NetLogo?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NetLogo
    :extract: NetLogo is a programming language and integrated development environment
      (IDE) for agent-based modeling.
    :extract_html: "<p><b>NetLogo</b> is a programming language and integrated development
      environment (IDE) for agent-based modeling.</p>"
  record/e57d8a05-0625-46bc-8b3c-aaff5b7b68e8:
    :type: standard
    :title: SuperTalk
    :displaytitle: SuperTalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7642069
    :titles:
      :canonical: SuperTalk
      :normalized: SuperTalk
      :display: SuperTalk
    :pageid: 5235763
    :lang: en
    :dir: ltr
    :revision: '700710357'
    :tid: aee6ea60-1dbf-11eb-a3ea-41645d73ef60
    :timestamp: '2016-01-20T04:07:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SuperTalk
        :revisions: https://en.wikipedia.org/wiki/SuperTalk?action=history
        :edit: https://en.wikipedia.org/wiki/SuperTalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SuperTalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SuperTalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SuperTalk
        :edit: https://en.m.wikipedia.org/wiki/SuperTalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SuperTalk
    :extract: SuperTalk is the scripting language used in SuperCard. SuperTalk is
      a descendant of HyperTalk.
    :extract_html: "<p><b>SuperTalk</b> is the scripting language used in SuperCard.
      SuperTalk is a descendant of HyperTalk.</p>"
  record/5f4a6cd9-7206-40f9-9d42-0354fb4ff4e1:
    :type: standard
    :title: S-Lang
    :displaytitle: S-Lang
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2204463
    :titles:
      :canonical: S-Lang
      :normalized: S-Lang
      :display: S-Lang
    :pageid: 14656203
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/JED-editor-slang-source.png/320px-JED-editor-slang-source.png
      :width: 320
      :height: 265
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/c/cf/JED-editor-slang-source.png
      :width: 1097
      :height: 910
    :lang: en
    :dir: ltr
    :revision: '960955727'
    :tid: 94dbc1d0-2865-11eb-a9fd-e5293aa87ffa
    :timestamp: '2020-06-05T20:55:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/S-Lang
        :revisions: https://en.wikipedia.org/wiki/S-Lang?action=history
        :edit: https://en.wikipedia.org/wiki/S-Lang?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:S-Lang
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/S-Lang
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/S-Lang
        :edit: https://en.m.wikipedia.org/wiki/S-Lang?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:S-Lang
    :extract: The S-Lang programming library is a software library for Unix, Windows,
      VMS, OS/2, and Mac OS X. It provides routines for embedding an interpreter for
      the S-Lang scripting language, and components to facilitate the creation of
      text-based applications. The latter class of functions include routines for
      constructing and manipulating keymaps, an interactive line-editing facility,
      and both low and high-level screen/terminal management functions. It is distributed
      under the terms of the GNU General Public License.
    :extract_html: "<p>The <b>S-Lang programming library</b> is a software library
      for Unix, Windows, VMS, OS/2, and Mac OS X. It provides routines for embedding
      an interpreter for the S-Lang scripting language, and components to facilitate
      the creation of text-based applications. The latter class of functions include
      routines for constructing and manipulating keymaps, an interactive line-editing
      facility, and both low and high-level screen/terminal management functions.
      It is distributed under the terms of the GNU General Public License.</p>"
  record/45d0f7f9-d7a2-4593-a511-739e4caeb554:
    :type: standard
    :title: Pharo
    :displaytitle: Pharo
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q369096
    :titles:
      :canonical: Pharo
      :normalized: Pharo
      :display: Pharo
    :pageid: 23490878
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/Pharo_6.0.jpg/320px-Pharo_6.0.jpg
      :width: 320
      :height: 232
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/6/6b/Pharo_6.0.jpg
      :width: 800
      :height: 581
    :lang: en
    :dir: ltr
    :revision: '974347741'
    :tid: c3eed250-2b62-11eb-80c5-2766088fd89b
    :timestamp: '2020-08-22T13:34:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pharo
        :revisions: https://en.wikipedia.org/wiki/Pharo?action=history
        :edit: https://en.wikipedia.org/wiki/Pharo?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pharo
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pharo
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pharo
        :edit: https://en.m.wikipedia.org/wiki/Pharo?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pharo
    :extract: Pharo is an open source dynamic and reflective language which is inspired
      by the programming language Smalltalk. Pharo offers several live programming
      features such as immediate object manipulation, live update and hot recompiling.
    :extract_html: "<p><b>Pharo</b> is an open source dynamic and reflective language
      which is inspired by the programming language Smalltalk. Pharo offers several
      live programming features such as immediate object manipulation, live update
      and hot recompiling.</p>"
  record/e018932a-edb8-40cf-936d-450439aae451:
    :type: standard
    :title: Boomerang (programming language)
    :displaytitle: Boomerang (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4943501
    :titles:
      :canonical: Boomerang_(programming_language)
      :normalized: Boomerang (programming language)
      :display: Boomerang (programming language)
    :pageid: 21008097
    :lang: en
    :dir: ltr
    :revision: '966124770'
    :tid: 686ef5e0-2abd-11eb-9b68-2bcb9d022d86
    :timestamp: '2020-07-05T06:38:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Boomerang_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Boomerang_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Boomerang_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Boomerang_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Boomerang_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Boomerang_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Boomerang_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Boomerang_(programming_language)
    :extract: Boomerang is a programming language for writing lenses—well-behaved
      bidirectional transformations —that operate on ad-hoc, textual data formats.
    :extract_html: "<p><b>Boomerang</b> is a programming language for writing lenses—well-behaved
      bidirectional transformations —that operate on ad-hoc, textual data formats.</p>"
  record/085a47fe-8bd9-4040-89ed-38673cc94480:
    :type: standard
    :title: AWK
    :displaytitle: AWK
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q213970
    :titles:
      :canonical: AWK
      :normalized: AWK
      :display: AWK
    :pageid: 1456
    :lang: en
    :dir: ltr
    :revision: '990716984'
    :tid: 40f18f10-2f94-11eb-b4d4-4125de120d75
    :timestamp: '2020-11-26T03:05:31Z'
    :description: data-driven programming language made by Alfred Aho, Peter Weinberger
      and Brian Kernighan
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/AWK
        :revisions: https://en.wikipedia.org/wiki/AWK?action=history
        :edit: https://en.wikipedia.org/wiki/AWK?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:AWK
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/AWK
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/AWK
        :edit: https://en.m.wikipedia.org/wiki/AWK?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:AWK
    :extract: AWK (awk) is a domain-specific language designed for text processing
      and typically used as a data extraction and reporting tool. Like sed and grep,
      it's a filter, and is a standard feature of most Unix-like operating systems.
    :extract_html: "<p><b>AWK</b> (<i>awk</i>) is a domain-specific language designed
      for text processing and typically used as a data extraction and reporting tool.
      Like sed and grep, it's a filter, and is a standard feature of most Unix-like
      operating systems.</p>"
  record/7bf6e964-a0e3-43d9-a894-05f735a4ae0a:
    :type: standard
    :title: Easy Programming Language
    :displaytitle: Easy Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q11088328
    :titles:
      :canonical: Easy_Programming_Language
      :normalized: Easy Programming Language
      :display: Easy Programming Language
    :pageid: 42016798
    :lang: en
    :dir: ltr
    :revision: '948862069'
    :tid: 4f1ade50-35d1-11eb-b942-b9f7cb0a2647
    :timestamp: '2020-04-03T13:23:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Easy_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Easy_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Easy_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Easy_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Easy_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Easy_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Easy_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Easy_Programming_Language
    :extract: Easy Programming Language is a visual compiled multilingual proprietary
      programming language. EPL is somewhat popular in China because it features a
      full Chinese environment.
    :extract_html: "<p><b>Easy Programming Language</b> is a visual compiled multilingual
      proprietary programming language. EPL is somewhat popular in China because it
      features a full Chinese environment.</p>"
  record/769d7cd1-0eba-41b3-b0cf-8e5883b5ef87:
    :type: standard
    :title: Elixir (programming language)
    :displaytitle: Elixir (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5362035
    :titles:
      :canonical: Elixir_(programming_language)
      :normalized: Elixir (programming language)
      :display: Elixir (programming language)
    :pageid: 38202780
    :lang: en
    :dir: ltr
    :revision: '991627670'
    :tid: 16062850-3373-11eb-a3a5-f9fa2ddaa308
    :timestamp: '2020-12-01T01:18:11Z'
    :description: Programming language running on the Erlang virtual machine
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Elixir_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Elixir_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Elixir_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Elixir_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Elixir_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Elixir_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Elixir_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Elixir_(programming_language)
    :extract: Elixir is a functional, concurrent, general-purpose programming language
      that runs on the BEAM virtual machine used to implement the Erlang programming
      language. Elixir builds on top of Erlang and shares the same abstractions for
      building distributed, fault-tolerant applications. Elixir also provides productive
      tooling and an extensible design. The latter is supported by compile-time metaprogramming
      with macros and polymorphism via protocols.
    :extract_html: "<p><b>Elixir</b> is a functional, concurrent, general-purpose
      programming language that runs on the BEAM virtual machine used to implement
      the Erlang programming language. Elixir builds on top of Erlang and shares the
      same abstractions for building distributed, fault-tolerant applications. Elixir
      also provides productive tooling and an extensible design. The latter is supported
      by compile-time metaprogramming with macros and polymorphism via protocols.</p>"
  record/a00b2b5d-a2fd-40b4-aab2-ef328b116db5:
    :type: standard
    :title: Plus (programming language)
    :displaytitle: Plus (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7197427
    :titles:
      :canonical: Plus_(programming_language)
      :normalized: Plus (programming language)
      :display: Plus (programming language)
    :pageid: 27900530
    :lang: en
    :dir: ltr
    :revision: '963412271'
    :tid: 36ebca60-2c8f-11eb-bce6-03a203091145
    :timestamp: '2020-06-19T17:34:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Plus_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Plus_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Plus_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Plus_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Plus_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Plus_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Plus_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Plus_(programming_language)
    :extract: Plus is a "Pascal-like" system implementation language from the University
      of British Columbia (UBC), Canada, based on the SUE system language developed
      at the University of Toronto, c. 1971.
    :extract_html: <p><b>Plus</b> is a "Pascal-like" system implementation language
      from the University of British Columbia (UBC), Canada, based on the SUE system
      language developed at the University of Toronto, c. 1971.</p>
  record/346e21ce-4e2a-4a7f-ac1e-89e44b200973:
    :type: standard
    :title: XOD (programming language)
    :displaytitle: XOD (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q55642732
    :titles:
      :canonical: XOD_(programming_language)
      :normalized: XOD (programming language)
      :display: XOD (programming language)
    :pageid: 57408699
    :lang: en
    :dir: ltr
    :revision: '925439361'
    :tid: 00c67440-2d33-11eb-af94-6bf8f3af0c6a
    :timestamp: '2019-11-10T03:38:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XOD_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/XOD_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/XOD_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XOD_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XOD_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XOD_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/XOD_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XOD_(programming_language)
    :extract: XOD – is an open-source visual programming language for microcontrollers
      started in 2016. As a supported platform XOD started with Arduino boards compatibility
      and Raspberry PI.
    :extract_html: "<p><b>XOD</b> – is an open-source visual programming language
      for microcontrollers started in 2016. As a supported platform XOD started with
      Arduino boards compatibility and Raspberry PI.</p>"
  record/6b6d51c3-9b04-4032-b9a0-ad82ac175938:
    :type: standard
    :title: Clojure
    :displaytitle: Clojure
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q51798
    :titles:
      :canonical: Clojure
      :normalized: Clojure
      :display: Clojure
    :pageid: 16561990
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Clojure_logo.svg/320px-Clojure_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/5d/Clojure_logo.svg/256px-Clojure_logo.svg.png
      :width: 256
      :height: 256
    :lang: en
    :dir: ltr
    :revision: '989737920'
    :tid: 83af4a90-2fa3-11eb-8029-6b13b80b0784
    :timestamp: '2020-11-20T19:12:31Z'
    :description: Dialect of the Lisp programming language on the Java platform
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Clojure
        :revisions: https://en.wikipedia.org/wiki/Clojure?action=history
        :edit: https://en.wikipedia.org/wiki/Clojure?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Clojure
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Clojure
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Clojure
        :edit: https://en.m.wikipedia.org/wiki/Clojure?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Clojure
    :extract: Clojure is a modern, dynamic, and functional dialect of the Lisp programming
      language on the Java platform. Like other Lisp dialects, Clojure treats code
      as data and has a Lisp macro system. The current development process is community-driven,
      overseen by Rich Hickey as its benevolent dictator for life (BDFL).
    :extract_html: "<p><b>Clojure</b> is a modern, dynamic, and functional dialect
      of the Lisp programming language on the Java platform. Like other Lisp dialects,
      Clojure treats code as data and has a Lisp macro system. The current development
      process is community-driven, overseen by Rich Hickey as its benevolent dictator
      for life (BDFL).</p>"
  record/68f7ae52-c8b4-4734-a68e-f6f83aa73de9:
    :type: standard
    :title: Unix shell
    :displaytitle: Unix shell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q14663
    :titles:
      :canonical: Unix_shell
      :normalized: Unix shell
      :display: Unix shell
    :pageid: 32035
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1f/Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png/320px-Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png
      :width: 320
      :height: 183
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/1f/Tcsh_ejecut%C3%A1ndose_en_escritorio_Mac_OSX.png
      :width: 1280
      :height: 733
    :lang: en
    :dir: ltr
    :revision: '991424605'
    :tid: ffcc13a0-32a1-11eb-aa48-433c3db05f2f
    :timestamp: '2020-11-30T00:21:29Z'
    :description: Command-line interpreter for Unix operating system
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Unix_shell
        :revisions: https://en.wikipedia.org/wiki/Unix_shell?action=history
        :edit: https://en.wikipedia.org/wiki/Unix_shell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Unix_shell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Unix_shell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Unix_shell
        :edit: https://en.m.wikipedia.org/wiki/Unix_shell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Unix_shell
    :extract: A Unix shell is a command-line interpreter or shell that provides a
      command line user interface for Unix-like operating systems. The shell is both
      an interactive command language and a scripting language, and is used by the
      operating system to control the execution of the system using shell scripts.
    :extract_html: "<p>A <b>Unix shell</b> is a command-line interpreter or shell
      that provides a command line user interface for Unix-like operating systems.
      The shell is both an interactive command language and a scripting language,
      and is used by the operating system to control the execution of the system using
      shell scripts.</p>"
  record/27f68840-309f-4fb8-9d95-8582e6fb7e78:
    :type: standard
    :title: MUMPS
    :displaytitle: MUMPS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1882071
    :titles:
      :canonical: MUMPS
      :normalized: MUMPS
      :display: MUMPS
    :pageid: 19723
    :lang: en
    :dir: ltr
    :revision: '990618519'
    :tid: a2d018c0-2f2e-11eb-95eb-f3ea5de58cd9
    :timestamp: '2020-11-25T14:58:05Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MUMPS
        :revisions: https://en.wikipedia.org/wiki/MUMPS?action=history
        :edit: https://en.wikipedia.org/wiki/MUMPS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MUMPS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MUMPS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MUMPS
        :edit: https://en.m.wikipedia.org/wiki/MUMPS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MUMPS
    :extract: MUMPS, or M, is an integrated programming language and key–value database
      originally developed at Massachusetts General Hospital for managing hospital
      laboratory information systems.
    :extract_html: "<p><b>MUMPS</b>, or <b>M</b>, is an integrated programming language
      and key–value database originally developed at Massachusetts General Hospital
      for managing hospital laboratory information systems.</p>"
  record/7051e437-3126-486d-923c-cd4f47ed8bd7:
    :type: standard
    :title: Lithe
    :displaytitle: Lithe
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6647837
    :titles:
      :canonical: Lithe
      :normalized: Lithe
      :display: Lithe
    :pageid: 908572
    :lang: en
    :dir: ltr
    :revision: '943175269'
    :tid: '08738460-1d8b-11eb-8fd1-694349b0d82b'
    :timestamp: '2020-02-29T09:20:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lithe
        :revisions: https://en.wikipedia.org/wiki/Lithe?action=history
        :edit: https://en.wikipedia.org/wiki/Lithe?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lithe
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lithe
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lithe
        :edit: https://en.m.wikipedia.org/wiki/Lithe?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lithe
    :extract: Lithe is an experimental programming language created in 1982 by David
      Sandberg at the University of Washington which allows the programmer to freely
      choose their own syntax. Lithe combines the ideas of syntax-directed translation
      and classes in a novel manner that results in a remarkably simple yet powerful
      language.
    :extract_html: "<p><b>Lithe</b> is an experimental programming language created
      in 1982 by David Sandberg at the University of Washington which allows the programmer
      to freely choose their own syntax. Lithe combines the ideas of syntax-directed
      translation and classes in a novel manner that results in a remarkably simple
      yet powerful language.</p>"
  record/67e69c1f-5bc7-4896-bff8-dfc9ecc14a71:
    :type: standard
    :title: BCPL
    :displaytitle: BCPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q810009
    :titles:
      :canonical: BCPL
      :normalized: BCPL
      :display: BCPL
    :pageid: 4052
    :lang: en
    :dir: ltr
    :revision: '982283719'
    :tid: b483f2e0-35ae-11eb-aa71-fb3b8b63c991
    :timestamp: '2020-10-07T06:28:39Z'
    :description: Multi-paradigm computer programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/BCPL
        :revisions: https://en.wikipedia.org/wiki/BCPL?action=history
        :edit: https://en.wikipedia.org/wiki/BCPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:BCPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/BCPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/BCPL
        :edit: https://en.m.wikipedia.org/wiki/BCPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:BCPL
    :extract: BCPL is a procedural, imperative, and structured programming language.
      Originally intended for writing compilers for other languages, BCPL is no longer
      in common use. However, its influence is still felt because a stripped down
      and syntactically changed version of BCPL, called B, was the language on which
      the C programming language was based. BCPL introduced several features of many
      modern programming languages, including using curly braces to delimit code blocks.
      BCPL was first implemented by Martin Richards of the University of Cambridge
      in 1967.
    :extract_html: "<p><b>BCPL</b> is a procedural, imperative, and structured programming
      language. Originally intended for writing compilers for other languages, BCPL
      is no longer in common use. However, its influence is still felt because a stripped
      down and syntactically changed version of BCPL, called B, was the language on
      which the C programming language was based. BCPL introduced several features
      of many modern programming languages, including using curly braces to delimit
      code blocks. BCPL was first implemented by Martin Richards of the University
      of Cambridge in 1967.</p>"
  record/71581c56-5c00-4c25-8942-6b6c43b94efc:
    :type: standard
    :title: XBase++
    :displaytitle: XBase++
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1753410
    :titles:
      :canonical: XBase++
      :normalized: XBase++
      :display: XBase++
    :pageid: 2924800
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Animals.png/320px-Animals.png
      :width: 320
      :height: 204
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/5/54/Animals.png
      :width: 1088
      :height: 693
    :lang: en
    :dir: ltr
    :revision: '967262880'
    :tid: e870b0e0-1dce-11eb-9360-d599cc652bc8
    :timestamp: '2020-07-12T06:22:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XBase%2B%2B
        :revisions: https://en.wikipedia.org/wiki/XBase%2B%2B?action=history
        :edit: https://en.wikipedia.org/wiki/XBase%2B%2B?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XBase%2B%2B
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XBase%2B%2B
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XBase%2B%2B
        :edit: https://en.m.wikipedia.org/wiki/XBase%2B%2B?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XBase%2B%2B
    :extract: |-
      Xbase++ is an object oriented programming language which has multiple inheritance and polymorphism. It is based on the XBase language dialect and conventions.
      It is 100% Clipper compatible language supporting multiple inheritance, polymorphism, object oriented programming. It supports the xBase data types, including Codeblocks. With Xbase++ it is possible to generate applications for Windows NT, 95, 98, Me, 2000, XP, VISTA and Windows 7, 8, 10.
    :extract_html: |-
      <p><b>Xbase++</b> is an object oriented programming language which has multiple inheritance and polymorphism. It is based on the XBase language dialect and conventions.
      It is 100% Clipper compatible language supporting multiple inheritance, polymorphism, object oriented programming. It supports the xBase data types, including Codeblocks. With Xbase++ it is possible to generate applications for Windows NT, 95, 98, Me, 2000, XP, VISTA and Windows 7, 8, 10.</p>
  record/d4906980-6a9f-4ab8-ab0f-856f912d63eb:
    :type: standard
    :title: Bash (Unix shell)
    :displaytitle: Bash (Unix shell)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q189248
    :titles:
      :canonical: Bash_(Unix_shell)
      :normalized: Bash (Unix shell)
      :display: Bash (Unix shell)
    :pageid: 4547
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/e/e7/Bash_screenshot.png/235px-Bash_screenshot.png
      :width: 235
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/e/e7/Bash_screenshot.png
      :width: 562
      :height: 765
    :lang: en
    :dir: ltr
    :revision: '991014568'
    :tid: b77f3180-35ae-11eb-b5e4-71e06f3c4897
    :timestamp: '2020-11-27T20:30:31Z'
    :description: GNU replacement for the Bourne shell
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Bash_(Unix_shell)
        :revisions: https://en.wikipedia.org/wiki/Bash_(Unix_shell)?action=history
        :edit: https://en.wikipedia.org/wiki/Bash_(Unix_shell)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Bash_(Unix_shell)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Bash_(Unix_shell)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Bash_(Unix_shell)
        :edit: https://en.m.wikipedia.org/wiki/Bash_(Unix_shell)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Bash_(Unix_shell)
    :extract: Bash is a Unix shell and command language written by Brian Fox for the
      GNU Project as a free software replacement for the Bourne shell. First released
      in 1989, it has been used as the default login shell for most Linux distributions
      and all releases of Apple's macOS prior to macOS Catalina. A version is also
      available for Windows 10 via the Windows Subsystem for Linux. It is also the
      default user shell in Solaris 11.
    :extract_html: "<p><b>Bash</b> is a Unix shell and command language written by
      Brian Fox for the GNU Project as a free software replacement for the Bourne
      shell. First released in 1989, it has been used as the default login shell for
      most Linux distributions and all releases of Apple's macOS prior to macOS Catalina.
      A version is also available for Windows 10 via the Windows Subsystem for Linux.
      It is also the default user shell in Solaris 11.</p>"
  record/e2b35564-9313-477c-ae4b-c81a9e01cce9:
    :type: standard
    :title: Polymorphic Programming Language
    :displaytitle: Polymorphic Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7226597
    :titles:
      :canonical: Polymorphic_Programming_Language
      :normalized: Polymorphic Programming Language
      :display: Polymorphic Programming Language
    :pageid: 5005125
    :lang: en
    :dir: ltr
    :revision: '959214729'
    :tid: a1e186a0-2b97-11eb-a134-2d7e2c97db9e
    :timestamp: '2020-05-27T17:36:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Polymorphic_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Polymorphic_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Polymorphic_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Polymorphic_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Polymorphic_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Polymorphic_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Polymorphic_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Polymorphic_Programming_Language
    :extract: The Polymorphic Programming Language (PPL) was developed in 1969 at
      Harvard University by Thomas A. Standish. It is an interactive, extensible language
      with a base language similar to the language APL.
    :extract_html: "<p>The <b>Polymorphic Programming Language</b> (<b>PPL</b>) was
      developed in 1969 at Harvard University by Thomas A. Standish. It is an interactive,
      extensible language with a base language similar to the language APL.</p>"
  record/3ebf2891-a675-4d42-9d79-b9e803c73297:
    :type: standard
    :title: IDL (programming language)
    :displaytitle: IDL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1665857
    :titles:
      :canonical: IDL_(programming_language)
      :normalized: IDL (programming language)
      :display: IDL (programming language)
    :pageid: 512587
    :lang: en
    :dir: ltr
    :revision: '982810275'
    :tid: 861efd70-35b6-11eb-82f9-d7d659258f0a
    :timestamp: '2020-10-10T13:56:55Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/IDL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/IDL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/IDL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:IDL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/IDL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/IDL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/IDL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:IDL_(programming_language)
    :extract: IDL, short for Interactive Data Language, is a programming language
      used for data analysis. It is popular in particular areas of science, such as
      astronomy, atmospheric physics and medical imaging. IDL shares a common syntax
      with PV-Wave and originated from the same codebase, though the languages have
      subsequently diverged in detail. There are also free or costless implementations,
      such as GNU Data Language (GDL) and Fawlty Language (FL).
    :extract_html: <p><b>IDL</b>, short for <b>Interactive Data Language</b>, is a
      programming language used for data analysis. It is popular in particular areas
      of science, such as astronomy, atmospheric physics and medical imaging. IDL
      shares a common syntax with PV-Wave and originated from the same codebase, though
      the languages have subsequently diverged in detail. There are also free or costless
      implementations, such as GNU Data Language (GDL) and <span class="external text">Fawlty
      Language</span> (FL).</p>
  record/c86574c8-7a79-4455-9a45-d8c935c8c04b:
    :type: standard
    :title: XPL
    :displaytitle: XPL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4021505
    :titles:
      :canonical: XPL
      :normalized: XPL
      :display: XPL
    :pageid: 902082
    :lang: en
    :dir: ltr
    :revision: '989825641'
    :tid: da8df870-3228-11eb-82a1-3db9a15fa666
    :timestamp: '2020-11-21T07:14:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/XPL
        :revisions: https://en.wikipedia.org/wiki/XPL?action=history
        :edit: https://en.wikipedia.org/wiki/XPL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:XPL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/XPL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/XPL
        :edit: https://en.m.wikipedia.org/wiki/XPL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:XPL
    :extract: XPL is a programming language based on PL/I, a portable one-pass compiler
      written in its own language, and a parser generator tool for easily implementing
      similar compilers for other languages. XPL was designed in 1967 as a way to
      teach compiler design principles and as starting point for students to build
      compilers for their own languages.
    :extract_html: "<p><b>XPL</b> is a programming language based on PL/I, a portable
      one-pass compiler written in its own language, and a parser generator tool for
      easily implementing similar compilers for other languages. XPL was designed
      in 1967 as a way to teach compiler design principles and as starting point for
      students to build compilers for their own languages.</p>"
  record/cae8151e-f546-462c-a0de-022f6b28c89f:
    :type: standard
    :title: Tea (programming language)
    :displaytitle: Tea (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3516674
    :titles:
      :canonical: Tea_(programming_language)
      :normalized: Tea (programming language)
      :display: Tea (programming language)
    :pageid: 3431871
    :lang: en
    :dir: ltr
    :revision: '973682294'
    :tid: f1c6a0b0-35d3-11eb-9985-61167e4bb05f
    :timestamp: '2020-08-18T16:31:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Tea_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Tea_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Tea_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Tea_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Tea_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Tea_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Tea_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Tea_(programming_language)
    :extract: Tea is a high-level scripting language for the Java environment. It
      combines features of Scheme, Tcl, and Java.
    :extract_html: "<p><b>Tea</b> is a high-level scripting language for the Java
      environment. It combines features of Scheme, Tcl, and Java.</p>"
  record/f4b3f07a-5fbe-49d4-a20d-97d43a3a97a1:
    :type: standard
    :title: SQL
    :displaytitle: SQL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q47607
    :titles:
      :canonical: SQL
      :normalized: SQL
      :display: SQL
    :pageid: 29004
    :lang: en
    :dir: ltr
    :revision: '991023370'
    :tid: 4aac3ff0-30f7-11eb-96ed-05a023d435e6
    :timestamp: '2020-11-27T21:26:53Z'
    :description: Language for management and use of relational databases
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SQL
        :revisions: https://en.wikipedia.org/wiki/SQL?action=history
        :edit: https://en.wikipedia.org/wiki/SQL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SQL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SQL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SQL
        :edit: https://en.m.wikipedia.org/wiki/SQL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SQL
    :extract: SQL is a domain-specific language used in programming and designed for
      managing data held in a relational database management system (RDBMS), or for
      stream processing in a relational data stream management system (RDSMS). It
      is particularly useful in handling structured data, i.e. data incorporating
      relations among entities and variables.
    :extract_html: "<p><b>SQL</b> is a domain-specific language used in programming
      and designed for managing data held in a relational database management system
      (RDBMS), or for stream processing in a relational data stream management system
      (RDSMS). It is particularly useful in handling structured data, i.e. data incorporating
      relations among entities and variables.</p>"
  record/1943f767-15c4-4bfb-8c0c-d2e40f688607:
    :type: standard
    :title: Haskell (programming language)
    :displaytitle: Haskell (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q34010
    :titles:
      :canonical: Haskell_(programming_language)
      :normalized: Haskell (programming language)
      :display: Haskell (programming language)
    :pageid: 27404990
    :lang: en
    :dir: ltr
    :revision: '987825919'
    :tid: 74902510-3076-11eb-b4e0-613a4ca2ea0c
    :timestamp: '2020-11-09T13:31:32Z'
    :description: Functional programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Haskell_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Haskell_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Haskell_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Haskell_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Haskell_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Haskell_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Haskell_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Haskell_(programming_language)
    :extract: Haskell is a general-purpose, statically typed, purely functional programming
      language with type inference and lazy evaluation. Developed to be suitable for
      teaching, research and industrial application, Haskell has pioneered a number
      of advanced programming language features such as type classes, which enable
      type-safe operator overloading. Haskell's main implementation is the Glasgow
      Haskell Compiler (GHC). It is named after logician Haskell Curry.
    :extract_html: "<p><b>Haskell</b> is a general-purpose, statically typed, purely
      functional programming language with type inference and lazy evaluation. Developed
      to be suitable for teaching, research and industrial application, Haskell has
      pioneered a number of advanced programming language features such as type classes,
      which enable type-safe operator overloading. Haskell's main implementation is
      the Glasgow Haskell Compiler (GHC). It is named after logician Haskell Curry.</p>"
  record/76022ceb-69a8-4e3d-9dd9-6b897480060e:
    :type: standard
    :title: Nial
    :displaytitle: Nial
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7023815
    :titles:
      :canonical: Nial
      :normalized: Nial
      :display: Nial
    :pageid: 21571
    :lang: en
    :dir: ltr
    :revision: '980965379'
    :tid: 76796d20-1d5f-11eb-af16-ad5047b6b1c4
    :timestamp: '2020-09-29T14:18:42Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nial
        :revisions: https://en.wikipedia.org/wiki/Nial?action=history
        :edit: https://en.wikipedia.org/wiki/Nial?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nial
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nial
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nial
        :edit: https://en.m.wikipedia.org/wiki/Nial?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nial
    :extract: Nial is a high-level array programming language developed from about
      1981 by Mike Jenkins of Queen's University, Kingston, Ontario, Canada. Jenkins
      co-created the Jenkins–Traub algorithm.
    :extract_html: "<p><b>Nial</b> is a high-level array programming language developed
      from about 1981 by Mike Jenkins of Queen's University, Kingston, Ontario, Canada.
      Jenkins co-created the Jenkins–Traub algorithm.</p>"
  record/ecd62f18-d24f-4f30-af9b-db61a78f4310:
    :type: standard
    :title: Alma-0
    :displaytitle: Alma-0
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4733507
    :titles:
      :canonical: Alma-0
      :normalized: Alma-0
      :display: Alma-0
    :pageid: 933674
    :lang: en
    :dir: ltr
    :revision: '911928815'
    :tid: 6d8f73d0-1b7a-11eb-90f0-0bdcb56817ee
    :timestamp: '2019-08-22T03:01:16Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Alma-0
        :revisions: https://en.wikipedia.org/wiki/Alma-0?action=history
        :edit: https://en.wikipedia.org/wiki/Alma-0?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Alma-0
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Alma-0
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Alma-0
        :edit: https://en.m.wikipedia.org/wiki/Alma-0?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Alma-0
    :extract: Alma-0 is a multi-paradigm computer programming language. This language
      is an augmented version of the imperative Modula-2 language with logic-programming
      features and convenient backtracking capability. It is small, strongly typed,
      and combines constraint programming, a limited number of features inspired by
      logic programming and supports imperative paradigms. The language advocates
      declarative programming. The designers claim that search-oriented solutions
      built with it are substantially simpler than their counterparts written in purely
      imperative or logic programming style. Alma-0 provides natural, high-level constructs
      for the construction of search trees.
    :extract_html: "<p><b>Alma-0</b> is a multi-paradigm computer programming language.
      This language is an augmented version of the imperative Modula-2 language with
      logic-programming features and convenient backtracking capability. It is small,
      strongly typed, and combines constraint programming, a limited number of features
      inspired by logic programming and supports imperative paradigms. The language
      advocates declarative programming. The designers claim that search-oriented
      solutions built with it are substantially simpler than their counterparts written
      in purely imperative or logic programming style. Alma-0 provides natural, high-level
      constructs for the construction of search trees.</p>"
  record/543d4767-cfa2-4a9a-a32d-6809a491e12e:
    :type: standard
    :title: Scilab
    :displaytitle: Scilab
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q828742
    :titles:
      :canonical: Scilab
      :normalized: Scilab
      :display: Scilab
    :pageid: 153563
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f8/Scilab_6_1.png/320px-Scilab_6_1.png
      :width: 320
      :height: 171
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f8/Scilab_6_1.png
      :width: 1366
      :height: 728
    :lang: en
    :dir: ltr
    :revision: '985699232'
    :tid: '016944f0-2d28-11eb-978a-719df0b693b2'
    :timestamp: '2020-10-27T12:45:48Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Scilab
        :revisions: https://en.wikipedia.org/wiki/Scilab?action=history
        :edit: https://en.wikipedia.org/wiki/Scilab?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Scilab
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Scilab
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Scilab
        :edit: https://en.m.wikipedia.org/wiki/Scilab?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Scilab
    :extract: |-
      Scilab is a free and open-source, cross-platform numerical computational package and a high-level, numerically oriented programming language. It
      can be used for signal processing, statistical analysis, image enhancement, fluid dynamics simulations, numerical optimization, and modeling, simulation of explicit and implicit dynamical systems and symbolic manipulations.
    :extract_html: |-
      <p><b>Scilab</b> is a free and open-source, cross-platform numerical computational package and a high-level, numerically oriented programming language. It
      can be used for signal processing, statistical analysis, image enhancement, fluid dynamics simulations, numerical optimization, and modeling, simulation of explicit and implicit dynamical systems and symbolic manipulations.</p>
  record/bb96176b-39ec-46e9-8818-6463eb74b80c:
    :type: standard
    :title: Visual FoxPro
    :displaytitle: Visual FoxPro
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q753868
    :titles:
      :canonical: Visual_FoxPro
      :normalized: Visual FoxPro
      :display: Visual FoxPro
    :pageid: 23952547
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/7/7e/VisualFoxProScreenshot.png/320px-VisualFoxProScreenshot.png
      :width: 320
      :height: 186
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/7/7e/VisualFoxProScreenshot.png
      :width: 414
      :height: 240
    :lang: en
    :dir: ltr
    :revision: '979984243'
    :tid: a2cfda50-23ac-11eb-999a-3bf38f504ff7
    :timestamp: '2020-09-23T22:44:37Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Visual_FoxPro
        :revisions: https://en.wikipedia.org/wiki/Visual_FoxPro?action=history
        :edit: https://en.wikipedia.org/wiki/Visual_FoxPro?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Visual_FoxPro
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Visual_FoxPro
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Visual_FoxPro
        :edit: https://en.m.wikipedia.org/wiki/Visual_FoxPro?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Visual_FoxPro
    :extract: Visual FoxPro is a Microsoft data-centric procedural programming language
      that subsequently became object-oriented.
    :extract_html: "<p><b>Visual FoxPro</b> is a Microsoft data-centric procedural
      programming language that subsequently became object-oriented.</p>"
  record/1fcea66b-01ed-4066-8226-c00d933e8988:
    :type: standard
    :title: Milk (programming language)
    :displaytitle: Milk (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q28046771
    :titles:
      :canonical: Milk_(programming_language)
      :normalized: Milk (programming language)
      :display: Milk (programming language)
    :pageid: 51603617
    :lang: en
    :dir: ltr
    :revision: '912606695'
    :tid: d62f6fc0-f07e-11ea-9968-e3763e4cc785
    :timestamp: '2019-08-26T18:51:11Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Milk_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Milk_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Milk_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Milk_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Milk_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Milk_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Milk_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Milk_(programming_language)
    :extract: Milk is a programming language "that lets application developers manage
      memory more efficiently in programs that deal with scattered data points in
      large data sets."
    :extract_html: <p>Milk is a programming language "that lets application developers
      manage memory more efficiently in programs that deal with scattered data points
      in large data sets."</p>
  record/9ef06631-160b-4a14-a221-f491346addcb:
    :type: standard
    :title: Aldor
    :displaytitle: Aldor
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1549370
    :titles:
      :canonical: Aldor
      :normalized: Aldor
      :display: Aldor
    :pageid: 948551
    :lang: en
    :dir: ltr
    :revision: '979114867'
    :tid: 98a5a0c0-35bb-11eb-b7f8-fb3f8145ed23
    :timestamp: '2020-09-18T21:23:06Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Aldor
        :revisions: https://en.wikipedia.org/wiki/Aldor?action=history
        :edit: https://en.wikipedia.org/wiki/Aldor?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Aldor
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Aldor
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Aldor
        :edit: https://en.m.wikipedia.org/wiki/Aldor?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Aldor
    :extract: Aldor is a programming language. It is the successor of A# as the extension
      language of the Axiom computer algebra system.
    :extract_html: "<p><b>Aldor</b> is a programming language. It is the successor
      of A# as the extension language of the Axiom computer algebra system.</p>"
  record/b233e4bf-d232-4a2c-93de-d1a8631893e3:
    :type: standard
    :title: Kojo (learning environment)
    :displaytitle: Kojo (learning environment)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6426496
    :titles:
      :canonical: Kojo_(learning_environment)
      :normalized: Kojo (learning environment)
      :display: Kojo (learning environment)
    :pageid: 30843423
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/fe/Kojo_Logo_with_overlapping_pentagons.png
      :width: 138
      :height: 236
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/fe/Kojo_Logo_with_overlapping_pentagons.png
      :width: 138
      :height: 236
    :lang: en
    :dir: ltr
    :revision: '987209972'
    :tid: 73b29a60-2d15-11eb-9aee-5bcd82797de2
    :timestamp: '2020-11-05T16:44:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kojo_(learning_environment)
        :revisions: https://en.wikipedia.org/wiki/Kojo_(learning_environment)?action=history
        :edit: https://en.wikipedia.org/wiki/Kojo_(learning_environment)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kojo_(learning_environment)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kojo_(learning_environment)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kojo_(learning_environment)
        :edit: https://en.m.wikipedia.org/wiki/Kojo_(learning_environment)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kojo_(learning_environment)
    :extract: Kojo is a programming language and integrated development environment
      (IDE) for computer programming and learning. It has many different features
      that enable playing, exploring, creating, and learning in the areas of computer
      programming, mental skills, (interactive) math, graphics, art, music, science,
      animation, games, and electronics. Kojo draws ideas from the programming languages
      Logo and Processing.
    :extract_html: "<p><b>Kojo</b> is a programming language and integrated development
      environment (IDE) for computer programming and learning. It has many different
      features that enable playing, exploring, creating, and learning in the areas
      of computer programming, mental skills, (interactive) math, graphics, art, music,
      science, animation, games, and electronics. Kojo draws ideas from the programming
      languages Logo and Processing.</p>"
  record/0f7617fd-cb19-4f5a-89d7-b40ce9994a8b:
    :type: standard
    :title: Nemerle
    :displaytitle: Nemerle
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2626413
    :titles:
      :canonical: Nemerle
      :normalized: Nemerle
      :display: Nemerle
    :pageid: 30883042
    :lang: en
    :dir: ltr
    :revision: '956139114'
    :tid: 30f6d840-34e9-11eb-ad06-0598439f25ae
    :timestamp: '2020-05-11T18:12:23Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nemerle
        :revisions: https://en.wikipedia.org/wiki/Nemerle?action=history
        :edit: https://en.wikipedia.org/wiki/Nemerle?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nemerle
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nemerle
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nemerle
        :edit: https://en.m.wikipedia.org/wiki/Nemerle?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nemerle
    :extract: Nemerle is a general-purpose, high-level, statically typed programming
      language designed for platforms using the Common Language Infrastructure (.NET/Mono).
      It offers functional, object-oriented and imperative features. It has a simple
      C#-like syntax and a powerful metaprogramming system. In June 2012, the core
      developers of Nemerle were hired by the Czech software development company JetBrains.
      The team is focusing on developing Nitra, a framework to implement extant and
      new programming languages. This framework will likely be used to create future
      versions of Nemerle.
    :extract_html: "<p><b>Nemerle</b> is a general-purpose, high-level, statically
      typed programming language designed for platforms using the Common Language
      Infrastructure (.NET/Mono). It offers functional, object-oriented and imperative
      features. It has a simple C#-like syntax and a powerful metaprogramming system.
      In June 2012, the core developers of Nemerle were hired by the Czech software
      development company JetBrains. The team is focusing on developing Nitra, a framework
      to implement extant and new programming languages. This framework will likely
      be used to create future versions of Nemerle.</p>"
  record/c4f60fd1-f9be-41c3-89b2-b0ccd3e73f03:
    :type: standard
    :title: PROSE modeling language
    :displaytitle: PROSE modeling language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q17162806
    :titles:
      :canonical: PROSE_modeling_language
      :normalized: PROSE modeling language
      :display: PROSE modeling language
    :pageid: 40811716
    :lang: en
    :dir: ltr
    :revision: '968696214'
    :tid: d6856d20-3418-11eb-8bd4-e789396ce5f7
    :timestamp: '2020-07-20T23:04:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/PROSE_modeling_language
        :revisions: https://en.wikipedia.org/wiki/PROSE_modeling_language?action=history
        :edit: https://en.wikipedia.org/wiki/PROSE_modeling_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:PROSE_modeling_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/PROSE_modeling_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/PROSE_modeling_language
        :edit: https://en.m.wikipedia.org/wiki/PROSE_modeling_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:PROSE_modeling_language
    :extract: |-
      Author Joseph Thames, now deceased (2019), has left us with his latest version of PROSE, called FortranCalculus. It is freeware that can be downloaded from https://goal-driven.net/apps/fc-compiler.html. Joe's www.metacalculus.com website is no longer up. I worked with Joe since ~1975, he will be missed!
      Thanks, Phil B Brubaker.
    :extract_html: |-
      <p>Author Joseph Thames, now deceased (2019), has left us with his latest version of PROSE, called FortranCalculus. It is freeware that can be downloaded from <span class="external free">https://goal-driven.net/apps/fc-compiler.html</span>. Joe's www.metacalculus.com website is no longer up. I worked with Joe since ~1975, he will be missed!
      Thanks, Phil B Brubaker.</p>
  record/38ea12bb-f861-4433-98a8-1d97684a2327:
    :type: standard
    :title: Fortran
    :displaytitle: Fortran
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q83303
    :titles:
      :canonical: Fortran
      :normalized: Fortran
      :display: Fortran
    :pageid: 11168
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Fortran_logo.svg/320px-Fortran_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b8/Fortran_logo.svg/255px-Fortran_logo.svg.png
      :width: 255
      :height: 255
    :lang: en
    :dir: ltr
    :revision: '990235507'
    :tid: a86e1d40-2da3-11eb-98a2-0fd0531361d3
    :timestamp: '2020-11-23T15:50:41Z'
    :description: General-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Fortran
        :revisions: https://en.wikipedia.org/wiki/Fortran?action=history
        :edit: https://en.wikipedia.org/wiki/Fortran?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Fortran
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Fortran
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Fortran
        :edit: https://en.m.wikipedia.org/wiki/Fortran?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Fortran
    :extract: Fortran is a general-purpose, compiled imperative programming language
      that is especially suited to numeric computation and scientific computing.
    :extract_html: "<p><b>Fortran</b> is a general-purpose, compiled imperative programming
      language that is especially suited to numeric computation and scientific computing.</p>"
  record/8ca84633-f146-4adb-8c69-028712559f59:
    :type: standard
    :title: Join Java
    :displaytitle: Join Java
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6268991
    :titles:
      :canonical: Join_Java
      :normalized: Join Java
      :display: Join Java
    :pageid: 2225745
    :lang: en
    :dir: ltr
    :revision: '956137259'
    :tid: f4c13c70-2f17-11eb-8b42-a77055a4ba33
    :timestamp: '2020-05-11T18:01:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Join_Java
        :revisions: https://en.wikipedia.org/wiki/Join_Java?action=history
        :edit: https://en.wikipedia.org/wiki/Join_Java?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Join_Java
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Join_Java
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Join_Java
        :edit: https://en.m.wikipedia.org/wiki/Join_Java?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Join_Java
    :extract: Join Java is a programming language based on the join-pattern that extends
      the standard Java programming language with the join semantics of the join-calculus.
      It was written at the University of South Australia within the Reconfigurable
      Computing Lab by Dr. Von Itzstein.
    :extract_html: "<p><b>Join Java</b> is a programming language based on the join-pattern
      that extends the standard Java programming language with the join semantics
      of the join-calculus. It was written at the University of South Australia within
      the Reconfigurable Computing Lab by Dr. Von Itzstein.</p>"
  record/016df825-64c2-4265-aabb-42e6fffb7c7f:
    :type: standard
    :title: FOIL (programming language)
    :displaytitle: FOIL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5426845
    :titles:
      :canonical: FOIL_(programming_language)
      :normalized: FOIL (programming language)
      :display: FOIL (programming language)
    :pageid: 602746
    :lang: en
    :dir: ltr
    :revision: '914128286'
    :tid: 57365d40-35b7-11eb-83a1-a5b00230cfaf
    :timestamp: '2019-09-05T11:08:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FOIL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/FOIL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/FOIL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FOIL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FOIL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FOIL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/FOIL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FOIL_(programming_language)
    :extract: FOIL was the name for two different programming languages.
    :extract_html: "<p><b>FOIL</b> was the name for two different programming languages.</p>"
  record/99a721f5-ee98-48fb-a2e5-8ee9e44f0cc6:
    :type: standard
    :title: Kodu Game Lab
    :displaytitle: Kodu Game Lab
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3496255
    :titles:
      :canonical: Kodu_Game_Lab
      :normalized: Kodu Game Lab
      :display: Kodu Game Lab
    :pageid: 13837554
    :lang: en
    :dir: ltr
    :revision: '989321514'
    :tid: ed92a180-297e-11eb-8973-c33e1bf1ca64
    :timestamp: '2020-11-18T09:17:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Kodu_Game_Lab
        :revisions: https://en.wikipedia.org/wiki/Kodu_Game_Lab?action=history
        :edit: https://en.wikipedia.org/wiki/Kodu_Game_Lab?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Kodu_Game_Lab
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Kodu_Game_Lab
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Kodu_Game_Lab
        :edit: https://en.m.wikipedia.org/wiki/Kodu_Game_Lab?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Kodu_Game_Lab
    :extract: Kodu, originally named Boku, is a programming integrated development
      environment (IDE) by Microsoft's FUSE Labs. It runs on Xbox 360 and Microsoft
      Windows XP, Windows Vista, Windows 7, Windows 8 and Windows 10. It was released
      on the Xbox Live Marketplace on June 30, 2009. A Windows version is available
      to the general public for download from Microsoft's FUSE web portal.
    :extract_html: "<p><b>Kodu</b>, originally named <i>Boku</i>, is a programming
      integrated development environment (IDE) by Microsoft's FUSE Labs. It runs on
      Xbox 360 and Microsoft Windows XP, Windows Vista, Windows 7, Windows 8 and Windows
      10. It was released on the Xbox Live Marketplace on June 30, 2009. A Windows
      version is available to the general public for download from Microsoft's FUSE
      web portal.</p>"
  record/a9e7e382-b370-4f1a-b897-c8a9c20289fb:
    :type: standard
    :title: Mystic BBS
    :displaytitle: Mystic BBS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6948922
    :titles:
      :canonical: Mystic_BBS
      :normalized: Mystic BBS
      :display: Mystic BBS
    :pageid: 1637709
    :lang: en
    :dir: ltr
    :revision: '983411109'
    :tid: 430b1180-2d29-11eb-940b-4b3c9ceb5ab6
    :timestamp: '2020-10-14T02:27:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mystic_BBS
        :revisions: https://en.wikipedia.org/wiki/Mystic_BBS?action=history
        :edit: https://en.wikipedia.org/wiki/Mystic_BBS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mystic_BBS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mystic_BBS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mystic_BBS
        :edit: https://en.m.wikipedia.org/wiki/Mystic_BBS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mystic_BBS
    :extract: Mystic BBS is a bulletin board system software program that began in
      1995 and was first released to the public in December 1997 under the MS-DOS
      platform. It has since been ported to Microsoft Windows, OS/2, OS X, and Linux.
      Mystic was designed to be a spiritual successor to the Telegard and Renegade
      bulletin board systems.
    :extract_html: "<p><b>Mystic BBS</b> is a bulletin board system software program
      that began in 1995 and was first released to the public in December 1997 under
      the MS-DOS platform. It has since been ported to Microsoft Windows, OS/2, OS
      X, and Linux. Mystic was designed to be a spiritual successor to the Telegard
      and Renegade bulletin board systems.</p>"
  record/ab464095-bb20-40b8-bb6f-944af12155ba:
    :type: standard
    :title: GPSS
    :displaytitle: GPSS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1486554
    :titles:
      :canonical: GPSS
      :normalized: GPSS
      :display: GPSS
    :pageid: 577078
    :lang: en
    :dir: ltr
    :revision: '988352182'
    :tid: a5ef0da0-250a-11eb-b929-e1071ffc0821
    :timestamp: '2020-11-12T17:15:19Z'
    :description: General-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GPSS
        :revisions: https://en.wikipedia.org/wiki/GPSS?action=history
        :edit: https://en.wikipedia.org/wiki/GPSS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GPSS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GPSS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GPSS
        :edit: https://en.m.wikipedia.org/wiki/GPSS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GPSS
    :extract: General Purpose Simulation System (GPSS) is a discrete time simulation
      general-purpose programming language, where a simulation clock advances in discrete
      steps. A system is modelled as transactions enter the system and are passed
      from one service to another. It is used primarily as a process flow oriented
      simulation language; this is particularly well-suited for problems such as a
      factory.
    :extract_html: "<p><b>General Purpose Simulation System</b> (<b>GPSS</b>) is a
      discrete time simulation general-purpose programming language, where a simulation
      clock advances in discrete steps. A system is modelled as transactions enter
      the system and are passed from one service to another. It is used primarily
      as a process flow oriented simulation language; this is particularly well-suited
      for problems such as a factory.</p>"
  record/b506b83d-a062-4141-a0c8-490d5490a76f:
    :type: standard
    :title: SenseTalk
    :displaytitle: SenseTalk
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7450966
    :titles:
      :canonical: SenseTalk
      :normalized: SenseTalk
      :display: SenseTalk
    :pageid: 9096092
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/9/9c/ST-HelloWorld2.png/320px-ST-HelloWorld2.png
      :width: 320
      :height: 278
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/9/9c/ST-HelloWorld2.png
      :width: 829
      :height: 719
    :lang: en
    :dir: ltr
    :revision: '981239868'
    :tid: 1c725fd0-2593-11eb-b9bd-ed3281523da0
    :timestamp: '2020-10-01T03:43:04Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/SenseTalk
        :revisions: https://en.wikipedia.org/wiki/SenseTalk?action=history
        :edit: https://en.wikipedia.org/wiki/SenseTalk?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:SenseTalk
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/SenseTalk
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/SenseTalk
        :edit: https://en.m.wikipedia.org/wiki/SenseTalk?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:SenseTalk
    :extract: SenseTalk is an intuitive, People Oriented Programming language designed
      to be both readable and expressive. Being readable makes it easier for a person
      unfamiliar with a particular script to understand what the script does. Being
      expressive allows people to describe actions to be taken using high-level human-task-oriented
      terms rather than in terms of the low-level operations the computer must perform
      to carry out those tasks.
    :extract_html: "<p><b>SenseTalk</b> is an intuitive, <b>People Oriented Programming</b>
      language designed to be both readable and expressive. Being readable makes it
      easier for a person unfamiliar with a particular script to understand what the
      script does. Being expressive allows people to describe actions to be taken
      using high-level human-task-oriented terms rather than in terms of the low-level
      operations the computer must perform to carry out those tasks.</p>"
  record/67808afb-8597-4156-8571-b791b2d9ea5e:
    :type: standard
    :title: Racket (programming language)
    :displaytitle: Racket (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1254148
    :titles:
      :canonical: Racket_(programming_language)
      :normalized: Racket (programming language)
      :display: Racket (programming language)
    :pageid: 3350021
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/b/b5/Drracket.png/271px-Drracket.png
      :width: 271
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/b/b5/Drracket.png
      :width: 739
      :height: 873
    :lang: en
    :dir: ltr
    :revision: '989977320'
    :tid: 829241d0-2fa3-11eb-83c6-e196553147f3
    :timestamp: '2020-11-22T02:37:07Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Racket_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Racket_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Racket_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Racket_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Racket_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Racket_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Racket_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Racket_(programming_language)
    :extract: Racket is a general-purpose, multi-paradigm programming language based
      on the Scheme dialect of Lisp. It is designed to be a platform for programming
      language design and implementation. In addition to the core Racket language,
      Racket is also used to refer to the family of programming languages and set
      of tools supporting development on and with Racket. Racket is also used for
      scripting, computer science education, and research.
    :extract_html: "<p><b>Racket</b> is a general-purpose, multi-paradigm programming
      language based on the Scheme dialect of Lisp. It is designed to be a platform
      for programming language design and implementation. In addition to the core
      Racket language, <i>Racket</i> is also used to refer to the family of programming
      languages and set of tools supporting development on and with Racket. Racket
      is also used for scripting, computer science education, and research.</p>"
  record/25ff9aee-c5c7-481e-b4f4-a7f0e5223b9c:
    :type: standard
    :title: Nu (programming language)
    :displaytitle: Nu (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7067717
    :titles:
      :canonical: Nu_(programming_language)
      :normalized: Nu (programming language)
      :display: Nu (programming language)
    :pageid: 17151577
    :lang: en
    :dir: ltr
    :revision: '956139302'
    :tid: aafb4c90-360e-11eb-b807-bdf713957d6c
    :timestamp: '2020-05-11T18:13:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Nu_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Nu_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Nu_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Nu_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Nu_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Nu_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Nu_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Nu_(programming_language)
    :extract: Nu is an interpreted object-oriented programming language, with a Lisp-like
      syntax, created by Tim Burks as an alternative scripting language to program
      OS X through its Cocoa application programming interface (API). Implementations
      also exist for iPhone and Linux.
    :extract_html: "<p><b>Nu</b> is an interpreted object-oriented programming language,
      with a Lisp-like syntax, created by Tim Burks as an alternative scripting language
      to program OS X through its Cocoa application programming interface (API). Implementations
      also exist for iPhone and Linux.</p>"
  record/3a74fb33-599f-4e74-aea3-94fd45d2754e:
    :type: standard
    :title: Mesa (programming language)
    :displaytitle: Mesa (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1042397
    :titles:
      :canonical: Mesa_(programming_language)
      :normalized: Mesa (programming language)
      :display: Mesa (programming language)
    :pageid: 19962
    :lang: en
    :dir: ltr
    :revision: '958631375'
    :tid: 1f44dc80-1a29-11eb-8dc7-7f501faf996c
    :timestamp: '2020-05-24T21:42:45Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mesa_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Mesa_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Mesa_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mesa_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mesa_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mesa_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Mesa_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mesa_(programming_language)
    :extract: Mesa is a programming language developed in the late 1970s at the Xerox
      Palo Alto Research Center in Palo Alto, California, United States. The language
      name was a pun based upon the programming language catchphrases of the time,
      because Mesa is a "high level" programming language.
    :extract_html: <p><b>Mesa</b> is a programming language developed in the late
      1970s at the Xerox Palo Alto Research Center in Palo Alto, California, United
      States. The language name was a pun based upon the programming language catchphrases
      of the time, because Mesa is a "high level" programming language.</p>
  record/9c4c90a9-2ca4-45a5-b062-42c6971f3b99:
    :type: standard
    :title: Fish (Unix shell)
    :displaytitle: fish (Unix shell)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q307263
    :titles:
      :canonical: Fish_(Unix_shell)
      :normalized: Fish (Unix shell)
      :display: fish (Unix shell)
    :pageid: 1889847
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/03/Fish_shell_logo_ascii.png
      :width: 210
      :height: 147
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/0/03/Fish_shell_logo_ascii.png
      :width: 210
      :height: 147
    :lang: en
    :dir: ltr
    :revision: '989379892'
    :tid: 50688f80-34ca-11eb-bf52-c50e3373d3cb
    :timestamp: '2020-11-18T17:28:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Fish_(Unix_shell)
        :revisions: https://en.wikipedia.org/wiki/Fish_(Unix_shell)?action=history
        :edit: https://en.wikipedia.org/wiki/Fish_(Unix_shell)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Fish_(Unix_shell)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Fish_(Unix_shell)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Fish_(Unix_shell)
        :edit: https://en.m.wikipedia.org/wiki/Fish_(Unix_shell)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Fish_(Unix_shell)
    :extract: fish is a Unix shell that attempts to be more interactive and user-friendly
      than those with a longer history or those formulated as function-compatible
      replacements for the aforementioned. The design goal of fish is to give the
      user a rich set of powerful features in a way that is easy to discover, remember,
      and use. fish is considered an "exotic shell", in that its syntax derives from
      neither the Bourne shell nor the C shell. Also unlike previous shells, which
      disable certain features by default to save system resources, fish enables all
      features by default.
    :extract_html: <p><b>fish</b> is a Unix shell that attempts to be more interactive
      and user-friendly than those with a longer history or those formulated as function-compatible
      replacements for the aforementioned. The design goal of fish is to give the
      user a rich set of powerful features in a way that is easy to discover, remember,
      and use. fish is considered an "exotic shell", in that its syntax derives from
      neither the Bourne shell nor the C shell. Also unlike previous shells, which
      disable certain features by default to save system resources, fish enables all
      features by default.</p>
  record/bb15580f-a98e-4619-a4f0-034e1d9149cb:
    :type: standard
    :title: ACC (programming language)
    :displaytitle: ACC (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q375171
    :titles:
      :canonical: ACC_(programming_language)
      :normalized: ACC (programming language)
      :display: ACC (programming language)
    :pageid: 928669
    :lang: en
    :dir: ltr
    :revision: '919605161'
    :tid: afc04150-1b78-11eb-b576-11df33170925
    :timestamp: '2019-10-04T16:29:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/ACC_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/ACC_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/ACC_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:ACC_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/ACC_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/ACC_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/ACC_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:ACC_(programming_language)
    :extract: ACC is a near-C compiler for the MS-DOS operating system on the IBM
      PC line of computers for programs. The compiler and compiled programs will run
      on any Intel 80386 or above PC running MS-DOS. Included with the compiler are
      a 386 assembler and a linker for combining multiple object files. There are
      also two libraries, which are a protected mode DOS extender, and a library of
      functions callable by C programs.
    :extract_html: "<p><b>ACC</b> is a near-C compiler for the MS-DOS operating system
      on the IBM PC line of computers for programs. The compiler and compiled programs
      will run on any Intel 80386 or above PC running MS-DOS. Included with the compiler
      are a 386 assembler and a linker for combining multiple object files. There
      are also two libraries, which are a protected mode DOS extender, and a library
      of functions callable by C programs.</p>"
  record/7b320c51-3579-4bd3-9fd2-933043f5198b:
    :type: standard
    :title: MIVA Script
    :displaytitle: MIVA Script
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3026464
    :titles:
      :canonical: MIVA_Script
      :normalized: MIVA Script
      :display: MIVA Script
    :pageid: 849448
    :lang: en
    :dir: ltr
    :revision: '912735392'
    :tid: 2c920b90-35ba-11eb-a733-f3a9da248b60
    :timestamp: '2019-08-27T15:05:59Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MIVA_Script
        :revisions: https://en.wikipedia.org/wiki/MIVA_Script?action=history
        :edit: https://en.wikipedia.org/wiki/MIVA_Script?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MIVA_Script
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MIVA_Script
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MIVA_Script
        :edit: https://en.m.wikipedia.org/wiki/MIVA_Script?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MIVA_Script
    :extract: |-
      Miva Script is a proprietary computer scripting language mainly used for internet applications such as e-commerce. As of 2015, it is developed, maintained and owned by Miva Merchant, Inc., based in San Diego, California.
      Many web hosting companies support Miva Script on their servers, but it is significantly less widespread than other popular web languages.
    :extract_html: |-
      <p><b>Miva Script</b> is a proprietary computer scripting language mainly used for internet applications such as e-commerce. As of 2015, it is developed, maintained and owned by Miva Merchant, Inc., based in San Diego, California.
      Many web hosting companies support Miva Script on their servers, but it is significantly less widespread than other popular web languages.</p>
  record/71eeadaa-837d-4e3f-a9f7-bb98b8b3a302:
    :type: standard
    :title: Squeak
    :displaytitle: Squeak
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q762464
    :titles:
      :canonical: Squeak
      :normalized: Squeak
      :display: Squeak
    :pageid: 37426
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/1d/Squeak_51_morphic_interface_screenshot.png/320px-Squeak_51_morphic_interface_screenshot.png
      :width: 320
      :height: 180
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/1d/Squeak_51_morphic_interface_screenshot.png
      :width: 1116
      :height: 628
    :lang: en
    :dir: ltr
    :revision: '989050737'
    :tid: 0efbc920-3049-11eb-97e2-73ffe8d9a0fb
    :timestamp: '2020-11-16T19:45:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Squeak
        :revisions: https://en.wikipedia.org/wiki/Squeak?action=history
        :edit: https://en.wikipedia.org/wiki/Squeak?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Squeak
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Squeak
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Squeak
        :edit: https://en.m.wikipedia.org/wiki/Squeak?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Squeak
    :extract: The Squeak programming language is a dialect of Smalltalk. It is object-oriented,
      class-based, and reflective.
    :extract_html: "<p>The <b>Squeak</b> programming language is a dialect of Smalltalk.
      It is object-oriented, class-based, and reflective.</p>"
  record/5a0a84ff-12a4-41b8-bb9e-ff6cae798323:
    :type: standard
    :title: Franz Lisp
    :displaytitle: Franz Lisp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5492884
    :titles:
      :canonical: Franz_Lisp
      :normalized: Franz Lisp
      :display: Franz Lisp
    :pageid: 2188401
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f7/4.3_BSD_UWisc_VAX_Emulation_Lisp_Manual.png/320px-4.3_BSD_UWisc_VAX_Emulation_Lisp_Manual.png
      :width: 320
      :height: 204
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/f/f7/4.3_BSD_UWisc_VAX_Emulation_Lisp_Manual.png
      :width: 652
      :height: 416
    :lang: en
    :dir: ltr
    :revision: '978807304'
    :tid: 81d644d0-2fa3-11eb-be7e-f39943044523
    :timestamp: '2020-09-17T01:54:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Franz_Lisp
        :revisions: https://en.wikipedia.org/wiki/Franz_Lisp?action=history
        :edit: https://en.wikipedia.org/wiki/Franz_Lisp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Franz_Lisp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Franz_Lisp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Franz_Lisp
        :edit: https://en.m.wikipedia.org/wiki/Franz_Lisp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Franz_Lisp
    :extract: In computer programming, Franz Lisp is a discontinued Lisp programming
      language system written at the University of California, Berkeley by Professor
      Richard Fateman and several students, based largely on Maclisp and distributed
      with the Berkeley Software Distribution (BSD) for the Digital Equipment Corporation
      (DEC) VAX minicomputer. Piggybacking on the popularity of the BSD package, Franz
      Lisp was probably the most widely distributed and used Lisp system of the 1970s
      and 1980s.
    :extract_html: "<p>In computer programming, <b>Franz Lisp</b> is a discontinued
      Lisp programming language system written at the University of California, Berkeley
      by Professor Richard Fateman and several students, based largely on Maclisp
      and distributed with the Berkeley Software Distribution (BSD) for the Digital
      Equipment Corporation (DEC) VAX minicomputer. Piggybacking on the popularity
      of the BSD package, Franz Lisp was probably the most widely distributed and
      used Lisp system of the 1970s and 1980s.</p>"
  record/b5e02b5d-0d21-475c-a935-41da7bd0cb86:
    :type: standard
    :title: KornShell
    :displaytitle: KornShell
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q204222
    :titles:
      :canonical: KornShell
      :normalized: KornShell
      :display: KornShell
    :pageid: 17213
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/1/16/OpenBSD_ksh_Interaction.png/320px-OpenBSD_ksh_Interaction.png
      :width: 320
      :height: 188
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/1/16/OpenBSD_ksh_Interaction.png
      :width: 730
      :height: 430
    :lang: en
    :dir: ltr
    :revision: '981492878'
    :tid: ff7d0550-2d27-11eb-87e2-f52a228df387
    :timestamp: '2020-10-02T17:06:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/KornShell
        :revisions: https://en.wikipedia.org/wiki/KornShell?action=history
        :edit: https://en.wikipedia.org/wiki/KornShell?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:KornShell
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/KornShell
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/KornShell
        :edit: https://en.m.wikipedia.org/wiki/KornShell?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:KornShell
    :extract: KornShell (ksh) is a Unix shell which was developed by David Korn at
      Bell Labs in the early 1980s and announced at USENIX on July 14, 1983. The initial
      development was based on Bourne shell source code. Other early contributors
      were Bell Labs developers Mike Veach and Pat Sullivan, who wrote the Emacs and
      vi-style line editing modes' code, respectively. KornShell is backward-compatible
      with the Bourne shell and includes many features of the C shell, inspired by
      the requests of Bell Labs users.
    :extract_html: "<p><b>KornShell</b> (<code><b>ksh</b></code>) is a Unix shell
      which was developed by David Korn at Bell Labs in the early 1980s and announced
      at USENIX on July 14, 1983. The initial development was based on Bourne shell
      source code. Other early contributors were Bell Labs developers Mike Veach and
      Pat Sullivan, who wrote the Emacs and vi-style line editing modes' code, respectively.
      KornShell is backward-compatible with the Bourne shell and includes many features
      of the C shell, inspired by the requests of Bell Labs users.</p>"
  record/d3b2bad2-b9a9-49f7-bd11-10ecfb8b6f9e:
    :type: standard
    :title: Quantum programming
    :displaytitle: Quantum programming
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4218497
    :titles:
      :canonical: Quantum_programming
      :normalized: Quantum programming
      :display: Quantum programming
    :pageid: 2137644
    :lang: en
    :dir: ltr
    :revision: '980597186'
    :tid: 58fd74e0-3447-11eb-8e8c-294ca30aacb5
    :timestamp: '2020-09-27T11:08:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Quantum_programming
        :revisions: https://en.wikipedia.org/wiki/Quantum_programming?action=history
        :edit: https://en.wikipedia.org/wiki/Quantum_programming?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Quantum_programming
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Quantum_programming
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Quantum_programming
        :edit: https://en.m.wikipedia.org/wiki/Quantum_programming?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Quantum_programming
    :extract: Quantum programming is the process of assembling sequences of instructions,
      called quantum programs, that are capable of running on a quantum computer.
      Quantum programming languages help express quantum algorithms using high-level
      constructs.
    :extract_html: "<p><b>Quantum programming</b> is the process of assembling sequences
      of instructions, called quantum programs, that are capable of running on a quantum
      computer. Quantum programming languages help express quantum algorithms using
      high-level constructs.</p>"
  record/268499ea-07d3-4cc0-a60c-c1fc6c77084f:
    :type: standard
    :title: Cyclone (programming language)
    :displaytitle: Cyclone (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q79598
    :titles:
      :canonical: Cyclone_(programming_language)
      :normalized: Cyclone (programming language)
      :display: Cyclone (programming language)
    :pageid: 7645
    :lang: en
    :dir: ltr
    :revision: '988819369'
    :tid: 423e4720-2740-11eb-91cf-ffd439775ea2
    :timestamp: '2020-11-15T12:44:08Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cyclone_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cyclone_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cyclone_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cyclone_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cyclone_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cyclone_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cyclone_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cyclone_(programming_language)
    :extract: The Cyclone programming language is intended to be a safe dialect of
      the C language. Cyclone is designed to avoid buffer overflows and other vulnerabilities
      that are possible in C programs, without losing the power and convenience of
      C as a tool for system programming.
    :extract_html: "<p>The <b>Cyclone</b> programming language is intended to be a
      safe dialect of the C language. Cyclone is designed to avoid buffer overflows
      and other vulnerabilities that are possible in C programs, without losing the
      power and convenience of C as a tool for system programming.</p>"
  record/4561cef5-9a06-4ba5-bb53-bfea5ef81ca2:
    :type: standard
    :title: Flavors (programming language)
    :displaytitle: Flavors (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1427564
    :titles:
      :canonical: Flavors_(programming_language)
      :normalized: Flavors (programming language)
      :display: Flavors (programming language)
    :pageid: 1332640
    :lang: en
    :dir: ltr
    :revision: '973378077'
    :tid: ea5c3a20-2ca9-11eb-84ff-5d93b0e2f0ec
    :timestamp: '2020-08-16T22:05:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Flavors_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Flavors_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Flavors_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Flavors_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Flavors_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Flavors_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Flavors_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Flavors_(programming_language)
    :extract: Flavors, an early object-oriented extension to Lisp developed by Howard
      Cannon at the MIT Artificial Intelligence Laboratory for the Lisp machine and
      its programming language Lisp Machine Lisp, was the first programming language
      to include mixins. Symbolics used it for its Lisp machines, and eventually developed
      it into New Flavors; both the original and new Flavors were message passing
      OO models. It was hugely influential in the development of the Common Lisp Object
      System (CLOS).
    :extract_html: "<p><b>Flavors</b>, an early object-oriented extension to Lisp
      developed by Howard Cannon at the MIT Artificial Intelligence Laboratory for
      the Lisp machine and its programming language Lisp Machine Lisp, was the first
      programming language to include mixins. Symbolics used it for its Lisp machines,
      and eventually developed it into <b>New Flavors</b>; both the original and new
      Flavors were message passing OO models. It was hugely influential in the development
      of the Common Lisp Object System (CLOS).</p>"
  record/4c912cdc-c1f8-478f-8ef6-976f63d1f751:
    :type: standard
    :title: StarLogo
    :displaytitle: StarLogo
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4050034
    :titles:
      :canonical: StarLogo
      :normalized: StarLogo
      :display: StarLogo
    :pageid: 746828
    :lang: en
    :dir: ltr
    :revision: '987243363'
    :tid: e7883290-2ca9-11eb-b25a-d5ee39ece0db
    :timestamp: '2020-11-05T20:30:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/StarLogo
        :revisions: https://en.wikipedia.org/wiki/StarLogo?action=history
        :edit: https://en.wikipedia.org/wiki/StarLogo?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:StarLogo
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/StarLogo
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/StarLogo
        :edit: https://en.m.wikipedia.org/wiki/StarLogo?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:StarLogo
    :extract: StarLogo is an agent-based simulation language developed by Mitchel
      Resnick, Eric Klopfer, and others at the Massachusetts Institute of Technology
      (MIT) Media Lab and Scheller Teacher Education Program in Massachusetts. It
      is an extension of the Logo programming language, a dialect of Lisp. Designed
      for education, StarLogo can be used by students to model or simulate the behavior
      of decentralized systems.
    :extract_html: "<p><b>StarLogo</b> is an agent-based simulation language developed
      by Mitchel Resnick, Eric Klopfer, and others at the Massachusetts Institute
      of Technology (MIT) Media Lab and Scheller Teacher Education Program in Massachusetts.
      It is an extension of the Logo programming language, a dialect of Lisp. Designed
      for education, StarLogo can be used by students to model or simulate the behavior
      of decentralized systems.</p>"
  record/de0a1f10-3951-4815-bdb5-9aa5b63422ee:
    :type: standard
    :title: NewtonScript
    :displaytitle: NewtonScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1577753
    :titles:
      :canonical: NewtonScript
      :normalized: NewtonScript
      :display: NewtonScript
    :pageid: 60545
    :lang: en
    :dir: ltr
    :revision: '943070035'
    :tid: d848f050-1fe6-11eb-8ccb-27cc9bf6c975
    :timestamp: '2020-02-28T17:04:43Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NewtonScript
        :revisions: https://en.wikipedia.org/wiki/NewtonScript?action=history
        :edit: https://en.wikipedia.org/wiki/NewtonScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NewtonScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NewtonScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NewtonScript
        :edit: https://en.m.wikipedia.org/wiki/NewtonScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NewtonScript
    :extract: NewtonScript is a prototype-based programming language created to write
      programs for the Newton platform. It is heavily influenced by the Self programming
      language, but modified to be more suited to needs of mobile and embedded devices.
    :extract_html: "<p><b>NewtonScript</b> is a prototype-based programming language
      created to write programs for the Newton platform. It is heavily influenced
      by the Self programming language, but modified to be more suited to needs of
      mobile and embedded devices.</p>"
  record/4b7c3300-02f1-465f-a249-878fcb060b42:
    :type: standard
    :title: Elm (programming language)
    :displaytitle: Elm (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5366250
    :titles:
      :canonical: Elm_(programming_language)
      :normalized: Elm (programming language)
      :display: Elm (programming language)
    :pageid: 37552825
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Elm_logo.svg/320px-Elm_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Elm_logo.svg/512px-Elm_logo.svg.png
      :width: 512
      :height: 512
    :lang: en
    :dir: ltr
    :revision: '990602518'
    :tid: 60515ee0-2f1b-11eb-b2ec-45443da729e2
    :timestamp: '2020-11-25T12:40:12Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Elm_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Elm_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Elm_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Elm_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Elm_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Elm_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Elm_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Elm_(programming_language)
    :extract: Elm is a domain-specific programming language for declaratively creating
      web browser-based graphical user interfaces. Elm is purely functional, and is
      developed with emphasis on usability, performance, and robustness. It advertises
      "no runtime exceptions in practice", made possible by the Elm compiler's static
      type checking.
    :extract_html: <p><b>Elm</b> is a domain-specific programming language for declaratively
      creating web browser-based graphical user interfaces. Elm is purely functional,
      and is developed with emphasis on usability, performance, and robustness. It
      advertises "no runtime exceptions in practice", made possible by the Elm compiler's
      static type checking.</p>
  record/066aa144-26f5-4d47-8659-1236f6de01ec:
    :type: standard
    :title: Pike (programming language)
    :displaytitle: Pike (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1572341
    :titles:
      :canonical: Pike_(programming_language)
      :normalized: Pike (programming language)
      :display: Pike (programming language)
    :pageid: 86780
    :lang: en
    :dir: ltr
    :revision: '955292420'
    :tid: ca78cf30-1fec-11eb-857a-633b83c90d0d
    :timestamp: '2020-05-07T00:33:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Pike_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Pike_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Pike_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Pike_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Pike_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Pike_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Pike_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Pike_(programming_language)
    :extract: Pike is an interpreted, general-purpose, high-level, cross-platform,
      dynamic programming language, with a syntax similar to that of C. Unlike many
      other dynamic languages, Pike is both statically and dynamically typed, and
      requires explicit type definitions. It features a flexible type system that
      allows the rapid development and flexible code of dynamically typed languages,
      while still providing some of the benefits of a statically typed language.
    :extract_html: "<p><b>Pike</b> is an interpreted, general-purpose, high-level,
      cross-platform, dynamic programming language, with a syntax similar to that
      of C. Unlike many other dynamic languages, Pike is both statically and dynamically
      typed, and requires explicit type definitions. It features a flexible type system
      that allows the rapid development and flexible code of dynamically typed languages,
      while still providing some of the benefits of a statically typed language.</p>"
  record/af9585b3-51b3-41c1-a21e-09c1878cd423:
    :type: standard
    :title: Scala (programming language)
    :displaytitle: Scala (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q460584
    :titles:
      :canonical: Scala_(programming_language)
      :normalized: Scala (programming language)
      :display: Scala (programming language)
    :pageid: 3254510
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Scala-full-color.svg/320px-Scala-full-color.svg.png
      :width: 320
      :height: 146
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/3/39/Scala-full-color.svg/512px-Scala-full-color.svg.png
      :width: 512
      :height: 234
    :lang: en
    :dir: ltr
    :revision: '989582277'
    :tid: 2c1ec350-34e9-11eb-940b-4b3c9ceb5ab6
    :timestamp: '2020-11-19T20:44:46Z'
    :description: General-purpose programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Scala_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Scala_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Scala_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Scala_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Scala_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Scala_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Scala_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Scala_(programming_language)
    :extract: Scala is a general-purpose programming language providing support for
      both object-oriented programming and functional programming. The language has
      a strong static type system. Designed to be concise, many of Scala's design
      decisions are aimed to address criticisms of Java.
    :extract_html: "<p><b>Scala</b> is a general-purpose programming language providing
      support for both object-oriented programming and functional programming. The
      language has a strong static type system. Designed to be concise, many of Scala's
      design decisions are aimed to address criticisms of Java.</p>"
  record/43ac6768-f763-41af-baa8-26399cb9b40e:
    :type: standard
    :title: Geometric Description Language
    :displaytitle: Geometric Description Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q519163
    :titles:
      :canonical: Geometric_Description_Language
      :normalized: Geometric Description Language
      :display: Geometric Description Language
    :pageid: 4410977
    :lang: en
    :dir: ltr
    :revision: '906316646'
    :tid: ecb2b360-08b1-11eb-af95-6bc87c4df983
    :timestamp: '2019-07-15T02:38:56Z'
    :description: computer programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Geometric_Description_Language
        :revisions: https://en.wikipedia.org/wiki/Geometric_Description_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Geometric_Description_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Geometric_Description_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Geometric_Description_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Geometric_Description_Language
        :edit: https://en.m.wikipedia.org/wiki/Geometric_Description_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Geometric_Description_Language
    :extract: In computer-aided design, Geometric Description Language (GDL) is the
      programming language of ArchiCAD library parts. GSM is the file format of these
      CAD objects.
    :extract_html: "<p>In computer-aided design, <b>Geometric Description Language</b>
      (<b>GDL</b>) is the programming language of ArchiCAD library parts. <b>GSM</b>
      is the file format of these CAD objects.</p>"
  record/64f5681b-788a-47b0-99d8-3eb6a3f67752:
    :type: standard
    :title: Rust (programming language)
    :displaytitle: Rust (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q575650
    :titles:
      :canonical: Rust_(programming_language)
      :normalized: Rust (programming language)
      :display: Rust (programming language)
    :pageid: 29414838
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Rust_programming_language_black_logo.svg/320px-Rust_programming_language_black_logo.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/d/d5/Rust_programming_language_black_logo.svg/144px-Rust_programming_language_black_logo.svg.png
      :width: 144
      :height: 144
    :lang: en
    :dir: ltr
    :revision: '992225952'
    :tid: 2c4c1300-35e8-11eb-bfe5-8befc9d7b81f
    :timestamp: '2020-12-04T04:21:19Z'
    :description: Memory-safe programming language without garbage collection
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Rust_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Rust_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Rust_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Rust_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Rust_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Rust_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Rust_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Rust_(programming_language)
    :extract: Rust is a multi-paradigm programming language designed for performance
      and safety, especially safe concurrency. Rust is syntactically similar to C++,
      but can guarantee memory safety by using a borrow checker to validate references.
      Rust achieves memory safety without garbage collection, and reference counting
      is optional.
    :extract_html: "<p><b>Rust</b> is a multi-paradigm programming language designed
      for performance and safety, especially safe concurrency. Rust is syntactically
      similar to C++, but can guarantee memory safety by using a <i>borrow checker</i>
      to validate references. Rust achieves memory safety without garbage collection,
      and reference counting is optional.</p>"
  record/b3703466-1b09-4058-b145-a03f7abf6d0f:
    :type: standard
    :title: CEEMAC
    :displaytitle: CEEMAC
    :namespace:
      :id: 0
      :text: ''
    :titles:
      :canonical: CEEMAC
      :normalized: CEEMAC
      :display: CEEMAC
    :pageid: 30646029
    :lang: en
    :dir: ltr
    :revision: '949539582'
    :tid: 57f6a9e0-2d0d-11eb-9b1b-e56960500449
    :timestamp: '2020-04-07T02:10:28Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CEEMAC
        :revisions: https://en.wikipedia.org/wiki/CEEMAC?action=history
        :edit: https://en.wikipedia.org/wiki/CEEMAC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CEEMAC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CEEMAC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CEEMAC
        :edit: https://en.m.wikipedia.org/wiki/CEEMAC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CEEMAC
    :extract: CEEMAC is a programming language developed in the 1980s for the Apple
      II family of computers. It was authored by Brooke Boering and published by Vagabondo
      Enterprises,
    :extract_html: "<p><b>CEEMAC</b> is a programming language developed in the 1980s
      for the Apple II family of computers. It was authored by Brooke Boering and
      published by Vagabondo Enterprises,</p>"
  record/265b99bb-a0e1-47b9-86c5-22ca0403b82f:
    :type: standard
    :title: Microassembler
    :displaytitle: Microassembler
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1590911
    :titles:
      :canonical: Microassembler
      :normalized: Microassembler
      :display: Microassembler
    :pageid: 20072
    :lang: en
    :dir: ltr
    :revision: '876144775'
    :tid: 1ff87510-1a29-11eb-b1ab-29af73b1a210
    :timestamp: '2018-12-31T13:04:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Microassembler
        :revisions: https://en.wikipedia.org/wiki/Microassembler?action=history
        :edit: https://en.wikipedia.org/wiki/Microassembler?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Microassembler
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Microassembler
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Microassembler
        :edit: https://en.m.wikipedia.org/wiki/Microassembler?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Microassembler
    :extract: A microassembler is a computer program that helps prepare a microprogram,
      called firmware, to control the low level operation of a computer in much the
      same way an assembler helps prepare higher level code for a processor. The difference
      is that the microprogram is usually only developed by the processor manufacturer
      and works intimately with the computer hardware. On a microprogrammed computer
      the microprogram implements the operations of the instruction set in which any
      normal program is written. The use of a microprogram allows the manufacturer
      to fix certain mistakes, including working around hardware design errors, without
      modifying the hardware. Another means of employing microassembler-generated
      microprograms is in allowing the same hardware to run different instruction
      sets. After it is assembled, the microprogram is then loaded to a control store
      to become part of the logic of a CPU's control unit.
    :extract_html: "<p>A <b>microassembler</b> is a computer program that helps prepare
      a microprogram, called <i>firmware</i>, to control the low level operation of
      a computer in much the same way an assembler helps prepare higher level code
      for a processor. The difference is that the microprogram is usually only developed
      by the processor manufacturer and works intimately with the computer hardware.
      On a microprogrammed computer the microprogram implements the operations of
      the instruction set in which any normal program is written. The use of a microprogram
      allows the manufacturer to fix certain mistakes, including working around hardware
      design errors, without modifying the hardware. Another means of employing microassembler-generated
      microprograms is in allowing the same hardware to run different instruction
      sets. After it is assembled, the microprogram is then loaded to a control store
      to become part of the logic of a CPU's control unit.</p>"
  record/02535c78-ceb9-4a5f-a4e6-07ef81eabce1:
    :type: standard
    :title: Cybil (programming language)
    :displaytitle: Cybil (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5197880
    :titles:
      :canonical: Cybil_(programming_language)
      :normalized: Cybil (programming language)
      :display: Cybil (programming language)
    :pageid: 32669131
    :lang: en
    :dir: ltr
    :revision: '944326321'
    :tid: 301610d0-1c61-11eb-92bb-7fe842e0d9bd
    :timestamp: '2020-03-07T03:46:15Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cybil_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cybil_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cybil_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cybil_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cybil_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cybil_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cybil_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cybil_(programming_language)
    :extract: Cybil was a Pascal-like language developed at Control Data Corporation
      for the Cyber computer family. Cybil was used as the implementation language
      for the NOS/VE operating system on the CDC Cyber series and was also used to
      write the eOS operating system for the ETA10 supercomputer in the 1980s.
    :extract_html: "<p><b>Cybil</b> was a Pascal-like language developed at Control
      Data Corporation for the Cyber computer family. Cybil was used as the implementation
      language for the NOS/VE operating system on the CDC Cyber series and was also
      used to write the eOS operating system for the ETA10 supercomputer in the 1980s.</p>"
  record/4b42ee7c-ac75-4d2b-893d-d028598c01cf:
    :type: standard
    :title: GRASS (programming language)
    :displaytitle: GRASS (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3756259
    :titles:
      :canonical: GRASS_(programming_language)
      :normalized: GRASS (programming language)
      :display: GRASS (programming language)
    :pageid: 144766
    :lang: en
    :dir: ltr
    :revision: '965963615'
    :tid: d2061e20-3008-11eb-ae17-e74b86fd542d
    :timestamp: '2020-07-04T13:43:30Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/GRASS_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/GRASS_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/GRASS_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:GRASS_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/GRASS_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/GRASS_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/GRASS_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:GRASS_(programming_language)
    :extract: GRASS is a programming language created to script 2D vector graphics
      animations. GRASS was similar to BASIC in syntax, but added numerous instructions
      for specifying 2D object animation, including scaling, translation and rotation
      over time. These functions were directly supported by the Vector General 3D
      graphics terminal GRASS was written for. It quickly became a hit with the artistic
      community who were experimenting with the new medium of computer graphics, and
      is most famous for its use by Larry Cuba to create the original "attacking the
      Death Star will not be easy" animation in Star Wars (1977).
    :extract_html: <p><b>GRASS</b> is a programming language created to script 2D
      vector graphics animations. GRASS was similar to BASIC in syntax, but added
      numerous instructions for specifying 2D object animation, including scaling,
      translation and rotation over time. These functions were directly supported
      by the Vector General 3D graphics terminal GRASS was written for. It quickly
      became a hit with the artistic community who were experimenting with the new
      medium of computer graphics, and is most famous for its use by Larry Cuba to
      create the original "attacking the Death Star will not be easy" animation in
      <i>Star Wars</i> (1977).</p>
  record/768630df-e8c6-46f8-ba2d-ee39111aa985:
    :type: standard
    :title: Xojo
    :displaytitle: Xojo
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q14378091
    :titles:
      :canonical: Xojo
      :normalized: Xojo
      :display: Xojo
    :pageid: 39624220
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/1/15/Xojo_Company_Logo.png
      :width: 250
      :height: 250
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/1/15/Xojo_Company_Logo.png
      :width: 250
      :height: 250
    :lang: en
    :dir: ltr
    :revision: '990463770'
    :tid: '08723ac0-2e74-11eb-b4e0-613a4ca2ea0c'
    :timestamp: '2020-11-24T16:42:20Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Xojo
        :revisions: https://en.wikipedia.org/wiki/Xojo?action=history
        :edit: https://en.wikipedia.org/wiki/Xojo?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Xojo
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Xojo
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Xojo
        :edit: https://en.m.wikipedia.org/wiki/Xojo?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Xojo
    :extract: The Xojo programming environment and programming language is developed
      and commercially marketed by Xojo, Inc. of Austin, Texas for software development
      targeting macOS, Microsoft Windows, Linux, iOS, the Web and Raspberry Pi. Xojo
      uses a proprietary object-oriented language.
    :extract_html: "<p>The <b>Xojo</b> programming environment and programming language
      is developed and commercially marketed by Xojo, Inc. of Austin, Texas for software
      development targeting macOS, Microsoft Windows, Linux, iOS, the Web and Raspberry
      Pi. Xojo uses a proprietary object-oriented language.</p>"
  record/03524171-0bf7-48fa-9130-5eb13225fd7e:
    :type: standard
    :title: Perl Data Language
    :displaytitle: Perl Data Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4046690
    :titles:
      :canonical: Perl_Data_Language
      :normalized: Perl Data Language
      :display: Perl Data Language
    :pageid: 908764
    :lang: en
    :dir: ltr
    :revision: '981749597'
    :tid: 11bce1d0-20db-11eb-8065-41a60d72260d
    :timestamp: '2020-10-04T06:43:19Z'
    :description: Array programming library for Perl
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Perl_Data_Language
        :revisions: https://en.wikipedia.org/wiki/Perl_Data_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Perl_Data_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Perl_Data_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Perl_Data_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Perl_Data_Language
        :edit: https://en.m.wikipedia.org/wiki/Perl_Data_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Perl_Data_Language
    :extract: Perl Data Language is a set of free software array programming extensions
      to the Perl programming language. PDL extends the data structures built into
      Perl, to include large multidimensional arrays, and adds functionality to manipulate
      those arrays as vector objects. It also provides tools for image processing,
      machine learning, computer modeling of physical systems, and graphical plotting
      and presentation. Simple operations are automatically vectorized across complete
      arrays, and higher-dimensional operations are supported.
    :extract_html: "<p><b>Perl Data Language</b> is a set of free software array programming
      extensions to the Perl programming language. PDL extends the data structures
      built into Perl, to include large multidimensional arrays, and adds functionality
      to manipulate those arrays as vector objects. It also provides tools for image
      processing, machine learning, computer modeling of physical systems, and graphical
      plotting and presentation. Simple operations are automatically vectorized across
      complete arrays, and higher-dimensional operations are supported.</p>"
  record/15530cea-22a3-4bc0-b259-7ba331c7d222:
    :type: standard
    :title: FP (programming language)
    :displaytitle: FP (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1474061
    :titles:
      :canonical: FP_(programming_language)
      :normalized: FP (programming language)
      :display: FP (programming language)
    :pageid: 899253
    :lang: en
    :dir: ltr
    :revision: '988630104'
    :tid: 412df550-3385-11eb-acc8-b1543a787c1c
    :timestamp: '2020-11-14T09:21:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FP_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/FP_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/FP_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FP_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FP_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FP_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/FP_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FP_(programming_language)
    :extract: FP is a programming language created by John Backus to support the function-level
      programming paradigm. This allows eliminating named variables. The language
      was introduced in Backus's 1977 Turing Award paper, "Can Programming Be Liberated
      from the von Neumann Style?", subtitled "a functional style and its algebra
      of programs." The paper sparked interest in functional programming research,
      eventually leading to modern functional languages, and not the function-level
      paradigm Backus had hoped.
    :extract_html: <p><b>FP</b> is a programming language created by John Backus to
      support the function-level programming paradigm. This allows eliminating named
      variables. The language was introduced in Backus's 1977 Turing Award paper,
      "Can Programming Be Liberated from the von Neumann Style?", subtitled "a functional
      style and its algebra of programs." The paper sparked interest in functional
      programming research, eventually leading to modern functional languages, and
      not the function-level paradigm Backus had hoped.</p>
  record/d4695ded-af41-4074-b104-69ed4e0a4ffa:
    :type: standard
    :title: Language H
    :displaytitle: Language H
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q96386891
    :titles:
      :canonical: Language_H
      :normalized: Language H
      :display: Language H
    :pageid: 63559387
    :lang: en
    :dir: ltr
    :revision: '950458826'
    :tid: 3e71d490-2ccc-11eb-95b9-8ddb4236a03b
    :timestamp: '2020-04-12T06:06:34Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Language_H
        :revisions: https://en.wikipedia.org/wiki/Language_H?action=history
        :edit: https://en.wikipedia.org/wiki/Language_H?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Language_H
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Language_H
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Language_H
        :edit: https://en.m.wikipedia.org/wiki/Language_H?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Language_H
    :extract: Language H is a proprietary, procedural programming language created
      by NCR based on COBOL. The first compiler was developed in August 1962 to run
      on the National-Elliott 405M and produce object code for the National-Elliott
      803B. It is believed that the "H" stands for John C Harwell.
    :extract_html: <p><b>Language H</b> is a proprietary, procedural programming language
      created by NCR based on COBOL. The first compiler was developed in August 1962
      to run on the National-Elliott 405M and produce object code for the National-Elliott
      803B. It is believed that the "H" stands for John C Harwell.</p>
  record/fb47136a-45ca-48ae-bd55-6407bec1d1f7:
    :type: standard
    :title: Lucid (programming language)
    :displaytitle: Lucid (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3561750
    :titles:
      :canonical: Lucid_(programming_language)
      :normalized: Lucid (programming language)
      :display: Lucid (programming language)
    :pageid: 1485589
    :lang: en
    :dir: ltr
    :revision: '991318461'
    :tid: 9cf01e90-3240-11eb-817c-bbfb3575ea8b
    :timestamp: '2020-11-29T12:44:23Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lucid_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lucid_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lucid_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lucid_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lucid_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lucid_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lucid_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lucid_(programming_language)
    :extract: Lucid is a dataflow programming language designed to experiment with
      non-von Neumann programming models. It was designed by Bill Wadge and Ed Ashcroft
      and described in the 1985 book Lucid, the Dataflow Programming Language.
    :extract_html: "<p><b>Lucid</b> is a dataflow programming language designed to
      experiment with non-von Neumann programming models. It was designed by Bill
      Wadge and Ed Ashcroft and described in the 1985 book <i>Lucid, the Dataflow
      Programming Language</i>.</p>"
  record/8b243949-192f-4645-bf43-cfd099a52e9d:
    :type: standard
    :title: Máni
    :displaytitle: Máni
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q739765
    :titles:
      :canonical: Máni
      :normalized: Máni
      :display: Máni
    :pageid: 530658
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ae/M%C3%A1ni_and_S%C3%B3l_by_Lorenz_Fr%C3%B8lich.jpg/289px-M%C3%A1ni_and_S%C3%B3l_by_Lorenz_Fr%C3%B8lich.jpg
      :width: 289
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/a/ae/M%C3%A1ni_and_S%C3%B3l_by_Lorenz_Fr%C3%B8lich.jpg
      :width: 847
      :height: 937
    :lang: en
    :dir: ltr
    :revision: '956743101'
    :tid: 909fc640-2a5c-11eb-b36e-fd96e168aed6
    :timestamp: '2020-05-15T02:03:54Z'
    :description: Personification of the Moon in Norse mythology
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/M%C3%A1ni
        :revisions: https://en.wikipedia.org/wiki/M%C3%A1ni?action=history
        :edit: https://en.wikipedia.org/wiki/M%C3%A1ni?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:M%C3%A1ni
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/M%C3%A1ni
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/M%C3%A1ni
        :edit: https://en.m.wikipedia.org/wiki/M%C3%A1ni?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:M%C3%A1ni
    :extract: Máni is the personification of the Moon in Norse mythology. Máni, personified,
      is attested in the Poetic Edda, compiled in the 13th century from earlier traditional
      sources, and the Prose Edda, written in the 13th century by Snorri Sturluson.
      Both sources state that he is the brother of the personified sun, Sól, and the
      son of Mundilfari, while the Prose Edda adds that he is followed by the children
      Hjúki and Bil through the heavens. As a proper noun, Máni appears throughout
      Old Norse literature. Scholars have proposed theories about Máni's potential
      connection to the Northern European notion of the Man in the Moon, and a potentially
      otherwise unattested story regarding Máni through skaldic kennings.
    :extract_html: "<p><b>Máni</b> is the personification of the Moon in Norse mythology.
      Máni, personified, is attested in the <i>Poetic Edda</i>, compiled in the 13th
      century from earlier traditional sources, and the <i>Prose Edda</i>, written
      in the 13th century by Snorri Sturluson. Both sources state that he is the brother
      of the personified sun, Sól, and the son of Mundilfari, while the <i>Prose Edda</i>
      adds that he is followed by the children Hjúki and Bil through the heavens.
      As a proper noun, Máni appears throughout Old Norse literature. Scholars have
      proposed theories about Máni's potential connection to the Northern European
      notion of the Man in the Moon, and a potentially otherwise unattested story
      regarding Máni through skaldic kennings.</p>"
  record/634850d9-fca6-4380-a0c3-06830d7bc26a:
    :type: standard
    :title: Visual Prolog
    :displaytitle: Visual Prolog
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q627600
    :titles:
      :canonical: Visual_Prolog
      :normalized: Visual Prolog
      :display: Visual Prolog
    :pageid: 1741668
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/8/84/Visual_Prolog_IDE_Screenshot.png/320px-Visual_Prolog_IDE_Screenshot.png
      :width: 320
      :height: 236
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/8/84/Visual_Prolog_IDE_Screenshot.png
      :width: 1046
      :height: 773
    :lang: en
    :dir: ltr
    :revision: '956610860'
    :tid: 1dd172d0-1c4c-11eb-8d08-f127b51fed9b
    :timestamp: '2020-05-14T08:52:53Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Visual_Prolog
        :revisions: https://en.wikipedia.org/wiki/Visual_Prolog?action=history
        :edit: https://en.wikipedia.org/wiki/Visual_Prolog?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Visual_Prolog
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Visual_Prolog
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Visual_Prolog
        :edit: https://en.m.wikipedia.org/wiki/Visual_Prolog?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Visual_Prolog
    :extract: Visual Prolog, formerly known as PDC Prolog and Turbo Prolog, is a strongly
      typed object-oriented extension of Prolog. As Turbo Prolog, it was marketed
      by Borland but it is now developed and marketed by the Danish firm Prolog Development
      Center (PDC) that originally developed it. Visual Prolog can build Microsoft
      Windows GUI-applications, console applications, DLLs, and CGI-programs. It can
      also link to COM components and to databases by means of ODBC.
    :extract_html: "<p><b>Visual Prolog</b>, formerly known as <b>PDC Prolog</b> and
      <b>Turbo Prolog</b>, is a strongly typed object-oriented extension of Prolog.
      As Turbo Prolog, it was marketed by Borland but it is now developed and marketed
      by the Danish firm Prolog Development Center (PDC) that originally developed
      it. Visual Prolog can build Microsoft Windows GUI-applications, console applications,
      DLLs, and CGI-programs. It can also link to COM components and to databases
      by means of ODBC.</p>"
  record/6b1aa37d-a76c-4b2a-8656-b8666eebaa29:
    :type: standard
    :title: TRAC (programming language)
    :displaytitle: TRAC (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2842324
    :titles:
      :canonical: TRAC_(programming_language)
      :normalized: TRAC (programming language)
      :display: TRAC (programming language)
    :pageid: 352419
    :lang: en
    :dir: ltr
    :revision: '990772993'
    :tid: 430c5c50-2fe2-11eb-b260-6942df3e209d
    :timestamp: '2020-11-26T12:23:57Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TRAC_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/TRAC_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/TRAC_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TRAC_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TRAC_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TRAC_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/TRAC_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TRAC_(programming_language)
    :extract: TRAC Language is a programming language developed between 1959-1964
      by Calvin Mooers and first implemented on the PDP-1 in 1964 by L. Peter Deutsch.
      It was one of three "first languages" recommended by Ted Nelson in Computer
      Lib. TRAC T64 was used until at least 1984, when Mooers updated it to TRAC T84.
    :extract_html: <p><b>TRAC</b> <b>Language</b> is a programming language developed
      between 1959-1964 by Calvin Mooers and first implemented on the PDP-1 in 1964
      by L. Peter Deutsch. It was one of three "first languages" recommended by Ted
      Nelson in <i>Computer Lib</i>. TRAC T64 was used until at least 1984, when Mooers
      updated it to TRAC T84.</p>
  record/97390387-cf21-4673-8f77-baaad22b6919:
    :type: standard
    :title: Harbour (programming language)
    :displaytitle: Harbour (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2544816
    :titles:
      :canonical: Harbour_(programming_language)
      :normalized: Harbour (programming language)
      :display: Harbour (programming language)
    :pageid: 1882856
    :lang: en
    :dir: ltr
    :revision: '985164206'
    :tid: f87b8550-2f17-11eb-a89f-ed7249ec8765
    :timestamp: '2020-10-24T10:21:24Z'
    :description: Computer programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Harbour_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Harbour_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Harbour_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Harbour_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Harbour_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Harbour_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Harbour_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Harbour_(programming_language)
    :extract: Harbour is a computer programming language, primarily used to create
      database/business programs. It is a modernized, open sourced and cross-platform
      version of the older Clipper system, which in turn developed from the dBase
      database market of the 1980s and 1990s.
    :extract_html: "<p><b>Harbour</b> is a computer programming language, primarily
      used to create database/business programs. It is a modernized, open sourced
      and cross-platform version of the older Clipper system, which in turn developed
      from the dBase database market of the 1980s and 1990s.</p>"
  record/4573ff2a-10e0-4b9a-ab87-067a06abcb41:
    :type: standard
    :title: Cobra (programming language)
    :displaytitle: Cobra (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q608565
    :titles:
      :canonical: Cobra_(programming_language)
      :normalized: Cobra (programming language)
      :display: Cobra (programming language)
    :pageid: 13862555
    :lang: en
    :dir: ltr
    :revision: '979168600'
    :tid: bf981ae0-280b-11eb-b7c7-e7b2f01e6d88
    :timestamp: '2020-09-19T06:10:33Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Cobra_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Cobra_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Cobra_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Cobra_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Cobra_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Cobra_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Cobra_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Cobra_(programming_language)
    :extract: Cobra is a discontinued general-purpose, object-oriented programming
      language. Cobra is designed by Charles Esterbrook, and runs on the Microsoft
      .NET and Mono platforms. It is strongly influenced by Python, C#, Eiffel, Objective-C,
      and other programming languages. It supports both static and dynamic typing.
      It has support for unit tests and contracts. It has lambda expressions, closures,
      list comprehensions, and generators.
    :extract_html: "<p><b>Cobra</b> is a discontinued general-purpose, object-oriented
      programming language. Cobra is designed by Charles Esterbrook, and runs on the
      Microsoft .NET and Mono platforms. It is strongly influenced by Python, C#,
      Eiffel, Objective-C, and other programming languages. It supports both static
      and dynamic typing. It has support for unit tests and contracts. It has lambda
      expressions, closures, list comprehensions, and generators.</p>"
  record/98f984ab-594e-4147-b636-7c9f1abd1f55:
    :type: standard
    :title: J Sharp
    :displaytitle: J Sharp
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1160312
    :titles:
      :canonical: J_Sharp
      :normalized: J Sharp
      :display: J Sharp
    :pageid: 419765
    :lang: en
    :dir: ltr
    :revision: '991167385'
    :tid: 2a5bb690-34e9-11eb-98d8-db91c5deac80
    :timestamp: '2020-11-28T17:01:49Z'
    :description: Programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/J_Sharp
        :revisions: https://en.wikipedia.org/wiki/J_Sharp?action=history
        :edit: https://en.wikipedia.org/wiki/J_Sharp?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:J_Sharp
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/J_Sharp
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/J_Sharp
        :edit: https://en.m.wikipedia.org/wiki/J_Sharp?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:J_Sharp
    :extract: Visual J# was an implementation of the J# programming language that
      was a transitional language for programmers of Java and Visual J++ languages,
      so they could use their existing knowledge and applications with the .NET Framework.
      It was introduced in 2002 and discontinued in 2007, with support for the final
      release of the product continuing until October 2017.
    :extract_html: "<p><b>Visual J#</b> was an implementation of the J# programming
      language that was a transitional language for programmers of Java and Visual
      J++ languages, so they could use their existing knowledge and applications with
      the .NET Framework. It was introduced in 2002 and discontinued in 2007, with
      support for the final release of the product continuing until October 2017.</p>"
  record/7afb6a62-ec64-487c-bf13-40dc118d6a75:
    :type: standard
    :title: CPL (programming language)
    :displaytitle: CPL (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2347334
    :titles:
      :canonical: CPL_(programming_language)
      :normalized: CPL (programming language)
      :display: CPL (programming language)
    :pageid: 828614
    :lang: en
    :dir: ltr
    :revision: '987779445'
    :tid: 123f76a0-224c-11eb-8f4b-b3ec0c2aa2d1
    :timestamp: '2020-11-09T05:26:05Z'
    :description: Multi-paradigm computer programming language
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CPL_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/CPL_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/CPL_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CPL_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CPL_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CPL_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/CPL_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CPL_(programming_language)
    :extract: CPL is a multi-paradigm programming language, that was developed in
      the early 1960s. It is an early ancestor of the C language via the BCPL and
      B languages.
    :extract_html: "<p><b>CPL</b> is a multi-paradigm programming language, that was
      developed in the early 1960s. It is an early ancestor of the C language via
      the BCPL and B languages.</p>"
  record/55e61bdb-2f8c-4a43-9c5c-8d8f441f1f85:
    :type: standard
    :title: S-PLUS
    :displaytitle: S-PLUS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3267991
    :titles:
      :canonical: S-PLUS
      :normalized: S-PLUS
      :display: S-PLUS
    :pageid: 3830007
    :lang: en
    :dir: ltr
    :revision: '983398692'
    :tid: 100e2190-2d2a-11eb-901f-af6487156a95
    :timestamp: '2020-10-14T01:03:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/S-PLUS
        :revisions: https://en.wikipedia.org/wiki/S-PLUS?action=history
        :edit: https://en.wikipedia.org/wiki/S-PLUS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:S-PLUS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/S-PLUS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/S-PLUS
        :edit: https://en.m.wikipedia.org/wiki/S-PLUS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:S-PLUS
    :extract: S-PLUS is a commercial implementation of the S programming language
      sold by TIBCO Software Inc.
    :extract_html: "<p><b>S-PLUS</b> is a commercial implementation of the S programming
      language sold by TIBCO Software Inc.</p>"
  record/13f85569-6294-4c83-b491-e06fa8ef5992:
    :type: standard
    :title: QuakeC
    :displaytitle: QuakeC
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q2122062
    :titles:
      :canonical: QuakeC
      :normalized: QuakeC
      :display: QuakeC
    :pageid: 25207
    :lang: en
    :dir: ltr
    :revision: '979706122'
    :tid: 6cb10af0-1a2b-11eb-8394-0b44930d461c
    :timestamp: '2020-09-22T09:11:50Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/QuakeC
        :revisions: https://en.wikipedia.org/wiki/QuakeC?action=history
        :edit: https://en.wikipedia.org/wiki/QuakeC?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:QuakeC
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/QuakeC
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/QuakeC
        :edit: https://en.m.wikipedia.org/wiki/QuakeC?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:QuakeC
    :extract: QuakeC is a compiled language developed in 1996 by John Carmack of id
      Software to program parts of the video game Quake. Using QuakeC, a programmer
      is able to customize Quake to great extents by adding weapons, changing game
      logic and physics, and programming complex scenarios. It can be used to control
      many aspects of the game itself, such as parts of the AI, triggers, or changes
      in the level. The Quake engine was the only game engine to use QuakeC. Following
      engines used DLL game modules for customization written in C, and C++ from id
      Tech 4 on.
    :extract_html: "<p><b>QuakeC</b> is a compiled language developed in 1996 by John
      Carmack of id Software to program parts of the video game <i>Quake</i>. Using
      QuakeC, a programmer is able to customize <i>Quake</i> to great extents by adding
      weapons, changing game logic and physics, and programming complex scenarios.
      It can be used to control many aspects of the game itself, such as parts of
      the AI, triggers, or changes in the level. The <span><i>Quake</i> engine</span>
      was the only game engine to use QuakeC. Following engines used DLL game modules
      for customization written in C, and C++ from id Tech 4 on.</p>"
  record/4fa31cda-5017-45bc-8ade-6f7ae83d5a6e:
    :type: standard
    :title: Mirah (programming language)
    :displaytitle: Mirah (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3858763
    :titles:
      :canonical: Mirah_(programming_language)
      :normalized: Mirah (programming language)
      :display: Mirah (programming language)
    :pageid: 27970668
    :lang: en
    :dir: ltr
    :revision: '974204605'
    :tid: 54942b90-2747-11eb-9e8a-d75d9f20ca40
    :timestamp: '2020-08-21T17:16:11Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Mirah_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Mirah_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Mirah_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Mirah_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Mirah_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Mirah_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Mirah_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Mirah_(programming_language)
    :extract: Mirah is a programming language based on Ruby language syntax, local
      type inference, hybrid static–dynamic type system, and a pluggable compiler
      toolchain. Mirah was created by Charles Oliver Nutter to be "a 'Ruby-like' language,
      probably a subset of Ruby syntax, that [could] compile to solid, fast, idiomatic
      JVM bytecode." The word mirah refers to the gemstone ruby in the Javanese language,
      a play on the concept of Ruby in Java.
    :extract_html: <p><b>Mirah</b> is a programming language based on Ruby language
      syntax, local type inference, hybrid static–dynamic type system, and a pluggable
      compiler toolchain. Mirah was created by Charles Oliver Nutter to be "a 'Ruby-like'
      language, probably a subset of Ruby syntax, that [could] compile to solid, fast,
      idiomatic JVM bytecode." The word <i><i lang="jv" title="Javanese language text">mirah</i></i>
      refers to the gemstone ruby in the Javanese language, a play on the concept
      of Ruby in Java.</p>
  record/0e1eda40-68c8-4a95-8df3-e50fd40b22b0:
    :type: standard
    :title: KUKA Robot Language
    :displaytitle: KUKA Robot Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q25245640
    :titles:
      :canonical: KUKA_Robot_Language
      :normalized: KUKA Robot Language
      :display: KUKA Robot Language
    :pageid: 50540803
    :lang: en
    :dir: ltr
    :revision: '960091891'
    :tid: 24402810-30aa-11eb-aa55-dd7f7535d331
    :timestamp: '2020-06-01T02:45:36Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/KUKA_Robot_Language
        :revisions: https://en.wikipedia.org/wiki/KUKA_Robot_Language?action=history
        :edit: https://en.wikipedia.org/wiki/KUKA_Robot_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:KUKA_Robot_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/KUKA_Robot_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/KUKA_Robot_Language
        :edit: https://en.m.wikipedia.org/wiki/KUKA_Robot_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:KUKA_Robot_Language
    :extract: The KUKA Robot Language, also known as KRL, is a proprietary programming
      language similar to Pascal and used to control KUKA robots.
    :extract_html: "<p>The <b>KUKA Robot Language</b>, also known as <b>KRL</b>, is
      a proprietary programming language similar to Pascal and used to control KUKA
      robots.</p>"
  record/d35f64ef-50e8-4c46-9059-a1aed479c065:
    :type: standard
    :title: Charm (programming language)
    :displaytitle: Charm (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5086385
    :titles:
      :canonical: Charm_(programming_language)
      :normalized: Charm (programming language)
      :display: Charm (programming language)
    :pageid: 31915190
    :lang: en
    :dir: ltr
    :revision: '968296049'
    :tid: e2672d80-2d48-11eb-9e47-dfef5809df41
    :timestamp: '2020-07-18T13:52:46Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Charm_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Charm_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Charm_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Charm_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Charm_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Charm_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Charm_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Charm_(programming_language)
    :extract: Charm is a computer programming language devised in the early 1990s
      with similarities to the RTL/2, Pascal and C languages in addition to containing
      some unique features of its own. The Charm language is defined by a context-free
      grammar amenable to being processed by recursive descent parser as described
      in seminal books on compiler design.
    :extract_html: "<p><b>Charm</b> is a computer programming language devised in
      the early 1990s with similarities to the RTL/2, Pascal and C languages in addition
      to containing some unique features of its own. The Charm language is defined
      by a context-free grammar amenable to being processed by recursive descent parser
      as described in seminal books on compiler design.</p>"
  record/e50471b6-8678-4618-8301-37639f053318:
    :type: standard
    :title: Lava (programming language)
    :displaytitle: Lava (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6502171
    :titles:
      :canonical: Lava_(programming_language)
      :normalized: Lava (programming language)
      :display: Lava (programming language)
    :pageid: 1982671
    :lang: en
    :dir: ltr
    :revision: '973450444'
    :tid: 4e911d50-f585-11ea-a0c7-e385d65187ac
    :timestamp: '2020-08-17T08:26:44Z'
    :description: experimental, visual object-oriented, interpreter-based programming
      language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lava_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lava_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lava_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lava_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lava_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lava_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lava_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lava_(programming_language)
    :extract: Lava is an experimental, visual object-oriented, interpreter-based programming
      language with an associated programming environment that uses structure editors
      instead of text editors. Only comments, constants, and new identifiers may be
      entered as text.
    :extract_html: "<p><b>Lava</b> is an experimental, visual object-oriented, interpreter-based
      programming language with an associated programming environment that uses structure
      editors instead of text editors. Only comments, constants, and new identifiers
      may be entered as text.</p>"
  record/533c0424-899d-44f1-8926-2f23d0693565:
    :type: standard
    :title: CORAL
    :displaytitle: CORAL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4117844
    :titles:
      :canonical: CORAL
      :normalized: CORAL
      :display: CORAL
    :pageid: 7262
    :lang: en
    :dir: ltr
    :revision: '987557619'
    :tid: f6f8dcf0-2ca6-11eb-ba74-a9537a7f8251
    :timestamp: '2020-11-07T20:35:51Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CORAL
        :revisions: https://en.wikipedia.org/wiki/CORAL?action=history
        :edit: https://en.wikipedia.org/wiki/CORAL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CORAL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CORAL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CORAL
        :edit: https://en.m.wikipedia.org/wiki/CORAL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CORAL
    :extract: CORAL, short for Computer On-line Real-time Applications Language is
      a programming language originally developed in 1964 at the Royal Radar Establishment
      (RRE), Malvern, Worcestershire, United Kingdom (UK). The R was originally for
      "radar", not "real-time". It was influenced primarily by JOVIAL, and thus ALGOL,
      but is not a subset of either.
    :extract_html: <p><b>CORAL</b>, short for <b>Computer On-line Real-time Applications
      Language</b> is a programming language originally developed in 1964 at the Royal
      Radar Establishment (RRE), Malvern, Worcestershire, United Kingdom (UK). The
      R was originally for "radar", not "real-time". It was influenced primarily by
      JOVIAL, and thus ALGOL, but is not a subset of either.</p>
  record/cdc7bf44-9a61-44d4-9f12-806f88a3e9bb:
    :type: standard
    :title: Distributed Application Specification Language
    :displaytitle: Distributed Application Specification Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1150963
    :titles:
      :canonical: Distributed_Application_Specification_Language
      :normalized: Distributed Application Specification Language
      :display: Distributed Application Specification Language
    :pageid: 9216093
    :lang: en
    :dir: ltr
    :revision: '928378958'
    :tid: 33ccca50-120f-11ea-b8b2-f73f6598a7d8
    :timestamp: '2019-11-28T18:45:07Z'
    :description: programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Distributed_Application_Specification_Language
        :revisions: https://en.wikipedia.org/wiki/Distributed_Application_Specification_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Distributed_Application_Specification_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Distributed_Application_Specification_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Distributed_Application_Specification_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Distributed_Application_Specification_Language
        :edit: https://en.m.wikipedia.org/wiki/Distributed_Application_Specification_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Distributed_Application_Specification_Language
    :api_urls:
      :summary: https://en.wikipedia.org/api/rest_v1/page/summary/Distributed_Application_Specification_Language
      :metadata: https://en.wikipedia.org/api/rest_v1/page/metadata/Distributed_Application_Specification_Language
      :references: https://en.wikipedia.org/api/rest_v1/page/references/Distributed_Application_Specification_Language
      :media: https://en.wikipedia.org/api/rest_v1/page/media/Distributed_Application_Specification_Language
      :edit_html: https://en.wikipedia.org/api/rest_v1/page/html/Distributed_Application_Specification_Language
      :talk_page_html: https://en.wikipedia.org/api/rest_v1/page/html/Talk:Distributed_Application_Specification_Language
    :extract: The DASL Programming Language is a high-level, strongly typed programming
      language originally developed at Sun Microsystems Laboratories between 1999
      and 2003 as part of the Ace Project. The goals of the project were to enable
      rapid development of web-based applications based on Sun's J2EE architecture,
      and to eliminate the steep learning curve of platform-specific details.
    :extract_html: <p>The <b>DASL Programming Language</b> is a high-level, strongly
      typed programming language originally developed at Sun Microsystems Laboratories
      between 1999 and 2003 as part of the <span class="external text">Ace Project</span>.
      The goals of the project were to enable rapid development of web-based applications
      based on Sun's J2EE architecture, and to eliminate the steep learning curve
      of platform-specific details.</p>
  record/3eec2393-84ce-48b0-a191-708ae644b4de:
    :type: standard
    :title: Caml
    :displaytitle: Caml
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q1118153
    :titles:
      :canonical: Caml
      :normalized: Caml
      :display: Caml
    :pageid: 2362118
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/4/4a/Caml.gif
      :width: 128
      :height: 58
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/4/4a/Caml.gif
      :width: 128
      :height: 58
    :lang: en
    :dir: ltr
    :revision: '958427246'
    :tid: 1fda7d40-21b2-11eb-a9aa-89196a4a8a0b
    :timestamp: '2020-05-23T19:07:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Caml
        :revisions: https://en.wikipedia.org/wiki/Caml?action=history
        :edit: https://en.wikipedia.org/wiki/Caml?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Caml
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Caml
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Caml
        :edit: https://en.m.wikipedia.org/wiki/Caml?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Caml
    :extract: Caml is a multi-paradigm, general-purpose programming language which
      is a dialect of the ML programming language family. Caml was developed in France
      at INRIA and ENS.
    :extract_html: "<p><b>Caml</b> is a multi-paradigm, general-purpose programming
      language which is a dialect of the ML programming language family. Caml was
      developed in France at INRIA and ENS.</p>"
  record/3d23f6d0-8837-4c11-a7b1-b87a46ef0e7f:
    :type: standard
    :title: NWScript
    :displaytitle: NWScript
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q584620
    :titles:
      :canonical: NWScript
      :normalized: NWScript
      :display: NWScript
    :pageid: 853032
    :lang: en
    :dir: ltr
    :revision: '990492456'
    :tid: 9f9405b0-34c2-11eb-bb6c-1b3e491c1dc1
    :timestamp: '2020-11-24T19:57:26Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/NWScript
        :revisions: https://en.wikipedia.org/wiki/NWScript?action=history
        :edit: https://en.wikipedia.org/wiki/NWScript?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:NWScript
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/NWScript
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/NWScript
        :edit: https://en.m.wikipedia.org/wiki/NWScript?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:NWScript
    :extract: NWScript is the scripting language developed by BioWare for the role-playing
      video game Neverwinter Nights. It is based on the C programming language and
      is implemented in the Aurora toolset. Neverscript, an open source 3rd party
      editor, has been created for the Mac OS X and Linux versions of Neverwinter
      Nights because the Aurora toolset has not been ported to those platforms.
    :extract_html: "<p><b>NWScript</b> is the scripting language developed by BioWare
      for the role-playing video game <i>Neverwinter Nights</i>. It is based on the
      C programming language and is implemented in the Aurora toolset. Neverscript,
      an open source 3rd party editor, has been created for the Mac OS X and Linux
      versions of <i>Neverwinter Nights</i> because the Aurora toolset has not been
      ported to those platforms.</p>"
  record/f589183d-007b-4d8e-aae4-70caabb82706:
    :type: standard
    :title: Maxima (software)
    :displaytitle: Maxima (software)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q938304
    :titles:
      :canonical: Maxima_(software)
      :normalized: Maxima (software)
      :display: Maxima (software)
    :pageid: 95925
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Maxima-new.svg/320px-Maxima-new.svg.png
      :width: 320
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/4/4a/Maxima-new.svg/135px-Maxima-new.svg.png
      :width: 135
      :height: 135
    :lang: en
    :dir: ltr
    :revision: '982978191'
    :tid: ef9799b0-3057-11eb-87e0-49c8a0af7e21
    :timestamp: '2020-10-11T14:38:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Maxima_(software)
        :revisions: https://en.wikipedia.org/wiki/Maxima_(software)?action=history
        :edit: https://en.wikipedia.org/wiki/Maxima_(software)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Maxima_(software)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Maxima_(software)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Maxima_(software)
        :edit: https://en.m.wikipedia.org/wiki/Maxima_(software)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Maxima_(software)
    :extract: Maxima is a computer algebra system (CAS) based on a 1982 version of
      Macsyma. It is written in Common Lisp and runs on all POSIX platforms such as
      macOS, Unix, BSD, and Linux, as well as under Microsoft Windows and Android.
      It is free software released under the terms of the GNU General Public License
      (GPL).
    :extract_html: "<p><b>Maxima</b> is a computer algebra system (CAS) based on a
      1982 version of Macsyma. It is written in Common Lisp and runs on all POSIX
      platforms such as macOS, Unix, BSD, and Linux, as well as under Microsoft Windows
      and Android. It is free software released under the terms of the GNU General
      Public License (GPL).</p>"
  record/85de2948-b4c1-4e66-876f-06201f7e4a49:
    :type: standard
    :title: POP-11
    :displaytitle: POP-11
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7120001
    :titles:
      :canonical: POP-11
      :normalized: POP-11
      :display: POP-11
    :pageid: 562827
    :lang: en
    :dir: ltr
    :revision: '937460873'
    :tid: 65454c60-3f2d-11ea-a161-f1f2dc6c356e
    :timestamp: '2020-01-25T04:44:37Z'
    :description: reflective, incrementally compiled programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/POP-11
        :revisions: https://en.wikipedia.org/wiki/POP-11?action=history
        :edit: https://en.wikipedia.org/wiki/POP-11?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:POP-11
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/POP-11
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/POP-11
        :edit: https://en.m.wikipedia.org/wiki/POP-11?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:POP-11
    :api_urls:
      :summary: https://en.wikipedia.org/api/rest_v1/page/summary/POP-11
      :metadata: https://en.wikipedia.org/api/rest_v1/page/metadata/POP-11
      :references: https://en.wikipedia.org/api/rest_v1/page/references/POP-11
      :media: https://en.wikipedia.org/api/rest_v1/page/media/POP-11
      :edit_html: https://en.wikipedia.org/api/rest_v1/page/html/POP-11
      :talk_page_html: https://en.wikipedia.org/api/rest_v1/page/html/Talk:POP-11
    :extract: POP-11 is a reflective, incrementally compiled programming language
      with many of the features of an interpreted language. It is the core language
      of the Poplog programming environment developed originally by the University
      of Sussex, and recently in the School of Computer Science at the University
      of Birmingham, which hosts the main Poplog website. There is now also a Github
      Poplog] site with the core source files.
    :extract_html: "<p><b>POP-11</b> is a reflective, incrementally compiled programming
      language with many of the features of an interpreted language. It is the core
      language of the Poplog programming environment developed originally by the University
      of Sussex, and recently in the School of Computer Science at the University
      of Birmingham, which hosts the main Poplog website. There is now also a Github
      Poplog] site with the core source files.</p>"
  record/df083f76-d403-4c32-bc53-18bc01346b04:
    :type: standard
    :title: MAD (programming language)
    :displaytitle: MAD (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4117854
    :titles:
      :canonical: MAD_(programming_language)
      :normalized: MAD (programming language)
      :display: MAD (programming language)
    :pageid: 55579
    :lang: en
    :dir: ltr
    :revision: '971386399'
    :tid: 0f1b3d30-1a3e-11eb-9bae-cb4ea8e08ba9
    :timestamp: '2020-08-05T20:22:40Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MAD_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/MAD_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/MAD_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MAD_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MAD_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MAD_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/MAD_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MAD_(programming_language)
    :extract: MAD is a programming language and compiler for the IBM 704 and later
      the IBM 709, IBM 7090, IBM 7040, UNIVAC 1107, UNIVAC 1108, Philco 210-211, and
      eventually the IBM S/370 mainframe computers. Developed in 1959 at the University
      of Michigan by Bernard Galler, Bruce Arden and Robert M. Graham, MAD is a variant
      of the ALGOL language. It was widely used to teach programming at colleges and
      universities during the 1960s and played a minor role in the development of
      CTSS, Multics, and the Michigan Terminal System computer operating systems.
    :extract_html: "<p><b>MAD</b> is a programming language and compiler for the IBM
      704 and later the IBM 709, IBM 7090, IBM 7040, UNIVAC 1107, UNIVAC 1108, Philco
      210-211, and eventually the IBM S/370 mainframe computers. Developed in 1959
      at the University of Michigan by Bernard Galler, Bruce Arden and Robert M. Graham,
      MAD is a variant of the ALGOL language. It was widely used to teach programming
      at colleges and universities during the 1960s and played a minor role in the
      development of CTSS, Multics, and the Michigan Terminal System computer operating
      systems.</p>"
  record/5c314c78-0b1c-4808-9515-db2c2ccab9ab:
    :type: standard
    :title: Zebra Programming Language
    :displaytitle: Zebra Programming Language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q169412
    :titles:
      :canonical: Zebra_Programming_Language
      :normalized: Zebra Programming Language
      :display: Zebra Programming Language
    :pageid: 31495398
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/4/4b/Zebra_Programming_Language.png
      :width: 148
      :height: 103
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/4/4b/Zebra_Programming_Language.png
      :width: 148
      :height: 103
    :lang: en
    :dir: ltr
    :revision: '986844717'
    :tid: c3fe62f0-2d34-11eb-94d7-953687f30e8e
    :timestamp: '2020-11-03T10:08:54Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Zebra_Programming_Language
        :revisions: https://en.wikipedia.org/wiki/Zebra_Programming_Language?action=history
        :edit: https://en.wikipedia.org/wiki/Zebra_Programming_Language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Zebra_Programming_Language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Zebra_Programming_Language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Zebra_Programming_Language
        :edit: https://en.m.wikipedia.org/wiki/Zebra_Programming_Language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Zebra_Programming_Language
    :extract: Zebra Programming Language (ZPL) is a page description language from
      Zebra Technologies, used primarily for labeling applications. The original language
      was superseded by ZPL II, but it is not fully compatible with the older version.
      Meanwhile, ZPL II is emulated by many label printers of various producers.
    :extract_html: "<p><b>Zebra Programming Language</b> (<b>ZPL</b>) is a page description
      language from Zebra Technologies, used primarily for labeling applications.
      The original language was superseded by <b>ZPL II</b>, but it is not fully compatible
      with the older version. Meanwhile, ZPL II is emulated by many label printers
      of various producers.</p>"
  record/d5b1b162-26a2-450d-a4f4-ab4e27cf3746:
    :type: standard
    :title: Haxe
    :displaytitle: Haxe
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q285886
    :titles:
      :canonical: Haxe
      :normalized: Haxe
      :display: Haxe
    :pageid: 5404706
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Haxe_logo.svg/234px-Haxe_logo.svg.png
      :width: 234
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/8/89/Haxe_logo.svg/230px-Haxe_logo.svg.png
      :width: 230
      :height: 314
    :lang: en
    :dir: ltr
    :revision: '988647671'
    :tid: dd8b13b0-35c9-11eb-8815-377603af0507
    :timestamp: '2020-11-14T12:31:14Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Haxe
        :revisions: https://en.wikipedia.org/wiki/Haxe?action=history
        :edit: https://en.wikipedia.org/wiki/Haxe?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Haxe
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Haxe
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Haxe
        :edit: https://en.m.wikipedia.org/wiki/Haxe?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Haxe
    :extract: Haxe is an open source high-level cross-platform programming language
      and compiler that can produce applications and source code, for many different
      computing platforms from one code-base. It is free and open-source software,
      released under the MIT License. The compiler, written in OCaml, is released
      under the GNU General Public License (GPL) version 2.
    :extract_html: "<p><b>Haxe</b> is an open source high-level cross-platform programming
      language and compiler that can produce applications and source code, for many
      different computing platforms from one code-base. It is free and open-source
      software, released under the MIT License. The compiler, written in OCaml, is
      released under the GNU General Public License (GPL) version 2.</p>"
  record/f40ff3c6-951a-43e7-9e90-61cdab87f950:
    :type: standard
    :title: TADS
    :displaytitle: TADS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q4050562
    :titles:
      :canonical: TADS
      :normalized: TADS
      :display: TADS
    :pageid: 227991
    :lang: en
    :dir: ltr
    :revision: '953521346'
    :tid: 2dbc4540-1a93-11eb-8b4a-85a589ac44f3
    :timestamp: '2020-04-27T16:44:03Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/TADS
        :revisions: https://en.wikipedia.org/wiki/TADS?action=history
        :edit: https://en.wikipedia.org/wiki/TADS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:TADS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/TADS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/TADS
        :edit: https://en.m.wikipedia.org/wiki/TADS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:TADS
    :extract: Text Adventure Development System (TADS) is a prototype-based domain-specific
      programming language and set of standard libraries for creating interactive
      fiction (IF) games.
    :extract_html: "<p><b>Text Adventure Development System</b> (<b>TADS</b>) is a
      prototype-based domain-specific programming language and set of standard libraries
      for creating interactive fiction (IF) games.</p>"
  record/a30c71df-ec14-4189-b7b3-6e0e3a590df6:
    :type: standard
    :title: COBOL
    :displaytitle: COBOL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q131140
    :titles:
      :canonical: COBOL
      :normalized: COBOL
      :display: COBOL
    :pageid: 6799
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/COBOL_Report_Apr60.djvu/page1-244px-COBOL_Report_Apr60.djvu.jpg
      :width: 244
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/2/27/COBOL_Report_Apr60.djvu/page1-2368px-COBOL_Report_Apr60.djvu.jpg
      :width: 2368
      :height: 3108
    :lang: en
    :dir: ltr
    :revision: '991004358'
    :tid: e6de6270-30e5-11eb-adca-21872c2db217
    :timestamp: '2020-11-27T19:22:09Z'
    :description: Programming language with English-like syntax
    :description_source: local
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/COBOL
        :revisions: https://en.wikipedia.org/wiki/COBOL?action=history
        :edit: https://en.wikipedia.org/wiki/COBOL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:COBOL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/COBOL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/COBOL
        :edit: https://en.m.wikipedia.org/wiki/COBOL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:COBOL
    :extract: COBOL is a compiled English-like computer programming language designed
      for business use. It is imperative, procedural and, since 2002, object-oriented.
      COBOL is primarily used in business, finance, and administrative systems for
      companies and governments. COBOL is still widely used in applications deployed
      on mainframe computers, such as large-scale batch and transaction processing
      jobs. But due to its declining popularity and the retirement of experienced
      COBOL programmers, programs are being migrated to new platforms, rewritten in
      modern languages or replaced with software packages. Most programming in COBOL
      is now purely to maintain existing applications, however many large financial
      institutions were still developing new systems in COBOL in 2006 due to the mainframe
      processing speed.
    :extract_html: "<p><b>COBOL</b> is a compiled English-like computer programming
      language designed for business use. It is imperative, procedural and, since
      2002, object-oriented. COBOL is primarily used in business, finance, and administrative
      systems for companies and governments. COBOL is still widely used in applications
      deployed on mainframe computers, such as large-scale batch and transaction processing
      jobs. But due to its declining popularity and the retirement of experienced
      COBOL programmers, programs are being migrated to new platforms, rewritten in
      modern languages or replaced with software packages. Most programming in COBOL
      is now purely to maintain existing applications, however many large financial
      institutions were still developing new systems in COBOL in 2006 due to the mainframe
      processing speed.</p>"
  record/8fc89e38-7487-458c-9213-1794758ffcea:
    :type: standard
    :title: RAPID
    :displaytitle: RAPID
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7275797
    :titles:
      :canonical: RAPID
      :normalized: RAPID
      :display: RAPID
    :pageid: 26407459
    :lang: en
    :dir: ltr
    :revision: '960097753'
    :tid: 32929920-2c31-11eb-8031-19ac3d541dc8
    :timestamp: '2020-06-01T03:30:01Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/RAPID
        :revisions: https://en.wikipedia.org/wiki/RAPID?action=history
        :edit: https://en.wikipedia.org/wiki/RAPID?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:RAPID
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/RAPID
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/RAPID
        :edit: https://en.m.wikipedia.org/wiki/RAPID?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:RAPID
    :extract: RAPID is a high-level programming language used to control ABB industrial
      robots. RAPID was introduced along with S4 Control System in 1994 by ABB, superseding
      the ARLA programming language.
    :extract_html: "<p><b>RAPID</b> is a high-level programming language used to control
      ABB industrial robots. RAPID was introduced along with S4 Control System in
      1994 by ABB, superseding the ARLA programming language.</p>"
  record/4d680dcc-a23c-4f47-8669-5589c3a2d532:
    :type: standard
    :title: MIRC scripting language
    :displaytitle: mIRC scripting language
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q300841
    :titles:
      :canonical: MIRC_scripting_language
      :normalized: MIRC scripting language
      :display: mIRC scripting language
    :pageid: 310996
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/en/thumb/8/8f/MIRC_scripts_editor.png/320px-MIRC_scripts_editor.png
      :width: 320
      :height: 194
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/en/8/8f/MIRC_scripts_editor.png
      :width: 405
      :height: 246
    :lang: en
    :dir: ltr
    :revision: '991926486'
    :tid: 411169f0-34b4-11eb-880d-43a1fb36ad5c
    :timestamp: '2020-12-02T15:37:09Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/MIRC_scripting_language
        :revisions: https://en.wikipedia.org/wiki/MIRC_scripting_language?action=history
        :edit: https://en.wikipedia.org/wiki/MIRC_scripting_language?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:MIRC_scripting_language
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/MIRC_scripting_language
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/MIRC_scripting_language
        :edit: https://en.m.wikipedia.org/wiki/MIRC_scripting_language?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:MIRC_scripting_language
    :extract: The mIRC scripting language is the scripting language embedded in mIRC,
      an IRC client for Windows.
    :extract_html: "<p>The <b>mIRC scripting language</b> is the scripting language
      embedded in mIRC, an IRC client for Windows.</p>"
  record/4aad4d33-b168-4266-b241-ee01ec571794:
    :type: standard
    :title: OPS5
    :displaytitle: OPS5
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q7072853
    :titles:
      :canonical: OPS5
      :normalized: OPS5
      :display: OPS5
    :pageid: 475829
    :lang: en
    :dir: ltr
    :revision: '979630169'
    :tid: 61a7a940-0caf-11eb-9ac2-41efd0f5040f
    :timestamp: '2020-09-21T20:46:25Z'
    :description: rule-based or production system computer language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/OPS5
        :revisions: https://en.wikipedia.org/wiki/OPS5?action=history
        :edit: https://en.wikipedia.org/wiki/OPS5?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:OPS5
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/OPS5
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/OPS5
        :edit: https://en.m.wikipedia.org/wiki/OPS5?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:OPS5
    :extract: OPS5 is a rule-based or production system computer language, notable
      as the first such language to be used in a successful expert system, the R1/XCON
      system used to configure VAX computers.
    :extract_html: "<p><b>OPS5</b> is a rule-based or production system computer language,
      notable as the first such language to be used in a successful expert system,
      the R1/XCON system used to configure VAX computers.</p>"
  record/00768fbe-a422-48aa-a573-344cc45f024b:
    :type: standard
    :title: Lasso (programming language)
    :displaytitle: Lasso (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q3218363
    :titles:
      :canonical: Lasso_(programming_language)
      :normalized: Lasso (programming language)
      :display: Lasso (programming language)
    :pageid: 524247
    :lang: en
    :dir: ltr
    :revision: '956137562'
    :tid: 88270270-35b6-11eb-a5e8-c5e02baf7a2f
    :timestamp: '2020-05-11T18:03:27Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Lasso_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Lasso_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Lasso_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Lasso_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Lasso_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Lasso_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Lasso_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Lasso_(programming_language)
    :extract: Lasso is an application server and server management interface used
      to develop internet applications and is a general-purpose, high-level programming
      language. Originally a web datasource connection tool, for Filemaker and later
      included in Apple Computer's FileMaker 4.0 and Claris Homepage as CDML, it has
      since evolved into a complex language used to develop and serve large-scale
      internet applications and web pages.
    :extract_html: "<p><b>Lasso</b> is an application server and server management
      interface used to develop internet applications and is a general-purpose, high-level
      programming language. Originally a web datasource connection tool, for Filemaker
      and later included in Apple Computer's FileMaker 4.0 and Claris Homepage as
      CDML, it has since evolved into a complex language used to develop and serve
      large-scale internet applications and web pages.</p>"
  record/a2fe5233-093a-4379-bb0c-f85522dee8b2:
    :type: standard
    :title: Net.Data
    :displaytitle: Net.Data
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q6998127
    :titles:
      :canonical: Net.Data
      :normalized: Net.Data
      :display: Net.Data
    :pageid: 18491810
    :lang: en
    :dir: ltr
    :revision: '986386957'
    :tid: bee82c10-3612-11eb-abe3-8f30c1a933d2
    :timestamp: '2020-10-31T14:56:02Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Net.Data
        :revisions: https://en.wikipedia.org/wiki/Net.Data?action=history
        :edit: https://en.wikipedia.org/wiki/Net.Data?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Net.Data
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Net.Data
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Net.Data
        :edit: https://en.m.wikipedia.org/wiki/Net.Data?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Net.Data
    :extract: Net.Data is a programming language by IBM used largely for database-backed
      web applications.
    :extract_html: "<p><b>Net.Data</b> is a programming language by IBM used largely
      for database-backed web applications.</p>"
  record/5d3f9573-0cd7-4014-8923-7809406a1768:
    :type: standard
    :title: Hume (programming language)
    :displaytitle: Hume (programming language)
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5940583
    :titles:
      :canonical: Hume_(programming_language)
      :normalized: Hume (programming language)
      :display: Hume (programming language)
    :pageid: 6328175
    :thumbnail:
      :source: https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/HumeStatue-Edinburgh2006.jpg/212px-HumeStatue-Edinburgh2006.jpg
      :width: 212
      :height: 320
    :originalimage:
      :source: https://upload.wikimedia.org/wikipedia/commons/a/ac/HumeStatue-Edinburgh2006.jpg
      :width: 1488
      :height: 2240
    :lang: en
    :dir: ltr
    :revision: '956136047'
    :tid: bda25cf0-0920-11eb-837b-cd2d6751a5c8
    :timestamp: '2020-05-11T17:54:43Z'
    :description: functionally based programming language
    :description_source: central
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/Hume_(programming_language)
        :revisions: https://en.wikipedia.org/wiki/Hume_(programming_language)?action=history
        :edit: https://en.wikipedia.org/wiki/Hume_(programming_language)?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:Hume_(programming_language)
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/Hume_(programming_language)
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/Hume_(programming_language)
        :edit: https://en.m.wikipedia.org/wiki/Hume_(programming_language)?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:Hume_(programming_language)
    :extract: Hume is a functionally based programming language developed at the University
      of St Andrews and Heriot-Watt University in Scotland since the year 2000. The
      language name is both an acronym meaning 'Higher-order Unified Meta-Environment'
      and an honorific to the 18th Century philosopher David Hume. It targets real-time
      embedded systems, aiming to produce a design that is both highly abstract, yet
      which will still allow precise extraction of time and space execution costs.
      This allows programmers to guarantee the bounded time and space demands of executing
      programs.
    :extract_html: "<p><b>Hume</b> is a functionally based programming language developed
      at the University of St Andrews and Heriot-Watt University in Scotland since
      the year 2000. The language name is both an acronym meaning 'Higher-order Unified
      Meta-Environment' and an honorific to the 18th Century philosopher David Hume.
      It targets real-time embedded systems, aiming to produce a design that is both
      highly abstract, yet which will still allow precise extraction of time and space
      execution costs. This allows programmers to guarantee the bounded time and space
      demands of executing programs.</p>"
  record/8f47ffb1-9bae-4af9-88b8-f6e49de9b5c2:
    :type: standard
    :title: CHILL
    :displaytitle: CHILL
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q642207
    :titles:
      :canonical: CHILL
      :normalized: CHILL
      :display: CHILL
    :pageid: 765313
    :lang: en
    :dir: ltr
    :revision: '966807490'
    :tid: e993f5d0-1b4a-11eb-a76e-2fe5f0ccb7f5
    :timestamp: '2020-07-09T09:31:22Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/CHILL
        :revisions: https://en.wikipedia.org/wiki/CHILL?action=history
        :edit: https://en.wikipedia.org/wiki/CHILL?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:CHILL
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/CHILL
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/CHILL
        :edit: https://en.m.wikipedia.org/wiki/CHILL?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:CHILL
    :extract: In computing, CHILL is a procedural programming language designed for
      use in telecommunication switches. The language is still used for legacy systems
      in some telecommunication companies and for signal box programming.
    :extract_html: "<p>In computing, <b>CHILL</b> is a procedural programming language
      designed for use in telecommunication switches. The language is still used for
      legacy systems in some telecommunication companies and for signal box programming.</p>"
  record/7fd0a836-01f2-470c-b326-5816e56145cd:
    :type: standard
    :title: FOCUS
    :displaytitle: FOCUS
    :namespace:
      :id: 0
      :text: ''
    :wikibase_item: Q5426833
    :titles:
      :canonical: FOCUS
      :normalized: FOCUS
      :display: FOCUS
    :pageid: 867853
    :lang: en
    :dir: ltr
    :revision: '958518991'
    :tid: 0fc6ef60-1b63-11eb-ba3e-637f4bcab0dd
    :timestamp: '2020-05-24T07:50:31Z'
    :content_urls:
      :desktop:
        :page: https://en.wikipedia.org/wiki/FOCUS
        :revisions: https://en.wikipedia.org/wiki/FOCUS?action=history
        :edit: https://en.wikipedia.org/wiki/FOCUS?action=edit
        :talk: https://en.wikipedia.org/wiki/Talk:FOCUS
      :mobile:
        :page: https://en.m.wikipedia.org/wiki/FOCUS
        :revisions: https://en.m.wikipedia.org/wiki/Special:History/FOCUS
        :edit: https://en.m.wikipedia.org/wiki/FOCUS?action=edit
        :talk: https://en.m.wikipedia.org/wiki/Talk:FOCUS
    :extract: 'FOCUS is a fourth-generation programming language (4GL) computer programming
      language and development environment that is used to build database queries.
      Produced by Information Builders Inc., it was originally developed for data
      handling and analysis on the IBM mainframe. Subsequently versions for minicomputers
      and such as the VAX and other platforms were implemented. FOCUS was later extended
      to personal computers and to the World Wide Web: the WebFOCUS product.'
    :extract_html: "<p><b>FOCUS</b> is a fourth-generation programming language (4GL)
      computer programming language and development environment that is used to build
      database queries. Produced by Information Builders Inc., it was originally developed
      for data handling and analysis on the IBM mainframe. Subsequently versions for
      minicomputers and such as the VAX and other platforms were implemented. FOCUS
      was later extended to personal computers and to the World Wide Web: the WebFOCUS
      product.</p>"
